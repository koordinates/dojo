/*

	Essential styles that themes can inherit.
	In other words, works but doesn't look great.

*/



/**** 
		GENERIC PIECES 
 ****/

.dijitReset {
	/* Use this style to null out padding, margin, border in your template elements
		so that page specific styles don't break them.
		- Use in all TABLE, TR and TD tags.	
		- If there is more than one class on the tag, place this first so other classes override.
	*/
	margin:0px;
	border:0px;
	padding:0px;
	line-height:auto;
}


.dijitInlineBox {
	/* To inline block elements, surround them with <fieldset class="dijitInlineBox"> */
	display:inline-block;
	display: -moz-inline-stack;
	#display:inline;		/* MOW: if this is IE-specific, move it to another declaration */
	border:0px;
	padding:0px;
	vertical-align:middle;
}



.dijitPopup {
	/* For popup items, such as menu */
	position: absolute;
}

.dijitPositionOnly {
	/* Null out all position-related properties */
	padding: 0px !important;
	border: 0px !important;
	background-color: transparent !important;
	background-image: none !important;
	height: auto !important;
	width: auto !important;
}

.dijitNonPositionOnly {
	/* Null position-related properties */
	float: none !important;
	position: static !important;
	margin: 0px 0px 0px 0px !important;
	vertical-align: middle !important;
}


.dijitClickableRegion {
	/* a region we expect the user to click on */
	cursor : pointer;
}

.dijitDisabledClickableRegion {
	/* a region the user would be able to click on, but it's disabled */
	cursor: default;        /* makes opera happy */
	cursor: url("no.gif"), not-allowed, default;
}

.dijitDisplayNone {
	/* hide something.  Use this as a class rather than element.style so another class can override */
	display:none !important;
}

/**** 
		A11Y CHECK 
 ****/
#a11yTestNode {
	/* used to test if high contrast mode is on or images are turned off */
	border: 1px solid;
	border-color:red green;
	position: absolute;
	left: -999px;
	top: -999px;
	background-image: url("../form/templates/blank.gif");
}  
 
/*** Full sized arrows (matching the size of a line of text) ***/

/* MOW: potentially deprecating these
/* Down arrow * /

.dijitDownArrowOuter,
.dijitOpen .dijitOpenCloseArrowOuter {
	padding:0px;
	margin:auto;
	border:0px;
	overflow:hidden;
	height:.7em;
	width:.9em;
	display: inline-block;
	display: -moz-inline-stack;
	vertical-align:middle;
}

.dijitDownArrowInner,
.dijitOpen .dijitOpenCloseArrowInner {
	border-width:2.1em 1.32em;
	margin:-1.4em 0px 0px -.88em;
	border-style:solid dotted;
	border-color:gray transparent;
	line-height:0px;
	height:0px;
	width:0px;
	display: block;
}

.dj_ie6 .dijitDownArrowInner {
	margin: 0px;
	border-width:.7em .44em 0px .44em;
}


/* Right arrow * /

.dijitRightArrowOuter,
.dijitClosed .dijitOpenCloseArrowOuter {
	border:0px none;
	height:0.9em;
	margin:auto;
	overflow:hidden;
	padding:0px;
	width:0.7em;
}

.dijitRightArrowInner,
.dijitClosed .dijitOpenCloseArrowInner {
	border-width:1.32em 2.1em 1.32em 2.1em;
	margin:-.88em -1.4em -.88em -1.4em;
	border-style:dotted solid;
	border-color:transparent gray;
	line-height:0px;
	height:0px;
	width:0px;
	display: block;
}

/* it becomes a left arrow for LTR locales */
.dijitRTL .dijitRightArrowInner {
	margin-left:-2.1em;
}




/****
		dijit.form.Checkbox
 	 & 
  		dijit.form.RadioButton 
 ****/

.dijitCheckbox {
	position: relative;
}

.dijitCheckboxImageContainer,
.dijitCheckboxInputInvisible {
	/* place the checkbox and the actual input on top of each other */
	position: absolute;
	left: 0;
	top: 0;
	border: 0;
	margin: 0;
	padding: 0;
}


.dj_ie .dijitCheckboxImageContainer, 
.dj_ie .dijitCheckboxInputInvisible {
	top: 3px;
}

.dijitCheckboxInputInvisible {
	/* place the actual input on top, but all-but-invisible */
	z-index: 100;
	opacity: 0.01;
}

.dj_ie .dijitCheckboxInputInvisible {
	filter: alpha(opacity=0);
}




/****
		dijit.Toaster (?)
 ****/
 
.dijitToasterClip {
	position: absolute;
	overflow: hidden;
}

.dijitToasterContainer {
	display: block;
	position: absolute;
	width: 17.5em;
	z-index: 5000;
	margin: 0px;
	font:0.75em Tahoma, Helvetica, Verdana, Arial;
}


/****
		dijit.ProgressBar
 ****/
 
.dijitProgressBarEmpty{
	/* outer container and background of the bar that's not finished yet*/
	position:relative;overflow:hidden;
	border:1px solid black; 	/* a11y: border necessary for high-contrast mode */
	height:20px;
}


.dijitProgressBarFull {
	/* outer container for background of bar that is finished */
	position:absolute;
	overflow:hidden;
	width:100%;
	height:100%;
}

.dijitProgressBarColorLayer{
	/* inner container for finished portion when in 'color' mode */
	width:auto;
	height:auto;

	/* a11y:  The border provides visibility in high-contrast mode.
		Set border color and background color in your theme to the same value  */
	border:4px solid;
}

.dj_ie .dijitProgressBarColorLayer{
	position:absolute;
	overflow:hidden;
	top:0px;
	left:0px;
	bottom:0px;
	right:0px;
	margin:0px;
	width:100%;
	height:100%;
}

.dijitProgressBarTileLayer{
	/* inner container for finished portion when in 'tile' (image) mode */
	position:absolute;
	overflow:hidden;
	top:0px;
	left:0px;
	width:100%;
	height:100%;
	background-color:transparent;
	background-attachment: fixed;
}


.dijitProgressBarColor dijitProgressBarTileLayer{
	/* turn off the tile image when we want in 'color' mode */
	background-image:none !important;
}

.dijitProgressBarIndeterminate dijitProgressBarTileLayer{
	/* animated gif for 'indeterminate' mode */
}



.dijitProgressBarEmptyLabel{
	/* label for portion of the bar that's not finished yet */
	display:none;	/* turned on in code */
	position:absolute;
	top:0px;
	left:0px;
	width:100%;
	height:100%;
	text-align:center
}
.dijitProgressBarFullLabel{
	/* label for portion of the bar that is finished */
	display:none;	/* turned on in code */
	position:absolute;
	top:0px;
	left:0px;
	width:100%;
	height:100%;
	text-align:center;
}

/* progress bar in vertical mode */
.dijitProgressBarVertical .dijitProgressBarFull{
	bottom:0px;		/* start at the bottom */
}

.dijitProgressBarVertical .dijitProgressBarTileLayer{
	background-image:url("h-bar.gif");
}





/****
		dijit.form.NumberSpinner  (template: form/templates/Spinner.html)
		
		Note: NumberSpinner works differently than other Textbox types.
			In NS, the outer fieldset element is the one that shows the border, etc.
			rather than the actual INPUT element. 
 ****/

.dijitSpinner {
	/* outer element, which in the spinner case actually shows the border */
	display:inline;
	vertical-align:middle;
	padding:0px !important;
	white-space:nowrap !important;
	width:auto !important;
	height:auto !important;
}

.dijitSpinner input {
	/* The .style assigned to the spinner dijit is actually copied 
		on to the INPUT element as well as the outer element.
		The below turns off things on the input that should apply to the outer element.
	*/
	display:inline;
	position:static !important;
	float:none !important;
	vertical-align:middle !important;
	padding:0px !important;
	margin:auto !important;
	border:0px !important;
	visibility:visible !important;
	font-size:100% !important;
	background-color:transparent !important;
}

.dijitSpinnerArrowGroup {
	/* fieldset that contains the up/down arrows */
	display:inline;
	padding:0px;
	border:0px;
	margin: 0px;
	vertical-align:top;
	line-height:1px !important;
}

.dijitSpinnerButton {
	/* one of the up/down arrows */
	display:block;
	vertical-align:top;
	line-height:0px !important;
	text-align:center;
}




/****
		dijit.Tooltip
 ****/

.dijitTooltip {
	position: absolute;
	z-index: 10;
	display: block;
	margin-top: 10px;
	border: red;
	/* make visible but off screen */
	left: -10000px;
	top: -10000px;
}

.dijitTooltipContainer {
	border: solid black 2px;
	background: #b8b5b5;
	color: black;
	font-size: small;
	padding: 2px 2px 2px 2px;
}


.dijitTooltipConnector {
	position: absolute;
}

/* MOW: using actual images at this time
/* draw an arrow with CSS only * /
.dijitTooltipConnector {
	/* the border on the triangle * /
	font-size: 0px; line-height: 0%; width: 0px;
	border-top: none;
	border-bottom: 14px solid black;
	border-left: 7px solid transparent;
	border-right: 7px solid transparent;
	top: -14px;
	left: 3px;
	z-index: 2;
}

.dijitTooltipConnector div {
	/* the background of the triangle * /
	font-size: 0px; line-height: 0%; width: 0px;
	position: absolute;
	border-bottom: 10px solid #b8b5b5;
	border-left: 5px solid transparent;
	border-right: 5px solid transparent;
	top: 6px;
	left: -5px;
	z-index: 3;
}

*/



/* Layout widgets. This is essential CSS to make layout work (it isn't "styling" CSS)
   make sure that the position:absolute in dijitAlign* overrides other classes */

.dijitLayoutContainer{ 
	position: relative;
	display: block;
	overflow: hidden; 
}

body .dijitAlignTop,
body .dijitAlignBottom,
body .dijitAlignLeft,
body .dijitAlignRight {
	position: absolute;
	overflow: hidden; 
}

body .dijitAlignClient { position: absolute; }

.dijitAlignClient { overflow: auto; }



/* SplitContainer 

	'V' == container that splits vertically (up/down)
	'H' = horizontal (left/right)
*/
.dijitSplitContainer{
	position: relative;
	overflow: hidden;
	display: block;
}

.dijitSplitPane{
	position: absolute;
}

.dijitSplitContainerSizerH,
.dijitSplitContainerSizerV {
	position:absolute;
	font-size: 1px;
	cursor: move;
	cursor: w-resize;
	background-color: ThreeDFace;
	border: 1px solid;
	border-color: ThreeDHighlight ThreeDShadow ThreeDShadow ThreeDHighlight;
	margin: 0;
}

.dijitSplitContainerSizerV {
	cursor: n-resize;
}

.dijitSplitContainerSizerH .thumb {
	position:absolute;
	top:49%;
}

.dijitSplitContainerSizerV .thumb {
	position:absolute;
	left:49%;
}

.dijitSplitContainerVirtualSizerH,
.dijitSplitContainerVirtualSizerV {
	font-size: 1px;
	cursor: move;
	cursor: w-resize;
	background-color: ThreeDShadow;
	-moz-opacity: 0.5;
	opacity: 0.5;
	filter: Alpha(Opacity=50);
	margin: 0;
}

.dijitSplitContainerVirtualSizerV {
	cursor: n-resize;
}


/* ContentPane */

.dijitContentPane {
	display: block;
	overflow: auto;	/* if we don't have this (or overflow:hidden), then Widget.resizeTo() doesn't make sense for ContentPane */
}

/* Color Palette */
.dijitPaletteImg {
		width: 18px; /*This is the width of one color in the provided palettes. */
		height: 16px; /* Height of one color in the provided palettes. */
		position: absolute;
		overflow: hidden;
		cursor: default;
		z-index: 10;
		
}

.dijitPaletteImg:hover, 
.dijitPaletteImgHighlight {
	width: 14px; /*This is the width of one color in the provided palettes. */
	height: 12px; /* Height of one color in the provided palettes. */
	border-style: solid;
	border-width: 2px;
	border-color: #ffffff;
}


.dijitColorPaletteCell {
	width:16px;
	height:16px;
	border:1px outset;
}

.dijitColorPaletteCell:hover {
	border-style:inset;
}

/* AccordionPane */
.dijitAccordionPane .accBody {
	overflow: auto;
}

.dijitAccordionPane .label:hover {
	cursor: pointer;
}

.dijitAccordionPane .label .arrow {
	float:right;
}


/* Button widget */
.dijitButton {
	line-height:0px; /* needed by webkit */
}

.dijitButton .dijitButtonNode {
	border:0px;
	margin:0px;
	overflow:visible;
	line-height:normal;
}

.dijitButtonDisabled,
.dijitButtonDisabled * {
	cursor: url("no.gif"), not-allowed, default; /*FIXME*/
}


table.dijitButton .dijitButtonNode {
	#overflow:hidden; /* visible messes up if the button is inside a table on IE */
}

.dijitButtonContents {
        padding: 0px;
        text-align: center;     /* if icon and label are split across two lines, center icon */
        vertical-align: middle; /* if icon and label are on same line, center them */
        white-space: nowrap;
        color: inherit;
}

.dijitButtonContents * {
        text-align: center;
        vertical-align: middle; /* if icon and label are on same line, center them */
}

/* border between label and arrow for drop down buttons */
.dijitButtonContentsDropDown {
        padding-right: 3px;
}


/* Calendar */

.calendarContainer thead tr th, .calendarContainer thead tr td, .calendarContainer tbody tr td, .calendarContainer tfoot tr td { 
	padding: 0;
}

.calendarNextYear {
	margin:0 0 0 0.55em;
}

.calendarPreviousYear {
	margin:0 0.55em 0 0;
}

.calendarIncrementControl {
	cursor:pointer;
	cursor:hand;
	width:1em;
}

.calendarIncrease {}

.calendarDecrease {}


.calendarDisabledDate {
	color:gray !important;
}


.calendarBodyContainer tbody tr td {
	cursor:pointer;
	cursor:hand;
}

.calendarPreviousMonthDisabled {
	cursor:default !important
}

.calendarCurrentMonthDisabled {
	cursor:default !important
}

.calendarNextMonthDisabled {
	cursor:default !important;
}

.calendarDateTemplate {
	cursor:pointer;
}

.calendarSelectedYear {
	cursor:pointer;
}
.calendarNextYear, 
.calendarPreviousYear {
	cursor:pointer;
}

.tundra .calendarMontLabel {}

.tundra .calendarMonthLabelSpacer {
	/* don't display it, but make it affect the width */
  	position: relative;
  	height: 1px;
  	overflow: hidden;
  	visibility: hidden;
}


/* Menu */

.dijitMenu {
	border-collapse:collapse;
}
.dijitMenuTable {
	margin:1px;
	border-width:0px;
}

.tundra .dijitMenuItem{
	white-space: nowrap;
}

.dijitMenuItemHover {
	cursor:pointer;
	cursor:hand;
}

.tundra .dijitMenuItemIcon {
	position: relative;
	background-position: center center;
	background-repeat: no-repeat;
}

.dijitMenuItemDisabled * {
	/* for a disabled menu item, just set it to mostly transparent */
	opacity:0.3;
	cursor:default;
}
.dj_IE6 .dijitMenuItemDisabled * {
	filter:Alpha(Opacity=30);
}

.dijitMenuItemLabel {
	position: relative;
	vertical-align: middle;
}

/* separator can be two pixels -- set border of either one to 0px to have only one */
.tundra .dijitMenuSeparatorTop {
	height: 50%;
	margin: 0px;
	margin-top:3px;
	font-size: 1px;
}

.tundra .dijitMenuSeparatorBottom {
	height: 50%;
	margin: 0px;
	margin-bottom:3px;
	font-size: 1px;
}



/* Tab */


.dijitTabContainer .dijitAlignTop {
/* position the tab labels row down by 1 px, and on top of the dijitTabPaneWrapper
	so the buttons can overlay the tab pane properly		*/
	top:1px !important;
	z-index:10;	
}

.dijitTabContainer .dijitAlignBottom {
/* position the tab labels row up by 1 px so they overlap	*/
	margin-top:-1px !important;
	z-index:10;	
}

.dijitTabContainer .dijitAlignLeft {
/* position the tab labels left by 1 px so they overlap		*/
	margin-right:-1px !important;
	z-index:10;	
}

.dijitTabContainer .dijitAlignRight {
/* position the tab labels row up by 1 px, and on top of the dijitTabPaneWrapper
	so the buttons can overlay the tab pane properly		*/
	margin-left:-1px !important;
	z-index:10;	
}

.dijitTabPaneWrapper {
	z-index:0;
}

.dijitTabPane {
	clear:left;
}

.dijitTab {
	position:relative;
	float:left;
	cursor:pointer;
	white-space:nowrap;
	z-index:3;
}

.dijitTabContainer .dijitAlignLeft .dijitTab,
.dijitTabContainer .dijitAlignRight .dijitTab {
	float:none;
}

.dijitTabInnerDiv {
	position:relative;
}

.dijitTab .close {
	display : inline-block;
	cursor : default;
	font-size: small;
}



/****
		dijit.form.AutoCompleter 
 ****/
.dijitAutoCompleter {
	/* Allow user to specify width without messing up defaults; other attributes are put on parent node */
	width:auto !important;
}

.dijitAutoCompleterInput {
	/* input element in the Autocompleter */
	display:inline !important;
	float:none !important;	
}

.dijitArrowButtonContainer {
	/* fieldset that contains the arrow button */
	display:inline !important;
	overflow:hidden;
	line-height:auto;
	padding:0px;
	border:0px;
	margin:0px;
	vertical-align:top;
	/* NOTE: width and height are necessary for IE!
		Override in your theme to make same as your input height.
	*/
	width:1em;		
	height:1em;
}

.dijitArrowButton {
	/* actual arrow button */
	-moz-box-sizing:border-box;
	display:block;
	margin:0px;
	cursor:pointer;
}


.dijitAutoCompleterDisabled .dijitArrowButton {
	cursor: default;        /* makes opera happy */
	cursor: url("no.gif"), not-allowed, default;
}





.dijitInlineEditor {
	/* span around an inline-editable value when in edit mode */
}

.dijitInlineValue {
	/* span around an inline-editable value when NOT in edit mode */
}






/* Tree */

.TreeExpando {
    float: left;
    display: inline;
    clear:both;
}


.TreeExpand {
    float: left;
    display: inline;
}

.TreeContent {
    cursor: default;
    /* can't make inline - multiline bugs */
}

.TreeIcon {

}
