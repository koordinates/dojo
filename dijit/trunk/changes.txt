Changes from Dojo 0.4 dojo.widgets to new dijit project
=======================================================

The widgets and widget infrastructure have been separated into separate project,
vastly streamlined and with a new directory structure.   There are many other changes.

Markup
------

dojoType="button" replaced by dojoType="dijit.Button"  Must use fully qualified class name,
and it's case-sensitive.

Need to manually dojo.require("dijit.util.parser") to get parsing

Widget namespaces and widget auto-loading are desupported.

onClick="foo" now overrides (ie, replaces) the default onClick() function rather than attaching to it,
so widget designers should make empty onClick() functions (when appropriate).

Renderers
---------
Removed support for multiple renderers (svg & vml & a11y) for a single widget.
If a widget wants to render differently on different platforms, there must be
branching code inside the widget, or it needs to call a library that branches
based on the browser type (like dojo.gfx or dojo.charting).


Templates
---------
The attributes dojoOn* are desupported (including dojoOnBuild);
also can't use id attribute to affect a dojoAttachPoint.


Widget.js base class
--------------------

 - Widget.js, Domwidget.js, HtmlWidget.js combined into dijit.base.Widget, with TemplatedWidget mixin
for widgets with templates

 - on widget creation, postMixInProperties(), buildRendering() and postCreate() is called.
 fillInTemplate() is no longer called.  In addition, those functions call signatures have changed.
 No arguments are passed.  To get the source dom Node, just reference this.srcDomNode.
When postCreate() is called the widget children don't yet exist.

 - The TemplatedWidget mixin defines buildRendering().  widgetsInTemplate not ported yet.

 - onResized() removed

 - the whole parent/child relationship thing is gone

 - extraArgs[] is gone

 - postCreate() called but child widgets don't exist yet

 - templateCssPath ignored.   User must manually include tundra.css file
