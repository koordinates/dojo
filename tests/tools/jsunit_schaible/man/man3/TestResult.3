.TH "TestResult" 3 "9 Nov 2002" "JsUnit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TestResult \- A TestResult collects the results of executing a test case. 
.SH SYNOPSIS
.br
.PP
Inherits \fBTestListener\fP.
.PP
.SS "Public Methods"

.in +1c
.ti -1c
.RI "void \fBTestResult\fP ()"
.br
.ti -1c
.RI "void \fBrunProtected\fP (\fBTest\fP test, \fBProtectable\fP p)"
.br
.RI "\fIRuns a test case protected.\fP"
.ti -1c
.RI "void \fBaddFailure\fP (\fBTest\fP test, \fBAssertionFailedError\fP afe)"
.br
.RI "\fIAdd an occured failure.\fP"
.ti -1c
.RI "void \fBstop\fP ()"
.br
.RI "\fIMarks that the test run should stop.\fP"
.ti -1c
.RI "Boolean \fBshouldStop\fP ()"
.br
.RI "\fIChecks whether the test run should stop.\fP"
.ti -1c
.RI "void \fBremoveListener\fP (\fBTestListener\fP listener)"
.br
.RI "\fIRemove a listener.\fP"
.ti -1c
.RI "Number \fBerrorCount\fP ()"
.br
.RI "\fIRetrieve the number of occured errors.\fP"
.ti -1c
.RI "void \fBrun\fP (\fBTest\fP test)"
.br
.RI "\fIRuns a test case.\fP"
.ti -1c
.RI "void \fBstartTest\fP (\fBTest\fP test)"
.br
.RI "\fIA test starts.\fP"
.ti -1c
.RI "void \fBaddListener\fP (\fBTestListener\fP listener)"
.br
.RI "\fIAdd a listener.\fP"
.ti -1c
.RI "void \fBendTest\fP (\fBTest\fP test)"
.br
.RI "\fIA test ended.\fP"
.ti -1c
.RI "Number \fBrunCount\fP ()"
.br
.RI "\fIRetrieve the number of run tests.\fP"
.ti -1c
.RI "Boolean \fBwasSuccessful\fP ()"
.br
.RI "\fIReturns whether the entire test was successful or not.\fP"
.ti -1c
.RI "\fBArray\fP \fBcloneListeners\fP ()"
.br
.RI "\fIReturns a copy of the listeners.\fP"
.ti -1c
.RI "void \fBaddError\fP (\fBTest\fP test, \fBError\fP except)"
.br
.RI "\fIAdd an occured error.\fP"
.ti -1c
.RI "Number \fBfailureCount\fP ()"
.br
.RI "\fIRetrieve the number of occured failures.\fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "int \fBmFailures\fP"
.br
.ti -1c
.RI "int \fBmRunTests\fP"
.br
.ti -1c
.RI "int \fBmErrors\fP"
.br
.ti -1c
.RI "int \fBmStop\fP"
.br
.ti -1c
.RI "int \fBmListeners\fP"
.br
.in -1c
.SH "DETAILED DESCRIPTION"
.PP 
A TestResult collects the results of executing a test case.
.PP
The test framework distinguishes between \fIfailures\fP and \fIerrors\fP. A failure is anticipated and checked for with assertions. Errors are unanticipated problems like a JavaScript run-time error.
.PP
\fBSee also: \fP
.in +1c
\fBTest\fP 
.PP
.SH "CONSTRUCTOR & DESTRUCTOR DOCUMENTATION"
.PP 
.SS "void TestResult::TestResult ()"
.PP
.SH "MEMBER FUNCTION DOCUMENTATION"
.PP 
.SS "void TestResult::addError (\fBTest\fP test, \fBError\fP except)\fC [virtual]\fP"
.PP
Add an occured error.
.PP
Add an occured error and call the registered listeners. 
.PP
Parameters: \fP
.in +1c
.TP
\fB\fItest\fP\fP
The failed test. 
.TP
\fB\fIexcept\fP\fP
The thrown error. 
.PP
Implements \fBTestListener\fP.
.SS "void TestResult::addFailure (\fBTest\fP test, \fBAssertionFailedError\fP afe)\fC [virtual]\fP"
.PP
Add an occured failure.
.PP
Add an occured failure and call the registered listeners. 
.PP
Parameters: \fP
.in +1c
.TP
\fB\fItest\fP\fP
The failed test. 
.TP
\fB\fIafe\fP\fP
The thrown assertion failure. 
.PP
Implements \fBTestListener\fP.
.SS "void TestResult::addListener (\fBTestListener\fP listener)"
.PP
Add a listener.
.PP
Parameters: \fP
.in +1c
.TP
\fB\fIlistener\fP\fP
The listener. 
.SS "\fBArray\fP TestResult::cloneListeners ()"
.PP
Returns a copy of the listeners.
.PP
\fBReturns: \fP
.in +1c
A copy of the listeners. 
.SS "void TestResult::endTest (\fBTest\fP test)\fC [virtual]\fP"
.PP
A test ended.
.PP
A test ended, inform the listeners. 
.PP
Parameters: \fP
.in +1c
.TP
\fB\fItest\fP\fP
The ended test. 
.PP
Implements \fBTestListener\fP.
.SS "Number TestResult::errorCount ()"
.PP
Retrieve the number of occured errors.
.PP
.SS "Number TestResult::failureCount ()"
.PP
Retrieve the number of occured failures.
.PP
.SS "void TestResult::removeListener (\fBTestListener\fP listener)"
.PP
Remove a listener.
.PP
Parameters: \fP
.in +1c
.TP
\fB\fIlistener\fP\fP
The listener. 
.SS "void TestResult::run (\fBTest\fP test)"
.PP
Runs a test case.
.PP
Parameters: \fP
.in +1c
.TP
\fB\fItest\fP\fP
The test case to run. 
.SS "Number TestResult::runCount ()"
.PP
Retrieve the number of run tests.
.PP
.SS "void TestResult::runProtected (\fBTest\fP test, \fBProtectable\fP p)"
.PP
Runs a test case protected.
.PP
Parameters: \fP
.in +1c
.TP
\fB\fItest\fP\fP
The test case to run. 
.TP
\fB\fIp\fP\fP
The protectable block running the test. To implement your own protected block that logs thrown exceptions,  pass a \fBProtectable\fP to TestResult.runProtected(). 
.SS "Boolean TestResult::shouldStop ()"
.PP
Checks whether the test run should stop.
.PP
.SS "void TestResult::startTest (\fBTest\fP test)\fC [virtual]\fP"
.PP
A test starts.
.PP
A test starts, inform the listeners. 
.PP
Parameters: \fP
.in +1c
.TP
\fB\fItest\fP\fP
The test to start. 
.PP
Implements \fBTestListener\fP.
.SS "void TestResult::stop ()"
.PP
Marks that the test run should stop.
.PP
.SS "Boolean TestResult::wasSuccessful ()"
.PP
Returns whether the entire test was successful or not.
.PP
.SH "MEMBER DATA DOCUMENTATION"
.PP 
.SS "int TestResult::mErrors"
.PP
.SS "int TestResult::mFailures"
.PP
.SS "int TestResult::mListeners"
.PP
.SS "int TestResult::mRunTests"
.PP
.SS "int TestResult::mStop"
.PP


.SH "AUTHOR"
.PP 
Generated automatically by Doxygen for JsUnit from the source code.
