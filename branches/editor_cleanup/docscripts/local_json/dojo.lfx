{"dojo.lfx.Animation":{"meta":{"requires":{"common":["dojo.lang.func"]},"functions":{"dojo.lfx.Line":{"_":{"meta":{"summary":"","parameters":{"start":{"type":""},"end":{"type":""}},"src":"\tthis.start = start;\n\tthis.end = end;\n\tif(dojo.lang.isArray(start)){\n\t\tvar diff = [];\n\t\tdojo.lang.forEach(this.start, function(s,i){\n\t\t\tdiff[i] = this.end[i] - s;\n\t\t}, this);\n\t\t\n\t\tthis.getValue = function(\/*float*\/ n){\n\t\t\tvar res = [];\n\t\t\tdojo.lang.forEach(this.start, function(s, i){\n\t\t\t\tres[i] = (diff[i] * n) + s;\n\t\t\t}, this);\n\t\t\treturn res;\n\t\t}\n\t}else{\n\t\tvar diff = end - start;\n\t\t\t\n\t\tthis.getValue = function(\/*float*\/ n){\n\t\t\t\/\/\tsummary: returns the point on the line\n\t\t\t\/\/\tn: a floating point number greater than 0 and less than 1\n\t\t\treturn (diff * n) + this.start;\n\t\t}\n\t}","this_variables":["start","end","getValue"]}}},"dojo.lfx.Line.getValue":{"_":{"meta":{"summary":"returns the point on the line","parameters":{"n":{"type":"float"}},"src":""}}},"dojo.lfx.easeDefault":{"_":{"meta":{"summary":"","parameters":{"n":{"type":""}},"src":"\t\t\/\/ the cool kids are obviously not using konqueror...\n\t\t\/\/ found a very wierd bug in floats constants, 1.5 evals as 1\n\t\t\/\/ seems somebody mixed up ints and floats in 3.5.4 ??\n\t\t\/\/ FIXME: investigate more and post a KDE bug (Fredrik)\n\t\treturn (parseFloat(\"0.5\")+((Math.sin( (n+parseFloat(\"1.5\")) * Math.PI))\/2));\n\t}else{\n\t\treturn (0.5+((Math.sin( (n+1.5) * Math.PI))\/2));dojo.debug(ret);\n\t}"}}},"dojo.lfx.easeIn":{"_":{"meta":{"summary":"returns the point on an easing curve","parameters":{"n":{"type":""}},"src":""}}},"dojo.lfx.easeOut":{"_":{"meta":{"summary":"returns the point on the line","parameters":{"n":{"type":""}},"src":""}}},"dojo.lfx.easeInOut":{"_":{"meta":{"summary":"returns the point on the line","parameters":{"n":{"type":""}},"src":""}}},"dojo.lfx.IAnimation":{"_":{"meta":{"summary":"","src":"","protovariables":{"curve":"","duration":"","easing":"","repeatCount":"","rate":"","handler":"","beforeBegin":"","onBegin":"","onAnimate":"","onEnd":"","onPlay":"","onPause":"","onStop":"","play":"","pause":"","stop":"","_active":"","_paused":""},"this_variables":["repeatCount"]}}},"dojo.lfx.Animation":{"_":{"meta":{"summary":" a generic animation object that fires callbacks into it's handlers object at various states","parameters":{"handlers":{"type":"Object"},"duration":{"type":"int"},"curve":{"type":"Array"},"easing":{"type":"function"},"repeatCount":{"type":"int"},"rate":{"type":"int"}},"src":"\tif(dojo.lang.isNumber(handlers)||(!handlers && duration.getValue)){\n\t\t\/\/ no handlers argument:\n\t\trate = repeatCount;\n\t\trepeatCount = easing;\n\t\teasing = curve;\n\t\tcurve = duration;\n\t\tduration = handlers;\n\t\thandlers = null;\n\t}else if(handlers.getValue||dojo.lang.isArray(handlers)){\n\t\t\/\/ no handlers or duration:\n\t\trate = easing;\n\t\trepeatCount = curve;\n\t\teasing = duration;\n\t\tcurve = handlers;\n\t\tduration = null;\n\t\thandlers = null;\n\t}\n\tif(dojo.lang.isArray(curve)){\n\t\tthis.curve = new dojo.lfx.Line(curve[0], curve[1]);\n\t}else{\n\t\tthis.curve = curve;\n\t}\n\tif(duration != null && duration > 0){ this.duration = duration; }\n\tif(repeatCount){ this.repeatCount = repeatCount; }\n\tif(rate){ this.rate = rate; }\n\tif(handlers){\n\t\tdojo.lang.forEach([\n\t\t\t\t\"handler\", \"beforeBegin\", \"onBegin\", \n\t\t\t\t\"onEnd\", \"onPlay\", \"onStop\", \"onAnimate\"\n\t\t\t], function(item){\n\t\t\t\tif(handlers[item]){\n\t\t\t\t\tthis.connect(item, handlers[item]);\n\t\t\t\t}\n\t\t\t}, this);\n\t}\n\tif(easing && dojo.lang.isFunction(easing)){\n\t\tthis.easing=easing;\n\t}","this_variables":["curve","duration","repeatCount","rate","easing","_active","_paused","_percent","_startTime","_endTime","_startRepeatCount","_paused","_active","_paused","_percent","_active","_paused","_percent","_timer","_active","repeatCount","_startRepeatCount"],"inherits":["dojo.lfx.IAnimation"],"protovariables":{"_startTime":"","_endTime":"","_timer":"","_percent":"","_startRepeatCount":""}}}},"dojo.lfx.Combine":{"_":{"meta":{"summary":"","src":"\tdojo.lfx.IAnimation.call(this);\n\tthis._anims = [];\n\tthis._animsEnded = 0;\n\t\n\tvar anims = arguments;\n\tif(anims.length == 1 && (dojo.lang.isArray(anims[0]) || dojo.lang.isArrayLike(anims[0]))){\n\t\tanims = anims[0];\n\t}\n\t\n\tdojo.lang.forEach(anims, function(anim){\n\t\tthis._anims.push(anim);\n\t\tanim.connect(\"onEnd\", dojo.lang.hitch(this, \"_onAnimsEnded\"));\n\t}, this);","this_variables":["_anims","_animsEnded"],"inherits":["dojo.lfx.IAnimation"],"protovariables":{"_animsEnded":""}}}},"dojo.lfx.Chain":{"_":{"meta":{"summary":"","src":"\tdojo.lfx.IAnimation.call(this);\n\tthis._anims = [];\n\tthis._currAnim = -1;\n\t\n\tvar anims = arguments;\n\tif(anims.length == 1 && (dojo.lang.isArray(anims[0]) || dojo.lang.isArrayLike(anims[0]))){\n\t\tanims = anims[0];\n\t}\n\t\n\tvar _this = this;\n\tdojo.lang.forEach(anims, function(anim, i, anims_arr){\n\t\tthis._anims.push(anim);\n\t\tif(i < anims_arr.length - 1){\n\t\t\tanim.connect(\"onEnd\", dojo.lang.hitch(this, \"_playNext\") );\n\t\t}else{\n\t\t\tanim.connect(\"onEnd\", dojo.lang.hitch(this, function(){ this.fire(\"onEnd\"); }) );\n\t\t}\n\t}, this);","this_variables":["_anims","_currAnim","_currAnim","_currAnim","_currAnim"],"inherits":["dojo.lfx.IAnimation"],"protovariables":{"_currAnim":""}}}},"dojo.lfx.combine":{"_":{"meta":{"summary":"","src":"\tvar anims = arguments;\n\tif(dojo.lang.isArray(arguments[0])){\n\t\tanims = arguments[0];\n\t}\n\tif(anims.length == 1){ return anims[0]; }\n\treturn new dojo.lfx.Combine(anims);"}}},"dojo.lfx.chain":{"_":{"meta":{"summary":"","src":"\tvar anims = arguments;\n\tif(dojo.lang.isArray(arguments[0])){\n\t\tanims = arguments[0];\n\t}\n\tif(anims.length == 1){ return anims[0]; }\n\treturn new dojo.lfx.Chain(anims);"}}},"dojo.lfx.IAnimation.connect":{"_":{"meta":{"summary":"","parameters":{"evt":{"type":""},"scope":{"type":""},"newFunc":{"type":""}},"src":"\t\tif(!newFunc){\n\t\t\tnewFunc = scope;\n\t\t\tscope = this;\n\t\t}\n\t\tnewFunc = dojo.lang.hitch(scope, newFunc);\n\t\tvar oldFunc = this[evt]||function(){};\n\t\tthis[evt] = function(){\n\t\t\tvar ret = oldFunc.apply(this, arguments);\n\t\t\tnewFunc.apply(this, arguments);\n\t\t\treturn ret;\n\t\t}\n\t\treturn this;","this":"dojo.lfx.IAnimation"}}},"dojo.lfx.IAnimation.fire":{"_":{"meta":{"summary":"","parameters":{"evt":{"type":""},"args":{"type":""}},"src":"\t\tif(this[evt]){\n\t\t\tthis[evt].apply(this, (args||[]));\n\t\t}\n\t\treturn this;","this":"dojo.lfx.IAnimation"}}},"dojo.lfx.IAnimation.repeat":{"_":{"meta":{"summary":"","parameters":{"count":{"type":""}},"src":"\t\tthis.repeatCount = count;\n\t\treturn this;","this":"dojo.lfx.IAnimation"}}},"dojo.lfx.Animation.play":{"_":{"meta":{"summary":"","parameters":{"delay":{"type":""},"gotoStart":{"type":""}},"src":"\t\tif(gotoStart){\n\t\t\tclearTimeout(this._timer);\n\t\t\tthis._active = false;\n\t\t\tthis._paused = false;\n\t\t\tthis._percent = 0;\n\t\t}else if(this._active && !this._paused){\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tthis.fire(\"handler\", [\"beforeBegin\"]);\n\t\tthis.fire(\"beforeBegin\");\n\n\t\tif(delay > 0){\n\t\t\tsetTimeout(dojo.lang.hitch(this, function(){ this.play(null, gotoStart); }), delay);\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tthis._startTime = new Date().valueOf();\n\t\tif(this._paused){\n\t\t\tthis._startTime -= (this.duration * this._percent \/ 100);\n\t\t}\n\t\tthis._endTime = this._startTime + this.duration;\n\n\t\tthis._active = true;\n\t\tthis._paused = false;\n\t\t\n\t\tvar step = this._percent \/ 100;\n\t\tvar value = this.curve.getValue(step);\n\t\tif(this._percent == 0 ){\n\t\t\tif(!this._startRepeatCount){\n\t\t\t\tthis._startRepeatCount = this.repeatCount;\n\t\t\t}\n\t\t\tthis.fire(\"handler\", [\"begin\", value]);\n\t\t\tthis.fire(\"onBegin\", [value]);\n\t\t}\n\n\t\tthis.fire(\"handler\", [\"play\", value]);\n\t\tthis.fire(\"onPlay\", [value]);\n\n\t\tthis._cycle();\n\t\treturn this;","this":"dojo.lfx.Animation"}}},"dojo.lfx.Animation.pause":{"_":{"meta":{"summary":"","src":"\t\tclearTimeout(this._timer);\n\t\tif(!this._active){ return this; }\n\t\tthis._paused = true;\n\t\tvar value = this.curve.getValue(this._percent \/ 100);\n\t\tthis.fire(\"handler\", [\"pause\", value]);\n\t\tthis.fire(\"onPause\", [value]);\n\t\treturn this;","this":"dojo.lfx.Animation"}}},"dojo.lfx.Animation.gotoPercent":{"_":{"meta":{"summary":"","parameters":{"pct":{"type":""},"andPlay":{"type":""}},"src":"\t\tclearTimeout(this._timer);\n\t\tthis._active = true;\n\t\tthis._paused = true;\n\t\tthis._percent = pct;\n\t\tif(andPlay){ this.play(); }\n\t\treturn this;","this":"dojo.lfx.Animation"}}},"dojo.lfx.Animation.stop":{"_":{"meta":{"summary":"","parameters":{"gotoEnd":{"type":""}},"src":"\t\tclearTimeout(this._timer);\n\t\tvar step = this._percent \/ 100;\n\t\tif(gotoEnd){\n\t\t\tstep = 1;\n\t\t}\n\t\tvar value = this.curve.getValue(step);\n\t\tthis.fire(\"handler\", [\"stop\", value]);\n\t\tthis.fire(\"onStop\", [value]);\n\t\tthis._active = false;\n\t\tthis._paused = false;\n\t\treturn this;","this":"dojo.lfx.Animation"}}},"dojo.lfx.Animation.status":{"_":{"meta":{"summary":"","src":"\t\tif(this._active){\n\t\t\treturn this._paused ? \"paused\" : \"playing\";\n\t\t}else{\n\t\t\treturn \"stopped\";\n\t\t}\n\t\treturn this;","this":"dojo.lfx.Animation"}}},"dojo.lfx.Animation._cycle":{"_":{"meta":{"summary":"","src":"\t\tclearTimeout(this._timer);\n\t\tif(this._active){\n\t\t\tvar curr = new Date().valueOf();\n\t\t\tvar step = (curr - this._startTime) \/ (this._endTime - this._startTime);\n\n\t\t\tif(step >= 1){\n\t\t\t\tstep = 1;\n\t\t\t\tthis._percent = 100;\n\t\t\t}else{\n\t\t\t\tthis._percent = step * 100;\n\t\t\t}\n\t\t\t\n\t\t\t\/\/ Perform easing\n\t\t\tif((this.easing)&&(dojo.lang.isFunction(this.easing))){\n\t\t\t\tstep = this.easing(step);\n\t\t\t}\n\n\t\t\tvar value = this.curve.getValue(step);\n\t\t\tthis.fire(\"handler\", [\"animate\", value]);\n\t\t\tthis.fire(\"onAnimate\", [value]);\n\n\t\t\tif( step < 1 ){\n\t\t\t\tthis._timer = setTimeout(dojo.lang.hitch(this, \"_cycle\"), this.rate);\n\t\t\t}else{\n\t\t\t\tthis._active = false;\n\t\t\t\tthis.fire(\"handler\", [\"end\"]);\n\t\t\t\tthis.fire(\"onEnd\");\n\n\t\t\t\tif(this.repeatCount > 0){\n\t\t\t\t\tthis.repeatCount--;\n\t\t\t\t\tthis.play(null, true);\n\t\t\t\t}else if(this.repeatCount == -1){\n\t\t\t\t\tthis.play(null, true);\n\t\t\t\t}else{\n\t\t\t\t\tif(this._startRepeatCount){\n\t\t\t\t\t\tthis.repeatCount = this._startRepeatCount;\n\t\t\t\t\t\tthis._startRepeatCount = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;","this":"dojo.lfx.Animation"}}},"dojo.lfx.Combine.play":{"_":{"meta":{"summary":"","parameters":{"delay":{"type":""},"gotoStart":{"type":""}},"src":"\t\tif( !this._anims.length ){ return this; }\n\n\t\tthis.fire(\"beforeBegin\");\n\n\t\tif(delay > 0){\n\t\t\tsetTimeout(dojo.lang.hitch(this, function(){ this.play(null, gotoStart); }), delay);\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tif(gotoStart || this._anims[0].percent == 0){\n\t\t\tthis.fire(\"onBegin\");\n\t\t}\n\t\tthis.fire(\"onPlay\");\n\t\tthis._animsCall(\"play\", null, gotoStart);\n\t\treturn this;","this":"dojo.lfx.Combine"}}},"dojo.lfx.Combine.pause":{"_":{"meta":{"summary":"","src":"\t\tthis.fire(\"onPause\");\n\t\tthis._animsCall(\"pause\"); \n\t\treturn this;","this":"dojo.lfx.Combine"}}},"dojo.lfx.Combine.stop":{"_":{"meta":{"summary":"","parameters":{"gotoEnd":{"type":""}},"src":"\t\tthis.fire(\"onStop\");\n\t\tthis._animsCall(\"stop\", gotoEnd);\n\t\treturn this;","this":"dojo.lfx.Combine"}}},"dojo.lfx.Combine._onAnimsEnded":{"_":{"meta":{"summary":"","src":"\t\tthis._animsEnded++;\n\t\tif(this._animsEnded >= this._anims.length){\n\t\t\tthis.fire(\"onEnd\");\n\t\t}\n\t\treturn this;","this":"dojo.lfx.Combine"}}},"dojo.lfx.Combine._animsCall":{"_":{"meta":{"summary":"","parameters":{"funcName":{"type":""}},"src":"\t\tvar args = [];\n\t\tif(arguments.length > 1){\n\t\t\tfor(var i = 1 ; i < arguments.length ; i++){\n\t\t\t\targs.push(arguments[i]);\n\t\t\t}\n\t\t}\n\t\tvar _this = this;\n\t\tdojo.lang.forEach(this._anims, function(anim){\n\t\t\tanim[funcName](args);\n\t\t}, _this);\n\t\treturn this;","this":"dojo.lfx.Combine"}}},"dojo.lfx.Chain.play":{"_":{"meta":{"summary":"","parameters":{"delay":{"type":""},"gotoStart":{"type":""}},"src":"\t\tif( !this._anims.length ) { return this; }\n\t\tif( gotoStart || !this._anims[this._currAnim] ) {\n\t\t\tthis._currAnim = 0;\n\t\t}\n\n\t\tvar currentAnimation = this._anims[this._currAnim];\n\n\t\tthis.fire(\"beforeBegin\");\n\t\tif(delay > 0){\n\t\t\tsetTimeout(dojo.lang.hitch(this, function(){ this.play(null, gotoStart); }), delay);\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tif(currentAnimation){\n\t\t\tif(this._currAnim == 0){\n\t\t\t\tthis.fire(\"handler\", [\"begin\", this._currAnim]);\n\t\t\t\tthis.fire(\"onBegin\", [this._currAnim]);\n\t\t\t}\n\t\t\tthis.fire(\"onPlay\", [this._currAnim]);\n\t\t\tcurrentAnimation.play(null, gotoStart);\n\t\t}\n\t\treturn this;","this":"dojo.lfx.Chain"}}},"dojo.lfx.Chain.pause":{"_":{"meta":{"summary":"","src":"\t\tif( this._anims[this._currAnim] ) {\n\t\t\tthis._anims[this._currAnim].pause();\n\t\t\tthis.fire(\"onPause\", [this._currAnim]);\n\t\t}\n\t\treturn this;","this":"dojo.lfx.Chain"}}},"dojo.lfx.Chain.playPause":{"_":{"meta":{"summary":"","src":"\t\tif(this._anims.length == 0){ return this; }\n\t\tif(this._currAnim == -1){ this._currAnim = 0; }\n\t\tvar currAnim = this._anims[this._currAnim];\n\t\tif( currAnim ) {\n\t\t\tif( !currAnim._active || currAnim._paused ) {\n\t\t\t\tthis.play();\n\t\t\t} else {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t}\n\t\treturn this;","this":"dojo.lfx.Chain"}}},"dojo.lfx.Chain.stop":{"_":{"meta":{"summary":"","src":"\t\tvar currAnim = this._anims[this._currAnim];\n\t\tif(currAnim){\n\t\t\tcurrAnim.stop();\n\t\t\tthis.fire(\"onStop\", [this._currAnim]);\n\t\t}\n\t\treturn currAnim;","this":"dojo.lfx.Chain"}}},"dojo.lfx.Chain._playNext":{"_":{"meta":{"summary":"","src":"\t\tif( this._currAnim == -1 || this._anims.length == 0 ) { return this; }\n\t\tthis._currAnim++;\n\t\tif( this._anims[this._currAnim] ){\n\t\t\tthis._anims[this._currAnim].play(null, true);\n\t\t}\n\t\treturn this;","this":"dojo.lfx.Chain"}}}}}},"dojo.lfx._":{"meta":{"requires":{"browser":["dojo.lfx.html"],"dashboard":["dojo.lfx.html"]}}},"dojo.lfx.extras":{"meta":{"requires":{"common":["dojo.lfx.html","dojo.lfx.Animation"]},"functions":{"dojo.lfx.html.fadeWipeIn":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anim = dojo.lfx.combine(\n\t\tdojo.lfx.fadeIn(nodes, duration, easing),\n\t\tdojo.lfx.wipeIn(nodes, duration, easing)\n\t);\n\t\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){\n\t\t\tcallback(nodes, anim);\n\t\t});\n\t}\n\t\n\treturn anim;"}}},"dojo.lfx.html.fadeWipeOut":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anim = dojo.lfx.combine(\n\t\tdojo.lfx.fadeOut(nodes, duration, easing),\n\t\tdojo.lfx.wipeOut(nodes, duration, easing)\n\t);\n\t\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){\n\t\t\tcallback(nodes, anim);\n\t\t});\n\t}\n\n\treturn anim;"}}},"dojo.lfx.html.scale":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"percentage":{"type":""},"scaleContent":{"type":""},"fromCenter":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar outer = dojo.html.getMarginBox(node);\n\n\t\tvar actualPct = percentage\/100.0;\n\t\tvar props = [\n\t\t\t{\tproperty: \"width\",\n\t\t\t\tstart: outer.width,\n\t\t\t\tend: outer.width * actualPct\n\t\t\t},\n\t\t\t{\tproperty: \"height\",\n\t\t\t\tstart: outer.height,\n\t\t\t\tend: outer.height * actualPct\n\t\t\t}];\n\t\t\n\t\tif(scaleContent){\n\t\t\tvar fontSize = dojo.html.getStyle(node, 'font-size');\n\t\t\tvar fontSizeType = null;\n\t\t\tif(!fontSize){\n\t\t\t\tfontSize = parseFloat('100%');\n\t\t\t\tfontSizeType = '%';\n\t\t\t}else{\n\t\t\t\tdojo.lang.some(['em','px','%'], function(item, index, arr){\n\t\t\t\t\tif(fontSize.indexOf(item)>0){\n\t\t\t\t\t\tfontSize = parseFloat(fontSize);\n\t\t\t\t\t\tfontSizeType = item;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tprops.push({\n\t\t\t\tproperty: \"font-size\",\n\t\t\t\tstart: fontSize,\n\t\t\t\tend: fontSize * actualPct,\n\t\t\t\tunits: fontSizeType });\n\t\t}\n\t\t\n\t\tif(fromCenter){\n\t\t\tvar positioning = dojo.html.getStyle(node, \"position\");\n\t\t\tvar originalTop = node.offsetTop;\n\t\t\tvar originalLeft = node.offsetLeft;\n\t\t\tvar endTop = ((outer.height * actualPct) - outer.height)\/2;\n\t\t\tvar endLeft = ((outer.width * actualPct) - outer.width)\/2;\n\t\t\tprops.push({\n\t\t\t\tproperty: \"top\",\n\t\t\t\tstart: originalTop,\n\t\t\t\tend: (positioning == \"absolute\" ? originalTop - endTop : (-1*endTop))\n\t\t\t});\n\t\t\tprops.push({\n\t\t\t\tproperty: \"left\",\n\t\t\t\tstart: originalLeft,\n\t\t\t\tend: (positioning == \"absolute\" ? originalLeft - endLeft : (-1*endLeft))\n\t\t\t});\n\t\t}\n\t\t\n\t\tvar anim = dojo.lfx.propertyAnimation(node, props, duration, easing);\n\t\tif(callback){\n\t\t\tanim.connect(\"onEnd\", function(){\n\t\t\t\tcallback(node, anim);\n\t\t\t});\n\t\t}\n\n\t\tanims.push(anim);\n\t});\n\t\n\treturn dojo.lfx.combine(anims);"}}}}}},"dojo.lfx.html":{"meta":{"requires":{"common":["dojo.gfx.color","dojo.lfx.Animation","dojo.lang.array","dojo.html.display","dojo.html.color","dojo.html.layout"]},"functions":{"dojo.lfx.html._byId":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""}},"src":"\tif(!nodes){ return []; }\n\tif(dojo.lang.isArrayLike(nodes)){\n\t\tif(!nodes.alreadyChecked){\n\t\t\tvar n = [];\n\t\t\tdojo.lang.forEach(nodes, function(node){\n\t\t\t\tn.push(dojo.byId(node));\n\t\t\t});\n\t\t\tn.alreadyChecked = true;\n\t\t\treturn n;\n\t\t}else{\n\t\t\treturn nodes;\n\t\t}\n\t}else{\n\t\tvar n = [];\n\t\tn.push(dojo.byId(nodes));\n\t\tn.alreadyChecked = true;\n\t\treturn n;\n\t}"}}},"dojo.lfx.html.propertyAnimation":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":"DOMNode"},"propertyMap":{"type":"Array"},"duration":{"type":"int"},"easing":{"type":"function"},"handlers":{"type":"Object"}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\n\tvar targs = {\n\t\t\"propertyMap\": propertyMap,\n\t\t\"nodes\": nodes,\n\t\t\"duration\": duration,\n\t\t\"easing\": easing||dojo.lfx.easeDefault\n\t};\n\t\n\tvar setEmUp = function(args){\n\t\tif(args.nodes.length==1){\n\t\t\t\/\/ FIXME: we're only supporting start-value filling when one node is\n\t\t\t\/\/ passed\n\t\t\t\n\t\t\tvar pm = args.propertyMap;\n\t\t\tif(!dojo.lang.isArray(args.propertyMap)){\n\t\t\t\t\/\/ it's stupid to have to pack an array with a set of objects\n\t\t\t\t\/\/ when you can just pass in an object list\n\t\t\t\tvar parr = [];\n\t\t\t\tfor(var pname in pm){\n\t\t\t\t\tpm[pname].property = pname;\n\t\t\t\t\tparr.push(pm[pname]);\n\t\t\t\t}\n\t\t\t\tpm = args.propertyMap = parr;\n\t\t\t}\n\t\t\tdojo.lang.forEach(pm, function(prop){\n\t\t\t\tif(dj_undef(\"start\", prop)){\n\t\t\t\t\tif(prop.property != \"opacity\"){\n\t\t\t\t\t\tprop.start = parseInt(dojo.html.getComputedStyle(args.nodes[0], prop.property));\n\t\t\t\t\t}else{\n\t\t\t\t\t\tprop.start = dojo.html.getOpacity(args.nodes[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tvar coordsAsInts = function(coords){\n\t\tvar cints = [];\n\t\tdojo.lang.forEach(coords, function(c){ \n\t\t\tcints.push(Math.round(c));\n\t\t});\n\t\treturn cints;\n\t}\n\n\tvar setStyle = function(n, style){\n\t\tn = dojo.byId(n);\n\t\tif(!n || !n.style){ return; }\n\t\tfor(var s in style){\n\t\t\tif(s == \"opacity\"){\n\t\t\t\tdojo.html.setOpacity(n, style[s]);\n\t\t\t}else{\n\t\t\t\tn.style[s] = style[s];\n\t\t\t}\n\t\t}\n\t}\n\n\tvar propLine = function(properties){\n\t\tthis._properties = properties;\n\t\tthis.diffs = new Array(properties.length);\n\t\tdojo.lang.forEach(properties, function(prop, i){\n\t\t\t\/\/ calculate the end - start to optimize a bit\n\t\t\tif(dojo.lang.isFunction(prop.start)){\n\t\t\t\tprop.start = prop.start(prop, i);\n\t\t\t}\n\t\t\tif(dojo.lang.isFunction(prop.end)){\n\t\t\t\tprop.end = prop.end(prop, i);\n\t\t\t}\n\t\t\tif(dojo.lang.isArray(prop.start)){\n\t\t\t\t\/\/ don't loop through the arrays\n\t\t\t\tthis.diffs[i] = null;\n\t\t\t}else if(prop.start instanceof dojo.gfx.color.Color){\n\t\t\t\t\/\/ save these so we don't have to call toRgb() every getValue() call\n\t\t\t\tprop.startRgb = prop.start.toRgb();\n\t\t\t\tprop.endRgb = prop.end.toRgb();\n\t\t\t}else{\n\t\t\t\tthis.diffs[i] = prop.end - prop.start;\n\t\t\t}\n\t\t}, this);\n\n\t\tthis.getValue = function(n){\n\t\t\tvar ret = {};\n\t\t\tdojo.lang.forEach(this._properties, function(prop, i){\n\t\t\t\tvar value = null;\n\t\t\t\tif(dojo.lang.isArray(prop.start)){\n\t\t\t\t\t\/\/ FIXME: what to do here?\n\t\t\t\t}else if(prop.start instanceof dojo.gfx.color.Color){\n\t\t\t\t\tvalue = (prop.units||\"rgb\") + \"(\";\n\t\t\t\t\tfor(var j = 0 ; j < prop.startRgb.length ; j++){\n\t\t\t\t\t\tvalue += Math.round(((prop.endRgb[j] - prop.startRgb[j]) * n) + prop.startRgb[j]) + (j < prop.startRgb.length - 1 ? \",\" : \"\");\n\t\t\t\t\t}\n\t\t\t\t\tvalue += \")\";\n\t\t\t\t}else{\n\t\t\t\t\tvalue = ((this.diffs[i]) * n) + prop.start + (prop.property != \"opacity\" ? prop.units||\"px\" : \"\");\n\t\t\t\t}\n\t\t\t\tret[dojo.html.toCamelCase(prop.property)] = value;\n\t\t\t}, this);\n\t\t\treturn ret;\n\t\t}\n\t}\n\t\n\tvar anim = new dojo.lfx.Animation({\n\t\t\tbeforeBegin: function(){ \n\t\t\t\tsetEmUp(targs); \n\t\t\t\tanim.curve = new propLine(targs.propertyMap);\n\t\t\t},\n\t\t\tonAnimate: function(propValues){\n\t\t\t\tdojo.lang.forEach(targs.nodes, function(node){\n\t\t\t\t\tsetStyle(node, propValues);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\ttargs.duration, \n\t\tnull,\n\t\ttargs.easing\n\t);\n\tif(handlers){\n\t\tfor(var x in handlers){\n\t\t\tif(dojo.lang.isFunction(handlers[x])){\n\t\t\t\tanim.connect(x, anim, handlers[x]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn anim;","this_variables":["_properties","diffs","getValue"]}}},"dojo.lfx.html.propertyAnimation.getValue":{"_":{"meta":{"summary":"","parameters":{"n":{"type":""}},"src":"\t\t\tvar ret = {};\n\t\t\tdojo.lang.forEach(this._properties, function(prop, i){\n\t\t\t\tvar value = null;\n\t\t\t\tif(dojo.lang.isArray(prop.start)){\n\t\t\t\t\t\/\/ FIXME: what to do here?\n\t\t\t\t}else if(prop.start instanceof dojo.gfx.color.Color){\n\t\t\t\t\tvalue = (prop.units||\"rgb\") + \"(\";\n\t\t\t\t\tfor(var j = 0 ; j < prop.startRgb.length ; j++){\n\t\t\t\t\t\tvalue += Math.round(((prop.endRgb[j] - prop.startRgb[j]) * n) + prop.startRgb[j]) + (j < prop.startRgb.length - 1 ? \",\" : \"\");\n\t\t\t\t\t}\n\t\t\t\t\tvalue += \")\";\n\t\t\t\t}else{\n\t\t\t\t\tvalue = ((this.diffs[i]) * n) + prop.start + (prop.property != \"opacity\" ? prop.units||\"px\" : \"\");\n\t\t\t\t}\n\t\t\t\tret[dojo.html.toCamelCase(prop.property)] = value;\n\t\t\t}, this);\n\t\t\treturn ret;"}}},"dojo.lfx.html._makeFadeable":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""}},"src":"\tvar makeFade = function(node){\n\t\tif(dojo.render.html.ie){\n\t\t\t\/\/ only set the zoom if the \"tickle\" value would be the same as the\n\t\t\t\/\/ default\n\t\t\tif( (node.style.zoom.length == 0) &&\n\t\t\t\t(dojo.html.getStyle(node, \"zoom\") == \"normal\") ){\n\t\t\t\t\/\/ make sure the node \"hasLayout\"\n\t\t\t\t\/\/ NOTE: this has been tested with larger and smaller user-set text\n\t\t\t\t\/\/ sizes and works fine\n\t\t\t\tnode.style.zoom = \"1\";\n\t\t\t\t\/\/ node.style.zoom = \"normal\";\n\t\t\t}\n\t\t\t\/\/ don't set the width to auto if it didn't already cascade that way.\n\t\t\t\/\/ We don't want to f anyones designs\n\t\t\tif(\t(node.style.width.length == 0) &&\n\t\t\t\t(dojo.html.getStyle(node, \"width\") == \"auto\") ){\n\t\t\t\tnode.style.width = \"auto\";\n\t\t\t}\n\t\t}\n\t}\n\tif(dojo.lang.isArrayLike(nodes)){\n\t\tdojo.lang.forEach(nodes, makeFade);\n\t}else{\n\t\tmakeFade(nodes);\n\t}"}}},"dojo.lfx.html.fade":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"values":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar props = { property: \"opacity\" };\n\tif(!dj_undef(\"start\", values)){\n\t\tprops.start = values.start;\n\t}else{\n\t\tprops.start = function(){ return dojo.html.getOpacity(nodes[0]); };\n\t}\n\n\tif(!dj_undef(\"end\", values)){\n\t\tprops.end = values.end;\n\t}else{\n\t\tdojo.raise(\"dojo.lfx.html.fade needs an end value\");\n\t}\n\n\tvar anim = dojo.lfx.propertyAnimation(nodes, [ props ], duration, easing);\n\tanim.connect(\"beforeBegin\", function(){\n\t\tdojo.lfx.html._makeFadeable(nodes);\n\t});\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){ callback(nodes, anim); });\n\t}\n\n\treturn anim;"}}},"dojo.lfx.html.fadeIn":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\treturn dojo.lfx.html.fade(nodes, { end: 1 }, duration, easing, callback);"}}},"dojo.lfx.html.fadeOut":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\treturn dojo.lfx.html.fade(nodes, { end: 0 }, duration, easing, callback);"}}},"dojo.lfx.html.fadeShow":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes=dojo.lfx.html._byId(nodes);\n\tdojo.lang.forEach(nodes, function(node){\n\t\tdojo.html.setOpacity(node, 0.0);\n\t});\n\n\tvar anim = dojo.lfx.html.fadeIn(nodes, duration, easing, callback);\n\tanim.connect(\"beforeBegin\", function(){ \n\t\tif(dojo.lang.isArrayLike(nodes)){\n\t\t\tdojo.lang.forEach(nodes, dojo.html.show);\n\t\t}else{\n\t\t\tdojo.html.show(nodes);\n\t\t}\n\t});\n\n\treturn anim;"}}},"dojo.lfx.html.fadeHide":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tvar anim = dojo.lfx.html.fadeOut(nodes, duration, easing, function(){\n\t\tif(dojo.lang.isArrayLike(nodes)){\n\t\t\tdojo.lang.forEach(nodes, dojo.html.hide);\n\t\t}else{\n\t\t\tdojo.html.hide(nodes);\n\t\t}\n\t\tif(callback){ callback(nodes, anim); }\n\t});\n\t\n\treturn anim;"}}},"dojo.lfx.html.wipeIn":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar oprop = { overflow: null };\n\t\t\n\t\tvar anim = dojo.lfx.propertyAnimation(node,\n\t\t\t{\t\"height\": {\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tend: function(){ return node.scrollHeight; } \n\t\t\t\t}\n\t\t\t}, \n\t\t\tduration, \n\t\t\teasing);\n\t\n\t\tanim.connect(\"beforeBegin\", function(){\n\t\t\toprop.overflow = dojo.html.getStyle(node, \"overflow\");\n\t\t\twith(node.style){\n\t\t\t\tif(oprop.overflow == \"visible\") {\n\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t}\n\t\t\t\tvisibility = \"visible\";\n\t\t\t\theight = \"0px\";\n\t\t\t}\n\t\t\tdojo.html.show(node);\n\t\t});\n\t\t\n\t\tanim.connect(\"onEnd\", function(){ \n\t\t\twith(node.style){\n\t\t\t\toverflow = oprop.overflow;\n\t\t\t\t\/\/ height = \"auto\";\n\t\t\t\theight = \"\";\n\t\t\t\tvisibility = \"visible\";\n\t\t\t}\n\t\t\tif(callback){ callback(node, anim); }\n\t\t});\n\t\tanims.push(anim);\n\t});\n\t\n\treturn dojo.lfx.combine(anims); "}}},"dojo.lfx.html.wipeOut":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\t\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar oprop = { overflow: null };\n\t\tvar anim = dojo.lfx.propertyAnimation(node,\n\t\t\t{\t\"height\": {\n\t\t\t\t\tstart: function(){ return dojo.html.getContentBox(node).height; },\n\t\t\t\t\tend: 0\n\t\t\t\t} \n\t\t\t},\n\t\t\tduration,\n\t\t\teasing,\n\t\t\t{\n\t\t\t\t\"beforeBegin\": function(){\n\t\t\t\t\toprop.overflow = dojo.html.getStyle(node, \"overflow\");\n\t\t\t\t\tif(oprop.overflow == \"visible\") {\n\t\t\t\t\t\tnode.style.overflow = \"hidden\";\n\t\t\t\t\t}\n\t\t\t\t\tnode.style.visibility = \"visible\";\n\t\t\t\t\tdojo.html.show(node);\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t\"onEnd\": function(){ \n\t\t\t\t\t\/\/ dojo.html.hide(node);\n\t\t\t\t\twith(node.style){\n\t\t\t\t\t\toverflow = oprop.overflow;\n\t\t\t\t\t\tvisibility = \"hidden\";\n\t\t\t\t\t\theight = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tif(callback){ callback(node, anim); }\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tanims.push(anim);\n\t});\n\n\treturn dojo.lfx.combine(anims); "}}},"dojo.lfx.html.slideTo":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"coords":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tvar compute = dojo.html.getComputedStyle;\n\t\n\tif(dojo.lang.isArray(coords)){\n\t\tdojo.deprecated('dojo.lfx.html.slideTo(node, array)', 'use dojo.lfx.html.slideTo(node, {top: value, left: value});', '0.5');\n\t\tcoords = { top: coords[0], left: coords[1] };\n\t}\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar top = null;\n\t\tvar left = null;\n\t\t\n\t\tvar init = (function(){\n\t\t\tvar innerNode = node;\n\t\t\treturn function(){\n\t\t\t\tvar pos = compute(innerNode, 'position');\n\t\t\t\ttop = (pos == 'absolute' ? node.offsetTop : parseInt(compute(node, 'top')) || 0);\n\t\t\t\tleft = (pos == 'absolute' ? node.offsetLeft : parseInt(compute(node, 'left')) || 0);\n\n\t\t\t\tif (!dojo.lang.inArray(['absolute', 'relative'], pos)) {\n\t\t\t\t\tvar ret = dojo.html.abs(innerNode, true);\n\t\t\t\t\tdojo.html.setStyleAttributes(innerNode, \"position:absolute;top:\"+ret.y+\"px;left:\"+ret.x+\"px;\");\n\t\t\t\t\ttop = ret.y;\n\t\t\t\t\tleft = ret.x;\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tinit();\n\t\t\n\t\tvar anim = dojo.lfx.propertyAnimation(node,\n\t\t\t{\t\"top\": { start: top, end: (coords.top||0) },\n\t\t\t\t\"left\": { start: left, end: (coords.left||0)  }\n\t\t\t},\n\t\t\tduration,\n\t\t\teasing,\n\t\t\t{ \"beforeBegin\": init }\n\t\t);\n\n\t\tif(callback){\n\t\t\tanim.connect(\"onEnd\", function(){ callback(nodes, anim); });\n\t\t}\n\n\t\tanims.push(anim);\n\t});\n\t\n\treturn dojo.lfx.combine(anims); "}}},"dojo.lfx.html.slideBy":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"coords":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tvar compute = dojo.html.getComputedStyle;\n\n\tif(dojo.lang.isArray(coords)){\n\t\tdojo.deprecated('dojo.lfx.html.slideBy(node, array)', 'use dojo.lfx.html.slideBy(node, {top: value, left: value});', '0.5');\n\t\tcoords = { top: coords[0], left: coords[1] };\n\t}\n\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar top = null;\n\t\tvar left = null;\n\t\t\n\t\tvar init = (function(){\n\t\t\tvar innerNode = node;\n\t\t\treturn function(){\n\t\t\t\tvar pos = compute(innerNode, 'position');\n\t\t\t\ttop = (pos == 'absolute' ? node.offsetTop : parseInt(compute(node, 'top')) || 0);\n\t\t\t\tleft = (pos == 'absolute' ? node.offsetLeft : parseInt(compute(node, 'left')) || 0);\n\n\t\t\t\tif (!dojo.lang.inArray(['absolute', 'relative'], pos)) {\n\t\t\t\t\tvar ret = dojo.html.abs(innerNode, true);\n\t\t\t\t\tdojo.html.setStyleAttributes(innerNode, \"position:absolute;top:\"+ret.y+\"px;left:\"+ret.x+\"px;\");\n\t\t\t\t\ttop = ret.y;\n\t\t\t\t\tleft = ret.x;\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tinit();\n\t\t\n\t\tvar anim = dojo.lfx.propertyAnimation(node,\n\t\t\t{\n\t\t\t\t\"top\": { start: top, end: top+(coords.top||0) },\n\t\t\t\t\"left\": { start: left, end: left+(coords.left||0) }\n\t\t\t},\n\t\t\tduration,\n\t\t\teasing).connect(\"beforeBegin\", init);\n\n\t\tif(callback){\n\t\t\tanim.connect(\"onEnd\", function(){ callback(nodes, anim); });\n\t\t}\n\n\t\tanims.push(anim);\n\t});\n\n\treturn dojo.lfx.combine(anims); "}}},"dojo.lfx.html.explode":{"_":{"meta":{"summary":"","parameters":{"start":{"type":""},"endNode":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tvar h = dojo.html;\n\tstart = dojo.byId(start);\n\tendNode = dojo.byId(endNode);\n\tvar startCoords = h.toCoordinateObject(start, true);\n\tvar outline = document.createElement(\"div\");\n\th.copyStyle(outline, endNode);\n\twith(outline.style){\n\t\tposition = \"absolute\";\n\t\tdisplay = \"none\";\n\t\t\/\/ border = \"1px solid black\";\n\t}\n\tdojo.body().appendChild(outline);\n\n\twith(endNode.style){\n\t\tvisibility = \"hidden\";\n\t\tdisplay = \"block\";\n\t}\n\tvar endCoords = h.toCoordinateObject(endNode, true);\n\toutline.style.backgroundColor = h.getStyle(endNode, \"background-color\").toLowerCase();\n\twith(endNode.style){\n\t\tdisplay = \"none\";\n\t\tvisibility = \"visible\";\n\t}\n\n\tvar props = { opacity: { start: 0.5, end: 1.0 } };\n\tdojo.lang.forEach([\"height\", \"width\", \"top\", \"left\"], function(type){\n\t\tprops[type] = { start: startCoords[type], end: endCoords[type] }\n\t});\n\t\n\tvar anim = new dojo.lfx.propertyAnimation(outline, \n\t\tprops,\n\t\tduration,\n\t\teasing,\n\t\t{\n\t\t\t\"beforeBegin\": function(){\n\t\t\t\th.setDisplay(outline, \"block\");\n\t\t\t},\n\t\t\t\"onEnd\": function(){\n\t\t\t\th.setDisplay(endNode, \"block\");\n\t\t\t\toutline.parentNode.removeChild(outline);\n\t\t\t}\n\t\t}\n\t);\n\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){ callback(endNode, anim); });\n\t}\n\treturn anim;"}}},"dojo.lfx.html.implode":{"_":{"meta":{"summary":"","parameters":{"startNode":{"type":""},"end":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tvar h = dojo.html;\n\tstartNode = dojo.byId(startNode);\n\tend = dojo.byId(end);\n\tvar startCoords = dojo.html.toCoordinateObject(startNode, true);\n\tvar endCoords = dojo.html.toCoordinateObject(end, true);\n\n\tvar outline = document.createElement(\"div\");\n\tdojo.html.copyStyle(outline, startNode);\n\tdojo.html.setOpacity(outline, 0.3);\n\twith(outline.style){\n\t\tposition = \"absolute\";\n\t\tdisplay = \"none\";\n\t\tbackgroundColor = h.getStyle(startNode, \"background-color\").toLowerCase();\n\t}\n\tdojo.body().appendChild(outline);\n\n\tvar props = { opacity: { start: 1.0, end: 0.5 } };\n\tdojo.lang.forEach([\"height\", \"width\", \"top\", \"left\"], function(type){\n\t\tprops[type] = { start: startCoords[type], end: endCoords[type] }\n\t});\n\t\n\tvar anim = new dojo.lfx.propertyAnimation(outline,\n\t\tprops,\n\t\tduration,\n\t\teasing,\n\t\t{\n\t\t\t\"beforeBegin\": function(){\n\t\t\t\tdojo.html.hide(startNode);\n\t\t\t\tdojo.html.show(outline);\n\t\t\t},\n\t\t\t\"onEnd\": function(){\n\t\t\t\toutline.parentNode.removeChild(outline);\n\t\t\t}\n\t\t}\n\t);\n\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){ callback(startNode, anim); });\n\t}\n\treturn anim;"}}},"dojo.lfx.html.highlight":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"startColor":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar color = dojo.html.getBackgroundColor(node);\n\t\tvar bg = dojo.html.getStyle(node, \"background-color\").toLowerCase();\n\t\tvar bgImage = dojo.html.getStyle(node, \"background-image\");\n\t\tvar wasTransparent = (bg == \"transparent\" || bg == \"rgba(0, 0, 0, 0)\");\n\t\twhile(color.length > 3) { color.pop(); }\n\n\t\tvar rgb = new dojo.gfx.color.Color(startColor);\n\t\tvar endRgb = new dojo.gfx.color.Color(color);\n\n\t\tvar anim = dojo.lfx.propertyAnimation(node, \n\t\t\t{ \"background-color\": { start: rgb, end: endRgb } }, \n\t\t\tduration, \n\t\t\teasing,\n\t\t\t{\n\t\t\t\t\"beforeBegin\": function(){ \n\t\t\t\t\tif(bgImage){\n\t\t\t\t\t\tnode.style.backgroundImage = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\tnode.style.backgroundColor = \"rgb(\" + rgb.toRgb().join(\",\") + \")\";\n\t\t\t\t},\n\t\t\t\t\"onEnd\": function(){ \n\t\t\t\t\tif(bgImage){\n\t\t\t\t\t\tnode.style.backgroundImage = bgImage;\n\t\t\t\t\t}\n\t\t\t\t\tif(wasTransparent){\n\t\t\t\t\t\tnode.style.backgroundColor = \"transparent\";\n\t\t\t\t\t}\n\t\t\t\t\tif(callback){\n\t\t\t\t\t\tcallback(node, anim);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims);"}}},"dojo.lfx.html.unhighlight":{"_":{"meta":{"summary":"","parameters":{"nodes":{"type":""},"endColor":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":"\tnodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar color = new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));\n\t\tvar rgb = new dojo.gfx.color.Color(endColor);\n\n\t\tvar bgImage = dojo.html.getStyle(node, \"background-image\");\n\t\t\n\t\tvar anim = dojo.lfx.propertyAnimation(node, \n\t\t\t{ \"background-color\": { start: color, end: rgb } },\n\t\t\tduration, \n\t\t\teasing,\n\t\t\t{\n\t\t\t\t\"beforeBegin\": function(){ \n\t\t\t\t\tif(bgImage){\n\t\t\t\t\t\tnode.style.backgroundImage = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\tnode.style.backgroundColor = \"rgb(\" + color.toRgb().join(\",\") + \")\";\n\t\t\t\t},\n\t\t\t\t\"onEnd\": function(){ \n\t\t\t\t\tif(callback){\n\t\t\t\t\t\tcallback(node, anim);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims);"}}}}}},"dojo.lfx.toggle":{"meta":{"requires":{"common":["dojo.lfx.*"]}}}}