{"dojo.lfx.Animation":{"meta":{"requires":{"common":["dojo.lang.func"]},"functions":{"dojo.lfx.Line":{"meta":{"summary":"dojo.lfx.Line is the object used to generate values from a start value to an end value","parameters":{"start":{"type":"int"},"end":{"type":"int"}},"src":" this.start = start;\n\tthis.end = end;\n\tif(dojo.lang.isArray(start)){\n\t\t\/* start: Array\n\t\t   end: Array\n\t\t   pId: a *\/\n\t\tvar diff = [];\n\t\tdojo.lang.forEach(this.start, function(s,i){\n\t\t\tdiff[i] = this.end[i] - s;\n\t\t}, this);\n\t\tthis.getValue = function(\/*float*\/ n){\n\t\t\tvar res = [];\n\t\t\tdojo.lang.forEach(this.start, function(s, i){\n\t\t\t\tres[i] = (diff[i] * n) + s;\n\t\t\t}, this);\n\t\t\treturn res; \/\/ Array\n\t\t}\n\t}else{\n\t\tvar diff = end - start;\n\t\tthis.getValue = function(\/*float*\/ n){\n\t\t\t\/\/\tsummary: returns the point on the line\n\t\t\t\/\/\tn: a floating point number greater than 0 and less than 1\n\t\t\treturn (diff * n) + this.start; \/\/ Decimal\n\t\t}\n\t}","instance_variables":["start","end","getValue"],"returns":"mixed"}},"dojo.lfx.Line.getValue":{"meta":{"summary":"returns the point on the line","parameters":{"n":{"type":"float"}},"src":" \t\treturn (diff * n) + this.start; \/\/ Decimal","returns":"Decimal","instance":"dojo.lfx.Line"},"extra":{"parameters":{"n":{"type":"a","summary":"floating point number greater than 0 and less than 1"}}}},"dojo.lfx.easeDefault":{"meta":{"summary":"Returns the point for point n on a sin wave.","parameters":{"n":{"type":"Decimal?"}},"src":" if(dojo.render.html.khtml){\n\t\t\/\/ the cool kids are obviously not using konqueror...\n\t\t\/\/ found a very wierd bug in floats constants, 1.5 evals as 1\n\t\t\/\/ seems somebody mixed up ints and floats in 3.5.4 ??\n\t\t\/\/ FIXME: investigate more and post a KDE bug (Fredrik)\n\t\treturn (parseFloat(\"0.5\")+((Math.sin( (n+parseFloat(\"1.5\")) * Math.PI))\/2));\n\t}else{\n\t\treturn (0.5+((Math.sin( (n+1.5) * Math.PI))\/2));\n\t}"}},"dojo.lfx.easeIn":{"meta":{"summary":"returns the point on an easing curve","parameters":{"n":{"type":"Decimal?"}},"src":" return Math.pow(n, 3);"},"extra":{"parameters":{"n":{"type":"a","summary":"floating point number greater than 0 and less than 1"}}}},"dojo.lfx.easeOut":{"meta":{"summary":"returns the point on the line","parameters":{"n":{"type":"Decimal?"}},"src":" return ( 1 - Math.pow(1 - n, 3) );"},"extra":{"parameters":{"n":{"type":"a","summary":"floating point number greater than 0 and less than 1"}}}},"dojo.lfx.easeInOut":{"meta":{"summary":"returns the point on the line","parameters":{"n":{"type":"Decimal?"}},"src":" return ( (3 * Math.pow(n, 2)) - (2 * Math.pow(n, 3)) );"},"extra":{"parameters":{"n":{"type":"a","summary":"floating point number greater than 0 and less than 1"}}}},"dojo.lfx.IAnimation":{"meta":{"summary":"dojo.lfx.IAnimation is an interface that implements commonly used functions of animation objects","src":"\t\/\/ summary: dojo.lfx.IAnimation is an interface that implements\n\t\/\/\t\t\tcommonly used functions of animation objects","prototype_variables":["curve","duration","easing","repeatCount","rate","handler","beforeBegin","onBegin","onAnimate","onEnd","onPlay","onPause","onStop","play","pause","stop","_active","_paused"],"instance_variables":["repeatCount"]}},"dojo.lfx.Animation":{"meta":{"summary":"a generic animation object that fires callbacks into it's handlers object at various states","parameters":{"handlers":{"type":"Object"},"duration":{"type":"int"},"curve":{"type":"dojo.lfx.Line"},"easing":{"type":"function"},"repeatCount":{"type":"int"},"rate":{"type":"int"}},"src":" dojo.lfx.IAnimation.call(this);\n\tif(dojo.lang.isNumber(handlers)||(!handlers && duration.getValue)){\n\t\t\/\/ no handlers argument:\n\t\trate = repeatCount;\n\t\trepeatCount = easing;\n\t\teasing = curve;\n\t\tcurve = duration;\n\t\tduration = handlers;\n\t\thandlers = null;\n\t}else if(handlers.getValue||dojo.lang.isArray(handlers)){\n\t\t\/\/ no handlers or duration:\n\t\trate = easing;\n\t\trepeatCount = curve;\n\t\teasing = duration;\n\t\tcurve = handlers;\n\t\tduration = null;\n\t\thandlers = null;\n\t}\n\tif(dojo.lang.isArray(curve)){\n\t\t\/* curve: Array\n\t\t   pId: a *\/\n\t\tthis.curve = new dojo.lfx.Line(curve[0], curve[1]);\n\t}else{\n\t\tthis.curve = curve;\n\t}\n\tif(duration != null && duration > 0){ this.duration = duration; }\n\tif(repeatCount){ this.repeatCount = repeatCount; }\n\tif(rate){ this.rate = rate; }\n\tif(handlers){\n\t\tdojo.lang.forEach([\n\t\t\t\t\"handler\", \"beforeBegin\", \"onBegin\", \n\t\t\t\t\"onEnd\", \"onPlay\", \"onStop\", \"onAnimate\"\n\t\t\t], function(item){\n\t\t\t\tif(handlers[item]){\n\t\t\t\t\tthis.connect(item, handlers[item]);\n\t\t\t\t}\n\t\t\t}, this);\n\t}\n\tif(easing && dojo.lang.isFunction(easing)){\n\t\tthis.easing=easing;\n\t}","instance_variables":["curve","duration","repeatCount","rate","easing","_active","_paused","_percent","_startTime","_endTime","_startRepeatCount","_timer"],"call_chain":["dojo.lfx.IAnimation"],"prototype_chain":["dojo.lfx.IAnimation"],"prototype_variables":["_startTime","_endTime","_timer","_percent","_startRepeatCount"]},"extra":{"parameters":{"handlers":{"type":"handler","summary":"Function?, onstart: Function?, onstop: Function?, onanimate: Function? }"}}}},"dojo.lfx.Combine":{"meta":{"summary":"An animation object to play animations passed to it at the same time.","parameters":{"animations":{"type":"dojo.lfx.IAnimation..."}},"src":" dojo.lfx.IAnimation.call(this);\n\tthis._anims = [];\n\tthis._animsEnded = 0;\n\tvar anims = arguments;\n\tif(anims.length == 1 && (dojo.lang.isArray(anims[0]) || dojo.lang.isArrayLike(anims[0]))){\n\t\t\/* animations: dojo.lfx.IAnimation[]\n\t\t   pId: a *\/\n\t\tanims = anims[0];\n\t}\n\tdojo.lang.forEach(anims, function(anim){\n\t\tthis._anims.push(anim);\n\t\tanim.connect(\"onEnd\", dojo.lang.hitch(this, \"_onAnimsEnded\"));\n\t}, this);","instance_variables":["_anims","_animsEnded"],"call_chain":["dojo.lfx.IAnimation"],"prototype_chain":["dojo.lfx.IAnimation"],"prototype_variables":["_animsEnded"]}},"dojo.lfx.Chain":{"meta":{"summary":"An animation object to play animations passed to it one after another.","parameters":{"animations":{"type":"dojo.lfx.IAnimation..."}},"src":" dojo.lfx.IAnimation.call(this);\n\tthis._anims = [];\n\tthis._currAnim = -1;\n\tvar anims = arguments;\n\tif(anims.length == 1 && (dojo.lang.isArray(anims[0]) || dojo.lang.isArrayLike(anims[0]))){\n\t\t\/* animations: dojo.lfx.IAnimation[]\n\t\t   pId: a *\/\n\t\tanims = anims[0];\n\t}\n\tvar _this = this;\n\tdojo.lang.forEach(anims, function(anim, i, anims_arr){\n\t\tthis._anims.push(anim);\n\t\tif(i < anims_arr.length - 1){\n\t\t\tanim.connect(\"onEnd\", dojo.lang.hitch(this, \"_playNext\") );\n\t\t}else{\n\t\t\tanim.connect(\"onEnd\", dojo.lang.hitch(this, function(){ this.fire(\"onEnd\"); }) );\n\t\t}\n\t}, this);","instance_variables":["_anims","_currAnim","_anims.length"],"call_chain":["dojo.lfx.IAnimation"],"prototype_chain":["dojo.lfx.IAnimation"],"prototype_variables":["_currAnim"]}},"dojo.lfx.combine":{"meta":{"summary":"Convenience function. Returns a dojo.lfx.Combine created using the animations passed in.","parameters":{"animations":{"type":"dojo.lfx.IAnimation..."}},"src":" var anims = arguments;\n\tif(dojo.lang.isArray(arguments[0])){\n\t\t\/* animations: dojo.lfx.IAnimation[]\n\t\t   pId: a *\/\n\t\tanims = arguments[0];\n\t}\n\tif(anims.length == 1){ return anims[0]; }\n\treturn new dojo.lfx.Combine(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"}},"dojo.lfx.chain":{"meta":{"summary":"Convenience function. Returns a dojo.lfx.Chain created using the animations passed in.","parameters":{"animations":{"type":"dojo.lfx.IAnimation..."}},"src":" var anims = arguments;\n\tif(dojo.lang.isArray(arguments[0])){\n\t\t\/* animations: dojo.lfx.IAnimation[]\n\t\t   pId: a *\/\n\t\tanims = arguments[0];\n\t}\n\tif(anims.length == 1){ return anims[0]; }\n\treturn new dojo.lfx.Chain(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"}},"dojo.lfx.IAnimation.connect":{"meta":{"summary":"Convenience function. Quickly connect to an event of this object and save the old functions connected to it.","parameters":{"evt":{"type":"Event"},"scope":{"type":"Object"},"newFunc":{"type":"Function"}},"src":" \tif(!newFunc){\n\t\t\t\/* scope: Function\n\t\t\t   newFunc: null\n\t\t\t   pId: f *\/\n\t\t\tnewFunc = scope;\n\t\t\tscope = this;\n\t\t}\n\t\tnewFunc = dojo.lang.hitch(scope, newFunc);\n\t\tvar oldFunc = this[evt]||function(){};\n\t\tthis[evt] = function(){\n\t\t\tvar ret = oldFunc.apply(this, arguments);\n\t\t\tnewFunc.apply(this, arguments);\n\t\t\treturn ret;\n\t\t}\n\t\treturn this; \/\/ dojo.lfx.IAnimation","returns":"dojo.lfx.IAnimation","call_chain":["oldFunc","newFunc"],"prototype":"dojo.lfx.IAnimation"},"extra":{"parameters":{"evt":{"type":"The","summary":"name of the event to connect to."},"scope":{"type":"the","summary":"scope in which to run newFunc."},"newFunc":{"type":"the","summary":"function to run when evt is fired."}}}},"dojo.lfx.IAnimation.fire":{"meta":{"summary":"Convenience function. Fire event \"evt\" and pass it the arguments specified in \"args\".","parameters":{"evt":{"type":"Event"},"args":{"type":"Array"}},"src":" \tif(this[evt]){\n\t\t\tthis[evt].apply(this, (args||[]));\n\t\t}\n\t\treturn this; \/\/ dojo.lfx.IAnimation","returns":"dojo.lfx.IAnimation","prototype":"dojo.lfx.IAnimation"},"extra":{"parameters":{"evt":{"type":"The","summary":"event to fire."},"args":{"type":"The","summary":"arguments to pass to the event."}}}},"dojo.lfx.IAnimation.repeat":{"meta":{"summary":"Set the repeat count of this object.","parameters":{"count":{"type":"int"}},"src":" \tthis.repeatCount = count;\n\t\treturn this; \/\/ dojo.lfx.IAnimation","returns":"dojo.lfx.IAnimation","prototype":"dojo.lfx.IAnimation"},"extra":{"parameters":{"count":{"type":"How","summary":"many times to repeat the animation."}}}},"dojo.lfx.Animation.play":{"meta":{"summary":"Start the animation.","parameters":{"delay":{"type":"int?"},"gotoStart":{"type":"bool?"}},"src":" \tif(gotoStart){\n\t\t\tclearTimeout(this._timer);\n\t\t\tthis._active = false;\n\t\t\tthis._paused = false;\n\t\t\tthis._percent = 0;\n\t\t}else if(this._active && !this._paused){\n\t\t\treturn this; \/\/ dojo.lfx.Animation\n\t\t}\n\t\tthis.fire(\"handler\", [\"beforeBegin\"]);\n\t\tthis.fire(\"beforeBegin\");\n\t\tif(delay > 0){\n\t\t\tsetTimeout(dojo.lang.hitch(this, function(){ this.play(null, gotoStart); }), delay);\n\t\t\treturn this; \/\/ dojo.lfx.Animation\n\t\t}\n\t\tthis._startTime = new Date().valueOf();\n\t\tif(this._paused){\n\t\t\tthis._startTime -= (this.duration * this._percent \/ 100);\n\t\t}\n\t\tthis._endTime = this._startTime + this.duration;\n\t\tthis._active = true;\n\t\tthis._paused = false;\n\t\tvar step = this._percent \/ 100;\n\t\tvar value = this.curve.getValue(step);\n\t\tif(this._percent == 0 ){\n\t\t\tif(!this._startRepeatCount){\n\t\t\t\tthis._startRepeatCount = this.repeatCount;\n\t\t\t}\n\t\t\tthis.fire(\"handler\", [\"begin\", value]);\n\t\t\tthis.fire(\"onBegin\", [value]);\n\t\t}\n\t\tthis.fire(\"handler\", [\"play\", value]);\n\t\tthis.fire(\"onPlay\", [value]);\n\t\tthis._cycle();\n\t\treturn this; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation","prototype":"dojo.lfx.Animation"},"extra":{"parameters":{"delay":{"type":"How","summary":"many milliseconds to delay before starting."},"gotoStart":{"type":"If","summary":"true, starts the animation from the beginning; otherwise, starts it from its current position."}}}},"dojo.lfx.Animation.pause":{"meta":{"summary":"Pauses a running animation.","src":" \tclearTimeout(this._timer);\n\t\tif(!this._active){ return this; \/*dojo.lfx.Animation*\/}\n\t\tthis._paused = true;\n\t\tvar value = this.curve.getValue(this._percent \/ 100);\n\t\tthis.fire(\"handler\", [\"pause\", value]);\n\t\tthis.fire(\"onPause\", [value]);\n\t\treturn this; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation","prototype":"dojo.lfx.Animation"}},"dojo.lfx.Animation.gotoPercent":{"meta":{"summary":"Sets the progress of the animation.","parameters":{"pct":{"type":"Decimal"},"andPlay":{"type":"bool?"}},"src":" \tclearTimeout(this._timer);\n\t\tthis._active = true;\n\t\tthis._paused = true;\n\t\tthis._percent = pct;\n\t\tif(andPlay){ this.play(); }\n\t\treturn this; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation","prototype":"dojo.lfx.Animation"},"extra":{"parameters":{"pct":{"type":"A","summary":"percentage in decimal notation (between and including 0.0 and 1.0)."},"andPlay":{"type":"If","summary":"true, play the animation after setting the progress."}}}},"dojo.lfx.Animation.stop":{"meta":{"summary":"Stops a running animation.","parameters":{"gotoEnd":{"type":"bool?"}},"src":" \tclearTimeout(this._timer);\n\t\tvar step = this._percent \/ 100;\n\t\tif(gotoEnd){\n\t\t\tstep = 1;\n\t\t}\n\t\tvar value = this.curve.getValue(step);\n\t\tthis.fire(\"handler\", [\"stop\", value]);\n\t\tthis.fire(\"onStop\", [value]);\n\t\tthis._active = false;\n\t\tthis._paused = false;\n\t\treturn this; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation","prototype":"dojo.lfx.Animation"},"extra":{"parameters":{"gotoEnd":{"type":"If","summary":"true, the animation will end."}}}},"dojo.lfx.Animation.status":{"meta":{"summary":"Returns a string representation of the status of the animation.","src":" \tif(this._active){\n\t\t\treturn this._paused ? \"paused\" : \"playing\"; \/\/ String\n\t\t}else{\n\t\t\treturn \"stopped\"; \/\/ String\n\t\t}\n\t\treturn this;","returns":"String","prototype":"dojo.lfx.Animation"}},"dojo.lfx.Animation._cycle":{"meta":{"summary":"","src":" \tclearTimeout(this._timer);\n\t\tif(this._active){\n\t\t\tvar curr = new Date().valueOf();\n\t\t\tvar step = (curr - this._startTime) \/ (this._endTime - this._startTime);\n\t\t\tif(step >= 1){\n\t\t\t\tstep = 1;\n\t\t\t\tthis._percent = 100;\n\t\t\t}else{\n\t\t\t\tthis._percent = step * 100;\n\t\t\t}\n\t\t\t\/\/ Perform easing\n\t\t\tif((this.easing)&&(dojo.lang.isFunction(this.easing))){\n\t\t\t\tstep = this.easing(step);\n\t\t\t}\n\t\t\tvar value = this.curve.getValue(step);\n\t\t\tthis.fire(\"handler\", [\"animate\", value]);\n\t\t\tthis.fire(\"onAnimate\", [value]);\n\t\t\tif( step < 1 ){\n\t\t\t\tthis._timer = setTimeout(dojo.lang.hitch(this, \"_cycle\"), this.rate);\n\t\t\t}else{\n\t\t\t\tthis._active = false;\n\t\t\t\tthis.fire(\"handler\", [\"end\"]);\n\t\t\t\tthis.fire(\"onEnd\");\n\t\t\t\tif(this.repeatCount > 0){\n\t\t\t\t\tthis.repeatCount--;\n\t\t\t\t\tthis.play(null, true);\n\t\t\t\t}else if(this.repeatCount == -1){\n\t\t\t\t\tthis.play(null, true);\n\t\t\t\t}else{\n\t\t\t\t\tif(this._startRepeatCount){\n\t\t\t\t\t\tthis.repeatCount = this._startRepeatCount;\n\t\t\t\t\t\tthis._startRepeatCount = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation","prototype":"dojo.lfx.Animation"}},"dojo.lfx.Combine.play":{"meta":{"summary":"Start the animations.","parameters":{"delay":{"type":"int?"},"gotoStart":{"type":"bool?"}},"src":" \tif( !this._anims.length ){ return this; \/*dojo.lfx.Combine*\/}\n\t\tthis.fire(\"beforeBegin\");\n\t\tif(delay > 0){\n\t\t\tsetTimeout(dojo.lang.hitch(this, function(){ this.play(null, gotoStart); }), delay);\n\t\t\treturn this; \/\/ dojo.lfx.Combine\n\t\t}\n\t\tif(gotoStart || this._anims[0].percent == 0){\n\t\t\tthis.fire(\"onBegin\");\n\t\t}\n\t\tthis.fire(\"onPlay\");\n\t\tthis._animsCall(\"play\", null, gotoStart);\n\t\treturn this; \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine","prototype":"dojo.lfx.Combine"},"extra":{"parameters":{"delay":{"type":"How","summary":"many milliseconds to delay before starting."},"gotoStart":{"type":"If","summary":"true, starts the animations from the beginning; otherwise, starts them from their current position."}}}},"dojo.lfx.Combine.pause":{"meta":{"summary":"Pauses the running animations.","src":" \tthis.fire(\"onPause\");\n\t\tthis._animsCall(\"pause\"); \n\t\treturn this; \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine","prototype":"dojo.lfx.Combine"}},"dojo.lfx.Combine.stop":{"meta":{"summary":"Stops the running animations.","parameters":{"gotoEnd":{"type":"bool?"}},"src":" \tthis.fire(\"onStop\");\n\t\tthis._animsCall(\"stop\", gotoEnd);\n\t\treturn this; \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine","prototype":"dojo.lfx.Combine"},"extra":{"parameters":{"gotoEnd":{"type":"If","summary":"true, the animations will end."}}}},"dojo.lfx.Combine._onAnimsEnded":{"meta":{"summary":"","src":" \tthis._animsEnded++;\n\t\tif(this._animsEnded >= this._anims.length){\n\t\t\tthis.fire(\"onEnd\");\n\t\t}\n\t\treturn this; \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine","prototype":"dojo.lfx.Combine"}},"dojo.lfx.Combine._animsCall":{"meta":{"summary":"","parameters":{"funcName":{"type":"String"}},"src":" \tvar args = [];\n\t\tif(arguments.length > 1){\n\t\t\tfor(var i = 1 ; i < arguments.length ; i++){\n\t\t\t\targs.push(arguments[i]);\n\t\t\t}\n\t\t}\n\t\tvar _this = this;\n\t\tdojo.lang.forEach(this._anims, function(anim){\n\t\t\tanim[funcName](args);\n\t\t}, _this);\n\t\treturn this; \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine","prototype":"dojo.lfx.Combine"}},"dojo.lfx.Chain.play":{"meta":{"summary":"Start the animation sequence.","parameters":{"delay":{"type":"int?"},"gotoStart":{"type":"bool?"}},"src":" \tif( !this._anims.length ) { return this; \/*dojo.lfx.Chain*\/}\n\t\tif( gotoStart || !this._anims[this._currAnim] ) {\n\t\t\tthis._currAnim = 0;\n\t\t}\n\t\tvar currentAnimation = this._anims[this._currAnim];\n\t\tthis.fire(\"beforeBegin\");\n\t\tif(delay > 0){\n\t\t\tsetTimeout(dojo.lang.hitch(this, function(){ this.play(null, gotoStart); }), delay);\n\t\t\treturn this; \/\/ dojo.lfx.Chain\n\t\t}\n\t\tif(currentAnimation){\n\t\t\tif(this._currAnim == 0){\n\t\t\t\tthis.fire(\"handler\", [\"begin\", this._currAnim]);\n\t\t\t\tthis.fire(\"onBegin\", [this._currAnim]);\n\t\t\t}\n\t\t\tthis.fire(\"onPlay\", [this._currAnim]);\n\t\t\tcurrentAnimation.play(null, gotoStart);\n\t\t}\n\t\treturn this; \/\/ dojo.lfx.Chain","returns":"dojo.lfx.Chain","prototype":"dojo.lfx.Chain"},"extra":{"parameters":{"delay":{"type":"How","summary":"many milliseconds to delay before starting."},"gotoStart":{"type":"If","summary":"true, starts the sequence from the beginning; otherwise, starts it from its current position."}}}},"dojo.lfx.Chain.pause":{"meta":{"summary":"Pauses the running animation sequence.","src":" \tif( this._anims[this._currAnim] ) {\n\t\t\tthis._anims[this._currAnim].pause();\n\t\t\tthis.fire(\"onPause\", [this._currAnim]);\n\t\t}\n\t\treturn this; \/\/ dojo.lfx.Chain","returns":"dojo.lfx.Chain","prototype":"dojo.lfx.Chain"}},"dojo.lfx.Chain.playPause":{"meta":{"summary":"If the animation sequence is playing, pause it; otherwise, play it.","src":" \tif(this._anims.length == 0){ return this; }\n\t\tif(this._currAnim == -1){ this._currAnim = 0; }\n\t\tvar currAnim = this._anims[this._currAnim];\n\t\tif( currAnim ) {\n\t\t\tif( !currAnim._active || currAnim._paused ) {\n\t\t\t\tthis.play();\n\t\t\t} else {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t}\n\t\treturn this; \/\/ dojo.lfx.Chain","returns":"dojo.lfx.Chain","prototype":"dojo.lfx.Chain"}},"dojo.lfx.Chain.stop":{"meta":{"summary":"Stops the running animations.","src":" \tvar currAnim = this._anims[this._currAnim];\n\t\tif(currAnim){\n\t\t\tcurrAnim.stop();\n\t\t\tthis.fire(\"onStop\", [this._currAnim]);\n\t\t}\n\t\treturn currAnim; \/\/ dojo.lfx.IAnimation","returns":"dojo.lfx.IAnimation","prototype":"dojo.lfx.Chain"}},"dojo.lfx.Chain._playNext":{"meta":{"summary":"","src":" \tif( this._currAnim == -1 || this._anims.length == 0 ) { return this; }\n\t\tthis._currAnim++;\n\t\tif( this._anims[this._currAnim] ){\n\t\t\tthis._anims[this._currAnim].play(null, true);\n\t\t}\n\t\treturn this; \/\/ dojo.lfx.Chain","returns":"dojo.lfx.Chain","prototype":"dojo.lfx.Chain"}}}}},"dojo.lfx._":{"meta":{"requires":{"browser":["dojo.lfx.html"],"dashboard":["dojo.lfx.html"]}}},"dojo.lfx.extras":{"meta":{"requires":{"common":["dojo.lfx.html","dojo.lfx.Animation"]},"functions":{"dojo.lfx.html.fadeWipeIn":{"meta":{"summary":"Returns an animation that will fade \"nodes\" from its current opacity to fully opaque while wiping it in.","parameters":{"nodes":{"type":"DOMNode[]"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anim = dojo.lfx.combine(\n\t\tdojo.lfx.fadeIn(nodes, duration, easing),\n\t\tdojo.lfx.wipeIn(nodes, duration, easing)\n\t);\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){\n\t\t\tcallback(nodes, anim);\n\t\t});\n\t}\n\treturn anim; \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.fadeWipeOut":{"meta":{"summary":"Returns an animation that will fade \"nodes\" from its current opacity to fully transparent while wiping it out.","parameters":{"nodes":{"type":"DOMNode[]"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anim = dojo.lfx.combine(\n\t\tdojo.lfx.fadeOut(nodes, duration, easing),\n\t\tdojo.lfx.wipeOut(nodes, duration, easing)\n\t);\n\tif(callback){\n\t\t\/* callback: Function\n\t\t   pId: f *\/\n\t\tanim.connect(\"onEnd\", function(){\n\t\t\tcallback(nodes, anim);\n\t\t});\n\t}\n\treturn anim; \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.scale":{"meta":{"summary":"Returns an animation that will scale \"nodes\" by \"percentage\".","parameters":{"nodes":{"type":"DOMNode[]"},"percentage":{"type":"int"},"scaleContent":{"type":"bool?"},"fromCenter":{"type":"bool?"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar outer = dojo.html.getMarginBox(node);\n\t\tvar actualPct = percentage\/100.0;\n\t\tvar props = [\n\t\t\t{\tproperty: \"width\",\n\t\t\t\tstart: outer.width,\n\t\t\t\tend: outer.width * actualPct\n\t\t\t},\n\t\t\t{\tproperty: \"height\",\n\t\t\t\tstart: outer.height,\n\t\t\t\tend: outer.height * actualPct\n\t\t\t}];\n\t\tif(scaleContent){\n\t\t\tvar fontSize = dojo.html.getStyle(node, 'font-size');\n\t\t\tvar fontSizeType = null;\n\t\t\tif(!fontSize){\n\t\t\t\tfontSize = parseFloat('100%');\n\t\t\t\tfontSizeType = '%';\n\t\t\t}else{\n\t\t\t\tdojo.lang.some(['em','px','%'], function(item, index, arr){\n\t\t\t\t\tif(fontSize.indexOf(item)>0){\n\t\t\t\t\t\tfontSize = parseFloat(fontSize);\n\t\t\t\t\t\tfontSizeType = item;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tprops.push({\n\t\t\t\tproperty: \"font-size\",\n\t\t\t\tstart: fontSize,\n\t\t\t\tend: fontSize * actualPct,\n\t\t\t\tunits: fontSizeType });\n\t\t}\n\t\tif(fromCenter){\n\t\t\tvar positioning = dojo.html.getStyle(node, \"position\");\n\t\t\tvar originalTop = node.offsetTop;\n\t\t\tvar originalLeft = node.offsetLeft;\n\t\t\tvar endTop = ((outer.height * actualPct) - outer.height)\/2;\n\t\t\tvar endLeft = ((outer.width * actualPct) - outer.width)\/2;\n\t\t\tprops.push({\n\t\t\t\tproperty: \"top\",\n\t\t\t\tstart: originalTop,\n\t\t\t\tend: (positioning == \"absolute\" ? originalTop - endTop : (-1*endTop))\n\t\t\t});\n\t\t\tprops.push({\n\t\t\t\tproperty: \"left\",\n\t\t\t\tstart: originalLeft,\n\t\t\t\tend: (positioning == \"absolute\" ? originalLeft - endLeft : (-1*endLeft))\n\t\t\t});\n\t\t}\n\t\tvar anim = dojo.lfx.propertyAnimation(node, props, duration, easing);\n\t\tif(callback){\n\t\t\tanim.connect(\"onEnd\", function(){\n\t\t\t\tcallback(node, anim);\n\t\t\t});\n\t\t}\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"percentage":{"type":"A","summary":"whole number representing the percentage to scale \"nodes\"."},"scaleContent":{"type":"If","summary":"true, will scale the contents of \"nodes\"."},"fromCenter":{"type":"If","summary":"true, will scale \"nodes\" from its center rather than the lower right corner."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}}}}},"dojo.lfx.html":{"meta":{"requires":{"common":["dojo.gfx.color","dojo.lfx.Animation","dojo.lang.array","dojo.html.display","dojo.html.color","dojo.html.layout"]},"functions":{"dojo.lfx.html._byId":{"meta":{"summary":"","parameters":{"nodes":{"type":""}},"src":" if(!nodes){ return []; }\n\tif(dojo.lang.isArrayLike(nodes)){\n\t\tif(!nodes.alreadyChecked){\n\t\t\tvar n = [];\n\t\t\tdojo.lang.forEach(nodes, function(node){\n\t\t\t\tn.push(dojo.byId(node));\n\t\t\t});\n\t\t\tn.alreadyChecked = true;\n\t\t\treturn n;\n\t\t}else{\n\t\t\treturn nodes;\n\t\t}\n\t}else{\n\t\tvar n = [];\n\t\tn.push(dojo.byId(nodes));\n\t\tn.alreadyChecked = true;\n\t\treturn n;\n\t}"}},"dojo.lfx.html.propertyAnimation":{"meta":{"summary":"Returns an animation that will transition the properties of \"nodes\" depending how they are defined in \"propertyMap\".","parameters":{"nodes":{"type":"DOMNode[]"},"propertyMap":{"type":"Object[]"},"duration":{"type":"int"},"easing":{"type":"function"},"handlers":{"type":"Object"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar targs = {\n\t\t\"propertyMap\": propertyMap,\n\t\t\"nodes\": nodes,\n\t\t\"duration\": duration,\n\t\t\"easing\": easing||dojo.lfx.easeDefault\n\t};\n\tvar setEmUp = function(args){\n\t\tif(args.nodes.length==1){\n\t\t\t\/\/ FIXME: we're only supporting start-value filling when one node is\n\t\t\t\/\/ passed\n\t\t\tvar pm = args.propertyMap;\n\t\t\tif(!dojo.lang.isArray(args.propertyMap)){\n\t\t\t\t\/\/ it's stupid to have to pack an array with a set of objects\n\t\t\t\t\/\/ when you can just pass in an object list\n\t\t\t\tvar parr = [];\n\t\t\t\tfor(var pname in pm){\n\t\t\t\t\tpm[pname].property = pname;\n\t\t\t\t\tparr.push(pm[pname]);\n\t\t\t\t}\n\t\t\t\tpm = args.propertyMap = parr;\n\t\t\t}\n\t\t\tdojo.lang.forEach(pm, function(prop){\n\t\t\t\tif(dj_undef(\"start\", prop)){\n\t\t\t\t\tif(prop.property != \"opacity\"){\n\t\t\t\t\t\tprop.start = parseInt(dojo.html.getComputedStyle(args.nodes[0], prop.property));\n\t\t\t\t\t}else{\n\t\t\t\t\t\tprop.start = dojo.html.getOpacity(args.nodes[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tvar coordsAsInts = function(coords){\n\t\tvar cints = [];\n\t\tdojo.lang.forEach(coords, function(c){ \n\t\t\tcints.push(Math.round(c));\n\t\t});\n\t\treturn cints;\n\t}\n\tvar setStyle = function(n, style){\n\t\tn = dojo.byId(n);\n\t\tif(!n || !n.style){ return; }\n\t\tfor(var s in style){\n\t\t\ttry{\n\t\t\t\tif(s == \"opacity\"){\n\t\t\t\t\tdojo.html.setOpacity(n, style[s]);\n\t\t\t\t}else{\n\t\t\t\t\t\tn.style[s] = style[s];\n\t\t\t\t}\n\t\t\t}catch(e){ dojo.debug(e); }\n\t\t}\n\t}\n\tvar propLine = function(properties){\n\t\tthis._properties = properties;\n\t\tthis.diffs = new Array(properties.length);\n\t\tdojo.lang.forEach(properties, function(prop, i){\n\t\t\t\/\/ calculate the end - start to optimize a bit\n\t\t\tif(dojo.lang.isFunction(prop.start)){\n\t\t\t\tprop.start = prop.start(prop, i);\n\t\t\t}\n\t\t\tif(dojo.lang.isFunction(prop.end)){\n\t\t\t\tprop.end = prop.end(prop, i);\n\t\t\t}\n\t\t\tif(dojo.lang.isArray(prop.start)){\n\t\t\t\t\/\/ don't loop through the arrays\n\t\t\t\tthis.diffs[i] = null;\n\t\t\t}else if(prop.start instanceof dojo.gfx.color.Color){\n\t\t\t\t\/\/ save these so we don't have to call toRgb() every getValue() call\n\t\t\t\tprop.startRgb = prop.start.toRgb();\n\t\t\t\tprop.endRgb = prop.end.toRgb();\n\t\t\t}else{\n\t\t\t\tthis.diffs[i] = prop.end - prop.start;\n\t\t\t}\n\t\t}, this);\n\t\tthis.getValue = function(n){\n\t\t\tvar ret = {};\n\t\t\tdojo.lang.forEach(this._properties, function(prop, i){\n\t\t\t\tvar value = null;\n\t\t\t\tif(dojo.lang.isArray(prop.start)){\n\t\t\t\t\t\/\/ FIXME: what to do here?\n\t\t\t\t}else if(prop.start instanceof dojo.gfx.color.Color){\n\t\t\t\t\tvalue = (prop.units||\"rgb\") + \"(\";\n\t\t\t\t\tfor(var j = 0 ; j < prop.startRgb.length ; j++){\n\t\t\t\t\t\tvalue += Math.round(((prop.endRgb[j] - prop.startRgb[j]) * n) + prop.startRgb[j]) + (j < prop.startRgb.length - 1 ? \",\" : \"\");\n\t\t\t\t\t}\n\t\t\t\t\tvalue += \")\";\n\t\t\t\t}else{\n\t\t\t\t\tvalue = ((this.diffs[i]) * n) + prop.start + (prop.property != \"opacity\" ? prop.units||\"px\" : \"\");\n\t\t\t\t}\n\t\t\t\tret[dojo.html.toCamelCase(prop.property)] = value;\n\t\t\t}, this);\n\t\t\treturn ret;\n\t\t}\n\t}\n\tvar anim = new dojo.lfx.Animation({\n\t\t\tbeforeBegin: function(){ \n\t\t\t\tsetEmUp(targs); \n\t\t\t\tanim.curve = new propLine(targs.propertyMap);\n\t\t\t},\n\t\t\tonAnimate: function(propValues){\n\t\t\t\tdojo.lang.forEach(targs.nodes, function(node){\n\t\t\t\t\tsetStyle(node, propValues);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\ttargs.duration, \n\t\tnull,\n\t\ttargs.easing\n\t);\n\tif(handlers){\n\t\tfor(var x in handlers){\n\t\t\tif(dojo.lang.isFunction(handlers[x])){\n\t\t\t\tanim.connect(x, anim, handlers[x]);\n\t\t\t}\n\t\t}\n\t}\n\treturn anim; \/\/ dojo.lfx.Animation","instance_variables":["_properties","diffs","getValue"],"returns":"dojo.lfx.Animation"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"propertyMap":{"type":"property","summary":"String, start: Decimal?, end: Decimal?, units: String? } An array of objects defining properties to change."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"handlers":{"type":"handler","summary":"Function?, onstart: Function?, onstop: Function?, onanimate: Function? }"}}}},"dojo.lfx.html.propertyAnimation.getValue":{"meta":{"summary":"","parameters":{"n":{"type":""}},"src":" \t\tvar ret = {};\n\t\t\tdojo.lang.forEach(this._properties, function(prop, i){\n\t\t\t\tvar value = null;\n\t\t\t\tif(dojo.lang.isArray(prop.start)){\n\t\t\t\t\t\/\/ FIXME: what to do here?\n\t\t\t\t}else if(prop.start instanceof dojo.gfx.color.Color){\n\t\t\t\t\tvalue = (prop.units||\"rgb\") + \"(\";\n\t\t\t\t\tfor(var j = 0 ; j < prop.startRgb.length ; j++){\n\t\t\t\t\t\tvalue += Math.round(((prop.endRgb[j] - prop.startRgb[j]) * n) + prop.startRgb[j]) + (j < prop.startRgb.length - 1 ? \",\" : \"\");\n\t\t\t\t\t}\n\t\t\t\t\tvalue += \")\";\n\t\t\t\t}else{\n\t\t\t\t\tvalue = ((this.diffs[i]) * n) + prop.start + (prop.property != \"opacity\" ? prop.units||\"px\" : \"\");\n\t\t\t\t}\n\t\t\t\tret[dojo.html.toCamelCase(prop.property)] = value;\n\t\t\t}, this);\n\t\t\treturn ret;","instance":"dojo.lfx.html.propertyAnimation"}},"dojo.lfx.html._makeFadeable":{"meta":{"summary":"","parameters":{"nodes":{"type":""}},"src":" var makeFade = function(node){\n\t\tif(dojo.render.html.ie){\n\t\t\t\/\/ only set the zoom if the \"tickle\" value would be the same as the\n\t\t\t\/\/ default\n\t\t\tif( (node.style.zoom.length == 0) &&\n\t\t\t\t(dojo.html.getStyle(node, \"zoom\") == \"normal\") ){\n\t\t\t\t\/\/ make sure the node \"hasLayout\"\n\t\t\t\t\/\/ NOTE: this has been tested with larger and smaller user-set text\n\t\t\t\t\/\/ sizes and works fine\n\t\t\t\tnode.style.zoom = \"1\";\n\t\t\t\t\/\/ node.style.zoom = \"normal\";\n\t\t\t}\n\t\t\t\/\/ don't set the width to auto if it didn't already cascade that way.\n\t\t\t\/\/ We don't want to f anyones designs\n\t\t\tif(\t(node.style.width.length == 0) &&\n\t\t\t\t(dojo.html.getStyle(node, \"width\") == \"auto\") ){\n\t\t\t\tnode.style.width = \"auto\";\n\t\t\t}\n\t\t}\n\t}\n\tif(dojo.lang.isArrayLike(nodes)){\n\t\tdojo.lang.forEach(nodes, makeFade);\n\t}else{\n\t\tmakeFade(nodes);\n\t}"}},"dojo.lfx.html.fade":{"meta":{"summary":"Returns an animation that will fade the \"nodes\" from the start to end values passed.","parameters":{"nodes":{"type":"DOMNode[]"},"values":{"type":"Object"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar props = { property: \"opacity\" };\n\tif(!dj_undef(\"start\", values)){\n\t\tprops.start = values.start;\n\t}else{\n\t\tprops.start = function(){ return dojo.html.getOpacity(nodes[0]); };\n\t}\n\tif(!dj_undef(\"end\", values)){\n\t\tprops.end = values.end;\n\t}else{\n\t\tdojo.raise(\"dojo.lfx.html.fade needs an end value\");\n\t}\n\tvar anim = dojo.lfx.propertyAnimation(nodes, [ props ], duration, easing);\n\tanim.connect(\"beforeBegin\", function(){\n\t\tdojo.lfx.html._makeFadeable(nodes);\n\t});\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){ callback(nodes, anim); });\n\t}\n\treturn anim; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"values":{"type":"start","summary":"Decimal?, end: Decimal? }"},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.fadeIn":{"meta":{"summary":"Returns an animation that will fade \"nodes\" from its current opacity to fully opaque.","parameters":{"nodes":{"type":"DOMNode[]"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" return dojo.lfx.html.fade(nodes, { end: 1 }, duration, easing, callback); \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.fadeOut":{"meta":{"summary":"Returns an animation that will fade \"nodes\" from its current opacity to fully transparent.","parameters":{"nodes":{"type":"DOMNode[]"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" return dojo.lfx.html.fade(nodes, { end: 0 }, duration, easing, callback); \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.fadeShow":{"meta":{"summary":"Returns an animation that will fade \"nodes\" from transparent to opaque and shows \"nodes\" at the end if it is hidden.","parameters":{"nodes":{"type":"DOMNode[]"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes=dojo.lfx.html._byId(nodes);\n\tdojo.lang.forEach(nodes, function(node){\n\t\tdojo.html.setOpacity(node, 0.0);\n\t});\n\tvar anim = dojo.lfx.html.fadeIn(nodes, duration, easing, callback);\n\tanim.connect(\"beforeBegin\", function(){ \n\t\tif(dojo.lang.isArrayLike(nodes)){\n\t\t\tdojo.lang.forEach(nodes, dojo.html.show);\n\t\t}else{\n\t\t\tdojo.html.show(nodes);\n\t\t}\n\t});\n\treturn anim; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.fadeHide":{"meta":{"summary":"Returns an animation that will fade \"nodes\" from its current opacity to opaque and hides \"nodes\" at the end.","parameters":{"nodes":{"type":"DOMNode[]"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" var anim = dojo.lfx.html.fadeOut(nodes, duration, easing, function(){\n\t\tif(dojo.lang.isArrayLike(nodes)){\n\t\t\tdojo.lang.forEach(nodes, dojo.html.hide);\n\t\t}else{\n\t\t\tdojo.html.hide(nodes);\n\t\t}\n\t\tif(callback){ callback(nodes, anim); }\n\t});\n\treturn anim; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.wipeIn":{"meta":{"summary":"Returns an animation that will show and wipe in \"nodes\".","parameters":{"nodes":{"type":"DOMNode[]"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar oprop = {  };\t\/\/ old properties of node (before we mucked w\/them)\n\t\t\/\/ get node height, either it's natural height or it's height specified via style or class attributes\n\t\t\/\/ (for FF, the node has to be (temporarily) rendered to measure height)\n\t\t\/\/ TODO: should this offscreen code be part of dojo.html, so that getBorderBox() works on hidden nodes?\n\t\tvar origTop, origLeft, origPosition;\n\t\twith(node.style){\n\t\t\torigTop=top; origLeft=left; origPosition=position;\n\t\t\ttop=\"-9999px\"; left=\"-9999px\"; position=\"absolute\";\n\t\t\tdisplay=\"\";\n\t\t}\n\t\tvar height = dojo.html.getBorderBox(node).height;\n\t\twith(node.style){\n\t\t\ttop=origTop; left=origLeft; position=origPosition;\n\t\t\tdisplay=\"none\";\n\t\t}\n\t\tvar anim = dojo.lfx.propertyAnimation(node,\n\t\t\t{\t\"height\": {\n\t\t\t\t\tstart: 1, \/\/ 0 causes IE to display the whole panel\n\t\t\t\t\tend: function(){ return height; } \n\t\t\t\t}\n\t\t\t}, \n\t\t\tduration, \n\t\t\teasing);\n\t\tanim.connect(\"beforeBegin\", function(){\n\t\t\toprop.overflow = node.style.overflow;\n\t\t\toprop.height = node.style.height;\n\t\t\twith(node.style){\n\t\t\t\toverflow = \"hidden\";\n\t\t\t\theight = \"1px\"; \/\/ 0 causes IE to display the whole panel\n\t\t\t}\n\t\t\tdojo.html.show(node);\n\t\t});\n\t\tanim.connect(\"onEnd\", function(){ \n\t\t\twith(node.style){\n\t\t\t\toverflow = oprop.overflow;\n\t\t\t\theight = oprop.height;\n\t\t\t}\n\t\t\tif(callback){ callback(node, anim); }\n\t\t});\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.wipeOut":{"meta":{"summary":"Returns an animation that will wipe out and hide \"nodes\".","parameters":{"nodes":{"type":"DOMNode[]"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar oprop = {  };\t\/\/ old properties of node (before we mucked w\/them)\n\t\tvar anim = dojo.lfx.propertyAnimation(node,\n\t\t\t{\t\"height\": {\n\t\t\t\t\tstart: function(){ return dojo.html.getContentBox(node).height; },\n\t\t\t\t\tend: 1 \/\/ 0 causes IE to display the whole panel\n\t\t\t\t} \n\t\t\t},\n\t\t\tduration,\n\t\t\teasing,\n\t\t\t{\n\t\t\t\t\"beforeBegin\": function(){\n\t\t\t\t\toprop.overflow = node.style.overflow;\n\t\t\t\t\toprop.height = node.style.height;\n\t\t\t\t\twith(node.style){\n\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t}\n\t\t\t\t\tdojo.html.show(node);\n\t\t\t\t},\n\t\t\t\t\"onEnd\": function(){ \n\t\t\t\t\tdojo.html.hide(node);\n\t\t\t\t\twith(node.style){\n\t\t\t\t\t\toverflow = oprop.overflow;\n\t\t\t\t\t\theight = oprop.height;\n\t\t\t\t\t}\n\t\t\t\t\tif(callback){ callback(node, anim); }\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.slideTo":{"meta":{"summary":"Returns an animation that will slide \"nodes\" from its current position to the position defined in \"coords\".","parameters":{"nodes":{"type":"DOMNode"},"coords":{"type":"Object"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tvar compute = dojo.html.getComputedStyle;\n\tif(dojo.lang.isArray(coords)){\n\t\t\/* coords: Array\n\t\t   pId: a *\/\n\t\tdojo.deprecated('dojo.lfx.html.slideTo(node, array)', 'use dojo.lfx.html.slideTo(node, {top: value, left: value});', '0.5');\n\t\tcoords = { top: coords[0], left: coords[1] };\n\t}\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar top = null;\n\t\tvar left = null;\n\t\tvar init = (function(){\n\t\t\tvar innerNode = node;\n\t\t\treturn function(){\n\t\t\t\tvar pos = compute(innerNode, 'position');\n\t\t\t\ttop = (pos == 'absolute' ? node.offsetTop : parseInt(compute(node, 'top')) || 0);\n\t\t\t\tleft = (pos == 'absolute' ? node.offsetLeft : parseInt(compute(node, 'left')) || 0);\n\t\t\t\tif (!dojo.lang.inArray(['absolute', 'relative'], pos)) {\n\t\t\t\t\tvar ret = dojo.html.abs(innerNode, true);\n\t\t\t\t\tdojo.html.setStyleAttributes(innerNode, \"position:absolute;top:\"+ret.y+\"px;left:\"+ret.x+\"px;\");\n\t\t\t\t\ttop = ret.y;\n\t\t\t\t\tleft = ret.x;\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tinit();\n\t\tvar anim = dojo.lfx.propertyAnimation(node,\n\t\t\t{\t\"top\": { start: top, end: (coords.top||0) },\n\t\t\t\t\"left\": { start: left, end: (coords.left||0)  }\n\t\t\t},\n\t\t\tduration,\n\t\t\teasing,\n\t\t\t{ \"beforeBegin\": init }\n\t\t);\n\t\tif(callback){\n\t\t\tanim.connect(\"onEnd\", function(){ callback(nodes, anim); });\n\t\t}\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"coords":{"type":"top","summary":"Decimal?, left: Decimal? }"},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.slideBy":{"meta":{"summary":"Returns an animation that will slide \"nodes\" from its current position to its current position plus the numbers defined in \"coords\".","parameters":{"nodes":{"type":"DOMNode"},"coords":{"type":"Object"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tvar compute = dojo.html.getComputedStyle;\n\tif(dojo.lang.isArray(coords)){\n\t\t\/* coords: Array\n\t\t   pId: a *\/\n\t\tdojo.deprecated('dojo.lfx.html.slideBy(node, array)', 'use dojo.lfx.html.slideBy(node, {top: value, left: value});', '0.5');\n\t\tcoords = { top: coords[0], left: coords[1] };\n\t}\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar top = null;\n\t\tvar left = null;\n\t\tvar init = (function(){\n\t\t\tvar innerNode = node;\n\t\t\treturn function(){\n\t\t\t\tvar pos = compute(innerNode, 'position');\n\t\t\t\ttop = (pos == 'absolute' ? node.offsetTop : parseInt(compute(node, 'top')) || 0);\n\t\t\t\tleft = (pos == 'absolute' ? node.offsetLeft : parseInt(compute(node, 'left')) || 0);\n\t\t\t\tif (!dojo.lang.inArray(['absolute', 'relative'], pos)) {\n\t\t\t\t\tvar ret = dojo.html.abs(innerNode, true);\n\t\t\t\t\tdojo.html.setStyleAttributes(innerNode, \"position:absolute;top:\"+ret.y+\"px;left:\"+ret.x+\"px;\");\n\t\t\t\t\ttop = ret.y;\n\t\t\t\t\tleft = ret.x;\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t\tinit();\n\t\tvar anim = dojo.lfx.propertyAnimation(node,\n\t\t\t{\n\t\t\t\t\"top\": { start: top, end: top+(coords.top||0) },\n\t\t\t\t\"left\": { start: left, end: left+(coords.left||0) }\n\t\t\t},\n\t\t\tduration,\n\t\t\teasing).connect(\"beforeBegin\", init);\n\t\tif(callback){\n\t\t\tanim.connect(\"onEnd\", function(){ callback(nodes, anim); });\n\t\t}\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"nodes":{"type":"An","summary":"array of DOMNodes or one DOMNode."},"coords":{"type":"top","summary":"Decimal?, left: Decimal? }"},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.explode":{"meta":{"summary":"Returns an animation that will","parameters":{"start":{"type":"DOMNode"},"endNode":{"type":"DOMNode"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" var h = dojo.html;\n\tstart = dojo.byId(start);\n\tendNode = dojo.byId(endNode);\n\tvar startCoords = h.toCoordinateObject(start, true);\n\tvar outline = document.createElement(\"div\");\n\th.copyStyle(outline, endNode);\n\tif(endNode.explodeClassName){ outline.className = endNode.explodeClassName; }\n\twith(outline.style){\n\t\tposition = \"absolute\";\n\t\tdisplay = \"none\";\n\t\t\/\/ border = \"1px solid black\";\n\t\tvar backgroundStyle = h.getStyle(start, \"background-color\");\n\t\tbackgroundColor = backgroundStyle ? backgroundStyle.toLowerCase() : \"transparent\";\n\t\tbackgroundColor = (backgroundColor == \"transparent\") ? \"rgb(221, 221, 221)\" : backgroundColor;\n\t}\n\tdojo.body().appendChild(outline);\n\twith(endNode.style){\n\t\tvisibility = \"hidden\";\n\t\tdisplay = \"block\";\n\t}\n\tvar endCoords = h.toCoordinateObject(endNode, true);\n\twith(endNode.style){\n\t\tdisplay = \"none\";\n\t\tvisibility = \"visible\";\n\t}\n\tvar props = { opacity: { start: 0.5, end: 1.0 } };\n\tdojo.lang.forEach([\"height\", \"width\", \"top\", \"left\"], function(type){\n\t\tprops[type] = { start: startCoords[type], end: endCoords[type] }\n\t});\n\tvar anim = new dojo.lfx.propertyAnimation(outline, \n\t\tprops,\n\t\tduration,\n\t\teasing,\n\t\t{\n\t\t\t\"beforeBegin\": function(){\n\t\t\t\th.setDisplay(outline, \"block\");\n\t\t\t},\n\t\t\t\"onEnd\": function(){\n\t\t\t\th.setDisplay(endNode, \"block\");\n\t\t\t\toutline.parentNode.removeChild(outline);\n\t\t\t}\n\t\t}\n\t);\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){ callback(endNode, anim); });\n\t}\n\treturn anim; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation"},"extra":{"parameters":{"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.implode":{"meta":{"summary":"Returns an animation that will","parameters":{"startNode":{"type":"DOMNode"},"end":{"type":"DOMNode"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" var h = dojo.html;\n\tstartNode = dojo.byId(startNode);\n\tend = dojo.byId(end);\n\tvar startCoords = dojo.html.toCoordinateObject(startNode, true);\n\tvar endCoords = dojo.html.toCoordinateObject(end, true);\n\tvar outline = document.createElement(\"div\");\n\tdojo.html.copyStyle(outline, startNode);\n\tif (startNode.explodeClassName) { outline.className = startNode.explodeClassName; }\n\tdojo.html.setOpacity(outline, 0.3);\n\twith(outline.style){\n\t\tposition = \"absolute\";\n\t\tdisplay = \"none\";\n\t\tbackgroundColor = h.getStyle(startNode, \"background-color\").toLowerCase();\n\t}\n\tdojo.body().appendChild(outline);\n\tvar props = { opacity: { start: 1.0, end: 0.5 } };\n\tdojo.lang.forEach([\"height\", \"width\", \"top\", \"left\"], function(type){\n\t\tprops[type] = { start: startCoords[type], end: endCoords[type] }\n\t});\n\tvar anim = new dojo.lfx.propertyAnimation(outline,\n\t\tprops,\n\t\tduration,\n\t\teasing,\n\t\t{\n\t\t\t\"beforeBegin\": function(){\n\t\t\t\tdojo.html.hide(startNode);\n\t\t\t\tdojo.html.show(outline);\n\t\t\t},\n\t\t\t\"onEnd\": function(){\n\t\t\t\toutline.parentNode.removeChild(outline);\n\t\t\t}\n\t\t}\n\t);\n\tif(callback){\n\t\tanim.connect(\"onEnd\", function(){ callback(startNode, anim); });\n\t}\n\treturn anim; \/\/ dojo.lfx.Animation","returns":"dojo.lfx.Animation"},"extra":{"parameters":{"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.highlight":{"meta":{"summary":"Returns an animation that will set the background color of \"nodes\" to startColor and transition it to \"nodes\" original color.","parameters":{"nodes":{"type":"DOMNode[]"},"startColor":{"type":"dojo.gfx.color.Color"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar color = dojo.html.getBackgroundColor(node);\n\t\tvar bg = dojo.html.getStyle(node, \"background-color\").toLowerCase();\n\t\tvar bgImage = dojo.html.getStyle(node, \"background-image\");\n\t\tvar wasTransparent = (bg == \"transparent\" || bg == \"rgba(0, 0, 0, 0)\");\n\t\twhile(color.length > 3) { color.pop(); }\n\t\tvar rgb = new dojo.gfx.color.Color(startColor);\n\t\tvar endRgb = new dojo.gfx.color.Color(color);\n\t\tvar anim = dojo.lfx.propertyAnimation(node, \n\t\t\t{ \"background-color\": { start: rgb, end: endRgb } }, \n\t\t\tduration, \n\t\t\teasing,\n\t\t\t{\n\t\t\t\t\"beforeBegin\": function(){ \n\t\t\t\t\tif(bgImage){\n\t\t\t\t\t\tnode.style.backgroundImage = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\tnode.style.backgroundColor = \"rgb(\" + rgb.toRgb().join(\",\") + \")\";\n\t\t\t\t},\n\t\t\t\t\"onEnd\": function(){ \n\t\t\t\t\tif(bgImage){\n\t\t\t\t\t\tnode.style.backgroundImage = bgImage;\n\t\t\t\t\t}\n\t\t\t\t\tif(wasTransparent){\n\t\t\t\t\t\tnode.style.backgroundColor = \"transparent\";\n\t\t\t\t\t}\n\t\t\t\t\tif(callback){\n\t\t\t\t\t\tcallback(node, anim);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"startColor":{"type":"Color","summary":"to transition from."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}},"dojo.lfx.html.unhighlight":{"meta":{"summary":"Returns an animation that will transition \"nodes\" background color from its current color to \"endColor\".","parameters":{"nodes":{"type":"DOMNode[]"},"endColor":{"type":"dojo.gfx.color.Color"},"duration":{"type":"int?"},"easing":{"type":"Function?"},"callback":{"type":"Function?"}},"src":" nodes = dojo.lfx.html._byId(nodes);\n\tvar anims = [];\n\tdojo.lang.forEach(nodes, function(node){\n\t\tvar color = new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));\n\t\tvar rgb = new dojo.gfx.color.Color(endColor);\n\t\tvar bgImage = dojo.html.getStyle(node, \"background-image\");\n\t\tvar anim = dojo.lfx.propertyAnimation(node, \n\t\t\t{ \"background-color\": { start: color, end: rgb } },\n\t\t\tduration, \n\t\t\teasing,\n\t\t\t{\n\t\t\t\t\"beforeBegin\": function(){ \n\t\t\t\t\tif(bgImage){\n\t\t\t\t\t\tnode.style.backgroundImage = \"none\";\n\t\t\t\t\t}\n\t\t\t\t\tnode.style.backgroundColor = \"rgb(\" + color.toRgb().join(\",\") + \")\";\n\t\t\t\t},\n\t\t\t\t\"onEnd\": function(){ \n\t\t\t\t\tif(callback){\n\t\t\t\t\t\tcallback(node, anim);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tanims.push(anim);\n\t});\n\treturn dojo.lfx.combine(anims); \/\/ dojo.lfx.Combine","returns":"dojo.lfx.Combine"},"extra":{"parameters":{"endColor":{"type":"Color","summary":"to transition to."},"duration":{"type":"Duration","summary":"of the animation in milliseconds."},"easing":{"type":"An","summary":"easing function."},"callback":{"type":"Function","summary":"to run at the end of the animation."}}}}}}},"dojo.lfx.rounded":{"meta":{"requires":{"common":["dojo.lang.common","dojo.html.common","dojo.html.style","dojo.html.display","dojo.html.layout"]},"functions":{"dojo.lfx.rounded":{"meta":{"summary":"Creates a set of rounded corners based on settings.","parameters":{"settings":{"type":"object ..."}},"src":" var options={\r\n\t\tvalidTags:settings.validTags || [\"div\"],\t\t\t\t\t\/\/\ttags we can apply this to\r\n\t\tautoPad:settings.autoPad!=null ? settings.autoPad : true,\t\t\/\/\tautomatically pad\r\n\t\tantiAlias:settings.antiAlias!=null ? settings.antiAlias : true,\t\/\/\tanti-alias corners\r\n\t\tradii:{ \t\/\/\tcorner radii\r\n\t\t\ttl:(settings.tl && settings.tl.radius!=null) ? settings.tl.radius:5, \r\n\t\t\ttr:(settings.tr && settings.tr.radius!=null) ? settings.tr.radius:5, \r\n\t\t\tbl:(settings.bl && settings.bl.radius!=null) ? settings.bl.radius:5, \r\n\t\t\tbr:(settings.br && settings.br.radius!=null) ? settings.br.radius:5 \r\n\t\t}\r\n\t};\r\n\t\/\/\tget the node list to operate on.\r\n\tvar nodes;\r\n\tif(typeof(arguments[1]) == \"string\"){\r\n\t\t\/\/\ta CSS classname was passed, grab a node list.\r\n\t\tnodes=dojo.html.getElementsByClass(arguments[1]);\r\n\t} else if(dojo.lang.isArrayLike(arguments[1])){\r\n\t\t\/\/\twe assume that the second argument is an array of nodes to apply this to.\r\n\t\tnodes=arguments[1];\r\n\t\tfor(var i=0; i<nodes.length; i++){ nodes[i]=dojo.byId(nodes[i]); }\r\n\t}\r\n\tif(nodes.length == 0) return;\t\/\/\tdon't bother.\r\n\t\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\r\n\tfor(var i=0; i<nodes.length; i++){\r\n\t\tdojo.lfx.rounded.applyCorners(options, nodes[i]);\r\n\t}\r","returns":"don't bother."}},"dojo.lfx.rounded.applyCorners":{"meta":{"summary":"Rounds corners based on options to passed node.","parameters":{"options":{"type":"object"},"node":{"type":"HTMLElement"}},"src":" var top = null;\r\n\tvar bottom = null;\r\n\tvar contentNode = null;\r\n\tvar fns=dojo.lfx.rounded._fns;\r\n\t\/\/\tnode details\r\n\tvar width = node.offsetWidth;\r\n\tvar height = node.offsetHeight;\r\n\tvar borderWidth = parseInt(dojo.html.getComputedStyle(node, \"border-top-width\"));\r\n\tvar borderColor = dojo.html.getComputedStyle(node, \"border-top-color\");\r\n\tvar color = dojo.html.getComputedStyle(node, \"background-color\");\r\n\tvar bgImage = dojo.html.getComputedStyle(node, \"background-image\");\r\n\tvar position = dojo.html.getComputedStyle(node, \"position\");\r\n\tvar padding = parseInt(dojo.html.getComputedStyle(node, \"padding-top\"));\r\n\t\/\/\tformatting details\r\n\t\/\/\tTODO: use Dojo equivilents for these if exists.\r\n\tvar format={\r\n\t\theight : height,\r\n\t\twidth : width,\r\n\t\tborderWidth : borderWidth,\r\n\t\tcolor : fns.getRGB(color),\r\n\t\tpadding : padding,\r\n\t\tborderColor : fns.getRGB(borderColor),\r\n\t\tborderString : borderWidth + \"px\" + \" solid \" + fns.getRGB(borderColor),\r\n\t\tbgImage : ((bgImage != \"none\")? bgImage : \"\"),\r\n\t\tcontent : node.innerHTML\r\n\t};\r\n\tif(!dojo.html.isPositionAbsolute(node)){ node.style.position=\"relative\"; }\r\n\tnode.style.padding=\"0px\";\r\n\tif(dojo.render.html.ie && width==\"auto\" && height==\"auto\"){ node.style.width=\"100%\"; }\r\n\tif(options.autoPad && format.padding>0){\r\n\t\tnode.innerHTML=\"\";\r\n\t}\r\n\tvar topHeight=Math.max(options.radii.tl, options.radii.tr);\r\n\tvar bottomHeight=Math.max(options.radii.bl, options.radii.br);\r\n\t\/\/\tbuild the containers.\r\n\tif(options.radii.tl || options.radii.tr){\r\n\t\ttop = document.createElement(\"div\");\r\n\t\ttop.style.width=\"100%\";\r\n\t\ttop.style.fontSize=\"1px\";\r\n\t\ttop.style.overflow=\"hidden\";\r\n\t\ttop.style.position=\"absolute\";\r\n\t\ttop.style.paddingLeft=format.borderWidth+\"px\";\r\n\t\ttop.style.paddingRight=format.borderWidth+\"px\";\r\n\t\ttop.style.height=topHeight+\"px\";\r\n\t\ttop.style.top=(0-topHeight)+\"px\";\r\n\t\ttop.style.left=(0-format.borderWidth)+\"px\";\r\n\t\tnode.appendChild(top);\r\n\t}\r\n\tif(options.radii.bl || options.radii.br){\t\/\/\tbottom\r\n\t\tbottom = document.createElement(\"div\");\r\n\t\tbottom.style.width=\"100%\";\r\n\t\tbottom.style.fontSize=\"1px\";\r\n\t\tbottom.style.overflow=\"hidden\";\r\n\t\tbottom.style.position=\"absolute\";\r\n\t\tbottom.style.paddingLeft=format.borderWidth+\"px\";\r\n\t\tbottom.style.paddingRight=format.borderWidth+\"px\";\r\n\t\tbottom.style.height=bottomHeight+\"px\";\r\n\t\tbottom.style.bottom=(0-bottomHeight)+\"px\";\r\n\t\tbottom.style.left=(0-format.borderWidth)+\"px\";\r\n\t\tnode.appendChild(bottom);\r\n\t}\r\n\t\/\/\tturn off the borders\r\n\tif(top){ node.style.borderTopWidth = \"0px\"; }\r\n\tif(bottom){ node.style.borderBottomWidth = \"0px\"; }\r\n\t\/\/\tdo the corners\r\n\tvar corners = [\"tr\", \"tl\", \"br\", \"bl\"];\r\n\tfor(var i=0; i<corners.length; i++){\r\n\t\tvar cc=corners[i];\r\n\t\tif(options.radii[cc]==0){\r\n\t\t\t\/\/\tfill up the space with a div.\r\n\t\t\tif((cc.charAt(0)==\"t\"&&top) || (cc.charAt(0)==\"b\"&&bottom)){\r\n\t\t\t\tvar corner=document.createElement(\"div\");\r\n\t\t\t\tcorner.style.position=\"relative\";\r\n\t\t\t\tcorner.style.fontSize=\"1px;\";\r\n\t\t\t\tcorner.style.overflow=\"hidden\";\r\n\t\t\t\tif(format.bgImage==\"\"){\r\n\t\t\t\t\tcorner.style.backgroundColor=format.color;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcorner.style.backgroundImage=format.bgImage;\r\n\t\t\t\t}\r\n\t\t\t\tswitch(cc){\r\n\t\t\t\t\tcase \"tl\":{\r\n\t\t\t\t\t\tcorner.style.height=topHeight-format.borderWidth+\"px\";\r\n\t\t\t\t\t\tcorner.style.marginRight=options.radii[cc]-(format.borderWidth*2)+\"px\";\r\n\t\t\t\t\t\tcorner.style.borderLeft=format.borderString;\r\n\t\t\t\t\t\tcorner.style.borderTop=format.borderString;\r\n\t\t\t\t\t\tcorner.style.left=-format.borderWidth+\"px\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase \"tr\":{\r\n\t\t\t\t\t\tcorner.style.height=topHeight-format.borderWidth+\"px\";\r\n\t\t\t\t\t\tcorner.style.marginLeft=options.radii[cc]-(format.borderWidth*2)+\"px\";\r\n\t\t\t\t\t\tcorner.style.borderRight=format.borderString;\r\n\t\t\t\t\t\tcorner.style.borderTop=format.borderString;\r\n\t\t\t\t\t\tcorner.style.backgroundPosition=\"-\"+(topHeight-format.borderWidth)+\"px 0px\";\r\n\t\t\t\t\t\tcorner.style.left=format.borderWidth+\"px\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase \"bl\":{\r\n\t\t\t\t\t\tcorner.style.height=bottomHeight-format.borderWidth+\"px\";\r\n\t\t\t\t\t\tcorner.style.marginRight=options.radii[cc]-(format.borderWidth*2)+\"px\";\r\n\t\t\t\t\t\tcorner.style.borderLeft=format.borderString;\r\n\t\t\t\t\t\tcorner.style.borderBottom=format.borderString;\r\n\t\t\t\t\t\tcorner.style.left=format.borderWidth+\"px\";\r\n\t\t\t\t\t\tcorner.style.backgroundPosition=\"-\"+format.borderWidth+\"px -\"+(format.height+(bottomHeight+format.borderWidth))+\"px\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase \"br\":{\r\n\t\t\t\t\t\tcorner.style.height=bottomHeight-format.borderWidth+\"px\";\r\n\t\t\t\t\t\tcorner.style.marginLeft=options.radii[cc]-(format.borderWidth*2)+\"px\";\r\n\t\t\t\t\t\tcorner.style.borderRight=format.borderString;\r\n\t\t\t\t\t\tcorner.style.borderBottom=format.borderString;\r\n\t\t\t\t\t\tcorner.style.left=format.borderWidth+\"px\";\r\n\t\t\t\t\t\tcorner.style.backgroundPosition=\"-\"+(bottomHeight+format.borderWidth)+\"px -\"+(format.height+(bottomHeight+format.borderWidth))+\"px\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t\/\/\tNB: this version will not do the caching they built into the\r\n\t\t\t\/\/\t\tcurrent version of curvyCorners.\r\n\t\t\tvar corner=document.createElement(\"div\");\r\n\t\t\tcorner.style.height=options.radii[cc]+\"px\";\r\n\t\t\tcorner.style.width=options.radii[cc]+\"px\";\r\n\t\t\tcorner.style.position=\"absolute\";\r\n\t\t\tcorner.style.fontSize=\"1px\";\r\n\t\t\tcorner.style.overflow=\"hidden\";\r\n\t\t\tvar borderRadius=Math.floor(options.radii[cc] - format.borderWidth);\r\n\t\t\tfor(var x=0, j=options.radii[cc]; x<j; x++){\r\n\t\t\t\t\/\/\tfigure out y coords\r\n\t\t\t\tvar y1=Math.floor(Math.sqrt(Math.pow(borderRadius,2)-Math.pow((x+1),2)))-1;\r\n\t\t\t\tif((x+1) >= borderRadius){ var y1=-1; }\r\n\t\t\t\tvar y2=Math.ceil(Math.sqrt(Math.pow(borderRadius,2)-Math.pow(x,2)));\r\n\t\t\t\tif(x >= borderRadius){ y2=-1; }\r\n\t\t\t\tvar y3=Math.floor(Math.sqrt(Math.pow(j,2)-Math.pow((x+1),2)))-1;\r\n\t\t\t\tif((x+1) >= j){ y3=-1; }\r\n\t\t\t\tvar y4=Math.ceil(Math.sqrt(Math.pow(j, 2)-Math.pow(x, 2)));\r\n\t\t\t\tif(x >= j){ y4=-1; }\r\n\t\t\t\t\/\/\tstart drawing\r\n\t\t\t\tif(y1 > -1){\r\n\t\t\t\t\tfns.draw(x, 0, format.color, 100, (y1+1), corner, -1, j, topHeight, format);\r\n\t\t\t\t}\r\n\t\t\t\t\/\/ cycle the y-axis\r\n\t\t\t\tfor(var y=(y1+1); y<y2; y++){\r\n\t\t\t\t\tif(options.antiAlias){\r\n\t\t\t\t\t\tif(format.bgImage != \"\"){\r\n\t\t\t\t\t\t\tvar fract=fns.fraction(x, y, borderRadius)*100;\r\n\t\t\t\t\t\t\tif(fract < 30){\r\n\t\t\t\t\t\t\t\tfns.draw(x, y, format.borderColor, 100, 1, corner, 0, options.radii[cc], topHeight, format);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tfns.draw(x, y, format.borderColor, 100, 1, corner, -1, options.radii[cc], topHeight, format);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar clr=fns.blend(format.color, format.borderColor, fns.fraction(x, y, borderRadius));\r\n\t\t\t\t\t\t\tfns.draw(x, y, clr, 100, 1, corner, 0, options.radii[cc], topHeight, format);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tbar for the border\r\n\t\t\t\tif(options.antiAlias){\r\n\t\t\t\t\tif(y3 >= y2){\r\n\t\t\t\t\t\tif(y2 == -1){ y2 = 0; }\r\n\t\t\t\t\t\tfns.draw(x, y2, format.borderColor, 100, (y3-y2+1), corner, 0, 0, topHeight, format)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(y3 >= y1){\r\n\t\t\t\t\t\t\tfns.draw(x, (y1+1), format.borderColor, 100, (y3-y1), corner, 0, 0, topHeight, format);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var y=(y3+1); y<y4; y++){\r\n\t\t\t\t\t\tfns.draw(x, y, format.borderColor, (fns.fraction(x, y, j)*100), 1, corner, (format.borderWidth>0 ? 0:-1), options.radii[cc], topHeight, format);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty3=y1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\/\/\treposition pixels if not the bottom right.\r\n\t\t\tif(cc != \"br\"){\r\n\t\t\t\tfor(var t=0, k=corner.childNodes.length; t<k; t++){\r\n\t\t\t\t\tvar bar=corner.childNodes[t];\r\n\t\t\t\t\tvar barTop = parseInt(dojo.html.getComputedStyle(bar, \"top\"));\r\n\t\t\t\t\tvar barLeft = parseInt(dojo.html.getComputedStyle(bar, \"left\"));\r\n\t\t\t\t\tvar barHeight = parseInt(dojo.html.getComputedStyle(bar, \"height\"));\r\n\t\t\t\t\t\/\/\treposition.\r\n\t\t\t\t\tif(cc.charAt(1)==\"l\"){ \r\n\t\t\t\t\t\tbar.style.left = (options.radii[cc]-barLeft-1)+\"px\"; \r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(cc==\"tr\"){\r\n\t\t\t\t\t\tbar.style.top = (options.radii[cc]-barHeight-barTop)+\"px\";\r\n\t\t\t\t\t\tbar.style.backgroundPosition=\"-\"+Math.abs((format.width-options.radii[cc]+format.borderWidth)+barLeft)\r\n\t\t\t\t\t\t\t+\"px -\"+Math.abs(options.radii[cc]-barHeight-barTop-format.borderWidth)+\"px\";\r\n\t\t\t\t\t} else if (cc==\"tl\"){\r\n\t\t\t\t\t\tbar.style.top = (options.radii[cc]-barHeight-barTop)+\"px\";\r\n\t\t\t\t\t\tbar.style.backgroundPosition=\"-\"+Math.abs((options.radii[cc]-barLeft-1)-format.borderWidth)\r\n\t\t\t\t\t\t\t+\"px -\"+Math.abs(options.radii[cc]-barHeight-barTop-format.borderWidth)+\"px\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbar.style.backgroundPosition=\"-\"+Math.abs((options.radii[cc]+barLeft)+format.borderWidth)\r\n\t\t\t\t\t\t\t+\"px -\"+Math.abs((format.height+options.radii[cc]+barTop)-format.borderWidth)+\"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(corner){\r\n\t\t\t\/\/\tposition the container.\r\n\t\t\tvar psn=[];\r\n\t\t\tif(cc.charAt(0)==\"t\"){ psn.push(\"top\"); }\r\n\t\t\telse { psn.push(\"bottom\"); }\r\n\t\t\tif(cc.charAt(1)==\"l\"){ psn.push(\"left\"); }\r\n\t\t\telse { psn.push(\"right\"); }\r\n\t\t\tif(corner.style.position==\"absolute\"){\r\n\t\t\t\tfor(var z=0; z<psn.length; z++){ corner.style[psn[z]]=\"0px\"; }\r\n\t\t\t}\r\n\t\t\tif(psn[0]==\"top\"){ \r\n\t\t\t\tif(top){ top.appendChild(corner); }\r\n\t\t\t} else {\r\n\t\t\t\tif(bottom){ bottom.appendChild(corner); }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\/\/\tdraw fillers.\r\n\tvar diff={ \r\n\t\tt: Math.abs(options.radii.tl - options.radii.tr),\r\n\t\tb: Math.abs(options.radii.bl - options.radii.br)\r\n\t};\r\n\tfor(var z in diff){\r\n\t\tvar smaller=(options.radii[z+\"l\"]<options.radii[z+\"r\"] ? z+\"l\":z+\"r\");\r\n\t\tvar filler=document.createElement(\"div\");\r\n\t\tfiller.style.height=diff[z]+\"px\";\r\n\t\tfiller.style.width=options.radii[smaller]+\"px\";\r\n\t\tfiller.style.position=\"absolute\";\r\n\t\tfiller.style.fontSize=\"1px\";\r\n\t\tfiller.style.overflow=\"hidden\";\r\n\t\tfiller.style.backgroundColor=format.color;\r\n\t\tswitch(smaller){\r\n\t\t\tcase \"tl\":{\r\n\t\t\t\tfiller.style.bottom=\"0px\";\r\n\t\t\t\tfiller.style.left=\"0px\";\r\n\t\t\t\tfiller.style.borderLeft=format.borderString;\r\n\t\t\t\ttop.appendChild(filler);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"tr\":{\r\n\t\t\t\tfiller.style.bottom=\"0px\";\r\n\t\t\t\tfiller.style.right=\"0px\";\r\n\t\t\t\tfiller.style.borderRight=format.borderString;\r\n\t\t\t\ttop.appendChild(filler);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"bl\":{\r\n\t\t\t\tfiller.style.top=\"0px\";\r\n\t\t\t\tfiller.style.left=\"0px\";\r\n\t\t\t\tfiller.style.borderLeft=format.borderString;\r\n\t\t\t\tbottom.appendChild(filler);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"br\":{\r\n\t\t\t\tfiller.style.top=\"0px\";\r\n\t\t\t\tfiller.style.right=\"0px\";\r\n\t\t\t\tfiller.style.borderRight=format.borderString;\r\n\t\t\t\tbottom.appendChild(filler);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar fillBar=document.createElement(\"div\");\r\n\t\tfillBar.style.position=\"relative\";\r\n\t\tfillBar.style.fontSize=\"1px\";\r\n\t\tfillBar.style.overflow=\"hidden\";\r\n\t\tfillBar.style.backgroundColor=format.color;\r\n\t\tfillBar.style.backgroundImage=format.bgImage;\r\n\t\tif(z==\"t\"){\r\n\t\t\tif(top){\r\n\t\t\t\tif(options.radii.tl && options.radii.tr){\r\n\t\t\t\t\tfillBar.style.height=(topHeight-format.borderWidth) + \"px\";\r\n\t\t\t\t\tfillBar.style.marginLeft=(options.radii.tl-format.borderWidth)+\"px\";\r\n\t\t\t\t\tfillBar.style.marginRight=(options.radii.tr-format.borderWidth)+\"px\";\r\n\t\t\t\t\tfillBar.style.borderTop=format.borderString;\r\n\t\t\t\t\tif(format.bgImage!=\"\"){\r\n\t\t\t\t\t\tfillBar.style.backgroundPosition=\"-\"+(topHeight+format.borderWidth)+\"px 0px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttop.appendChild(fillBar);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(bottom){\r\n\t\t\t\tif(options.radii.bl && options.radii.br){\r\n\t\t\t\t\tfillBar.style.height=(bottomHeight-format.borderWidth) + \"px\";\r\n\t\t\t\t\tfillBar.style.marginLeft=(options.radii.bl-format.borderWidth)+\"px\";\r\n\t\t\t\t\tfillBar.style.marginRight=(options.radii.br-format.borderWidth)+\"px\";\r\n\t\t\t\t\tfillBar.style.borderBottom=format.borderString;\r\n\t\t\t\t\tif(format.bgImage!=\"\"){\r\n\t\t\t\t\t\tfillBar.style.backgroundPosition=\"-\"+(bottomHeight+format.borderWidth)+\"px -\"\r\n\t\t\t\t\t\t\t+ (format.height + (topHeight+format.borderWidth))+\"px\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbottom.appendChild(fillBar);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\/\/\tfinally, set up the padding.\r\n\tif(options.autoPad && format.padding>0){\r\n\t\tvar content=document.createElement(\"div\");\r\n\t\tcontent.style.position=\"relative\";\r\n\t\tcontent.innerHTML=format.content;\r\n\t\tcontent.className=\"autoPadDiv\";\r\n\t\tif(topHeight < format.padding){\r\n\t\t\tcontent.style.paddingTop = Math.abs(topHeight-format.padding)+\"px\";\r\n\t\t}\r\n\t\tif(bottomHeight < format.padding){\r\n\t\t\tcontent.style.paddingBottom = Math.abs(bottomHeight-format.padding)+\"px\";\r\n\t\t}\r\n\t\tcontent.style.paddingLeft=format.padding+\"px\";\r\n\t\tcontent.style.paddingRight=format.padding+\"px\";\r\n\t\tnode.appendChild(content);\r\n\t}\r"}}},"objects":{"dojo.lfx.rounded._fns":{"meta":{"variables":["blend","fraction","draw","getRGB"]}}}}},"dojo.lfx.shadow":{"meta":{"requires":{"common":["dojo.lang.common","dojo.uri.Uri"]},"functions":{"dojo.lfx.shadow":{"meta":{"summary":"creates a shadow underneath node.","parameters":{"node":{"type":"HTMLElement"}},"src":" this.shadowPng = dojo.uri.dojoUri(\"src\/html\/images\/shadow\");\n\tthis.shadowThickness = 8;\n\tthis.shadowOffset = 15;\n\tthis.init(node);","instance_variables":["shadowPng","shadowThickness","shadowOffset"]}},"dojo.lfx.shadow.init":{"meta":{"summary":"Initializes the shadow.","parameters":{"node":{"type":"HTMLElement"}},"src":" \tthis.node=node;\n\t\t\/\/ make all the pieces of the shadow, and position\/size them as much\n\t\t\/\/ as possible (but a lot of the coordinates are set in sizeShadow\n\t\tthis.pieces={};\n\t\tvar x1 = -1 * this.shadowThickness;\n\t\tvar y0 = this.shadowOffset;\n\t\tvar y1 = this.shadowOffset + this.shadowThickness;\n\t\tthis._makePiece(\"tl\", \"top\", y0, \"left\", x1);\n\t\tthis._makePiece(\"l\", \"top\", y1, \"left\", x1, \"scale\");\n\t\tthis._makePiece(\"tr\", \"top\", y0, \"left\", 0);\n\t\tthis._makePiece(\"r\", \"top\", y1, \"left\", 0, \"scale\");\n\t\tthis._makePiece(\"bl\", \"top\", 0, \"left\", x1);\n\t\tthis._makePiece(\"b\", \"top\", 0, \"left\", 0, \"crop\");\n\t\tthis._makePiece(\"br\", \"top\", 0, \"left\", 0);","instance_variables":["node","pieces"]}},"dojo.lfx.shadow._makePiece":{"meta":{"summary":"","parameters":{"name":{"type":""},"vertAttach":{"type":""},"vertCoord":{"type":""},"horzAttach":{"type":""},"horzCoord":{"type":""},"sizing":{"type":""}},"src":" \tvar img;\n\t\tvar url = this.shadowPng + name.toUpperCase() + \".png\";\n\t\tif(dojo.render.html.ie55 || dojo.render.html.ie60){\n\t\t\timg=dojo.doc().createElement(\"div\");\n\t\t\timg.style.filter=\"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\"+url+\"'\"+\n\t\t\t(sizing?\", sizingMethod='\"+sizing+\"'\":\"\") + \")\";\n\t\t}else{\n\t\t\timg=dojo.doc().createElement(\"img\");\n\t\t\timg.src=url;\n\t\t}\n\t\timg.style.position=\"absolute\";\n\t\timg.style[vertAttach]=vertCoord+\"px\";\n\t\timg.style[horzAttach]=horzCoord+\"px\";\n\t\timg.style.width=this.shadowThickness+\"px\";\n\t\timg.style.height=this.shadowThickness+\"px\";\n\t\tthis.pieces[name]=img;\n\t\tthis.node.appendChild(img);"}},"dojo.lfx.shadow.size":{"meta":{"summary":"Resizes the shadow based on width and height.","parameters":{"width":{"type":"int"},"height":{"type":"int"}},"src":" \tvar sideHeight = height - (this.shadowOffset+this.shadowThickness+1);\n\t\tif (sideHeight < 0) { sideHeight = 0; }\n\t\tif (height < 1) { height = 1; }\n\t\tif (width < 1) { width = 1; }\n\t\twith(this.pieces){\n\t\t\tl.style.height = sideHeight+\"px\";\n\t\t\tr.style.height = sideHeight+\"px\";\n\t\t\tb.style.width = (width-1)+\"px\";\n\t\t\tbl.style.top = (height-1)+\"px\";\n\t\t\tb.style.top = (height-1)+\"px\";\n\t\t\tbr.style.top = (height-1)+\"px\";\n\t\t\ttr.style.left = (width-1)+\"px\";\n\t\t\tr.style.left = (width-1)+\"px\";\n\t\t\tbr.style.left = (width-1)+\"px\";\n\t\t}"}}}}},"dojo.lfx.toggle":{"meta":{"requires":{"common":["dojo.lfx.*"]},"functions":{"dojo.lfx.toggle.plain.show":{"meta":{"summary":"","parameters":{"node":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":" \tdojo.html.show(node);\n\t\tif(dojo.lang.isFunction(callback)){ callback(); }"}},"dojo.lfx.toggle.plain.hide":{"meta":{"summary":"","parameters":{"node":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":" \tdojo.html.hide(node);\n\t\tif(dojo.lang.isFunction(callback)){ callback(); }"}},"dojo.lfx.toggle.fade.show":{"meta":{"summary":"","parameters":{"node":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":" \tdojo.lfx.fadeShow(node, duration, easing, callback).play();"}},"dojo.lfx.toggle.fade.hide":{"meta":{"summary":"","parameters":{"node":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":" \tdojo.lfx.fadeHide(node, duration, easing, callback).play();"}},"dojo.lfx.toggle.wipe.show":{"meta":{"summary":"","parameters":{"node":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":" \tdojo.lfx.wipeIn(node, duration, easing, callback).play();"}},"dojo.lfx.toggle.wipe.hide":{"meta":{"summary":"","parameters":{"node":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""}},"src":" \tdojo.lfx.wipeOut(node, duration, easing, callback).play();"}},"dojo.lfx.toggle.explode.show":{"meta":{"summary":"","parameters":{"node":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""},"explodeSrc":{"type":""}},"src":" \tdojo.lfx.explode(explodeSrc||{x:0,y:0,width:0,height:0}, node, duration, easing, callback).play();"}},"dojo.lfx.toggle.explode.hide":{"meta":{"summary":"","parameters":{"node":{"type":""},"duration":{"type":""},"easing":{"type":""},"callback":{"type":""},"explodeSrc":{"type":""}},"src":" \tdojo.lfx.implode(node, explodeSrc||{x:0,y:0,width:0,height:0}, duration, easing, callback).play();"}}}}}}