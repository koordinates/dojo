{"dojo.charting.Axis":{"meta":{"requires":{"common":["dojo.lang.common"]},"functions":{"dojo.charting.Axis":{"meta":{"summary":"","parameters":{"label":{"type":"string?"},"scale":{"type":"string?"},"labels":{"type":"array?"}},"src":" var id = \"dojo-charting-axis-\"+dojo.charting.Axis.count++;\r\n\tthis.getId=function(){ return id; };\r\n\tthis.setId=function(key){ id = key; };\r\n\tthis.scale = scale || \"linear\";\t\t\/\/\tlinear || log\r\n\tthis.label = label || \"\";\r\n\tthis.showLabel = true;\t\t\/\/\tshow axis label.\r\n\tthis.showLabels = true;\t\t\/\/\tshow interval ticks.\r\n\tthis.showLines = false;\t\t\/\/\tif you want lines over the range of the plot area\r\n\tthis.showTicks = false;\t\t\/\/\tif you want tick marks on the axis.\r\n\tthis.range = { upper : 0, lower : 0 };\t\/\/\trange of individual axis.\r\n\tthis.origin = \"min\"; \t\t\t\/\/\tthis can be any number, \"min\" or \"max\". min\/max is translated on init.\r\n\tthis.labels = labels || [];\r\n\tthis._labels = [];\t\/\/\twhat we really use to draw things.\r\n\tthis.nodes={ main: null, axis: null, label: null, labels: null, lines: null, ticks: null };\r","instance_variables":["scale","label","showLabel","showLabels","showLines","showTicks","range","origin","labels","_labels","nodes"]}},"dojo.charting.Axis.getId":{"meta":{"summary":"","src":" this.getId=function(){ return id;     ","instance":"dojo.charting.Axis"}},"dojo.charting.Axis.setId":{"meta":{"summary":"","parameters":{"key":{"type":""}},"src":" this.setId=function(key){ id = key;     ","instance":"dojo.charting.Axis"}},"dojo.charting.Axis.getCoord":{"meta":{"summary":"","parameters":{"val":{"type":"float"},"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"}},"src":" \tval = parseFloat(val, 10);\r\n\t\tvar area = plotArea.getArea();\r\n\t\tif(plot.axisX == this){\r\n\t\t\tvar offset = 0 - this.range.lower;\r\n\t\t\tvar min = this.range.lower + offset;\t\/\/\tFIXME: check this.\r\n\t\t\tvar max = this.range.upper + offset;\r\n\t\t\tval += offset;\r\n\t\t\treturn (val*((area.right-area.left)\/max))+area.left;\t\/\/\tfloat\r\n\t\t} else {\r\n\t\t\tvar max = this.range.upper;\r\n\t\t\tvar min = this.range.lower;\r\n\t\t\tvar offset = 0;\r\n\t\t\tif(min<0){\r\n\t\t\t\toffset += Math.abs(min);\r\n\t\t\t}\r\n\t\t\tmax += offset; min += offset; val += offset;\r\n\t\t\tvar pmin = area.bottom;\r\n\t\t\tvar pmax = area.top;\r\n\t\t\treturn (((pmin-pmax)\/(max-min))*(max-val))+pmax;\r\n\t\t}\r","returns":"float"},"extra":{"returns":"the coordinate of val based on this axis range, plot area and plot."}},"dojo.charting.Axis.initializeOrigin":{"meta":{"summary":"","parameters":{"drawAgainst":{"type":""},"plane":{"type":""}},"src":" \tif(isNaN(this.origin)){\r\n\t\t\tif(this.origin.toLowerCase() == \"max\"){ \r\n\t\t\t\tthis.origin = drawAgainst.range[(plane==\"y\")?\"upper\":\"lower\"]; \r\n\t\t\t}\r\n\t\t\telse if (this.origin.toLowerCase() == \"min\"){ \r\n\t\t\t\tthis.origin = drawAgainst.range[(plane==\"y\")?\"lower\":\"upper\"]; \r\n\t\t\t}\r\n\t\t\telse { this.origin=0; }\r\n\t\t}\r","instance_variables":["origin"]}},"dojo.charting.Axis.initializeLabels":{"meta":{"summary":"","src":" \tif(this.labels.length == 0){\r\n\t\t\tthis.showLabels = false;\r\n\t\t\tthis.showLines = false;\r\n\t\t\tthis.showTicks = false;\r\n\t\t} else {\r\n\t\t\tif(this.labels[0].label && this.labels[0].value != null){\r\n\t\t\t\tfor(var i=0; i<this.labels.length; i++){\r\n\t\t\t\t\tthis._labels.push(this.labels[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(!isNaN(this.labels[0])){\r\n\t\t\t\tfor(var i=0; i<this.labels.length; i++){\r\n\t\t\t\t\tthis._labels.push({ label: this.labels[i], value: this.labels[i] });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t\/\/ clone me\r\n\t\t\t\tvar a = [];\r\n\t\t\t\tfor(var i=0; i<this.labels.length; i++){\r\n\t\t\t\t\ta.push(this.labels[i]);\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tdo the bottom one.\r\n\t\t\t\tvar s=a.shift();\r\n\t\t\t\tthis._labels.push({ label: s, value: this.range.lower });\r\n\t\t\t\t\/\/\tdo the top one.\r\n\t\t\t\tif(a.length>0){\r\n\t\t\t\t\tvar s=a.pop();\r\n\t\t\t\t\tthis._labels.push({ label: s, value: this.range.upper });\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tdo the rest.\r\n\t\t\t\tif(a.length>0){\r\n\t\t\t\t\tvar range = this.range.upper - this.range.lower;\r\n\t\t\t\t\tvar step = range \/ (this.labels.length-1);\r\n\t\t\t\t\tfor(var i=1; i<=a.length; i++){\r\n\t\t\t\t\t\tthis._labels.push({\r\n\t\t\t\t\t\t\tlabel: a[i-1],\r\n\t\t\t\t\t\t\tvalue: this.range.lower+(step*i)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r","instance_variables":["labels.length","showLabels","showLines","showTicks"]}},"dojo.charting.Axis.initialize":{"meta":{"summary":"Initialize the passed axis descriptor. Note that this should always be the result of plotArea.getAxes, and not the axis directly!","parameters":{"plotArea":{"type":""},"plot":{"type":""},"drawAgainst":{"type":""},"plane":{"type":""}},"src":" \tthis.destroy();\r\n\t\tthis.initializeOrigin(drawAgainst, plane);\r\n\t\tthis.initializeLabels();\r\n\t\tvar node = this.render(plotArea, plot, drawAgainst, plane);\r\n\t\treturn node;\r"}},"dojo.charting.Axis.destroy":{"meta":{"summary":"","src":" \tfor(var p in this.nodes){\r\n\t\t\twhile(this.nodes[p] && this.nodes[p].childNodes.length > 0){\r\n\t\t\t\tthis.nodes[p].removeChild(this.nodes[p].childNodes[0]);\r\n\t\t\t}\r\n\t\t\tif(this.nodes[p] && this.nodes[p].parentNode){\r\n\t\t\t\tthis.nodes[p].parentNode.removeChild(this.nodes[p]);\r\n\t\t\t}\r\n\t\t\tthis.nodes[p] = null;\r\n\t\t}\r"}}}}},"dojo.charting.Chart":{"meta":{"requires":{"common":["dojo.lang.common","dojo.charting.PlotArea"]},"functions":{"dojo.charting.Chart":{"meta":{"summary":"Create the basic Chart object.","parameters":{"node":{"type":"HTMLElement?"},"title":{"type":"string?"},"description":{"type":"string?"}},"src":" this.node = node || null;\r\n\tthis.title = title || \"Chart\";\t\t\t\/\/\tpure string.\r\n\tthis.description = description || \"\";\t\/\/\tHTML is allowed.\r\n\tthis.plotAreas = [];\r","instance_variables":["node","title","description","plotAreas"],"prototype_variables":["onInitialize","onRender","onDestroy","render"]}},"dojo.charting.Chart.addPlotArea":{"meta":{"summary":"Add a PlotArea to this chart; object should be in the form of: { plotArea, (x, y) or (top, left) }","parameters":{"obj":{"type":"object"},"doRender":{"type":"bool?"}},"src":" \tif(obj.x!=null && obj.left==null){ obj.left = obj.x; }\r\n\t\tif(obj.y!=null && obj.top==null){ obj.top = obj.y; }\r\n\t\tthis.plotAreas.push(obj);\r\n\t\tif(doRender){ this.render(); }\r"}},"dojo.charting.Chart.initialize":{"meta":{"summary":"Initialize the Chart by rendering it.","src":" \tif(!this.node){ \r\n\t\t\tdojo.raise(\"dojo.charting.Chart.initialize: there must be a root node defined for the Chart.\"); \r\n\t\t}\r\n\t\tthis.destroy();\r\n\t\tthis.render();\r\n\t\tthis.onInitialize(this);\r"}},"dojo.charting.Chart.destroy":{"meta":{"summary":"Destroy any nodes that have maintained references. kill any existing plotAreas","src":" \tfor(var i=0; i<this.plotAreas.length; i++){\r\n\t\t\tthis.plotAreas[i].plotArea.destroy();\r\n\t\t};\r\n\t\t\/\/\tclean out any child nodes.\r\n\t\twhile(this.node && this.node.childNodes && this.node.childNodes.length > 0){ \r\n\t\t\tthis.node.removeChild(this.node.childNodes[0]); \r\n\t\t}\r"}}}}},"dojo.charting.Plot":{"meta":{"requires":{"common":["dojo.lang.common","dojo.charting.Axis","dojo.charting.Series"]},"functions":{"dojo.charting.Plot":{"meta":{"summary":"Creates a new instance of a Plot (X\/Y Axis + n Series).","parameters":{"xaxis":{"type":"dojo.charting.Axis?"},"yaxis":{"type":"dojo.charting.Axis?"},"series":{"type":"dojo.charting.Series[]?"}},"src":" var id = \"dojo-charting-plot-\"+dojo.charting.Plot.count++;\r\n\tthis.getId=function(){ return id; };\r\n\tthis.setId=function(key){ id = key; };\r\n\tthis.axisX = null;\r\n\tthis.axisY = null;\r\n\tthis.series = [];\r\n\tthis.dataNode = null;\r\n\t\/\/\tfor bar charts, pie charts and stacked charts, change to Grouped.\r\n\tthis.renderType = dojo.charting.RenderPlotSeries.Singly;\r\n\tif(xaxis){\r\n\t\tthis.setAxis(xaxis,\"x\");\r\n\t}\r\n\tif(yaxis){\r\n\t\tthis.setAxis(yaxis,\"y\");\r\n\t}\r\n\tif(series){\r\n\t\tfor(var i=0; i<series.length; i++){ this.addSeries(series[i]); }\r\n\t}\r","instance_variables":["axisX","axisY","series","dataNode","renderType"]}},"dojo.charting.Plot.getId":{"meta":{"summary":"","src":" this.getId=function(){ return id;     ","instance":"dojo.charting.Plot"}},"dojo.charting.Plot.setId":{"meta":{"summary":"","parameters":{"key":{"type":""}},"src":" this.setId=function(key){ id = key;     ","instance":"dojo.charting.Plot"}},"dojo.charting.Plot.addSeries":{"meta":{"summary":"Add a new Series to this plot. Can take the form of a Series, or an object of the form { series, plotter }","parameters":{"series":{"type":"dojo.charting.Series || object"},"plotter":{"type":"function?"}},"src":" \tif(series.plotter){\r\n\t\t\tthis.series.push(series);\r\n\t\t} else {\r\n\t\t\tthis.series.push({\r\n\t\t\t\tdata: series,\r\n\t\t\t\tplotter: plotter || dojo.charting.Plotters[\"Default\"]\r\n\t\t\t});\r\n\t\t}\r"}},"dojo.charting.Plot.setAxis":{"meta":{"summary":"Set the axis on which plane.","parameters":{"axis":{"type":"dojo.charting.Axis"},"which":{"type":"string"}},"src":" \tif(which.toLowerCase()==\"x\"){ this.axisX = axis; }\r\n\t\telse if(which.toLowerCase()==\"y\"){ this.axisY = axis; }\r","instance_variables":["axisX","axisY"]}},"dojo.charting.Plot.getRanges":{"meta":{"summary":"set the ranges on these axes.","src":" \tvar xmin, xmax, ymin, ymax;\r\n\t\txmin=ymin=Number.MAX_VALUE;\r\n\t\txmax=ymax=Number.MIN_VALUE;\r\n\t\tfor(var i=0; i<this.series.length; i++){\r\n\t\t\tvar values = this.series[i].data.evaluate();\t\/\/\tfull data range.\r\n\t\t\tfor(var j=0; j<values.length; j++){\r\n\t\t\t\tvar comp=values[j];\r\n\t\t\t\txmin=Math.min(comp.x, xmin);\r\n\t\t\t\tymin=Math.min(comp.y, ymin);\r\n\t\t\t\txmax=Math.max(comp.x, xmax);\r\n\t\t\t\tymax=Math.max(comp.y, ymax);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tx:{ upper: xmax, lower:xmin },\r\n\t\t\ty:{ upper: ymax, lower:ymin },\r\n\t\t\ttoString:function(){\r\n\t\t\t\treturn \"[ x:\"+xmax+\" - \"+xmin+\", y:\"+ymax+\" - \"+ymin+\"]\";\r\n\t\t\t}\r\n\t\t};\t\/\/\tobject\r"}},"dojo.charting.Plot.destroy":{"meta":{"summary":"Clean out any existing DOM node references.","src":" \tvar node=this.dataNode;\r\n\t\twhile(node && node.childNodes && node.childNodes.length > 0){\r\n\t\t\tnode.removeChild(node.childNodes[0]);\r\n\t\t}\r\n\t\tthis.dataNode=null;\r","instance_variables":["dataNode"]}}},"objects":{"dojo.charting.RenderPlotSeries":{"meta":{"variables":["Singly","Grouped"]}}}}},"dojo.charting.PlotArea":{"meta":{"requires":{"common":["dojo.lang.common","dojo.gfx.color","dojo.gfx.color.hsl","dojo.charting.Plot"]},"functions":{"dojo.charting.PlotArea":{"meta":{"summary":"Creates a new PlotArea for drawing onto a Chart.","src":" var id=\"dojo-charting-plotarea-\"+dojo.charting.PlotArea.count++;\r\n\tthis.getId=function(){ return id; };\r\n\tthis.setId=function(key){ id = key; };\r\n\tthis.areaType = \"standard\"; \t\/\/\tstandard || radar\r\n\tthis.plots = [];\t\/\/\tplots that will be drawn on this area\r\n\tthis.size={ width:600, height:400 };\r\n\tthis.padding={ top:10, right:10, bottom:20, left:20 };\r\n\t\/\/\tdrawing node references.\r\n\tthis.nodes = {\r\n\t\tmain:null,\r\n\t\tarea:null,\r\n\t\tbackground: null,\r\n\t\taxes: null,\r\n\t\tplots: null\r\n\t};\r\n\t\/\/\tthis is preset for a limited color range (green to purple), \r\n\t\/\/\tanticipating a max of 32 series on this plot area.\r\n\t\/\/\tif you need more flexibility, override these numbers.\r\n\tthis._color = { h: 140, s: 120, l: 120, step: 27 };\r","instance_variables":["areaType","plots","size","padding","nodes","_color"],"prototype_variables":["getArea"]}},"dojo.charting.PlotArea.getId":{"meta":{"summary":"","src":" this.getId=function(){ return id;     ","instance":"dojo.charting.PlotArea"}},"dojo.charting.PlotArea.setId":{"meta":{"summary":"","parameters":{"key":{"type":""}},"src":" this.setId=function(key){ id = key;     ","instance":"dojo.charting.PlotArea"}},"dojo.charting.PlotArea.nextColor":{"meta":{"summary":"Advances the internal HSV cursor and returns the next generated color.","src":" \tvar rgb=dojo.gfx.color.hsl2rgb(this._color.h, this._color.s, this._color.l);\r\n\t\tthis._color.h = (this._color.h + this._color.step)%360;\r\n\t\twhile(this._color.h < 140){ \r\n\t\t\tthis._color.h += this._color.step; \r\n\t\t}\r\n\t\treturn dojo.gfx.color.rgb2hex(rgb[0], rgb[1], rgb[2]);\t\/\/\tstring\r","instance_variables":["_color.h"],"returns":"string"}},"dojo.charting.PlotArea.getAxes":{"meta":{"summary":"get the unique axes for this plot area.","src":" \tvar axes={};\r\n\t\tfor(var i=0; i<this.plots.length; i++){\r\n\t\t\tvar plot=this.plots[i];\r\n\t\t\taxes[plot.axisX.getId()] = {\r\n\t\t\t\taxis: plot.axisX,\r\n\t\t\t\tdrawAgainst: plot.axisY,\r\n\t\t\t\tplot: plot,\r\n\t\t\t\tplane: \"x\"\r\n\t\t\t};\r\n\t\t\taxes[plot.axisY.getId()] = {\r\n\t\t\t\taxis: plot.axisY,\r\n\t\t\t\tdrawAgainst: plot.axisX,\r\n\t\t\t\tplot: plot,\r\n\t\t\t\tplane: \"y\"\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn axes;\t\/\/\tobject \r","returns":"object"}},"dojo.charting.PlotArea.getLegendInfo":{"meta":{"summary":"return an array describing all data series on this plot area.","src":" \tvar a=[];\r\n\t\tfor(var i=0; i<this.plots.length; i++){\r\n\t\t\tfor(var j=0; j<this.plots[i].series.length; j++){\r\n\t\t\t\tvar data = this.plots[i].series[j].data;\r\n\t\t\t\ta.push({ label:data.label, color:data.color });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\t\/\/\tarray\r","returns":"array"}},"dojo.charting.PlotArea.setAxesRanges":{"meta":{"summary":"Find and set the ranges on all axes on this plotArea. We do this because plots may have axes in common; if you want to use this, make sure you do it *before* initialization.","src":" \tvar ranges={};\r\n\t\tvar axes={};\r\n\t\tfor(var i=0; i<this.plots.length; i++){\r\n\t\t\tvar plot = this.plots[i];\r\n\t\t\tvar ranges=plot.getRanges();\r\n\t\t\tvar x=ranges.x;\r\n\t\t\tvar y=ranges.y;\r\n\t\t\tvar ax, ay;\r\n\t\t\tif(!axes[plot.axisX.getId()]){\r\n\t\t\t\taxes[plot.axisX.getId()]=plot.axisX;\r\n\t\t\t\tranges[plot.axisX.getId()]={upper: x.upper, lower:x.lower};\r\n\t\t\t}\r\n\t\t\tax=ranges[plot.axisX.getId()];\r\n\t\t\tax.upper=Math.max(ax.upper, x.upper);\r\n\t\t\tax.lower=Math.min(ax.lower, x.lower);\r\n\t\t\tif(!axes[plot.axisY.getId()]){\r\n\t\t\t\taxes[plot.axisY.getId()]=plot.axisY;\r\n\t\t\t\tranges[plot.axisY.getId()]={upper: y.upper, lower:y.lower};\r\n\t\t\t}\r\n\t\t\tay=ranges[plot.axisY.getId()];\r\n\t\t\tay.upper=Math.max(ay.upper, y.upper);\r\n\t\t\tay.lower=Math.min(ay.lower, y.lower);\r\n\t\t}\r\n\t\t\/\/\tnow that we have all the max\/min ranges, set the axes\r\n\t\tfor(var p in axes){\r\n\t\t\taxes[p].range=ranges[p];\r\n\t\t}\r"}},"dojo.charting.PlotArea.render":{"meta":{"summary":"Render this plotArea. Optional kwArgs are the same as that taken for Series.evaluate;","parameters":{"kwArgs":{"type":"object?"},"applyToData":{"type":"function?"}},"src":" \tif(!this.nodes.main\r\n\t\t\t|| !this.nodes.area \r\n\t\t\t|| !this.nodes.background \r\n\t\t\t|| !this.nodes.plots \r\n\t\t\t|| !this.nodes.axes\r\n\t\t){ this.initialize(); }\r\n\t\t\/\/\tplot it.\r\n\t\tfor(var i=0; i<this.plots.length; i++){\r\n\t\t\tvar plot=this.plots[i];\r\n\t\t\tthis.nodes.plots.removeChild(plot.dataNode);\r\n\t\t\tvar target = this.initializePlot(plot);\r\n\t\t\tswitch(plot.renderType){\r\n\t\t\t\tcase dojo.charting.RenderPlotSeries.Grouped:\t{\r\n\t\t\t\t\t\/\/ ALWAYS plot using the first plotter, ignore any others.\r\n\t\t\t\t\tif(plot.series[0]){\r\n\t\t\t\t\t\ttarget.appendChild(plot.series[0].plotter(this, plot, kwArgs, applyToData));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase dojo.charting.RenderPlotSeries.Singly:\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\tfor(var j=0; j<plot.series.length; j++){\r\n\t\t\t\t\t\tvar series = plot.series[j];\r\n\t\t\t\t\t\tvar data = series.data.evaluate(kwArgs);\r\n\t\t\t\t\t\ttarget.appendChild(series.plotter(data, this, plot, applyToData));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.nodes.plots.appendChild(target);\r\n\t\t}\r"},"extra":{"parameters":{"applyToData":{"type":"is","summary":"a callback function used by plotters for customization."}}}},"dojo.charting.PlotArea.destroy":{"meta":{"summary":"Clean out any existing DOM references.","src":" \tfor(var i=0; i<this.plots.length; i++){\r\n\t\t\tthis.plots[i].destroy();\r\n\t\t};\r\n\t\t\/\/\tclean out any child nodes.\r\n\t\tfor(var p in this.nodes){\r\n\t\t\tvar node=this.nodes[p];\r\n\t\t\tif(!node) continue;\r\n\t\t\tif(!node.childNodes) continue;\r\n\t\t\twhile(node.childNodes.length > 0){ \r\n\t\t\t\tnode.removeChild(node.childNodes[0]); \r\n\t\t\t}\r\n\t\t\tthis.nodes[p]=null;\r\n\t\t}\r"}}}}},"dojo.charting.Series":{"meta":{"requires":{"common":["dojo.lang.common","dojo.charting.Plotters"]},"functions":{"dojo.charting.Series":{"meta":{"summary":"Create an instance of data series for plotting.","parameters":{"kwArgs":{"type":"object?"}},"src":" var args = kwArgs || { length:1 };\r\n\tthis.dataSource = args.dataSource || null;\r\n\tthis.bindings = { };\r\n\tthis.color = args.color;\r\n\tthis.label = args.label;\r\n\tif(args.bindings){\r\n\t\tfor(var p in args.bindings){\r\n\t\t\tthis.addBinding(p, args.bindings[p]);\r\n\t\t}\r\n\t}\r","instance_variables":["dataSource","bindings","color","label"],"prototype_variables":["bind","addBinding","evaluate","trends"]}},"dojo.charting.Series.mean":{"meta":{"summary":"Returns the mean or average over the set of values.","parameters":{"values":{"type":"array"},"len":{"type":"int"}},"src":" \t\tvar range = this.createRange(values, len);\r\n\t\t\tif(range.index<0){ return 0; }\r\n\t\t\tvar total = 0;\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(var i=range.index; i>=range.start; i--){\r\n\t\t\t\ttotal += values[i].y; \r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\ttotal \/= Math.max(count,1);\r\n\t\t\treturn total;\t\/\/\tfloat\r","returns":"float"}},"dojo.charting.Series.variance":{"meta":{"summary":"Returns the variance of the set of values.","parameters":{"values":{"type":"array"},"len":{"type":"int"}},"src":" \t\tvar range = this.createRange(values,len);\r\n\t\t\tif(range.index < 0){ return 0; }\r\n\t\t\tvar total = 0;\r\n\t\t\tvar square = 0;\r\n\t\t\tvar count = 0;\r\n\t\t\tfor(var i=range.index; i>=range.start; i--){\r\n\t\t\t\ttotal += values[i].y;\r\n\t\t\t\tsquare += Math.pow(values[i].y, 2);\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\treturn (square\/count)-Math.pow(total\/count,2);\t\/\/\tfloat\r","returns":"float"}},"dojo.charting.Series.standardDeviation":{"meta":{"summary":"Returns the standard deviation of the set of values.","parameters":{"values":{"type":"array"},"len":{"type":"int"}},"src":" \t\treturn Math.sqrt(this.getVariance(values, len));\t\/\/\tfloat\r","returns":"float"}},"dojo.charting.Series.max":{"meta":{"summary":"Returns the max number in the set of values.","parameters":{"values":{"type":"array"},"len":{"type":"int"}},"src":" \t\tvar range = this.createRange(values, len);\r\n\t\t\tif(range.index < 0){ return 0; }\r\n\t\t\tvar max = Number.MIN_VALUE;\r\n\t\t\tfor (var i=range.index; i>=range.start; i--){\r\n\t\t\t\tmax = Math.max(values[i].y,max);\r\n\t\t\t}\r\n\t\t\treturn max;\t\/\/\tfloat\r","returns":"float"}},"dojo.charting.Series.min":{"meta":{"summary":"Returns the lowest number in the set of values.","parameters":{"values":{"type":"array"},"len":{"type":"int"}},"src":" \t\tvar range=this.createRange(values, len);\r\n\t\t\tif(range.index < 0){ return 0; }\r\n\t\t\tvar min = Number.MAX_VALUE;\r\n\t\t\tfor(var i=range.index; i>=range.start; i--){\r\n\t\t\t\tmin = Math.min(values[i].y, min);\r\n\t\t\t}\r\n\t\t\treturn min;\t\/\/\tfloat\r","returns":"float"}},"dojo.charting.Series.median":{"meta":{"summary":"Returns the median in the set of values (number closest to the middle of a sorted set).","parameters":{"values":{"type":"array"},"len":{"type":"int"}},"src":" \t\tvar range = this.createRange(values, len);\r\n\t\t\tif(range.index<0){ return 0; }\r\n\t\t\tvar a = [];\r\n\t\t\tfor (var i=range.index; i>=range.start; i--){\r\n\t\t\t\tvar b=false;\r\n\t\t\t\tfor(var j=0; j<a.length; j++){\r\n\t\t\t\t\tif(values[i].y == a[j]){\r\n\t\t\t\t\t\tb = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!b){ \r\n\t\t\t\t\ta.push(values[i].y); \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ta.sort();\r\n\t\t\tif(a.length > 0){ \r\n\t\t\t\treturn a[Math.ceil(a.length \/ 2)]; \t\/\/\tfloat\r\n\t\t\t}\r\n\t\t\treturn 0;\t\/\/\tfloat\r","returns":"float"}},"dojo.charting.Series.mode":{"meta":{"summary":"Returns the mode in the set of values","parameters":{"values":{"type":"array"},"len":{"type":"int"}},"src":" \t\tvar range=this.createRange(values, len);\r\n\t\t\tif(range.index<0){ return 0; }\r\n\t\t\tvar o = {};\r\n\t\t\tvar ret = 0\r\n\t\t\tvar median = Number.MIN_VALUE;\r\n\t\t\tfor(var i=range.index; i>=range.start; i--){\r\n\t\t\t\tif (!o[values[i].y]){\r\n\t\t\t\t\to[values[i].y] = 1;\r\n\t\t\t\t} else { \r\n\t\t\t\t\to[values[i].y]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(var p in o){\r\n\t\t\t\tif(median < o[p]){ \r\n\t\t\t\t\tmedian = o[p]; \r\n\t\t\t\t\tret=p; \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn ret;\r"}}}}},"dojo.charting.svg.Axis":{"meta":{"requires":{"common":["dojo.lang.common"]},"functions":{"dojo.charting.Axis.renderLines":{"meta":{"summary":"Renders any reference lines for this axis.","parameters":{"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"plane":{"type":"string"}},"src":" \t\tif(this.nodes.lines){\r\n\t\t\t\twhile(this.nodes.lines.childNodes.length > 0){\r\n\t\t\t\t\tthis.nodes.lines.removeChild(this.nodes.lines.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.nodes.lines.parentNode){\r\n\t\t\t\t\tthis.nodes.lines.parentNode.removeChild(this.nodes.lines);\r\n\t\t\t\t\tthis.nodes.lines = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar area = plotArea.getArea();\r\n\t\t\tvar g = this.nodes.lines = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tg.setAttribute(\"id\", this.getId()+\"-lines\");\r\n\t\t\tfor(var i=0; i<this._labels.length; i++){\r\n\t\t\t\tif (this._labels[i].value == this.origin){ continue; }\r\n\t\t\t\tvar v = this.getCoord(this._labels[i].value, plotArea, plot);\r\n\t\t\t\tvar l=document.createElementNS(dojo.svg.xmlns.svg, \"line\");\r\n\t\t\t\tl.setAttribute(\"style\",\"stroke:#999;stroke-width:1px;stroke-dasharray:1,4;\");\r\n\t\t\t\tif(plane == \"x\"){\r\n\t\t\t\t\tl.setAttribute(\"y1\",area.top);\r\n\t\t\t\t\tl.setAttribute(\"y2\",area.bottom);\r\n\t\t\t\t\tl.setAttribute(\"x1\",v);\r\n\t\t\t\t\tl.setAttribute(\"x2\",v);\r\n\t\t\t\t}\r\n\t\t\t\telse if (plane == \"y\"){\r\n\t\t\t\t\tl.setAttribute(\"y1\",v);\r\n\t\t\t\t\tl.setAttribute(\"y2\",v);\r\n\t\t\t\t\tl.setAttribute(\"x1\",area.left);\r\n\t\t\t\t\tl.setAttribute(\"x2\",area.right);\r\n\t\t\t\t}\r\n\t\t\t\tg.appendChild(l);\r\n\t\t\t}\r\n\t\t\treturn g;\t\/\/\tSVGGElement\r","instance_variables":["nodes.lines"],"returns":"SVGGElement"}},"dojo.charting.Axis.renderTicks":{"meta":{"summary":"Renders any tick lines for this axis.","parameters":{"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"plane":{"type":"string"},"coord":{"type":"float"}},"src":" \t\tif(this.nodes.ticks){\r\n\t\t\t\twhile(this.nodes.ticks.childNodes.length > 0){\r\n\t\t\t\t\tthis.nodes.ticks.removeChild(this.nodes.ticks.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.nodes.ticks.parentNode){\r\n\t\t\t\t\tthis.nodes.ticks.parentNode.removeChild(this.nodes.ticks);\r\n\t\t\t\t\tthis.nodes.ticks = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar g = this.nodes.ticks = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tg.setAttribute(\"id\", this.getId()+\"-ticks\");\r\n\t\t\tfor(var i=0; i<this._labels.length; i++){\r\n\t\t\t\tvar v = this.getCoord(this._labels[i].value, plotArea, plot);\r\n\t\t\t\tvar l=document.createElementNS(dojo.svg.xmlns.svg, \"line\");\r\n\t\t\t\tl.setAttribute(\"style\",\"stroke:#000;stroke-width:1pt;\");\r\n\t\t\t\tif(plane == \"x\"){\r\n\t\t\t\t\tl.setAttribute(\"y1\",coord);\r\n\t\t\t\t\tl.setAttribute(\"y2\",coord+3);\r\n\t\t\t\t\tl.setAttribute(\"x1\",v);\r\n\t\t\t\t\tl.setAttribute(\"x2\",v);\r\n\t\t\t\t}\r\n\t\t\t\telse if (plane == \"y\"){\r\n\t\t\t\t\tl.setAttribute(\"y1\",v);\r\n\t\t\t\t\tl.setAttribute(\"y2\",v);\r\n\t\t\t\t\tl.setAttribute(\"x1\",coord-2);\r\n\t\t\t\t\tl.setAttribute(\"x2\",coord+2);\r\n\t\t\t\t}\r\n\t\t\t\tg.appendChild(l);\r\n\t\t\t}\r\n\t\t\treturn g;\t\/\/\tSVGGElement\r","instance_variables":["nodes.ticks"],"returns":"SVGGElement"}},"dojo.charting.Axis.renderLabels":{"meta":{"summary":"Render all labels for this axis.","parameters":{"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"plane":{"type":"string"},"coord":{"type":"float"},"textSize":{"type":"int"},"anchor":{"type":"string"}},"src":" \t\tfunction createLabel(label, x, y, textSize, anchor){\r\n\t\t\t\tvar text = document.createElementNS(dojo.svg.xmlns.svg, \"text\");\r\n\t\t\t\ttext.setAttribute(\"x\", x);\r\n\t\t\t\ttext.setAttribute(\"y\", (plane==\"x\"?y:y+2));\r\n\t\t\t\ttext.setAttribute(\"style\", \"text-anchor:\"+anchor+\";font-family:sans-serif;font-size:\"+textSize+\"px;fill:#000;\");\r\n\t\t\t\ttext.appendChild(document.createTextNode(label));\r\n\t\t\t\treturn text;\r\n\t\t\t};\r\n\t\t\t\/\/\twipe if needed\r\n\t\t\tif(this.nodes.labels){\r\n\t\t\t\twhile(this.nodes.labels.childNodes.length > 0){\r\n\t\t\t\t\tthis.nodes.labels.removeChild(this.nodes.labels.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.nodes.labels.parentNode){\r\n\t\t\t\t\tthis.nodes.labels.parentNode.removeChild(this.nodes.labels);\r\n\t\t\t\t\tthis.nodes.labels = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar g = this.nodes.labels = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tg.setAttribute(\"id\", this.getId()+\"-labels\");\r\n\t\t\tfor(var i=0; i<this._labels.length; i++){\r\n\t\t\t\tvar v = this.getCoord(this._labels[i].value, plotArea, plot);\r\n\t\t\t\tif(plane == \"x\"){\r\n\t\t\t\t\tg.appendChild(createLabel(this._labels[i].label, v, coord, textSize, anchor));\r\n\t\t\t\t}\r\n\t\t\t\telse if (plane == \"y\"){\r\n\t\t\t\t\tg.appendChild(createLabel(this._labels[i].label, coord, v, textSize, anchor));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn g;\t\/\/\tSVGGelement\r","instance_variables":["nodes.labels"],"returns":"SVGGelement"}},"dojo.charting.Axis.render":{"meta":{"summary":"Renders this axis to the given plot. get the origin plot point.","parameters":{"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"drawAgainst":{"type":"dojo.charting.Axis"},"plane":{"type":"string"}},"src":" \t\tvar area = plotArea.getArea();\r\n\t\t\tvar stroke = 1;\r\n\t\t\tvar style = \"stroke:#000;stroke-width:\"+stroke+\"px;\";\r\n\t\t\tvar textSize=10;\r\n\t\t\tvar coord = drawAgainst.getCoord(this.origin, plotArea, plot);\r\n\t\t\t\/\/\tdraw the axis.\r\n\t\t\tthis.nodes.main = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar g = this.nodes.main;\r\n\t\t\tg.setAttribute(\"id\", this.getId());\t\/\/\tneed a handle if we have to kill parts of the axis def.\r\n\t\t\tvar line = this.nodes.axis = document.createElementNS(dojo.svg.xmlns.svg, \"line\");\r\n\t\t\tif(plane == \"x\"){\r\n\t\t\t\tline.setAttribute(\"y1\", coord);\r\n\t\t\t\tline.setAttribute(\"y2\", coord);\r\n\t\t\t\tline.setAttribute(\"x1\", area.left-stroke);\r\n\t\t\t\tline.setAttribute(\"x2\", area.right+stroke);\r\n\t\t\t\tline.setAttribute(\"style\", style);\r\n\t\t\t\t\/\/\tset up the labels\r\n\t\t\t\tvar y = coord+textSize+2;\r\n\t\t\t\tif(this.showLines){\r\n\t\t\t\t\tg.appendChild(this.renderLines(plotArea, plot, plane, y));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showTicks){\r\n\t\t\t\t\tg.appendChild(this.renderTicks(plotArea, plot, plane, coord));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLabels){\r\n\t\t\t\t\tg.appendChild(this.renderLabels(plotArea, plot, plane, y, textSize, \"middle\"));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLabel && this.label){\r\n\t\t\t\t\tvar x = plotArea.size.width\/2;\r\n\t\t\t\t\tvar text = document.createElementNS(dojo.svg.xmlns.svg, \"text\");\r\n\t\t\t\t\ttext.setAttribute(\"x\", x);\r\n\t\t\t\t\ttext.setAttribute(\"y\", (coord + (textSize*2) + (textSize\/2)));\r\n\t\t\t\t\ttext.setAttribute(\"style\", \"text-anchor:middle;font-family:sans-serif;font-weight:bold;font-size:\"+(textSize+2)+\"px;fill:#000;\");\r\n\t\t\t\t\ttext.appendChild(document.createTextNode(this.label));\r\n\t\t\t\t\tg.appendChild(text);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tline.setAttribute(\"x1\", coord);\r\n\t\t\t\tline.setAttribute(\"x2\", coord);\r\n\t\t\t\tline.setAttribute(\"y1\", area.top);\r\n\t\t\t\tline.setAttribute(\"y2\", area.bottom);\r\n\t\t\t\tline.setAttribute(\"style\", style);\r\n\t\t\t\t\/\/\tset up the labels\r\n\t\t\t\tvar isMax = this.origin == drawAgainst.range.upper;\r\n\t\t\t\tvar x = coord + (isMax?4:-4);\r\n\t\t\t\tvar anchor = isMax?\"start\":\"end\";\r\n\t\t\t\tif(this.showLines){\r\n\t\t\t\t\tg.appendChild(this.renderLines(plotArea, plot, plane, x));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showTicks){\r\n\t\t\t\t\tg.appendChild(this.renderTicks(plotArea, plot, plane, coord));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLabels){\r\n\t\t\t\t\tg.appendChild(this.renderLabels(plotArea, plot, plane, x, textSize, anchor));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLabel && this.label){\r\n\t\t\t\t\tvar x = isMax?(coord+(textSize*2)+(textSize\/2)):(coord-(textSize*4));\r\n\t\t\t\t\tvar y = plotArea.size.height \/ 2;\r\n\t\t\t\t\tvar text = document.createElementNS(dojo.svg.xmlns.svg, \"text\");\r\n\t\t\t\t\ttext.setAttribute(\"x\", x);\r\n\t\t\t\t\ttext.setAttribute(\"y\", y);\r\n\t\t\t\t\ttext.setAttribute(\"transform\", \"rotate(90, \" + x + \", \" + y + \")\");\r\n\t\t\t\t\ttext.setAttribute(\"style\", \"text-anchor:middle;font-family:sans-serif;font-weight:bold;font-size:\"+(textSize+2)+\"px;fill:#000;\");\r\n\t\t\t\t\ttext.appendChild(document.createTextNode(this.label));\r\n\t\t\t\t\tg.appendChild(text);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tg.appendChild(line);\r\n\t\t\treturn g;\t\/\/ \tSVGGElement\r","instance_variables":["nodes.main","nodes.axis","origin"],"returns":"SVGGElement"}}}}},"dojo.charting.svg.PlotArea":{"meta":{"requires":{"common":["dojo.lang.common","dojo.svg"]},"functions":{"dojo.charting.PlotArea.initializePlot":{"meta":{"summary":"Initialize the plot node for data rendering.","parameters":{"plot":{"type":""}},"src":" \t\tplot.destroy();\r\n\t\t\tplot.dataNode = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tplot.dataNode.setAttribute(\"id\", plot.getId());\r\n\t\t\treturn plot.dataNode;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.PlotArea.initialize":{"meta":{"summary":"Initialize the PlotArea.","src":" \t\tthis.destroy();\t\/\/\tkill everything first.\r\n\t\t\t\/\/\tstart with the background\r\n\t\t\tthis.nodes.main = document.createElement(\"div\");\r\n\t\t\tthis.nodes.area = document.createElementNS(dojo.svg.xmlns.svg, \"svg\");\r\n\t\t\tthis.nodes.area.setAttribute(\"id\", this.getId());\r\n\t\t\tthis.nodes.area.setAttribute(\"width\", this.size.width);\r\n\t\t\tthis.nodes.area.setAttribute(\"height\", this.size.height);\r\n\t\t\tthis.nodes.main.appendChild(this.nodes.area);\r\n\t\t\tvar area=this.getArea();\r\n\t\t\tvar defs = document.createElementNS(dojo.svg.xmlns.svg, \"defs\");\r\n\t\t\tvar clip = document.createElementNS(dojo.svg.xmlns.svg, \"clipPath\");\r\n\t\t\tclip.setAttribute(\"id\",this.getId()+\"-clip\");\r\n\t\t\tvar rect = document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\t\t\r\n\t\t\trect.setAttribute(\"x\", area.left);\r\n\t\t\trect.setAttribute(\"y\", area.top);\r\n\t\t\trect.setAttribute(\"width\", area.right-area.left);\r\n\t\t\trect.setAttribute(\"height\", area.bottom-area.top);\r\n\t\t\tclip.appendChild(rect);\r\n\t\t\tdefs.appendChild(clip);\r\n\t\t\tthis.nodes.area.appendChild(defs);\r\n\t\t\tthis.nodes.background = document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\r\n\t\t\tthis.nodes.background.setAttribute(\"id\", this.getId()+\"-background\");\r\n\t\t\tthis.nodes.background.setAttribute(\"width\", this.size.width);\r\n\t\t\tthis.nodes.background.setAttribute(\"height\", this.size.height);\r\n\t\t\tthis.nodes.background.setAttribute(\"fill\", \"#fff\");\r\n\t\t\tthis.nodes.area.appendChild(this.nodes.background);\r\n\t\t\tthis.nodes.plots = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tthis.nodes.plots.setAttribute(\"id\", this.getId()+\"-plots\");\r\n\t\t\tthis.nodes.plots.setAttribute(\"style\",\"clip-path:url(#\"+this.getId()+\"-clip);\");\r\n\t\t\tthis.nodes.area.appendChild(this.nodes.plots);\r\n\t\t\tfor(var i=0; i<this.plots.length; i++){\r\n\t\t\t\tthis.nodes.plots.appendChild(this.initializePlot(this.plots[i]));\r\n\t\t\t}\r\n\t\t\t\/\/\tdo the axes\r\n\t\t\tthis.nodes.axes = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tthis.nodes.axes.setAttribute(\"id\", this.getId()+\"-axes\");\r\n\t\t\tthis.nodes.area.appendChild(this.nodes.axes);\r\n\t\t\tvar axes = this.getAxes();\r\n\t\t\tfor(var p in axes){\r\n\t\t\t\tvar obj = axes[p];\r\n\t\t\t\tthis.nodes.axes.appendChild(obj.axis.initialize(this, obj.plot, obj.drawAgainst, obj.plane));\r\n\t\t\t}\r\n\t\t\treturn this.nodes.main;\t\/\/\tHTMLDivElement\r","instance_variables":["nodes.main","nodes.area","nodes.background","nodes.plots","nodes.axes"],"returns":"HTMLDivElement"}}}}},"dojo.charting.svg.Plotters":{"meta":{"requires":{"common":["dojo.lang.common","dojo.svg"]},"functions":{"dojo.charting.Plotters.Bar":{"meta":{"summary":"Plots a set of grouped bars. Bindings: y","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\t\/\/\tcalculate the width of each bar.\r\n\t\t\tvar space = 8;\r\n\t\t\tvar nPoints = data[0].length;\r\n\t\t\tvar width = ((area.right-area.left)-(space*(nPoints-1)))\/nPoints;\t\/\/\tthe width of each group.\r\n\t\t\tvar barWidth = width\/n;\t\/\/\tthe width of each bar, no spaces.\r\n\t\t\tvar yOrigin = plot.axisY.getCoord(plot.axisX.origin, plotarea, plot);\r\n\t\t\tfor(var i=0; i<nPoints; i++){\r\n\t\t\t\t\/\/\tcalculate offset\r\n\t\t\t\tvar xStart = area.left+(width*i)+(space*i);\r\n\t\t\t\tfor(var j=0; j<n; j++){\r\n\t\t\t\t\tvar value = data[j][i].y;\r\n\t\t\t\t\tvar yA = yOrigin;\r\n\t\t\t\t\tvar x = xStart + (barWidth*j);\r\n\t\t\t\t\tvar y = plot.axisY.getCoord(value, plotarea, plot);\r\n\t\t\t\t\tvar h = Math.abs(yA-y);\r\n\t\t\t\t\tif(value < plot.axisX.origin){\r\n\t\t\t\t\t\tyA = y;\r\n\t\t\t\t\t\ty = yOrigin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar bar=document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\r\n\t\t\t\t\tbar.setAttribute(\"fill\", data[j][i].series.color);\r\n\t\t\t\t\tbar.setAttribute(\"stroke-width\", \"0\");\r\n\t\t\t\t\tbar.setAttribute(\"x\", x);\r\n\t\t\t\t\tbar.setAttribute(\"y\", y);\r\n\t\t\t\t\tbar.setAttribute(\"width\", barWidth);\r\n\t\t\t\t\tbar.setAttribute(\"height\", h);\r\n\t\t\t\t\tbar.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\t\tif(applyTo){ applyTo(bar, data[j][i].src); }\r\n\t\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/ SVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.HorizontalBar":{"meta":{"summary":"Plots data in a set of grouped bars horizontally. Bindings: y","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\tvar space = 6;\r\n\t\t\tvar nPoints = data[0].length;\r\n\t\t\tvar h = ((area.bottom-area.top)-(space*(nPoints-1)))\/nPoints;\r\n\t\t\tvar barH = h\/n;\r\n\t\t\tvar xOrigin = plot.axisX.getCoord(0, plotarea, plot);\r\n\t\t\tfor(var i=0; i<nPoints; i++){\r\n\t\t\t\t\/\/\tcalculate offset\r\n\t\t\t\tvar yStart = area.top+(h*i)+(space*i);\r\n\t\t\t\tfor(var j=0; j<n; j++){\r\n\t\t\t\t\tvar value = data[j][i].y;\r\n\t\t\t\t\tvar y = yStart + (barH*j);\r\n\t\t\t\t\tvar xA = xOrigin;\r\n\t\t\t\t\tvar x = plot.axisX.getCoord(value, plotarea, plot);\r\n\t\t\t\t\tvar w = Math.abs(x-xA);\r\n\t\t\t\t\tif(value > 0){\r\n\t\t\t\t\t\tx = xOrigin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar bar=document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\r\n\t\t\t\t\tbar.setAttribute(\"fill\", data[j][i].series.color);\r\n\t\t\t\t\tbar.setAttribute(\"stroke-width\", \"0\");\r\n\t\t\t\t\tbar.setAttribute(\"x\", xA);\r\n\t\t\t\t\tbar.setAttribute(\"y\", y);\r\n\t\t\t\t\tbar.setAttribute(\"width\", w);\r\n\t\t\t\t\tbar.setAttribute(\"height\", barH);\r\n\t\t\t\t\tbar.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\t\tif(applyTo){ applyTo(bar, data[j][i].src); }\r\n\t\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.Gantt":{"meta":{"summary":"Plots a grouped set of Gantt bars Bindings: high\/low","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\tvar space = 2;\r\n\t\t\tvar nPoints = data[0].length;\r\n\t\t\tvar h = ((area.bottom-area.top)-(space*(nPoints-1)))\/nPoints;\r\n\t\t\tvar barH = h\/n;\r\n\t\t\tfor(var i=0; i<nPoints; i++){\r\n\t\t\t\t\/\/\tcalculate offset\r\n\t\t\t\tvar yStart = area.top+(h*i)+(space*i);\r\n\t\t\t\tfor(var j=0; j<n; j++){\r\n\t\t\t\t\tvar high = data[j][i].high;\r\n\t\t\t\t\tvar low = data[j][i].low;\r\n\t\t\t\t\tif(low > high){\r\n\t\t\t\t\t\tvar t = high;\r\n\t\t\t\t\t\thigh = low;\r\n\t\t\t\t\t\tlow = t;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar x = plot.axisX.getCoord(low, plotarea, plot);\r\n\t\t\t\t\tvar w = plot.axisX.getCoord(high, plotarea, plot) - x;\r\n\t\t\t\t\tvar y = yStart + (barH*j);\r\n\t\t\t\t\tvar bar=document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\r\n\t\t\t\t\tbar.setAttribute(\"fill\", data[j][i].series.color);\r\n\t\t\t\t\tbar.setAttribute(\"stroke-width\", \"0\");\r\n\t\t\t\t\tbar.setAttribute(\"x\", x);\r\n\t\t\t\t\tbar.setAttribute(\"y\", y);\r\n\t\t\t\t\tbar.setAttribute(\"width\", w);\r\n\t\t\t\t\tbar.setAttribute(\"height\", barH);\r\n\t\t\t\t\tbar.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\t\tif(applyTo){ applyTo(bar, data[j][i].src); }\r\n\t\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.StackedArea":{"meta":{"summary":"Plots a set of stacked areas. Bindings: x\/y","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tvar totals = [];\r\n\t\t\t\/\/\twe're assuming that all series for this plot has the name x assignment for now.\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\t\/\/\trun through and add current totals\r\n\t\t\t\tfor(var j=0; j<tmp.length; j++){\r\n\t\t\t\t\tif(i==0){ totals.push(tmp[j].y); }\r\n\t\t\t\t\telse { totals[j] += tmp[j].y; }\r\n\t\t\t\t\ttmp[j].y = totals[j];\r\n\t\t\t\t}\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\tfor(var i=n-1; i>=0; i--){\r\n\t\t\t\tvar path = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\r\n\t\t\t\tpath.setAttribute(\"fill\", data[i][0].series.color);\r\n\t\t\t\tpath.setAttribute(\"fill-opacity\", \"0.4\");\r\n\t\t\t\tpath.setAttribute(\"stroke\", data[i][0].series.color);\r\n\t\t\t\tpath.setAttribute(\"stroke-width\" , \"1\");\r\n\t\t\t\tpath.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\t\tvar cmd = [];\r\n\t\t\t\tvar r=3;\r\n\t\t\t\tfor(var j=0; j<data[i].length; j++){\r\n\t\t\t\t\tvar values = data[i];\r\n\t\t\t\t\tvar x = plot.axisX.getCoord(values[j].x, plotarea, plot);\r\n\t\t\t\t\tvar y = plot.axisY.getCoord(values[j].y, plotarea, plot);\r\n\t\t\t\t\tif(j==0){ cmd.push(\"M\"); }\r\n\t\t\t\t\telse { cmd.push(\"L\"); }\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t\/\/\tpoints on the line\r\n\t\t\t\t\tvar c=document.createElementNS(dojo.svg.xmlns.svg, \"circle\");\r\n\t\t\t\t\tc.setAttribute(\"cx\",x);\r\n\t\t\t\t\tc.setAttribute(\"cy\",y);\r\n\t\t\t\t\tc.setAttribute(\"r\",\"3\");\r\n\t\t\t\t\tc.setAttribute(\"fill\", values[j].series.color);\r\n\t\t\t\t\tc.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\t\tc.setAttribute(\"stroke-width\", \"1\");\r\n\t\t\t\t\tc.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\t\t\tgroup.appendChild(c);\r\n\t\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tnow run the path backwards from the previous series.\r\n\t\t\t\tif(i == 0){\r\n\t\t\t\t\tcmd.push(\"L\");\r\n\t\t\t\t\tcmd.push(x + \",\" + plot.axisY.getCoord(plot.axisX.origin, plotarea, plot));\r\n\t\t\t\t\tcmd.push(\"L\");\r\n\t\t\t\t\tcmd.push(plot.axisX.getCoord(data[0][0].x, plotarea, plot) + \",\" +  plot.axisY.getCoord(plot.axisX.origin, plotarea, plot));\r\n\t\t\t\t\tcmd.push(\"Z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar values = data[i-1];\r\n\t\t\t\t\tcmd.push(\"L\");\r\n\t\t\t\t\tcmd.push(x + \",\" + Math.round(plot.axisY.getCoord(values[values.length-1].y, plotarea, plot)));\r\n\t\t\t\t\tfor(var j=values.length-2; j>=0; j--){\r\n\t\t\t\t\t\tvar x = plot.axisX.getCoord(values[j].x, plotarea, plot);\r\n\t\t\t\t\t\tvar y = plot.axisY.getCoord(values[j].y, plotarea, plot);\r\n\t\t\t\t\t\tcmd.push(\"L\");\r\n\t\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpath.setAttribute(\"d\", cmd.join(\" \")+ \" Z\");\r\n\t\t\t\tgroup.appendChild(path);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.StackedCurvedArea":{"meta":{"summary":"Plots a set of stacked areas, using a tensioning factor to soften points. Bindings: x\/y","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar tension = 3;\r\n\t\t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tvar totals = [];\r\n\t\t\t\/\/\twe're assuming that all series for this plot has the name x assignment for now.\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\t\/\/\trun through and add current totals\r\n\t\t\t\tfor(var j=0; j<tmp.length; j++){\r\n\t\t\t\t\tif(i==0){ totals.push(tmp[j].y); }\r\n\t\t\t\t\telse { totals[j] += tmp[j].y; }\r\n\t\t\t\t\ttmp[j].y = totals[j];\r\n\t\t\t\t}\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\tfor(var i=n-1; i>=0; i--){\r\n\t\t\t\tvar path = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\r\n\t\t\t\tpath.setAttribute(\"fill\", data[i][0].series.color);\r\n\t\t\t\tpath.setAttribute(\"fill-opacity\", \"0.4\");\r\n\t\t\t\tpath.setAttribute(\"stroke\", data[i][0].series.color);\r\n\t\t\t\tpath.setAttribute(\"stroke-width\" , \"1\");\r\n\t\t\t\tpath.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\t\tvar cmd = [];\r\n\t\t\t\tvar r=3;\r\n\t\t\t\tfor(var j=0; j<data[i].length; j++){\r\n\t\t\t\t\tvar values = data[i];\r\n\t\t\t\t\tvar x = plot.axisX.getCoord(values[j].x, plotarea, plot);\r\n\t\t\t\t\tvar y = plot.axisY.getCoord(values[j].y, plotarea, plot);\r\n\t\t\t\t\tvar dx = area.left + 1;\r\n\t\t\t\t\tvar dy = area.bottom;\r\n\t\t\t\t\tif(j>0){\r\n\t\t\t\t\t\tdx = x - plot.axisX.getCoord(values[j-1].x, plotarea, plot);\r\n\t\t\t\t\t\tdy = plot.axisY.getCoord(values[j-1].y, plotarea, plot);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(j==0){ cmd.push(\"M\"); }\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcmd.push(\"C\");\r\n\t\t\t\t\t\tvar cx = x-(tension-1) * (dx\/tension);\r\n\t\t\t\t\t\tcmd.push(cx + \",\" + dy);\r\n\t\t\t\t\t\tcx = x - (dx\/tension);\r\n\t\t\t\t\t\tcmd.push(cx + \",\" + y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t\/\/\tpoints on the line\r\n\t\t\t\t\tvar c=document.createElementNS(dojo.svg.xmlns.svg, \"circle\");\r\n\t\t\t\t\tc.setAttribute(\"cx\",x);\r\n\t\t\t\t\tc.setAttribute(\"cy\",y);\r\n\t\t\t\t\tc.setAttribute(\"r\",\"3\");\r\n\t\t\t\t\tc.setAttribute(\"fill\", values[j].series.color);\r\n\t\t\t\t\tc.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\t\tc.setAttribute(\"stroke-width\", \"1\");\r\n\t\t\t\t\tc.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\t\t\tgroup.appendChild(c);\r\n\t\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tnow run the path backwards from the previous series.\r\n\t\t\t\tif(i == 0){\r\n\t\t\t\t\tcmd.push(\"L\");\r\n\t\t\t\t\tcmd.push(x + \",\" + plot.axisY.getCoord(plot.axisX.origin, plotarea, plot));\r\n\t\t\t\t\tcmd.push(\"L\");\r\n\t\t\t\t\tcmd.push(plot.axisX.getCoord(data[0][0].x, plotarea, plot) + \",\" +  plot.axisY.getCoord(plot.axisX.origin, plotarea, plot));\r\n\t\t\t\t\tcmd.push(\"Z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar values = data[i-1];\r\n\t\t\t\t\tcmd.push(\"L\");\r\n\t\t\t\t\tcmd.push(x + \",\" + Math.round(plot.axisY.getCoord(values[values.length-1].y, plotarea, plot)));\r\n\t\t\t\t\tfor(var j=values.length-2; j>=0; j--){\r\n\t\t\t\t\t\tvar x = plot.axisX.getCoord(values[j].x, plotarea, plot);\r\n\t\t\t\t\t\tvar y = plot.axisY.getCoord(values[j].y, plotarea, plot);\r\n\t\t\t\t\t\tvar dx = x - plot.axisX.getCoord(values[j+1].x, plotarea, plot);\r\n\t\t\t\t\t\tvar dy = plot.axisY.getCoord(values[j+1].y, plotarea, plot);\r\n\t\t\t\t\t\tcmd.push(\"C\");\r\n\t\t\t\t\t\tvar cx = x-(tension-1) * (dx\/tension);\r\n\t\t\t\t\t\tcmd.push(cx + \",\" + dy);\r\n\t\t\t\t\t\tcx = x - (dx\/tension);\r\n\t\t\t\t\t\tcmd.push(cx + \",\" + y);\r\n\t\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpath.setAttribute(\"d\", cmd.join(\" \")+ \" Z\");\r\n\t\t\t\tgroup.appendChild(path);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.DataBar":{"meta":{"summary":"Plots a set of bars in relation to y==0. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar n = data.length;\r\n\t\t\tvar w = (area.right-area.left)\/(plot.axisX.range.upper - plot.axisX.range.lower);\t\/\/\tthe width of each group.\r\n\t\t\tvar yOrigin = plot.axisY.getCoord(plot.axisX.origin, plotarea, plot);\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\t\/\/\tcalculate offset\r\n\t\t\t\tvar value = data[i].y;\r\n\t\t\t\tvar yA = yOrigin;\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot) - (w\/2);\r\n\t\t\t\tvar y = plot.axisY.getCoord(value, plotarea, plot);\r\n\t\t\t\tvar h = Math.abs(yA-y);\r\n\t\t\t\tif(value < plot.axisX.origin){\r\n\t\t\t\t\tyA = y;\r\n\t\t\t\t\ty = yOrigin;\r\n\t\t\t\t}\r\n\t\t\t\tvar bar=document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\r\n\t\t\t\tbar.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tbar.setAttribute(\"stroke-width\", \"0\");\r\n\t\t\t\tbar.setAttribute(\"x\", x);\r\n\t\t\t\tbar.setAttribute(\"y\", y);\r\n\t\t\t\tbar.setAttribute(\"width\", w);\r\n\t\t\t\tbar.setAttribute(\"height\", h);\r\n\t\t\t\tbar.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\tif(applyTo){ applyTo(bar, data[i].src); }\r\n\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.Line":{"meta":{"summary":"Plots the series as a line. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar line = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar path = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\r\n\t\t\tline.appendChild(path);\r\n\t\t\tpath.setAttribute(\"fill\", \"none\");\r\n\t\t\tpath.setAttribute(\"stroke\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"stroke-width\" , \"2\");\r\n\t\t\tpath.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\tif(data[0].series.label != null){\r\n\t\t\t\tpath.setAttribute(\"title\", data[0].series.label);\r\n\t\t\t}\r\n\t\t\tvar cmd=[];\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot);\r\n\t\t\t\tvar y = plot.axisY.getCoord(data[i].y, plotarea, plot);\r\n\t\t\t\tif(i==0){ cmd.push(\"M\"); }\r\n\t\t\t\telse { cmd.push(\"L\"); }\r\n\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\/\/\tpoints on the line\r\n\t\t\t\tvar c=document.createElementNS(dojo.svg.xmlns.svg, \"circle\");\r\n\t\t\t\tc.setAttribute(\"cx\",x);\r\n\t\t\t\tc.setAttribute(\"cy\",y);\r\n\t\t\t\tc.setAttribute(\"r\",\"3\");\r\n\t\t\t\tc.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tc.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\tc.setAttribute(\"stroke-width\", \"1\");\r\n\t\t\t\tc.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\t\tline.appendChild(c);\r\n\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t}\r\n\t\t\tpath.setAttribute(\"d\", cmd.join(\" \"));\r\n\t\t\treturn line;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.CurvedLine":{"meta":{"summary":"Plots the series as a line with a tension factor for softening. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar tension = 3;\r\n\t\t\tvar area = plotarea.getArea();\r\n\t\t\tvar line = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar path = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\r\n\t\t\tline.appendChild(path);\r\n\t\t\tpath.setAttribute(\"fill\", \"none\");\r\n\t\t\tpath.setAttribute(\"stroke\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"stroke-width\" , \"2\");\r\n\t\t\tpath.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\tif(data[0].series.label != null){\r\n\t\t\t\tpath.setAttribute(\"title\", data[0].series.label);\r\n\t\t\t}\r\n\t\t\tvar cmd=[];\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot);\r\n\t\t\t\tvar y = plot.axisY.getCoord(data[i].y, plotarea, plot);\r\n\t\t\t\tvar dx = area.left + 1;\r\n\t\t\t\tvar dy = area.bottom;\r\n\t\t\t\tif(i>0){\r\n\t\t\t\t\tdx = x - plot.axisX.getCoord(data[i-1].x, plotarea, plot);\r\n\t\t\t\t\tdy = plot.axisY.getCoord(data[i-1].y, plotarea, plot);\r\n\t\t\t\t}\r\n\t\t\t\tif(i==0){ cmd.push(\"M\"); }\r\n\t\t\t\telse {\r\n\t\t\t\t\tcmd.push(\"C\");\r\n\t\t\t\t\tvar cx = x-(tension-1) * (dx\/tension);\r\n\t\t\t\t\tcmd.push(cx + \",\" + dy);\r\n\t\t\t\t\tcx = x - (dx\/tension);\r\n\t\t\t\t\tcmd.push(cx + \",\" + y);\r\n\t\t\t\t}\r\n\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\/\/\tpoints on the line\r\n\t\t\t\tvar c=document.createElementNS(dojo.svg.xmlns.svg, \"circle\");\r\n\t\t\t\tc.setAttribute(\"cx\",x);\r\n\t\t\t\tc.setAttribute(\"cy\",y);\r\n\t\t\t\tc.setAttribute(\"r\",\"3\");\r\n\t\t\t\tc.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tc.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\tc.setAttribute(\"stroke-width\", \"1\");\r\n\t\t\t\tc.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\t\tline.appendChild(c);\r\n\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t}\r\n\t\t\tpath.setAttribute(\"d\", cmd.join(\" \"));\r\n\t\t\treturn line;\t\/\/ SVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.Area":{"meta":{"summary":"Plots the series as an area. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar line = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar path = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\r\n\t\t\tline.appendChild(path);\r\n\t\t\tpath.setAttribute(\"fill\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"fill-opacity\", \"0.4\");\r\n\t\t\tpath.setAttribute(\"stroke\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"stroke-width\" , \"1\");\r\n\t\t\tpath.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\tif(data[0].series.label != null){\r\n\t\t\t\tpath.setAttribute(\"title\", data[0].series.label);\r\n\t\t\t}\r\n\t\t\tvar cmd=[];\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot);\r\n\t\t\t\tvar y = plot.axisY.getCoord(data[i].y, plotarea, plot);\r\n\t\t\t\tif(i==0){ cmd.push(\"M\"); }\r\n\t\t\t\telse { cmd.push(\"L\"); }\r\n\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\/\/\tpoints on the line\r\n\t\t\t\tvar c=document.createElementNS(dojo.svg.xmlns.svg, \"circle\");\r\n\t\t\t\tc.setAttribute(\"cx\",x);\r\n\t\t\t\tc.setAttribute(\"cy\",y);\r\n\t\t\t\tc.setAttribute(\"r\",\"3\");\r\n\t\t\t\tc.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tc.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\tc.setAttribute(\"stroke-width\", \"1\");\r\n\t\t\t\tc.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\t\tline.appendChild(c);\r\n\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t}\r\n\t\t\t\/\/\tfinish it off\r\n\t\t\tcmd.push(\"L\");\r\n\t\t\tcmd.push(x + \",\" + plot.axisY.getCoord(plot.axisX.origin, plotarea, plot));\r\n\t\t\tcmd.push(\"L\");\r\n\t\t\tcmd.push(plot.axisX.getCoord(data[0].x, plotarea, plot) + \",\" +  plot.axisY.getCoord(plot.axisX.origin, plotarea, plot));\r\n\t\t\tcmd.push(\"Z\");\r\n\t\t\tpath.setAttribute(\"d\", cmd.join(\" \"));\r\n\t\t\treturn line;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.CurvedArea":{"meta":{"summary":"Plots the series as an area with a tension for softening. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar tension = 3;\r\n\t\t\tvar area = plotarea.getArea();\r\n\t\t\tvar line = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar path = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\r\n\t\t\tline.appendChild(path);\r\n\t\t\tpath.setAttribute(\"fill\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"fill-opacity\", \"0.4\");\r\n\t\t\tpath.setAttribute(\"stroke\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"stroke-width\" , \"1\");\r\n\t\t\tpath.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\tif(data[0].series.label != null){\r\n\t\t\t\tpath.setAttribute(\"title\", data[0].series.label);\r\n\t\t\t}\r\n\t\t\tvar cmd=[];\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot);\r\n\t\t\t\tvar y = plot.axisY.getCoord(data[i].y, plotarea, plot);\r\n\t\t\t\tvar dx = area.left + 1;\r\n\t\t\t\tvar dy = area.bottom;\r\n\t\t\t\tif(i>0){\r\n\t\t\t\t\tdx = x - plot.axisX.getCoord(data[i-1].x, plotarea, plot);\r\n\t\t\t\t\tdy = plot.axisY.getCoord(data[i-1].y, plotarea, plot);\r\n\t\t\t\t}\r\n\t\t\t\tif(i==0){ cmd.push(\"M\"); }\r\n\t\t\t\telse {\r\n\t\t\t\t\tcmd.push(\"C\");\r\n\t\t\t\t\tvar cx = x-(tension-1) * (dx\/tension);\r\n\t\t\t\t\tcmd.push(cx + \",\" + dy);\r\n\t\t\t\t\tcx = x - (dx\/tension);\r\n\t\t\t\t\tcmd.push(cx + \",\" + y);\r\n\t\t\t\t}\r\n\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\/\/\tpoints on the line\r\n\t\t\t\tvar c=document.createElementNS(dojo.svg.xmlns.svg, \"circle\");\r\n\t\t\t\tc.setAttribute(\"cx\",x);\r\n\t\t\t\tc.setAttribute(\"cy\",y);\r\n\t\t\t\tc.setAttribute(\"r\",\"3\");\r\n\t\t\t\tc.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tc.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\tc.setAttribute(\"stroke-width\", \"1\");\r\n\t\t\t\tc.setAttribute(\"stroke-opacity\", \"0.85\");\r\n\t\t\t\tline.appendChild(c);\r\n\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t}\r\n\t\t\t\/\/\tfinish it off\r\n\t\t\tcmd.push(\"L\");\r\n\t\t\tcmd.push(x + \",\" + plot.axisY.getCoord(plot.axisX.origin, plotarea, plot));\r\n\t\t\tcmd.push(\"L\");\r\n\t\t\tcmd.push(plot.axisX.getCoord(data[0].x, plotarea, plot) + \",\" +  plot.axisY.getCoord(plot.axisX.origin, plotarea, plot));\r\n\t\t\tcmd.push(\"Z\");\r\n\t\t\tpath.setAttribute(\"d\", cmd.join(\" \"));\r\n\t\t\treturn line;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.HighLow":{"meta":{"summary":"Plots the series as a set of high\/low bars. Bindings: x\/high\/low","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar n = data.length;\r\n\t\t\tvar part = ((area.right-area.left)\/(plot.axisX.range.upper - plot.axisX.range.lower))\/4;\r\n\t\t\tvar w = part*2;\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar high = data[i].high;\r\n\t\t\t\tvar low = data[i].low;\r\n\t\t\t\tif(low > high){\r\n\t\t\t\t\tvar t = low;\r\n\t\t\t\t\tlow = high;\r\n\t\t\t\t\thigh = t;\r\n\t\t\t\t}\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot) - (w\/2);\r\n\t\t\t\tvar y = plot.axisY.getCoord(high, plotarea, plot);\r\n\t\t\t\tvar h = plot.axisY.getCoord(low, plotarea, plot)-y;\r\n\t\t\t\t\/\/\thigh + low\r\n\t\t\t\tvar bar=document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\r\n\t\t\t\tbar.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tbar.setAttribute(\"stroke-width\", \"0\");\r\n\t\t\t\tbar.setAttribute(\"x\", x);\r\n\t\t\t\tbar.setAttribute(\"y\", y);\r\n\t\t\t\tbar.setAttribute(\"width\", w);\r\n\t\t\t\tbar.setAttribute(\"height\", h);\r\n\t\t\t\tbar.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\tif(applyTo){ applyTo(bar, data[i].src); }\r\n\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.HighLowClose":{"meta":{"summary":"Plots the series as a set of high\/low bars with a close indicator. Bindings: x\/high\/low\/close","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar n = data.length;\r\n\t\t\tvar part = ((area.right-area.left)\/(plot.axisX.range.upper - plot.axisX.range.lower))\/4;\r\n\t\t\tvar w = part*2;\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar high = data[i].high;\r\n\t\t\t\tvar low = data[i].low;\r\n\t\t\t\tif(low > high){\r\n\t\t\t\t\tvar t = low;\r\n\t\t\t\t\tlow = high;\r\n\t\t\t\t\thigh = t;\r\n\t\t\t\t}\r\n\t\t\t\tvar c = data[i].close;\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot) - (w\/2);\r\n\t\t\t\tvar y = plot.axisY.getCoord(high, plotarea, plot);\r\n\t\t\t\tvar h = plot.axisY.getCoord(low, plotarea, plot)-y;\r\n\t\t\t\tvar close = plot.axisY.getCoord(c, plotarea, plot);\r\n\t\t\t\tvar g = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\t\t\/\/\thigh + low\r\n\t\t\t\tvar bar=document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\r\n\t\t\t\tbar.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tbar.setAttribute(\"stroke-width\", \"0\");\r\n\t\t\t\tbar.setAttribute(\"x\", x);\r\n\t\t\t\tbar.setAttribute(\"y\", y);\r\n\t\t\t\tbar.setAttribute(\"width\", w);\r\n\t\t\t\tbar.setAttribute(\"height\", h);\r\n\t\t\t\tbar.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\tg.appendChild(bar);\r\n\t\t\t\t\/\/\tclose\r\n\t\t\t\tvar line=document.createElementNS(dojo.svg.xmlns.svg, \"line\");\r\n\t\t\t\tline.setAttribute(\"x1\", x);\r\n\t\t\t\tline.setAttribute(\"x2\", x+w+(part*2));\r\n\t\t\t\tline.setAttribute(\"y1\", close);\r\n\t\t\t\tline.setAttribute(\"y2\", close);\r\n\t\t\t\tline.setAttribute(\"style\", \"stroke:\"+data[i].series.color+\";stroke-width:1px;stroke-opacity:0.6;\");\r\n\t\t\t\tg.appendChild(line);\r\n\t\t\t\tif(applyTo){ applyTo(g, data[i].src); }\r\n\t\t\t\tgroup.appendChild(g);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.HighLowOpenClose":{"meta":{"summary":"Plots the series as a set of high\/low bars with open and close indicators. Bindings: x\/high\/low\/open\/close","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar n = data.length;\r\n\t\t\tvar part = ((area.right-area.left)\/(plot.axisX.range.upper - plot.axisX.range.lower))\/4;\r\n\t\t\tvar w = part*2;\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar high = data[i].high;\r\n\t\t\t\tvar low = data[i].low;\r\n\t\t\t\tif(low > high){\r\n\t\t\t\t\tvar t = low;\r\n\t\t\t\t\tlow = high;\r\n\t\t\t\t\thigh = t;\r\n\t\t\t\t}\r\n\t\t\t\tvar o = data[i].open;\r\n\t\t\t\tvar c = data[i].close;\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot) - (w\/2);\r\n\t\t\t\tvar y = plot.axisY.getCoord(high, plotarea, plot);\r\n\t\t\t\tvar h = plot.axisY.getCoord(low, plotarea, plot)-y;\r\n\t\t\t\tvar open = plot.axisY.getCoord(o, plotarea, plot);\r\n\t\t\t\tvar close = plot.axisY.getCoord(c, plotarea, plot);\r\n\t\t\t\tvar g = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\t\t\/\/\thigh + low\r\n\t\t\t\tvar bar=document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\r\n\t\t\t\tbar.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tbar.setAttribute(\"stroke-width\", \"0\");\r\n\t\t\t\tbar.setAttribute(\"x\", x);\r\n\t\t\t\tbar.setAttribute(\"y\", y);\r\n\t\t\t\tbar.setAttribute(\"width\", w);\r\n\t\t\t\tbar.setAttribute(\"height\", h);\r\n\t\t\t\tbar.setAttribute(\"fill-opacity\", \"0.6\");\r\n\t\t\t\tg.appendChild(bar);\r\n\t\t\t\t\/\/\topen\r\n\t\t\t\tvar line=document.createElementNS(dojo.svg.xmlns.svg, \"line\");\r\n\t\t\t\tline.setAttribute(\"x1\", x-(part*2));\r\n\t\t\t\tline.setAttribute(\"x2\", x+w);\r\n\t\t\t\tline.setAttribute(\"y1\", open);\r\n\t\t\t\tline.setAttribute(\"y2\", open);\r\n\t\t\t\tline.setAttribute(\"style\", \"stroke:\"+data[i].series.color+\";stroke-width:1px;stroke-opacity:0.6;\");\r\n\t\t\t\tg.appendChild(line);\r\n\t\t\t\t\/\/\tclose\r\n\t\t\t\tvar line=document.createElementNS(dojo.svg.xmlns.svg, \"line\");\r\n\t\t\t\tline.setAttribute(\"x1\", x);\r\n\t\t\t\tline.setAttribute(\"x2\", x+w+(part*2));\r\n\t\t\t\tline.setAttribute(\"y1\", close);\r\n\t\t\t\tline.setAttribute(\"y2\", close);\r\n\t\t\t\tline.setAttribute(\"style\", \"stroke:\"+data[i].series.color+\";stroke-width:1px;stroke-opacity:0.6;\");\r\n\t\t\t\tg.appendChild(line);\r\n\t\t\t\tif(applyTo){ applyTo(g, data[i].src); }\r\n\t\t\t\tgroup.appendChild(g);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.Scatter":{"meta":{"summary":"Plots the series as a set of points. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar r=7;\r\n\t\t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tfor (var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot);\r\n\t\t\t\tvar y = plot.axisY.getCoord(data[i].y, plotarea, plot);\r\n\t\t\t\tvar point = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\r\n\t\t\t\tpoint.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tpoint.setAttribute(\"stroke-width\", \"0\");\r\n\t\t\t\tpoint.setAttribute(\"d\",\r\n\t\t\t\t\t\"M \" + x + \",\" + (y-r) + \" \" +\r\n\t\t\t\t\t\"Q \" + x + \",\" + y + \" \" + (x+r) + \",\" + y + \" \" +\r\n\t\t\t\t\t\"Q \" + x + \",\" + y + \" \" + x + \",\" + (y+r) + \" \" +\r\n\t\t\t\t\t\"Q \" + x + \",\" + y + \" \" + (x-r) + \",\" + y + \" \" +\r\n\t\t\t\t\t\"Q \" + x + \",\" + y + \" \" + x + \",\" + (y-r) + \" \" +\r\n\t\t\t\t\t\"Z\"\r\n\t\t\t\t);\r\n\t\t\t\tif(applyTo){ applyTo(point, data[i].src); }\r\n\t\t\t\tgroup.appendChild(point);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}},"dojo.charting.Plotters.Bubble":{"meta":{"summary":"Plots the series as a set of points with a size factor. Bindings: x\/y\/size","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar group = document.createElementNS(dojo.svg.xmlns.svg, \"g\");\r\n\t\t\tvar sizeFactor=1;\r\n\t\t\tfor (var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot);\r\n\t\t\t\tvar y = plot.axisY.getCoord(data[i].y, plotarea, plot);\r\n\t\t\t\tif(i==0){\r\n\t\t\t\t\t\/\/\tfigure out the size factor, start with the axis with the greater range.\r\n\t\t\t\t\tvar raw = data[i].size;\r\n\t\t\t\t\tvar dy = plot.axisY.getCoord(data[i].y + raw, plotarea, plot)-y;\r\n\t\t\t\t\tsizeFactor = dy\/raw;\r\n\t\t\t\t}\r\n\t\t\t\tif(sizeFactor<1) { sizeFactor = 1; }\r\n\t\t\t\tvar point = document.createElementNS(dojo.svg.xmlns.svg, \"circle\");\r\n\t\t\t\tpoint.setAttribute(\"fill\", data[i].series.color);\r\n\t\t\t\tpoint.setAttribute(\"fill-opacity\", \"0.8\");\r\n\t\t\t\tpoint.setAttribute(\"stroke\", data[i].series.color);\r\n\t\t\t\tpoint.setAttribute(\"stroke-width\", \"1\");\r\n\t\t\t\tpoint.setAttribute(\"cx\",x);\r\n\t\t\t\tpoint.setAttribute(\"cy\",y);\r\n\t\t\t\tpoint.setAttribute(\"r\", (data[i].size\/2)*sizeFactor);\r\n\t\t\t\tif(applyTo){ applyTo(point, data[i].src); }\r\n\t\t\t\tgroup.appendChild(point);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tSVGGElement\r","returns":"SVGGElement"}}}}},"dojo.charting.vml.Axis":{"meta":{"requires":{"common":["dojo.lang.common"]},"functions":{"dojo.charting.Axis.renderLines":{"meta":{"summary":"Renders any reference lines for this axis.","parameters":{"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"plane":{"type":"string"}},"src":" \t\tif(this.nodes.lines){\r\n\t\t\t\twhile(this.nodes.lines.childNodes.length > 0){\r\n\t\t\t\t\tthis.nodes.lines.removeChild(this.nodes.lines.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.nodes.lines.parentNode){\r\n\t\t\t\t\tthis.nodes.lines.parentNode.removeChild(this.nodes.lines);\r\n\t\t\t\t\tthis.nodes.lines = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar area = plotArea.getArea();\r\n\t\t\tvar g = this.nodes.lines = document.createElement(\"div\");\r\n\t\t\tg.setAttribute(\"id\", this.getId()+\"-lines\");\r\n\t\t\tfor(var i=0; i<this._labels.length; i++){\r\n\t\t\t\tif (this._labels[i].value == this.origin){ continue; }\r\n\t\t\t\tvar v = this.getCoord(this._labels[i].value, plotArea, plot);\r\n\t\t\t\tvar l=document.createElement(\"v:line\");\r\n\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\tstr.dashstyle=\"dot\";\r\n\t\t\t\tl.appendChild(str);\r\n\t\t\t\tl.setAttribute(\"strokecolor\", \"#666\");\r\n\t\t\t\tl.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tvar s=l.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=\"0px\";\r\n\t\t\t\ts.left=\"0px\";\r\n\t\t\t\ts.antialias=\"false\";\r\n\t\t\t\tif(plane == \"x\"){\r\n\t\t\t\t\tl.setAttribute(\"from\", v+\"px,\"+area.top+\"px\");\r\n\t\t\t\t\tl.setAttribute(\"to\", v+\"px,\"+area.bottom+\"px\");\r\n\t\t\t\t}\r\n\t\t\t\telse if (plane == \"y\"){\r\n\t\t\t\t\tl.setAttribute(\"from\", area.left+\"px,\"+v+\"px\");\r\n\t\t\t\t\tl.setAttribute(\"to\", area.right+\"px,\"+v+\"px\");\r\n\t\t\t\t}\r\n\t\t\t\tg.appendChild(l);\r\n\t\t\t}\r\n\t\t\treturn g;\t\/\/\tHTMLDivElement\r","instance_variables":["nodes.lines"],"returns":"HTMLDivElement"}},"dojo.charting.Axis.renderTicks":{"meta":{"summary":"Renders any tick lines for this axis.","parameters":{"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"plane":{"type":"string"},"coord":{"type":"float"}},"src":" \t\tif(this.nodes.ticks){\r\n\t\t\t\twhile(this.nodes.ticks.childNodes.length > 0){\r\n\t\t\t\t\tthis.nodes.ticks.removeChild(this.nodes.ticks.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.nodes.ticks.parentNode){\r\n\t\t\t\t\tthis.nodes.ticks.parentNode.removeChild(this.nodes.ticks);\r\n\t\t\t\t\tthis.nodes.ticks = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar g = this.nodes.ticks = document.createElement(\"div\");\r\n\t\t\tg.setAttribute(\"id\", this.getId()+\"-ticks\");\r\n\t\t\tfor(var i=0; i<this._labels.length; i++){\r\n\t\t\t\tvar v = this.getCoord(this._labels[i].value, plotArea, plot);\r\n\t\t\t\tvar l=document.createElement(\"v:line\");\r\n\t\t\t\tl.setAttribute(\"strokecolor\", \"#000\");\r\n\t\t\t\tl.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tvar s=l.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=\"0px\";\r\n\t\t\t\ts.left=\"0px\";\r\n\t\t\t\ts.antialias=\"false\";\r\n\t\t\t\tif(plane == \"x\"){\r\n\t\t\t\t\tl.setAttribute(\"from\", v+\"px,\"+coord+\"px\");\r\n\t\t\t\t\tl.setAttribute(\"to\", v+\"px,\"+(coord+3)+\"px\");\r\n\t\t\t\t}\r\n\t\t\t\telse if (plane == \"y\"){\r\n\t\t\t\t\tl.setAttribute(\"from\", (coord-2)+\"px,\"+v+\"px\");\r\n\t\t\t\t\tl.setAttribute(\"to\", (coord+2)+\"px,\"+v+\"px\");\r\n\t\t\t\t}\r\n\t\t\t\tg.appendChild(l);\r\n\t\t\t}\r\n\t\t\treturn g;\t\/\/\tHTMLDivElement\r","instance_variables":["nodes.ticks"],"returns":"HTMLDivElement"}},"dojo.charting.Axis.renderLabels":{"meta":{"summary":"Render all labels for this axis.","parameters":{"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"plane":{"type":"string"},"coord":{"type":"float"},"textSize":{"type":"int"},"anchor":{"type":"string"}},"src":" \t\tfunction createLabel(label, x, y, textSize, anchor){\r\n\t\t\t\tvar text = document.createElement(\"div\");\r\n\t\t\t\tvar s=text.style;\r\n\t\t\t\ttext.innerHTML=label;\r\n\t\t\t\ts.fontSize=textSize+\"px\";\r\n\t\t\t\ts.fontFamily=\"sans-serif\";\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top = y+\"px\";\r\n\t\t\t\tif(anchor == \"center\"){\r\n\t\t\t\t\ts.left = x + \"px\";\r\n\t\t\t\t\ts.textAlign=\"center\";\r\n\t\t\t\t} else if (anchor == \"left\"){\r\n\t\t\t\t\ts.left = x + \"px\";\r\n\t\t\t\t\ts.textAlign=\"left\";\r\n\t\t\t\t} else if (anchor == \"right\"){\r\n\t\t\t\t\ts.right = x + \"px\";\r\n\t\t\t\t\ts.textAlign=\"right\";\r\n\t\t\t\t}\r\n\t\t\t\treturn text;\r\n\t\t\t};\r\n\t\t\t\/\/\twipe if needed\r\n\t\t\tif(this.nodes.labels){\r\n\t\t\t\twhile(this.nodes.labels.childNodes.length > 0){\r\n\t\t\t\t\tthis.nodes.labels.removeChild(this.nodes.labels.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t\tif(this.nodes.labels.parentNode){\r\n\t\t\t\t\tthis.nodes.labels.parentNode.removeChild(this.nodes.labels);\r\n\t\t\t\t\tthis.nodes.labels = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar g = this.nodes.labels = document.createElement(\"div\");\r\n\t\t\tg.setAttribute(\"id\", this.getId()+\"-labels\");\r\n\t\t\tfor(var i=0; i<this._labels.length; i++){\r\n\t\t\t\tvar v = this.getCoord(this._labels[i].value, plotArea, plot);\r\n\t\t\t\tif(plane == \"x\"){\r\n\t\t\t\t\t\/\/\tugly hack but it works.\r\n\t\t\t\t\tvar node=createLabel(this._labels[i].label, v, coord, textSize, anchor);\r\n\t\t\t\t\tdocument.body.appendChild(node);\r\n\t\t\t\t\tnode.style.left = v-(node.offsetWidth\/2)+\"px\";\r\n\t\t\t\t\tg.appendChild(node);\r\n\t\t\t\t}\r\n\t\t\t\telse if (plane == \"y\"){\r\n\t\t\t\t\tvar node = createLabel(this._labels[i].label, coord, v, textSize, anchor);\r\n\t\t\t\t\tdocument.body.appendChild(node);\r\n\t\t\t\t\tnode.style.top = v-(node.offsetHeight\/2)+\"px\";\r\n\t\t\t\t\tg.appendChild(node);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn g;\t\/\/\tHTMLDivElement\r","instance_variables":["nodes.labels"],"returns":"HTMLDivElement"}},"dojo.charting.Axis.render":{"meta":{"summary":"Renders this axis to the given plot. get the origin plot point.","parameters":{"plotArea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"drawAgainst":{"type":"dojo.charting.Axis"},"plane":{"type":"string"}},"src":" \t\tvar area = plotArea.getArea();\r\n\t\t\tvar stroke = 1;\r\n\t\t\tvar style = \"stroke:#000;stroke-width:\"+stroke+\"px;\";\r\n\t\t\tvar textSize=10;\r\n\t\t\tvar coord = drawAgainst.getCoord(this.origin, plotArea, plot);\r\n\t\t\t\/\/\tdraw the axis.\r\n\t\t\tvar g = this.nodes.main = document.createElement(\"div\");\r\n\t\t\tg.setAttribute(\"id\", this.getId());\t\/\/\tneed a handle if we have to kill parts of the axis def.\r\n\t\t\tvar line = this.nodes.axis = document.createElement(\"v:line\");\r\n\t\t\tline.setAttribute(\"strokecolor\", \"#000\");\r\n\t\t\tline.setAttribute(\"strokeweight\", stroke+\"px\");\r\n\t\t\tvar s=line.style;\r\n\t\t\ts.position=\"absolute\";\r\n\t\t\ts.top=\"0px\";\r\n\t\t\ts.left=\"0px\";\r\n\t\t\ts.antialias=\"false\";\r\n\t\t\tif(plane == \"x\"){\r\n\t\t\t\tline.setAttribute(\"from\", area.left+\"px,\"+coord+\"px\");\r\n\t\t\t\tline.setAttribute(\"to\", area.right+\"px,\"+coord+\"px\");\r\n\t\t\t\t\/\/\tset up the labels\r\n\t\t\t\tvar y = coord + Math.floor(textSize\/2);\r\n\t\t\t\tif(this.showLines){\r\n\t\t\t\t\tg.appendChild(this.renderLines(plotArea, plot, plane, y));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showTicks){\r\n\t\t\t\t\tg.appendChild(this.renderTicks(plotArea, plot, plane, coord));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLabels){\r\n\t\t\t\t\tg.appendChild(this.renderLabels(plotArea, plot, plane, y, textSize, \"center\"));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLabel && this.label){\r\n\t\t\t\t\tvar x = plotArea.size.width\/2;\r\n\t\t\t\t\tvar y = coord + Math.round(textSize*1.5); \r\n\t\t\t\t\tvar text = document.createElement(\"div\");\r\n\t\t\t\t\tvar s=text.style;\r\n\t\t\t\t\ttext.innerHTML=this.label;\r\n\t\t\t\t\ts.fontSize=(textSize+2)+\"px\";\r\n\t\t\t\t\ts.fontFamily=\"sans-serif\";\r\n\t\t\t\t\ts.fontWeight=\"bold\";\r\n\t\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\t\ts.top = y+\"px\";\r\n\t\t\t\t\ts.left = x + \"px\";\r\n\t\t\t\t\ts.textAlign=\"center\";\r\n\t\t\t\t\tdocument.body.appendChild(text);\r\n\t\t\t\t\ttext.style.left = x-(text.offsetWidth\/2)+\"px\";\r\n\t\t\t\t\tg.appendChild(text);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tline.setAttribute(\"from\", coord+\"px,\"+area.top+\"px\");\r\n\t\t\t\tline.setAttribute(\"to\", coord+\"px,\"+area.bottom+\"px\");\r\n\t\t\t\t\/\/\tset up the labels\r\n\t\t\t\tvar isMax = this.origin == drawAgainst.range.upper;\r\n\t\t\t\tvar x = coord+4;\r\n\t\t\t\tvar anchor = \"left\";\r\n\t\t\t\tif(!isMax){\r\n\t\t\t\t\tx = area.right-coord+textSize+4;\r\n\t\t\t\t\tanchor = \"right\";\r\n\t\t\t\t\tif(coord == area.left){ x += (textSize*2)-(textSize\/2); }\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLines){\r\n\t\t\t\t\tg.appendChild(this.renderLines(plotArea, plot, plane, x));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showTicks){\r\n\t\t\t\t\tg.appendChild(this.renderTicks(plotArea, plot, plane, coord));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLabels){\r\n\t\t\t\t\tg.appendChild(this.renderLabels(plotArea, plot, plane, x, textSize, anchor));\r\n\t\t\t\t}\r\n\t\t\t\tif(this.showLabel && this.label){\r\n\t\t\t\t\tx += (textSize*2)-2;\r\n\t\t\t\t\tvar y = plotArea.size.height\/2;\r\n\t\t\t\t\tvar text = document.createElement(\"div\");\r\n\t\t\t\t\tvar s=text.style;\r\n\t\t\t\t\ttext.innerHTML=this.label;\r\n\t\t\t\t\ts.fontSize=(textSize+2)+\"px\";\r\n\t\t\t\t\ts.fontFamily=\"sans-serif\";\r\n\t\t\t\t\ts.fontWeight=\"bold\";\r\n\t\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\t\ts.height = plotArea.size.height+\"px\";\r\n\t\t\t\t\ts.writingMode = \"tb-rl\";\r\n\t\t\t\t\ts.textAlign=\"center\";\r\n\t\t\t\t\ts[anchor] = x+\"px\";\r\n\t\t\t\t\tdocument.body.appendChild(text);\r\n\t\t\t\t\ts.top = y-(text.offsetHeight\/2)+\"px\";\r\n\t\t\t\t\tg.appendChild(text);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tg.appendChild(line);\r\n\t\t\treturn g;\t\/\/\tHTMLDivElement\r","instance_variables":["nodes.main","nodes.axis","origin"],"returns":"HTMLDivElement"}}}}},"dojo.charting.vml.PlotArea":{"meta":{"requires":{"common":["dojo.lang.common"]},"functions":{"dojo.charting.PlotArea.initializePlot":{"meta":{"summary":"Initialize the plot node for data rendering.","parameters":{"plot":{"type":""}},"src":" \t\tplot.destroy();\r\n\t\t\tplot.dataNode = document.createElement(\"div\");\r\n\t\t\tplot.dataNode.id  = plot.getId();\r\n\t\t\treturn plot.dataNode;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.PlotArea":{"meta":{"prototype_variables":["initialize"]}}}}},"dojo.charting.vml.Plotters":{"meta":{"requires":{"common":["dojo.lang.common"]},"functions":{"dojo.charting.Plotters._group":{"meta":{"summary":"","parameters":{"plotarea":{"type":""}},"src":" \t\tvar group = document.createElement(\"div\");\r\n\t\t\tgroup.style.position=\"absolute\";\r\n\t\t\tgroup.style.top=\"0px\";\r\n\t\t\tgroup.style.left=\"0px\";\r\n\t\t\tgroup.style.width=plotarea.size.width+\"px\";\r\n\t\t\tgroup.style.height=plotarea.size.height+\"px\";\r\n\t\t\treturn group;\r"}},"dojo.charting.Plotters.Bar":{"meta":{"summary":"Plots a set of grouped bars. Bindings: y","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\t\/\/\tcalculate the width of each bar.\r\n\t\t\tvar space = 8;\r\n\t\t\tvar nPoints = data[0].length;\r\n\t\t\tvar width = ((area.right-area.left)-(space*(nPoints-1)))\/nPoints;\t\/\/\tthe width of each group.\r\n\t\t\tvar barWidth = Math.round(width\/n);\t\/\/\tthe width of each bar, no spaces.\r\n\t\t\tvar yOrigin = plot.axisY.getCoord(plot.axisX.origin, plotarea, plot);\r\n\t\t\tfor(var i=0; i<nPoints; i++){\r\n\t\t\t\t\/\/\tcalculate offset\r\n\t\t\t\tvar xStart = area.left+(width*i)+(space*i);\r\n\t\t\t\tfor(var j=0; j<n; j++){\r\n\t\t\t\t\tvar value = data[j][i].y;\r\n\t\t\t\t\tvar yA = yOrigin;\r\n\t\t\t\t\tvar x = xStart + (barWidth*j);\r\n\t\t\t\t\tvar y = plot.axisY.getCoord(value, plotarea, plot);\r\n\t\t\t\t\tvar h = Math.abs(yA-y);\r\n\t\t\t\t\tif(value < plot.axisX.origin){\r\n\t\t\t\t\t\tyA = y;\r\n\t\t\t\t\t\ty = yOrigin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar bar=document.createElement(\"v:rect\");\r\n\t\t\t\t\tbar.style.position=\"absolute\";\r\n\t\t\t\t\tbar.style.top=y+1+\"px\";\r\n\t\t\t\t\tbar.style.left=x+\"px\";\r\n\t\t\t\t\tbar.style.width=barWidth+\"px\";\r\n\t\t\t\t\tbar.style.height=h+\"px\";\r\n\t\t\t\t\tbar.setAttribute(\"fillColor\", data[j][i].series.color);\r\n\t\t\t\t\tbar.setAttribute(\"stroked\", \"false\");\r\n\t\t\t\t\tbar.style.antialias=\"false\";\r\n\t\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\t\tfill.setAttribute(\"opacity\", \"0.6\");\r\n\t\t\t\t\tbar.appendChild(fill);\r\n\t\t\t\t\tif(applyTo){ applyTo(bar, data[j][i].src); }\r\n\t\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.HorizontalBar":{"meta":{"summary":"Plots data in a set of grouped bars horizontally. Bindings: y","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\tvar space = 6;\r\n\t\t\tvar nPoints = data[0].length;\r\n\t\t\tvar h = ((area.bottom-area.top)-(space*(nPoints-1)))\/nPoints;\r\n\t\t\tvar barH = h\/n;\r\n\t\t\tvar xOrigin = plot.axisX.getCoord(0, plotarea, plot);\r\n\t\t\tfor(var i=0; i<nPoints; i++){\r\n\t\t\t\t\/\/\tcalculate offset\r\n\t\t\t\tvar yStart = area.top+(h*i)+(space*i);\r\n\t\t\t\tfor(var j=0; j<n; j++){\r\n\t\t\t\t\tvar value = data[j][i].y;\r\n\t\t\t\t\tvar y = yStart + (barH*j);\r\n\t\t\t\t\tvar xA = xOrigin;\r\n\t\t\t\t\tvar x = plot.axisX.getCoord(value, plotarea, plot);\r\n\t\t\t\t\tvar w = Math.abs(x-xA);\r\n\t\t\t\t\tif(value > 0){\r\n\t\t\t\t\t\tx = xOrigin;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar bar=document.createElement(\"v:rect\");\r\n\t\t\t\t\tbar.style.position=\"absolute\";\r\n\t\t\t\t\tbar.style.top=y+1+\"px\";\r\n\t\t\t\t\tbar.style.left=xA+\"px\";\r\n\t\t\t\t\tbar.style.width=w+\"px\";\r\n\t\t\t\t\tbar.style.height=barH+\"px\";\r\n\t\t\t\t\tbar.setAttribute(\"fillColor\", data[j][i].series.color);\r\n\t\t\t\t\tbar.setAttribute(\"stroked\", \"false\");\r\n\t\t\t\t\tbar.style.antialias=\"false\";\r\n\t\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\t\tfill.setAttribute(\"opacity\", \"0.6\");\r\n\t\t\t\t\tbar.appendChild(fill);\r\n\t\t\t\t\tif(applyTo){ applyTo(bar, data[j][i].src); }\r\n\t\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\/\/\tcalculate the width of each bar.\r\n\t\t\tvar space = 4;\r\n\t\t\tvar n = plot.series.length;\r\n\t\t\tvar h = ((area.bottom-area.top)-(space*(n-1)))\/n;\r\n\t\t\tvar xOrigin = plot.axisX.getCoord(0, plotarea, plot);\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar series = plot.series[i];\r\n\t\t\t\tvar data = series.data.evaluate(kwArgs);\r\n\t\t\t\tvar y = area.top+(h*i)+(space*i);\r\n\t\t\t\tvar value = data[data.length-1].y;\r\n\t\t\t\tvar xA = xOrigin;\r\n\t\t\t\tvar x = plot.axisX.getCoord(value, plotarea, plot);\r\n\t\t\t\tvar w = Math.abs(xA-x);\r\n\t\t\t\tif(value > 0){\r\n\t\t\t\t\txA = x;\r\n\t\t\t\t\tx = xOrigin;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.Gantt":{"meta":{"summary":"Plots a grouped set of Gantt bars Bindings: high\/low","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\tvar space = 2;\r\n\t\t\tvar nPoints = data[0].length;\r\n\t\t\tvar h = ((area.bottom-area.top)-(space*(nPoints-1)))\/nPoints;\r\n\t\t\tvar barH = h\/n;\r\n\t\t\tfor(var i=0; i<nPoints; i++){\r\n\t\t\t\t\/\/\tcalculate offset\r\n\t\t\t\tvar yStart = area.top+(h*i)+(space*i);\r\n\t\t\t\tfor(var j=0; j<n; j++){\r\n\t\t\t\t\tvar high = data[j][i].high;\r\n\t\t\t\t\tvar low = data[j][i].low;\r\n\t\t\t\t\tif(low > high){\r\n\t\t\t\t\t\tvar t = high;\r\n\t\t\t\t\t\thigh = low;\r\n\t\t\t\t\t\tlow = t;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar x = plot.axisX.getCoord(low, plotarea, plot);\r\n\t\t\t\t\tvar w = plot.axisX.getCoord(high, plotarea, plot) - x;\r\n\t\t\t\t\tvar y = yStart + (barH*j);\r\n\t\t\t\t\tvar bar=document.createElement(\"v:rect\");\r\n\t\t\t\t\tbar.style.position=\"absolute\";\r\n\t\t\t\t\tbar.style.top=y+1+\"px\";\r\n\t\t\t\t\tbar.style.left=x+\"px\";\r\n\t\t\t\t\tbar.style.width=w+\"px\";\r\n\t\t\t\t\tbar.style.height=barH+\"px\";\r\n\t\t\t\t\tbar.setAttribute(\"fillColor\", data[j][i].series.color);\r\n\t\t\t\t\tbar.setAttribute(\"stroked\", \"false\");\r\n\t\t\t\t\tbar.style.antialias=\"false\";\r\n\t\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\t\tfill.setAttribute(\"opacity\", \"0.6\");\r\n\t\t\t\t\tbar.appendChild(fill);\r\n\t\t\t\t\tif(applyTo){ applyTo(bar, data[j][i].src); }\r\n\t\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.StackedArea":{"meta":{"summary":"Plots a set of stacked areas. Bindings: x\/y","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tvar totals = [];\r\n\t\t\t\/\/\twe're assuming that all series for this plot has the name x assignment for now.\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\t\/\/\trun through and add current totals\r\n\t\t\t\tfor(var j=0; j<tmp.length; j++){\r\n\t\t\t\t\tif(i==0){ totals.push(tmp[j].y); }\r\n\t\t\t\t\telse { totals[j] += tmp[j].y; }\r\n\t\t\t\t\ttmp[j].y = totals[j];\r\n\t\t\t\t}\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\tfor(var i=n-1; i>=0; i--){\r\n\t\t\t\tvar path=document.createElement(\"v:shape\");\r\n\t\t\t\tpath.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tpath.setAttribute(\"strokecolor\", data[i][0].series.color);\r\n\t\t\t\tpath.setAttribute(\"fillcolor\", data[i][0].series.color);\r\n\t\t\t\tpath.setAttribute(\"coordsize\", (area.right-area.left) + \",\" + (area.bottom-area.top));\r\n\t\t\t\tpath.style.position=\"absolute\";\r\n\t\t\t\tpath.style.top=\"0px\";\r\n\t\t\t\tpath.style.left=\"0px\";\r\n\t\t\t\tpath.style.width=area.right-area.left+\"px\";\r\n\t\t\t\tpath.style.height=area.bottom-area.top+\"px\";\r\n\t\t\t\tvar stroke=document.createElement(\"v:stroke\");\r\n\t\t\t\tstroke.setAttribute(\"opacity\", \"0.8\");\r\n\t\t\t\tpath.appendChild(stroke);\r\n\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\tfill.setAttribute(\"opacity\", \"0.4\");\r\n\t\t\t\tpath.appendChild(fill);\r\n\t\t\t\tvar cmd = [];\r\n\t\t\t\tvar r=3;\r\n\t\t\t\tfor(var j=0; j<data[i].length; j++){\r\n\t\t\t\t\tvar values = data[i];\r\n\t\t\t\t\tvar x = Math.round(plot.axisX.getCoord(values[j].x, plotarea, plot));\r\n\t\t\t\t\tvar y = Math.round(plot.axisY.getCoord(values[j].y, plotarea, plot));\r\n\t\t\t\t\tif (j==0){\r\n\t\t\t\t\t\tcmd.push(\"m\");\r\n\t\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\/\/\tadd the circle.\r\n\t\t\t\t\tvar c = document.createElement(\"v:oval\");\r\n\t\t\t\t\tc.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\t\tc.setAttribute(\"strokecolor\", values[j].series.color);\r\n\t\t\t\t\tc.setAttribute(\"fillcolor\", values[j].series.color);\r\n\t\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\t\tstr.setAttribute(\"opacity\",\"0.8\");\r\n\t\t\t\t\tc.appendChild(str);\r\n\t\t\t\t\tstr=document.createElement(\"v:fill\");\r\n\t\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\t\tc.appendChild(str);\r\n\t\t\t\t\tvar s=c.style;\r\n\t\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\t\ts.top=(y-r)+\"px\";\r\n\t\t\t\t\ts.left=(x-r)+\"px\";\r\n\t\t\t\t\ts.width=(r*2)+\"px\";\r\n\t\t\t\t\ts.height=(r*2)+\"px\";\r\n\t\t\t\t\tgroup.appendChild(c);\r\n\t\t\t\t\tif(applyTo){ applyTo(c, data[j].src); }\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tnow run the path backwards from the previous series.\r\n\t\t\t\tif(i == 0){\r\n\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\tcmd.push(x + \",\" + Math.round(plot.axisY.getCoord(plot.axisX.origin, plotarea, plot)));\r\n\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\tcmd.push(Math.round(plot.axisX.getCoord(data[0][0].x, plotarea, plot)) + \",\" +  Math.round(plot.axisY.getCoord(plot.axisX.origin, plotarea, plot)));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar values = data[i-1];\r\n\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\tcmd.push(x + \",\" + Math.round(plot.axisY.getCoord(values[values.length-1].y, plotarea, plot)));\r\n\t\t\t\t\tfor(var j=values.length-2; j>=0; j--){\r\n\t\t\t\t\t\tvar x = Math.round(plot.axisX.getCoord(values[j].x, plotarea, plot));\r\n\t\t\t\t\t\tvar y = Math.round(plot.axisY.getCoord(values[j].y, plotarea, plot));\r\n\t\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpath.setAttribute(\"path\", cmd.join(\" \")+\" x e\");\r\n\t\t\t\tgroup.appendChild(path);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.StackedCurvedArea":{"meta":{"summary":"Plots a set of stacked areas, using a tensioning factor to soften points. Bindings: x\/y","parameters":{"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"kwArgs":{"type":"object?"},"applyTo":{"type":"function?"}},"src":" \t\tvar tension = 3;\r\n\t\t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\t\/\/\tprecompile the data\r\n\t\t\tvar n = plot.series.length;\t\/\/\thow many series\r\n\t\t\tvar data = [];\r\n\t\t\tvar totals = [];\r\n\t\t\t\/\/\twe're assuming that all series for this plot has the name x assignment for now.\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar tmp = plot.series[i].data.evaluate(kwArgs);\r\n\t\t\t\t\/\/\trun through and add current totals\r\n\t\t\t\tfor(var j=0; j<tmp.length; j++){\r\n\t\t\t\t\tif(i==0){ totals.push(tmp[j].y); }\r\n\t\t\t\t\telse { totals[j] += tmp[j].y; }\r\n\t\t\t\t\ttmp[j].y = totals[j];\r\n\t\t\t\t}\r\n\t\t\t\tdata.push(tmp);\r\n\t\t\t}\r\n\t\t\tfor(var i=n-1; i>=0; i--){\r\n\t\t\t\tvar path=document.createElement(\"v:shape\");\r\n\t\t\t\tpath.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tpath.setAttribute(\"strokecolor\", data[i][0].series.color);\r\n\t\t\t\tpath.setAttribute(\"fillcolor\", data[i][0].series.color);\r\n\t\t\t\tpath.setAttribute(\"coordsize\", (area.right-area.left) + \",\" + (area.bottom-area.top));\r\n\t\t\t\tpath.style.position=\"absolute\";\r\n\t\t\t\tpath.style.top=\"0px\";\r\n\t\t\t\tpath.style.left=\"0px\";\r\n\t\t\t\tpath.style.width=area.right-area.left+\"px\";\r\n\t\t\t\tpath.style.height=area.bottom-area.top+\"px\";\r\n\t\t\t\tvar stroke=document.createElement(\"v:stroke\");\r\n\t\t\t\tstroke.setAttribute(\"opacity\", \"0.8\");\r\n\t\t\t\tpath.appendChild(stroke);\r\n\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\tfill.setAttribute(\"opacity\", \"0.4\");\r\n\t\t\t\tpath.appendChild(fill);\r\n\t\t\t\tvar cmd = [];\r\n\t\t\t\tvar r=3;\r\n\t\t\t\tfor(var j=0; j<data[i].length; j++){\r\n\t\t\t\t\tvar values = data[i];\r\n\t\t\t\t\tvar x = Math.round(plot.axisX.getCoord(values[j].x, plotarea, plot));\r\n\t\t\t\t\tvar y = Math.round(plot.axisY.getCoord(values[j].y, plotarea, plot));\r\n\t\t\t\t\tif (j==0){\r\n\t\t\t\t\t\tcmd.push(\"m\");\r\n\t\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvar lastx = Math.round(plot.axisX.getCoord(values[j-1].x, plotarea, plot));\r\n\t\t\t\t\t\tvar lasty = Math.round(plot.axisY.getCoord(values[j-1].y, plotarea, plot));\r\n\t\t\t\t\t\tvar dx=x-lastx;\r\n\t\t\t\t\t\tvar dy=y-lasty;\r\n\t\t\t\t\t\tcmd.push(\"c\");\r\n\t\t\t\t\t\tvar cx=Math.round((x-(tension-1)*(dx\/tension)));\r\n\t\t\t\t\t\tcmd.push(cx+\",\"+lasty);\r\n\t\t\t\t\t\tcx=Math.round((x-(dx\/tension)));\r\n\t\t\t\t\t\tcmd.push(cx+\",\"+y);\r\n\t\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\/\/\tadd the circle.\r\n\t\t\t\t\tvar c = document.createElement(\"v:oval\");\r\n\t\t\t\t\tc.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\t\tc.setAttribute(\"strokecolor\", values[j].series.color);\r\n\t\t\t\t\tc.setAttribute(\"fillcolor\", values[j].series.color);\r\n\t\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\t\tstr.setAttribute(\"opacity\",\"0.8\");\r\n\t\t\t\t\tc.appendChild(str);\r\n\t\t\t\t\tstr=document.createElement(\"v:fill\");\r\n\t\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\t\tc.appendChild(str);\r\n\t\t\t\t\tvar s=c.style;\r\n\t\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\t\ts.top=(y-r)+\"px\";\r\n\t\t\t\t\ts.left=(x-r)+\"px\";\r\n\t\t\t\t\ts.width=(r*2)+\"px\";\r\n\t\t\t\t\ts.height=(r*2)+\"px\";\r\n\t\t\t\t\tgroup.appendChild(c);\r\n\t\t\t\t\tif(applyTo){ applyTo(c, data[j].src); }\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tnow run the path backwards from the previous series.\r\n\t\t\t\tif(i == 0){\r\n\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\tcmd.push(x + \",\" + Math.round(plot.axisY.getCoord(plot.axisX.origin, plotarea, plot)));\r\n\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\tcmd.push(Math.round(plot.axisX.getCoord(data[0][0].x, plotarea, plot)) + \",\" +  Math.round(plot.axisY.getCoord(plot.axisX.origin, plotarea, plot)));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar values = data[i-1];\r\n\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\tcmd.push(x + \",\" + Math.round(plot.axisY.getCoord(values[values.length-1].y, plotarea, plot)));\r\n\t\t\t\t\tfor(var j=values.length-2; j>=0; j--){\r\n\t\t\t\t\t\tvar x = Math.round(plot.axisX.getCoord(values[j].x, plotarea, plot));\r\n\t\t\t\t\t\tvar y = Math.round(plot.axisY.getCoord(values[j].y, plotarea, plot));\r\n\t\t\t\t\t\tvar lastx = Math.round(plot.axisX.getCoord(values[j+1].x, plotarea, plot));\r\n\t\t\t\t\t\tvar lasty = Math.round(plot.axisY.getCoord(values[j+1].y, plotarea, plot));\r\n\t\t\t\t\t\tvar dx=x-lastx;\r\n\t\t\t\t\t\tvar dy=y-lasty;\r\n\t\t\t\t\t\tcmd.push(\"c\");\r\n\t\t\t\t\t\tvar cx=Math.round((x-(tension-1)*(dx\/tension)));\r\n\t\t\t\t\t\tcmd.push(cx+\",\"+lasty);\r\n\t\t\t\t\t\tcx=Math.round((x-(dx\/tension)));\r\n\t\t\t\t\t\tcmd.push(cx+\",\"+y);\r\n\t\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpath.setAttribute(\"path\", cmd.join(\" \")+\" x e\");\r\n\t\t\t\tgroup.appendChild(path);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.DataBar":{"meta":{"summary":"Plots a set of bars in relation to y==0. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tvar n = data.length;\r\n\t\t\tvar w = (area.right-area.left)\/(plot.axisX.range.upper - plot.axisX.range.lower);\t\/\/\tthe width of each group.\r\n\t\t\tvar yOrigin = plot.axisY.getCoord(plot.axisX.origin, plotarea, plot);\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\t\/\/\tcalculate offset\r\n\t\t\t\tvar value = data[i].y;\r\n\t\t\t\tvar yA = yOrigin;\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot)-(w\/2)+1;\r\n\t\t\t\tvar y = plot.axisY.getCoord(value, plotarea, plot);\r\n\t\t\t\tvar h = Math.abs(yA-y);\r\n\t\t\t\tif(value < plot.axisX.origin){\r\n\t\t\t\t\tyA = y;\r\n\t\t\t\t\ty = yOrigin;\r\n\t\t\t\t}\r\n\t\t\t\tvar bar=document.createElement(\"v:rect\");\r\n\t\t\t\tbar.style.position=\"absolute\";\r\n\t\t\t\tbar.style.top=y+1+\"px\";\r\n\t\t\t\tbar.style.left=x+\"px\";\r\n\t\t\t\tbar.style.width=w+\"px\";\r\n\t\t\t\tbar.style.height=h+\"px\";\r\n\t\t\t\tbar.setAttribute(\"fillColor\", data[i].series.color);\r\n\t\t\t\tbar.setAttribute(\"stroked\", \"false\");\r\n\t\t\t\tbar.style.antialias=\"false\";\r\n\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\tfill.setAttribute(\"opacity\", \"0.6\");\r\n\t\t\t\tbar.appendChild(fill);\r\n\t\t\t\tif(applyTo){ applyTo(bar, data[i].src); }\r\n\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.Line":{"meta":{"summary":"Plots the series as a line. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tvar path=document.createElement(\"v:shape\");\r\n\t\t\tpath.setAttribute(\"strokeweight\", \"2px\");\r\n\t\t\tpath.setAttribute(\"strokecolor\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"fillcolor\", \"none\");\r\n\t\t\tpath.setAttribute(\"filled\", \"false\");\r\n\t\t\tpath.setAttribute(\"coordsize\", (area.right-area.left) + \",\" + (area.bottom-area.top));\r\n\t\t\tpath.style.position=\"absolute\";\r\n\t\t\tpath.style.top=\"0px\";\r\n\t\t\tpath.style.left=\"0px\";\r\n\t\t\tpath.style.width=area.right-area.left+\"px\";\r\n\t\t\tpath.style.height=area.bottom-area.top+\"px\";\r\n\t\t\tvar stroke=document.createElement(\"v:stroke\");\r\n\t\t\tstroke.setAttribute(\"opacity\", \"0.8\");\r\n\t\t\tpath.appendChild(stroke);\r\n\t\t\tvar cmd = [];\r\n\t\t\tvar r=3;\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = Math.round(plot.axisX.getCoord(data[i].x, plotarea, plot));\r\n\t\t\t\tvar y = Math.round(plot.axisY.getCoord(data[i].y, plotarea, plot));\r\n\t\t\t\tif (i==0){\r\n\t\t\t\t\tcmd.push(\"m\");\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tadd the circle.\r\n\t\t\t\tvar c = document.createElement(\"v:oval\");\r\n\t\t\t\tc.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tc.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tc.setAttribute(\"fillcolor\", data[i].series.color);\r\n\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.8\");\r\n\t\t\t\tc.appendChild(str);\r\n\t\t\t\tstr=document.createElement(\"v:fill\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tc.appendChild(str);\r\n\t\t\t\tvar s=c.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=(y-r)+\"px\";\r\n\t\t\t\ts.left=(x-r)+\"px\";\r\n\t\t\t\ts.width=(r*2)+\"px\";\r\n\t\t\t\ts.height=(r*2)+\"px\";\r\n\t\t\t\tgroup.appendChild(c);\r\n\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t}\r\n\t\t\tpath.setAttribute(\"path\", cmd.join(\" \")+\" e\");\r\n\t\t\tgroup.appendChild(path);\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.CurvedLine":{"meta":{"summary":"Plots the series as a line with a tension factor for softening. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar tension = 3;\r\n\t\t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tvar path=document.createElement(\"v:shape\");\r\n\t\t\tpath.setAttribute(\"strokeweight\", \"2px\");\r\n\t\t\tpath.setAttribute(\"strokecolor\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"fillcolor\", \"none\");\r\n\t\t\tpath.setAttribute(\"filled\", \"false\");\r\n\t\t\tpath.setAttribute(\"coordsize\", (area.right-area.left) + \",\" + (area.bottom-area.top));\r\n\t\t\tpath.style.position=\"absolute\";\r\n\t\t\tpath.style.top=\"0px\";\r\n\t\t\tpath.style.left=\"0px\";\r\n\t\t\tpath.style.width=area.right-area.left+\"px\";\r\n\t\t\tpath.style.height=area.bottom-area.top+\"px\";\r\n\t\t\tvar stroke=document.createElement(\"v:stroke\");\r\n\t\t\tstroke.setAttribute(\"opacity\", \"0.8\");\r\n\t\t\tpath.appendChild(stroke);\r\n\t\t\tvar cmd = [];\r\n\t\t\tvar r=3;\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = Math.round(plot.axisX.getCoord(data[i].x, plotarea, plot));\r\n\t\t\t\tvar y = Math.round(plot.axisY.getCoord(data[i].y, plotarea, plot));\r\n\t\t\t\tif (i==0){\r\n\t\t\t\t\tcmd.push(\"m\");\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar lastx = Math.round(plot.axisX.getCoord(data[i-1].x, plotarea, plot));\r\n\t\t\t\t\tvar lasty = Math.round(plot.axisY.getCoord(data[i-1].y, plotarea, plot));\r\n\t\t\t\t\tvar dx=x-lastx;\r\n\t\t\t\t\tvar dy=y-lasty;\r\n\t\t\t\t\tcmd.push(\"c\");\r\n\t\t\t\t\tvar cx=Math.round((x-(tension-1)*(dx\/tension)));\r\n\t\t\t\t\tcmd.push(cx+\",\"+lasty);\r\n\t\t\t\t\tcx=Math.round((x-(dx\/tension)));\r\n\t\t\t\t\tcmd.push(cx+\",\"+y);\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tadd the circle.\r\n\t\t\t\tvar c = document.createElement(\"v:oval\");\r\n\t\t\t\tc.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tc.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tc.setAttribute(\"fillcolor\", data[i].series.color);\r\n\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.8\");\r\n\t\t\t\tc.appendChild(str);\r\n\t\t\t\tstr=document.createElement(\"v:fill\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tc.appendChild(str);\r\n\t\t\t\tvar s=c.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=(y-r)+\"px\";\r\n\t\t\t\ts.left=(x-r)+\"px\";\r\n\t\t\t\ts.width=(r*2)+\"px\";\r\n\t\t\t\ts.height=(r*2)+\"px\";\r\n\t\t\t\tgroup.appendChild(c);\r\n\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t}\r\n\t\t\tpath.setAttribute(\"path\", cmd.join(\" \")+\" e\");\r\n\t\t\tgroup.appendChild(path);\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.Area":{"meta":{"summary":"Plots the series as an area. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tvar path=document.createElement(\"v:shape\");\r\n\t\t\tpath.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\tpath.setAttribute(\"strokecolor\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"fillcolor\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"coordsize\", (area.right-area.left) + \",\" + (area.bottom-area.top));\r\n\t\t\tpath.style.position=\"absolute\";\r\n\t\t\tpath.style.top=\"0px\";\r\n\t\t\tpath.style.left=\"0px\";\r\n\t\t\tpath.style.width=area.right-area.left+\"px\";\r\n\t\t\tpath.style.height=area.bottom-area.top+\"px\";\r\n\t\t\tvar stroke=document.createElement(\"v:stroke\");\r\n\t\t\tstroke.setAttribute(\"opacity\", \"0.8\");\r\n\t\t\tpath.appendChild(stroke);\r\n\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\tfill.setAttribute(\"opacity\", \"0.4\");\r\n\t\t\tpath.appendChild(fill);\r\n\t\t\tvar cmd = [];\r\n\t\t\tvar r=3;\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = Math.round(plot.axisX.getCoord(data[i].x, plotarea, plot));\r\n\t\t\t\tvar y = Math.round(plot.axisY.getCoord(data[i].y, plotarea, plot));\r\n\t\t\t\tif (i==0){\r\n\t\t\t\t\tcmd.push(\"m\");\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcmd.push(\"l\");\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tadd the circle.\r\n\t\t\t\tvar c = document.createElement(\"v:oval\");\r\n\t\t\t\tc.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tc.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tc.setAttribute(\"fillcolor\", data[i].series.color);\r\n\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.8\");\r\n\t\t\t\tc.appendChild(str);\r\n\t\t\t\tstr=document.createElement(\"v:fill\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tc.appendChild(str);\r\n\t\t\t\tvar s=c.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=(y-r)+\"px\";\r\n\t\t\t\ts.left=(x-r)+\"px\";\r\n\t\t\t\ts.width=(r*2)+\"px\";\r\n\t\t\t\ts.height=(r*2)+\"px\";\r\n\t\t\t\tgroup.appendChild(c);\r\n\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t}\r\n\t\t\tcmd.push(\"l\");\r\n\t\t\tcmd.push(x + \",\" + Math.round(plot.axisY.getCoord(plot.axisX.origin, plotarea, plot)));\r\n\t\t\tcmd.push(\"l\");\r\n\t\t\tcmd.push(Math.round(plot.axisX.getCoord(data[0].x, plotarea, plot)) + \",\" +  Math.round(plot.axisY.getCoord(plot.axisX.origin, plotarea, plot)));\r\n\t\t\tpath.setAttribute(\"path\", cmd.join(\" \")+\" x e\");\r\n\t\t\tgroup.appendChild(path);\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.CurvedArea":{"meta":{"summary":"Plots the series as an area with a tension for softening. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar tension = 3;\r\n\t\t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tvar path=document.createElement(\"v:shape\");\r\n\t\t\tpath.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\tpath.setAttribute(\"strokecolor\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"fillcolor\", data[0].series.color);\r\n\t\t\tpath.setAttribute(\"coordsize\", (area.right-area.left) + \",\" + (area.bottom-area.top));\r\n\t\t\tpath.style.position=\"absolute\";\r\n\t\t\tpath.style.top=\"0px\";\r\n\t\t\tpath.style.left=\"0px\";\r\n\t\t\tpath.style.width=area.right-area.left+\"px\";\r\n\t\t\tpath.style.height=area.bottom-area.top+\"px\";\r\n\t\t\tvar stroke=document.createElement(\"v:stroke\");\r\n\t\t\tstroke.setAttribute(\"opacity\", \"0.8\");\r\n\t\t\tpath.appendChild(stroke);\r\n\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\tfill.setAttribute(\"opacity\", \"0.4\");\r\n\t\t\tpath.appendChild(fill);\r\n\t\t\tvar cmd = [];\r\n\t\t\tvar r=3;\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = Math.round(plot.axisX.getCoord(data[i].x, plotarea, plot));\r\n\t\t\t\tvar y = Math.round(plot.axisY.getCoord(data[i].y, plotarea, plot));\r\n\t\t\t\tif (i==0){\r\n\t\t\t\t\tcmd.push(\"m\");\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar lastx = Math.round(plot.axisX.getCoord(data[i-1].x, plotarea, plot));\r\n\t\t\t\t\tvar lasty = Math.round(plot.axisY.getCoord(data[i-1].y, plotarea, plot));\r\n\t\t\t\t\tvar dx=x-lastx;\r\n\t\t\t\t\tvar dy=y-lasty;\r\n\t\t\t\t\tcmd.push(\"c\");\r\n\t\t\t\t\tvar cx=Math.round((x-(tension-1)*(dx\/tension)));\r\n\t\t\t\t\tcmd.push(cx+\",\"+lasty);\r\n\t\t\t\t\tcx=Math.round((x-(dx\/tension)));\r\n\t\t\t\t\tcmd.push(cx+\",\"+y);\r\n\t\t\t\t\tcmd.push(x+\",\"+y);\r\n\t\t\t\t}\r\n\t\t\t\t\/\/\tadd the circle.\r\n\t\t\t\tvar c = document.createElement(\"v:oval\");\r\n\t\t\t\tc.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tc.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tc.setAttribute(\"fillcolor\", data[i].series.color);\r\n\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.8\");\r\n\t\t\t\tc.appendChild(str);\r\n\t\t\t\tstr=document.createElement(\"v:fill\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tc.appendChild(str);\r\n\t\t\t\tvar s=c.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=(y-r)+\"px\";\r\n\t\t\t\ts.left=(x-r)+\"px\";\r\n\t\t\t\ts.width=(r*2)+\"px\";\r\n\t\t\t\ts.height=(r*2)+\"px\";\r\n\t\t\t\tgroup.appendChild(c);\r\n\t\t\t\tif(applyTo){ applyTo(c, data[i].src); }\r\n\t\t\t}\r\n\t\t\tcmd.push(\"l\");\r\n\t\t\tcmd.push(x + \",\" + Math.round(plot.axisY.getCoord(plot.axisX.origin, plotarea, plot)));\r\n\t\t\tcmd.push(\"l\");\r\n\t\t\tcmd.push(Math.round(plot.axisX.getCoord(data[0].x, plotarea, plot)) + \",\" +  Math.round(plot.axisY.getCoord(plot.axisX.origin, plotarea, plot)));\r\n\t\t\tpath.setAttribute(\"path\", cmd.join(\" \")+\" x e\");\r\n\t\t\tgroup.appendChild(path);\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.HighLow":{"meta":{"summary":"Plots the series as a set of high\/low bars. Bindings: x\/high\/low","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tvar n = data.length;\r\n\t\t\tvar part = ((area.right-area.left)\/(plot.axisX.range.upper - plot.axisX.range.lower))\/4;\r\n\t\t\tvar w = part*2;\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar high = data[i].high;\r\n\t\t\t\tvar low = data[i].low;\r\n\t\t\t\tif(low > high){\r\n\t\t\t\t\tvar t = low;\r\n\t\t\t\t\tlow = high;\r\n\t\t\t\t\thigh = t;\r\n\t\t\t\t}\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot) - (w\/2);\r\n\t\t\t\tvar y = plot.axisY.getCoord(high, plotarea, plot);\r\n\t\t\t\tvar h = plot.axisY.getCoord(low, plotarea, plot)-y;\r\n\t\t\t\t\/\/\thigh + low\r\n\t\t\t\tvar bar=document.createElement(\"v:rect\");\r\n\t\t\t\tbar.style.position=\"absolute\";\r\n\t\t\t\tbar.style.top=y+1+\"px\";\r\n\t\t\t\tbar.style.left=x+\"px\";\r\n\t\t\t\tbar.style.width=w+\"px\";\r\n\t\t\t\tbar.style.height=h+\"px\";\r\n\t\t\t\tbar.setAttribute(\"fillColor\", data[i].series.color);\r\n\t\t\t\tbar.setAttribute(\"stroked\", \"false\");\r\n\t\t\t\tbar.style.antialias=\"false\";\r\n\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\tfill.setAttribute(\"opacity\", \"0.6\");\r\n\t\t\t\tbar.appendChild(fill);\r\n\t\t\t\tif(applyTo){ applyTo(bar, data[i].src); }\r\n\t\t\t\tgroup.appendChild(bar);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.HighLowClose":{"meta":{"summary":"Plots the series as a set of high\/low bars with a close indicator. Bindings: x\/high\/low\/close","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tvar n = data.length;\r\n\t\t\tvar part = ((area.right-area.left)\/(plot.axisX.range.upper - plot.axisX.range.lower))\/4;\r\n\t\t\tvar w = part*2;\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar high = data[i].high;\r\n\t\t\t\tvar low = data[i].low;\r\n\t\t\t\tif(low > high){\r\n\t\t\t\t\tvar t = low;\r\n\t\t\t\t\tlow = high;\r\n\t\t\t\t\thigh = t;\r\n\t\t\t\t}\r\n\t\t\t\tvar c = data[i].close;\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot) - (w\/2);\r\n\t\t\t\tvar y = plot.axisY.getCoord(high, plotarea, plot);\r\n\t\t\t\tvar h = plot.axisY.getCoord(low, plotarea, plot)-y;\r\n\t\t\t\tvar close = plot.axisY.getCoord(c, plotarea, plot);\r\n\t\t\t\tvar g = document.createElement(\"div\");\r\n\t\t\t\t\/\/\thigh + low\r\n\t\t\t\tvar bar=document.createElement(\"v:rect\");\r\n\t\t\t\tbar.style.position=\"absolute\";\r\n\t\t\t\tbar.style.top=y+1+\"px\";\r\n\t\t\t\tbar.style.left=x+\"px\";\r\n\t\t\t\tbar.style.width=w+\"px\";\r\n\t\t\t\tbar.style.height=h+\"px\";\r\n\t\t\t\tbar.setAttribute(\"fillColor\", data[i].series.color);\r\n\t\t\t\tbar.setAttribute(\"stroked\", \"false\");\r\n\t\t\t\tbar.style.antialias=\"false\";\r\n\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\tfill.setAttribute(\"opacity\", \"0.6\");\r\n\t\t\t\tbar.appendChild(fill);\r\n\t\t\t\tg.appendChild(bar);\r\n\t\t\t\tvar line = document.createElement(\"v:line\");\r\n\t\t\t\tline.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tline.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tline.setAttribute(\"from\", x+\"px,\"+close+\"px\");\r\n\t\t\t\tline.setAttribute(\"to\", (x+w+(part*2)-2)+\"px,\"+close+\"px\");\r\n\t\t\t\tvar s=line.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=\"0px\";\r\n\t\t\t\ts.left=\"0px\";\r\n\t\t\t\ts.antialias=\"false\";\r\n\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tline.appendChild(str);\r\n\t\t\t\tg.appendChild(line);\r\n\t\t\t\tif(applyTo){ applyTo(g, data[i].src); }\r\n\t\t\t\tgroup.appendChild(g);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.HighLowOpenClose":{"meta":{"summary":"Plots the series as a set of high\/low bars with open and close indicators. Bindings: x\/high\/low\/open\/close","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tvar n = data.length;\r\n\t\t\tvar part = ((area.right-area.left)\/(plot.axisX.range.upper - plot.axisX.range.lower))\/4;\r\n\t\t\tvar w = part*2;\r\n\t\t\tfor(var i=0; i<n; i++){\r\n\t\t\t\tvar high = data[i].high;\r\n\t\t\t\tvar low = data[i].low;\r\n\t\t\t\tif(low > high){\r\n\t\t\t\t\tvar t = low;\r\n\t\t\t\t\tlow = high;\r\n\t\t\t\t\thigh = t;\r\n\t\t\t\t}\r\n\t\t\t\tvar o = data[i].open;\r\n\t\t\t\tvar c = data[i].close;\r\n\t\t\t\tvar x = plot.axisX.getCoord(data[i].x, plotarea, plot) - (w\/2);\r\n\t\t\t\tvar y = plot.axisY.getCoord(high, plotarea, plot);\r\n\t\t\t\tvar h = plot.axisY.getCoord(low, plotarea, plot)-y;\r\n\t\t\t\tvar open = plot.axisY.getCoord(o, plotarea, plot);\r\n\t\t\t\tvar close = plot.axisY.getCoord(c, plotarea, plot);\r\n\t\t\t\tvar g = document.createElement(\"div\");\r\n\t\t\t\t\/\/\thigh + low\r\n\t\t\t\tvar bar=document.createElement(\"v:rect\");\r\n\t\t\t\tbar.style.position=\"absolute\";\r\n\t\t\t\tbar.style.top=y+1+\"px\";\r\n\t\t\t\tbar.style.left=x+\"px\";\r\n\t\t\t\tbar.style.width=w+\"px\";\r\n\t\t\t\tbar.style.height=h+\"px\";\r\n\t\t\t\tbar.setAttribute(\"fillColor\", data[i].series.color);\r\n\t\t\t\tbar.setAttribute(\"stroked\", \"false\");\r\n\t\t\t\tbar.style.antialias=\"false\";\r\n\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\tfill.setAttribute(\"opacity\", \"0.6\");\r\n\t\t\t\tbar.appendChild(fill);\r\n\t\t\t\tg.appendChild(bar);\r\n\t\t\t\tvar line = document.createElement(\"v:line\");\r\n\t\t\t\tline.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tline.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tline.setAttribute(\"from\", (x-(part*2))+\"px,\"+open+\"px\");\r\n\t\t\t\tline.setAttribute(\"to\", (x+w-2)+\"px,\"+open+\"px\");\r\n\t\t\t\tvar s=line.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=\"0px\";\r\n\t\t\t\ts.left=\"0px\";\r\n\t\t\t\ts.antialias=\"false\";\r\n\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tline.appendChild(str);\r\n\t\t\t\tg.appendChild(line);\r\n\t\t\t\tvar line = document.createElement(\"v:line\");\r\n\t\t\t\tline.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tline.setAttribute(\"strokeweight\", \"1px\");\r\n\t\t\t\tline.setAttribute(\"from\", x+\"px,\"+close+\"px\");\r\n\t\t\t\tline.setAttribute(\"to\", (x+w+(part*2)-2)+\"px,\"+close+\"px\");\r\n\t\t\t\tvar s=line.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.top=\"0px\";\r\n\t\t\t\ts.left=\"0px\";\r\n\t\t\t\ts.antialias=\"false\";\r\n\t\t\t\tvar str=document.createElement(\"v:stroke\");\r\n\t\t\t\tstr.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tline.appendChild(str);\r\n\t\t\t\tg.appendChild(line);\r\n\t\t\t\tif(applyTo){ applyTo(g, data[i].src); }\r\n\t\t\t\tgroup.appendChild(g);\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.Scatter":{"meta":{"summary":"Plots the series as a set of points. Bindings: x\/y","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar r=6;\r\n\t\t\tvar mod=r\/2;\r\n\t\t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = Math.round(plot.axisX.getCoord(data[i].x, plotarea, plot));\r\n\t\t\t\tvar y = Math.round(plot.axisY.getCoord(data[i].y, plotarea, plot));\r\n\t\t\t\tvar point = document.createElement(\"v:rect\");\r\n\t\t\t\tpoint.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tpoint.setAttribute(\"fillcolor\", data[i].series.color);\r\n\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\tfill.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tpoint.appendChild(fill);\r\n\t\t\t\tvar s=point.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.rotation=\"45\";\r\n\t\t\t\ts.top=(y-mod)+\"px\";\r\n\t\t\t\ts.left=(x-mod)+\"px\";\r\n\t\t\t\ts.width=r+\"px\";\r\n\t\t\t\ts.height=r+\"px\";\r\n\t\t\t\tgroup.appendChild(point);\r\n\t\t\t\tif(applyTo){ applyTo(point, data[i].src); }\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}},"dojo.charting.Plotters.Bubble":{"meta":{"summary":"Plots the series as a set of points with a size factor. Bindings: x\/y\/size","parameters":{"data":{"type":"array"},"plotarea":{"type":"dojo.charting.PlotArea"},"plot":{"type":"dojo.charting.Plot"},"applyTo":{"type":"function?"}},"src":" \t\tvar sizeFactor=1;\r\n\t\t\tvar area = plotarea.getArea();\r\n\t\t\tvar group = dojo.charting.Plotters._group(plotarea);\r\n\t\t\tfor(var i=0; i<data.length; i++){\r\n\t\t\t\tvar x = Math.round(plot.axisX.getCoord(data[i].x, plotarea, plot));\r\n\t\t\t\tvar y = Math.round(plot.axisY.getCoord(data[i].y, plotarea, plot));\r\n\t\t\t\tif(i==0){\r\n\t\t\t\t\t\/\/\tfigure out the size factor, start with the axis with the greater range.\r\n\t\t\t\t\tvar raw = data[i].size;\r\n\t\t\t\t\tvar dy = plot.axisY.getCoord(data[i].y + raw, plotarea, plot)-y;\r\n\t\t\t\t\tsizeFactor = dy\/raw;\r\n\t\t\t\t}\r\n\t\t\t\tif(sizeFactor<1) { sizeFactor = 1; }\r\n\t\t\t\tvar r = (data[i].size\/2)*sizeFactor;\r\n\t\t\t\tvar point = document.createElement(\"v:oval\");\r\n\t\t\t\tpoint.setAttribute(\"strokecolor\", data[i].series.color);\r\n\t\t\t\tpoint.setAttribute(\"fillcolor\", data[i].series.color);\r\n\t\t\t\tvar fill=document.createElement(\"v:fill\");\r\n\t\t\t\tfill.setAttribute(\"opacity\",\"0.6\");\r\n\t\t\t\tpoint.appendChild(fill);\r\n\t\t\t\tvar s=point.style;\r\n\t\t\t\ts.position=\"absolute\";\r\n\t\t\t\ts.rotation=\"45\";\r\n\t\t\t\ts.top=(y-r)+\"px\";\r\n\t\t\t\ts.left=(x-r)+\"px\";\r\n\t\t\t\ts.width=(r*2)+\"px\";\r\n\t\t\t\ts.height=(r*2)+\"px\";\r\n\t\t\t\tgroup.appendChild(point);\r\n\t\t\t\tif(applyTo){ applyTo(point, data[i].src); }\r\n\t\t\t}\r\n\t\t\treturn group;\t\/\/\tHTMLDivElement\r","returns":"HTMLDivElement"}}}}}}