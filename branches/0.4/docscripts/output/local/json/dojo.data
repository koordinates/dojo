{"dojo.data.CsvStore":{"meta":{"requires":{"common":["dojo.data.core.RemoteStore","dojo.lang.assert"]},"functions":{"dojo.data.CsvStore":{"meta":{"prototype_chain":["dojo.data.core.RemoteStore"],"call_chain":["dojo.data.core.RemoteStore"]}}}}},"dojo.data.OpmlStore":{"meta":{"requires":{"common":["dojo.data.core.Read","dojo.data.core.Result","dojo.lang.assert","dojo.json","dojo.experimental"]},"functions":{"dojo.data.OpmlStore":{"meta":{"prototype_chain":["dojo.data.core.Read"],"call_chain":["dojo.data.core.Read"]}}}}},"dojo.data.RdfStore":{"meta":{"requires":{"common":["dojo.lang.declare","dojo.data.core.RemoteStore","dojo.experimental"]},"functions":{"dojo.data.RdfStore":{"meta":{"prototype_chain":["dojo.data.core.RemoteStore"],"call_chain":["dojo.data.core.RemoteStore"]}},"dojo.data.RhizomeStore":{"meta":{"prototype_chain":["dojo.data.RdfStore"],"call_chain":["dojo.data.RdfStore"]}},"dojo.data.RdfDatatypeSerializer":{"meta":{"summary":"","parameters":{"type":{"type":"JavaScript type"},"convertFunc":{"type":"function"},"uri":{"type":"RDF datatype URI"}},"src":" this.type = type;\n\tthis._converter = convertFunc;\n\tthis.uri = uri;\n\tthis.serialize = function(value) { \n\t\treturn this._converter.call(value, value); \n\t};","instance_variables":["type","_converter","uri","serialize"],"call_chain":["this._converter"]}},"dojo.data.RdfDatatypeSerializer.serialize":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" \treturn this._converter.call(value, value); ","call_chain":["this._converter"],"instance":"dojo.data.RdfDatatypeSerializer"}}}}},"dojo.data.YahooStore":{"meta":{"requires":{"common":["dojo.data.core.RemoteStore","dojo.lang.declare","dojo.io.ScriptSrcIO"]},"functions":{"dojo.data.YahooStore":{"meta":{"prototype_chain":["dojo.data.core.RemoteStore"],"call_chain":["dojo.data.core.RemoteStore"]}}}}},"dojo.data.core.Read":{"meta":{"requires":{"common":["dojo.data.core.Result","dojo.lang.declare","dojo.experimental"]}}},"dojo.data.core.RemoteStore":{"meta":{"requires":{"common":["dojo.data.core.Read","dojo.data.core.Write","dojo.data.core.Result","dojo.experimental","dojo.Deferred","dojo.lang.declare","dojo.json","dojo.io.*"]},"functions":{"bindfunc":{"meta":{"summary":"","parameters":{"type":{"type":""},"data":{"type":""},"evt":{"type":""}},"src":" \t\tif(type == \"load\"){ \n\t\t\t\tif (result.fired == 1) {\n\t\t\t\t\t\/\/it seems that mysteriously \"load\" sometime \n\t\t\t\t\t\/\/gets called after \"error\"\n\t\t\t\t\t\/\/so check if an error has already occurred \n\t\t\t\t\t\/\/and stop if it has \n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\/\/update this._data upon save\n\t\t\t\tvar key = null;\n\t\t\t\tfor (key in self._added) {\n\t\t\t\t\tif (!self._data[key])\n\t\t\t\t\tself._data[key] = [{} , 1];\n\t\t\t\t}\n\t\t\t\tfor (key in self._changed) {\n\t\t\t\t\tvar existing = self._data[key];\n\t\t\t\t\tvar changes = self._changed[key];\n\t\t\t\t\tif (existing) {\n\t\t\t\t\t\texisting[0] = changes;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself._data[key] = [changes, 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (key in self._deleted) {\n\t\t\t\t\tif (self._data[key]) {\n\t\t\t\t\t\tdelete self._data[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tself._initChanges(); \n\t\t\t\tresult.callback(true); \/\/todo: what result to pass?\n\t\t\t} else if(type == \"error\" || type == 'timeout'){\n\t\t\t\tresult.errback(data); \/\/todo: how to handle timeout\n\t\t\t}\t"}},"result.canceller":{"meta":{"summary":"","parameters":{"deferred":{"type":""}},"src":" \tresult.canceller = function(deferred) { request.abort();    "}}}}},"dojo.data.core.Result":{"meta":{"requires":{"common":["dojo.lang.declare","dojo.experimental"]}}},"dojo.data.core.Write":{"meta":{"requires":{"common":["dojo.data.core.Read","dojo.lang.declare","dojo.experimental"]},"functions":{"dojo.data.core.Write":{"meta":{"prototype_chain":["dojo.data.core.Read"],"call_chain":["dojo.data.core.Read"]}}}}},"dojo.data.old.Attribute":{"meta":{"requires":{"common":["dojo.data.old.Item","dojo.lang.assert"]},"functions":{"dojo.data.old.Attribute":{"meta":{"summary":"","parameters":{"dataProvider":{"type":"dojo.data.old.provider.Base"},"attributeId":{"type":"string"}},"src":" dojo.lang.assertType(dataProvider, dojo.data.old.provider.Base, {optional: true});\n\tdojo.lang.assertType(attributeId, String);\n\tdojo.data.old.Item.call(this, dataProvider);\n\tthis._attributeId = attributeId;","instance_variables":["_attributeId"],"call_chain":["dojo.data.old.Item"],"prototype_chain":["dojo.data.old.Item"]}},"dojo.data.old.Attribute.toString":{"meta":{"summary":"","src":" return this._attributeId; \/\/ string","returns":"string","prototype":"dojo.data.old.Attribute"}},"dojo.data.old.Attribute.getAttributeId":{"meta":{"summary":"","src":" return this._attributeId; \/\/ string","returns":"string","prototype":"dojo.data.old.Attribute"}},"dojo.data.old.Attribute.getType":{"meta":{"summary":"","src":" return this.get('type'); \/\/ dojo.data.old.Type or null","returns":"dojo.data.old.Type or null","prototype":"dojo.data.old.Attribute"}},"dojo.data.old.Attribute.setType":{"meta":{"summary":"","parameters":{"type":{"type":"dojo.data.old.Type or null"}},"src":" this.set('type', type);","prototype":"dojo.data.old.Attribute"}}}}},"dojo.data.old.Item":{"meta":{"requires":{"common":["dojo.data.old.Observable","dojo.data.old.Value","dojo.lang.common","dojo.lang.assert"]},"functions":{"dojo.data.old.Item":{"meta":{"summary":"","parameters":{"dataProvider":{"type":"dojo.data.old.provider.Base"}},"src":" dojo.lang.assertType(dataProvider, dojo.data.old.provider.Base, {optional: true});\n\tdojo.data.old.Observable.call(this);\n\tthis._dataProvider = dataProvider;\n\tthis._dictionaryOfAttributeValues = {};","instance_variables":["_dataProvider","_dictionaryOfAttributeValues"],"call_chain":["dojo.data.old.Observable"],"prototype_chain":["dojo.data.old.Observable"]}},"dojo.data.old.Item.compare":{"meta":{"summary":"","parameters":{"otherItem":{"type":"dojo.data.old.Item"}},"src":" return dojo.data.old.Item.compare(this, otherItem); \/\/ 0, 1, or -1","returns":"0, 1, or -1","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.toString":{"meta":{"summary":"","src":" var arrayOfStrings = [];\n\tvar attributes = this.getAttributes();\n\tfor (var i in attributes) {\n\t\tvar attribute = attributes[i];\n\t\tvar arrayOfValues = this.getValues(attribute);\n\t\tvar valueString;\n\t\tif (arrayOfValues.length == 1) {\n\t\t\tvalueString = arrayOfValues[0];\n\t\t} else {\n\t\t\tvalueString = '[';\n\t\t\tvalueString += arrayOfValues.join(', ');\n\t\t\tvalueString += ']';\n\t\t}\n\t\tarrayOfStrings.push('  ' + attribute + ': ' + valueString);\n\t}\n\tvar returnString = '{ ';\n\treturnString += arrayOfStrings.join(',\\n');\n\treturnString += ' }';\n\treturn returnString; \/\/ string","returns":"string","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.isEqual":{"meta":{"summary":"","parameters":{"otherItem":{"type":"dojo.data.old.Item"}},"src":" return (this.compare(otherItem) == 0); \/\/ boolean","returns":"boolean","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.getName":{"meta":{"summary":"","src":" return this.get('name');","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.get":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"}},"src":" var literalOrValueOrArray = this._dictionaryOfAttributeValues[attributeId];\n\tif (dojo.lang.isUndefined(literalOrValueOrArray)) {\n\t\treturn null; \/\/ null\n\t}\n\tif (literalOrValueOrArray instanceof dojo.data.old.Value) {\n\t\treturn literalOrValueOrArray.getValue(); \/\/ literal\n\t}\n\tif (dojo.lang.isArray(literalOrValueOrArray)) {\n\t\tvar dojoDataValue = literalOrValueOrArray[0];\n\t\treturn dojoDataValue.getValue(); \/\/ literal\n\t}\n\treturn literalOrValueOrArray; \/\/ literal","returns":"mixed","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.getValue":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"}},"src":" var literalOrValueOrArray = this._dictionaryOfAttributeValues[attributeId];\n\tif (dojo.lang.isUndefined(literalOrValueOrArray)) {\n\t\treturn null; \/\/ null\n\t}\n\tif (literalOrValueOrArray instanceof dojo.data.old.Value) {\n\t\treturn literalOrValueOrArray; \/\/ dojo.data.old.Value\n\t}\n\tif (dojo.lang.isArray(literalOrValueOrArray)) {\n\t\tvar dojoDataValue = literalOrValueOrArray[0];\n\t\treturn dojoDataValue; \/\/ dojo.data.old.Value\n\t}\n\tvar literal = literalOrValueOrArray;\n\tdojoDataValue = new dojo.data.old.Value(literal);\n\tthis._dictionaryOfAttributeValues[attributeId] = dojoDataValue;\n\treturn dojoDataValue; \/\/ dojo.data.old.Value","returns":"mixed","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.getValues":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"}},"src":" var literalOrValueOrArray = this._dictionaryOfAttributeValues[attributeId];\n\tif (dojo.lang.isUndefined(literalOrValueOrArray)) {\n\t\treturn null; \/\/ null\n\t}\n\tif (literalOrValueOrArray instanceof dojo.data.old.Value) {\n\t\tvar array = [literalOrValueOrArray];\n\t\tthis._dictionaryOfAttributeValues[attributeId] = array;\n\t\treturn array; \/\/ Array\n\t}\n\tif (dojo.lang.isArray(literalOrValueOrArray)) {\n\t\treturn literalOrValueOrArray; \/\/ Array\n\t}\n\tvar literal = literalOrValueOrArray;\n\tvar dojoDataValue = new dojo.data.old.Value(literal);\n\tarray = [dojoDataValue];\n\tthis._dictionaryOfAttributeValues[attributeId] = array;\n\treturn array; \/\/ Array","returns":"mixed","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.load":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"},"value":{"type":"anything"}},"src":" this._dataProvider.registerAttribute(attributeId);\n\tvar literalOrValueOrArray = this._dictionaryOfAttributeValues[attributeId];\n\tif (dojo.lang.isUndefined(literalOrValueOrArray)) {\n\t\tthis._dictionaryOfAttributeValues[attributeId] = value;\n\t\treturn;\n\t}\n\tif (!(value instanceof dojo.data.old.Value)) {\n\t\tvalue = new dojo.data.old.Value(value);\n\t}\n\tif (literalOrValueOrArray instanceof dojo.data.old.Value) {\n\t\tvar array = [literalOrValueOrArray, value];\n\t\tthis._dictionaryOfAttributeValues[attributeId] = array;\n\t\treturn;\n\t}\n\tif (dojo.lang.isArray(literalOrValueOrArray)) {\n\t\tliteralOrValueOrArray.push(value);\n\t\treturn;\n\t}\n\tvar literal = literalOrValueOrArray;\n\tvar dojoDataValue = new dojo.data.old.Value(literal);\n\tarray = [dojoDataValue, value];\n\tthis._dictionaryOfAttributeValues[attributeId] = array;","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.set":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"},"value":{"type":"anything"}},"src":" this._dataProvider.registerAttribute(attributeId);\n\tthis._dictionaryOfAttributeValues[attributeId] = value;\n\tthis._dataProvider.noteChange(this, attributeId, value);","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.setValue":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"},"value":{"type":"dojo.data.old.Value"}},"src":" this.set(attributeId, value);","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.addValue":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"},"value":{"type":"anything"}},"src":" this.load(attributeId, value);\n\tthis._dataProvider.noteChange(this, attributeId, value);","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.setValues":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"},"arrayOfValues":{"type":"Array"}},"src":" dojo.lang.assertType(arrayOfValues, Array);\n\tthis._dataProvider.registerAttribute(attributeId);\n\tvar finalArray = [];\n\tthis._dictionaryOfAttributeValues[attributeId] = finalArray;\n\tfor (var i in arrayOfValues) {\n\t\tvar value = arrayOfValues[i];\n\t\tif (!(value instanceof dojo.data.old.Value)) {\n\t\t\tvalue = new dojo.data.old.Value(value);\n\t\t}\n\t\tfinalArray.push(value);\n\t\tthis._dataProvider.noteChange(this, attributeId, value);\n\t}","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.getAttributes":{"meta":{"summary":"","src":" var arrayOfAttributes = [];\n\tfor (var key in this._dictionaryOfAttributeValues) {\n\t\tarrayOfAttributes.push(this._dataProvider.getAttribute(key));\n\t}\n\treturn arrayOfAttributes; \/\/ Array","returns":"Array","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.hasAttribute":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"}},"src":" return (attributeId in this._dictionaryOfAttributeValues); \/\/ boolean","returns":"boolean","prototype":"dojo.data.old.Item"}},"dojo.data.old.Item.hasAttributeValue":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"},"value":{"type":"anything"}},"src":" var arrayOfValues = this.getValues(attributeId);\n\tfor (var i in arrayOfValues) {\n\t\tvar candidateValue = arrayOfValues[i];\n\t\tif (candidateValue.isEqual(value)) {\n\t\t\treturn true; \/\/ boolean\n\t\t}\n\t}\n\treturn false; \/\/ boolean","returns":"boolean","prototype":"dojo.data.old.Item"}}}}},"dojo.data.old.Kind":{"meta":{"requires":{"common":["dojo.data.old.Item"]},"functions":{"dojo.data.old.Kind":{"meta":{"summary":"","parameters":{"dataProvider":{"type":"dojo.data.old.provider.Base"}},"src":" dojo.data.old.Item.call(this, dataProvider);","call_chain":["dojo.data.old.Item"],"prototype_chain":["dojo.data.old.Item"]}}}}},"dojo.data.old.Observable":{"meta":{"requires":{"common":["dojo.lang.common","dojo.lang.assert"]},"functions":{"dojo.data.old.Observable":{"meta":{"summary":"","src":"","instance_variables":["_arrayOfObservers"]}},"dojo.data.old.Observable.addObserver":{"meta":{"summary":"","parameters":{"observer":{"type":"object"}},"src":" dojo.lang.assertType(observer, Object);\n\tdojo.lang.assertType(observer.observedObjectHasChanged, Function);\n\tif (!this._arrayOfObservers) {\n\t\tthis._arrayOfObservers = [];\n\t}\n\tif (!dojo.lang.inArray(this._arrayOfObservers, observer)) {\n\t\tthis._arrayOfObservers.push(observer);\n\t}","prototype":"dojo.data.old.Observable"}},"dojo.data.old.Observable.removeObserver":{"meta":{"summary":"","parameters":{"observer":{"type":"object"}},"src":" if (!this._arrayOfObservers) {\n\t\treturn;\n\t}\n\tvar index = dojo.lang.indexOf(this._arrayOfObservers, observer);\n\tif (index != -1) {\n\t\tthis._arrayOfObservers.splice(index, 1);\n\t}","prototype":"dojo.data.old.Observable"}},"dojo.data.old.Observable.getObservers":{"meta":{"summary":"","src":" return this._arrayOfObservers; \/\/ Array or undefined","returns":"Array or undefined","prototype":"dojo.data.old.Observable"}}}}},"dojo.data.old.ResultSet":{"meta":{"requires":{"common":["dojo.lang.assert","dojo.collections.Collections"]},"functions":{"dojo.data.old.ResultSet":{"meta":{"summary":"","parameters":{"dataProvider":{"type":"dojo.data.old.provider.Base"},"arrayOfItems":{"type":"Array"}},"src":" dojo.lang.assertType(dataProvider, dojo.data.old.provider.Base, {optional: true});\n\tdojo.lang.assertType(arrayOfItems, Array, {optional: true});\n\tdojo.data.old.Observable.call(this);\n\tthis._dataProvider = dataProvider;\n\tthis._arrayOfItems = [];\n\tif (arrayOfItems) {\n\t\tthis._arrayOfItems = arrayOfItems;\n\t}","instance_variables":["_dataProvider","_arrayOfItems"],"call_chain":["dojo.data.old.Observable"],"prototype_chain":["dojo.data.old.Observable"]}},"dojo.data.old.ResultSet.toString":{"meta":{"summary":"","src":" var returnString = this._arrayOfItems.join(', ');\n\treturn returnString; \/\/ string","returns":"string","prototype":"dojo.data.old.ResultSet"}},"dojo.data.old.ResultSet.toArray":{"meta":{"summary":"","src":" return this._arrayOfItems; \/\/ Array","returns":"Array","prototype":"dojo.data.old.ResultSet"}},"dojo.data.old.ResultSet.getIterator":{"meta":{"summary":"","src":" return new dojo.collections.Iterator(this._arrayOfItems);","prototype":"dojo.data.old.ResultSet"}},"dojo.data.old.ResultSet.getLength":{"meta":{"summary":"","src":" return this._arrayOfItems.length; \/\/ integer","returns":"integer","prototype":"dojo.data.old.ResultSet"}},"dojo.data.old.ResultSet.getItemAt":{"meta":{"summary":"","parameters":{"index":{"type":"numeric"}},"src":" return this._arrayOfItems[index];","prototype":"dojo.data.old.ResultSet"}},"dojo.data.old.ResultSet.indexOf":{"meta":{"summary":"","parameters":{"item":{"type":"dojo.data.old.Item"}},"src":" return dojo.lang.indexOf(this._arrayOfItems, item); \/\/ integer","returns":"integer","prototype":"dojo.data.old.ResultSet"}},"dojo.data.old.ResultSet.contains":{"meta":{"summary":"","parameters":{"item":{"type":"dojo.data.old.Item"}},"src":" return dojo.lang.inArray(this._arrayOfItems, item); \/\/ boolean","returns":"boolean","prototype":"dojo.data.old.ResultSet"}},"dojo.data.old.ResultSet.getDataProvider":{"meta":{"summary":"","src":" return this._dataProvider; \/\/ dojo.data.old.provider.Base","returns":"dojo.data.old.provider.Base","prototype":"dojo.data.old.ResultSet"}}}}},"dojo.data.old.Type":{"meta":{"requires":{"common":["dojo.data.old.Item"]},"functions":{"dojo.data.old.Type":{"meta":{"summary":"","parameters":{"dataProvider":{"type":"dojo.data.old.provider.Base"}},"src":" dojo.data.old.Item.call(this, dataProvider);","call_chain":["dojo.data.old.Item"],"prototype_chain":["dojo.data.old.Item"]}}}}},"dojo.data.old.Value":{"meta":{"requires":{"common":["dojo.lang.assert"]},"functions":{"dojo.data.old.Value":{"meta":{"summary":"","parameters":{"value":{"type":"anything"}},"src":" this._value = value;\n\tthis._type = null;","instance_variables":["_value","_type"]}},"dojo.data.old.Value.toString":{"meta":{"summary":"","src":" return this._value.toString(); \/\/ string","returns":"string","prototype":"dojo.data.old.Value"}},"dojo.data.old.Value.getValue":{"meta":{"summary":"","src":" return this._value; \/\/ anything","returns":"anything","prototype":"dojo.data.old.Value"}},"dojo.data.old.Value.getType":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.Value.prototype.getType');\n\treturn this._type; \/\/ dojo.data.old.Type","returns":"dojo.data.old.Type","prototype":"dojo.data.old.Value"}},"dojo.data.old.Value.compare":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.Value.prototype.compare');","prototype":"dojo.data.old.Value"}},"dojo.data.old.Value.isEqual":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.Value.prototype.isEqual');","prototype":"dojo.data.old.Value"}}}}},"dojo.data.old._":{"meta":{"requires":{"common":["dojo.data.old.Item","dojo.data.old.ResultSet","dojo.data.old.provider.FlatFile","dojo.experimental"]}}},"dojo.data.old.format.Csv":{"meta":{"requires":{"common":["dojo.lang.assert"]},"functions":{"dojo.data.old.format.Csv":{"meta":{"initialized":true,"summary":"","src":" this.getArrayStructureFromCsvFileContents = function(\/* string *\/ csvFileContents) {\n\t\t\/**\n\t\t * Given a string containing CSV records, this method parses\n\t\t * the string and returns a data structure containing the parsed\n\t\t * content.  The data structure we return is an array of length\n\t\t * R, where R is the number of rows (lines) in the CSV data.  The \n\t\t * return array contains one sub-array for each CSV line, and each \n\t\t * sub-array contains C string values, where C is the number of \n\t\t * columns in the CSV data.\n\t\t * \n\t\t * For example, given this CSV string as input:\n\t\t * <pre>\n\t\t *   \"Title, Year, Producer \\n Alien, 1979, Ridley Scott \\n Blade Runner, 1982, Ridley Scott\"\n\t\t * <\/pre>\n\t\t * We will return this data structure:\n\t\t * <pre>\n\t\t *   [[\"Title\", \"Year\", \"Producer\"]\n\t\t *    [\"Alien\", \"1979\", \"Ridley Scott\"],  \n\t\t *    [\"Blade Runner\", \"1982\", \"Ridley Scott\"]]\n\t\t * <\/pre>\n\t\t *\/\n\t\tdojo.lang.assertType(csvFileContents, String);\n\t\tvar lineEndingCharacters = new RegExp(\"\\r\\n|\\n|\\r\");\n\t\tvar leadingWhiteSpaceCharacters = new RegExp(\"^\\\\s+\",'g');\n\t\tvar trailingWhiteSpaceCharacters = new RegExp(\"\\\\s+$\",'g');\n\t\tvar doubleQuotes = new RegExp('\"\"','g');\n\t\tvar arrayOfOutputRecords = [];\n\t\tvar arrayOfInputLines = csvFileContents.split(lineEndingCharacters);\n\t\tfor (var i in arrayOfInputLines) {\n\t\t\tvar singleLine = arrayOfInputLines[i];\n\t\t\tif (singleLine.length > 0) {\n\t\t\t\tvar listOfFields = singleLine.split(',');\n\t\t\t\tvar j = 0;\n\t\t\t\twhile (j < listOfFields.length) {\n\t\t\t\t\tvar space_field_space = listOfFields[j];\n\t\t\t\t\tvar field_space = space_field_space.replace(leadingWhiteSpaceCharacters, ''); \/\/ trim leading whitespace\n\t\t\t\t\tvar field = field_space.replace(trailingWhiteSpaceCharacters, ''); \/\/ trim trailing whitespace\n\t\t\t\t\tvar firstChar = field.charAt(0);\n\t\t\t\t\tvar lastChar = field.charAt(field.length - 1);\n\t\t\t\t\tvar secondToLastChar = field.charAt(field.length - 2);\n\t\t\t\t\tvar thirdToLastChar = field.charAt(field.length - 3);\n\t\t\t\t\tif ((firstChar == '\"') && \n\t\t\t\t\t\t\t((lastChar != '\"') || \n\t\t\t\t\t\t\t ((lastChar == '\"') && (secondToLastChar == '\"') && (thirdToLastChar != '\"')) )) {\n\t\t\t\t\t\tif (j+1 === listOfFields.length) {\n\t\t\t\t\t\t\t\/\/ alert(\"The last field in record \" + i + \" is corrupted:\\n\" + field);\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar nextField = listOfFields[j+1];\n\t\t\t\t\t\tlistOfFields[j] = field_space + ',' + nextField;\n\t\t\t\t\t\tlistOfFields.splice(j+1, 1); \/\/ delete element [j+1] from the list\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ((firstChar == '\"') && (lastChar == '\"')) {\n\t\t\t\t\t\t\tfield = field.slice(1, (field.length - 1)); \/\/ trim the \" characters off the ends\n\t\t\t\t\t\t\tfield = field.replace(doubleQuotes, '\"');   \/\/ replace \"\" with \"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlistOfFields[j] = field;\n\t\t\t\t\t\tj += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tarrayOfOutputRecords.push(listOfFields);\n\t\t\t}\n\t\t}\n\t\treturn arrayOfOutputRecords; \/\/ Array\n\t};\n\tthis.loadDataProviderFromFileContents = function(\/* dojo.data.old.provider.Base *\/ dataProvider, \/* string *\/ csvFileContents) {\n\t\tdojo.lang.assertType(dataProvider, dojo.data.old.provider.Base);\n\t\tdojo.lang.assertType(csvFileContents, String);\n\t\tvar arrayOfArrays = this.getArrayStructureFromCsvFileContents(csvFileContents);\n\t\tif (arrayOfArrays) {\n\t\t\tvar arrayOfKeys = arrayOfArrays[0];\n\t\t\tfor (var i = 1; i < arrayOfArrays.length; ++i) {\n\t\t\t\tvar row = arrayOfArrays[i];\n\t\t\t\tvar item = dataProvider.getNewItemToLoad();\n\t\t\t\tfor (var j in row) {\n\t\t\t\t\tvar value = row[j];\n\t\t\t\t\tvar key = arrayOfKeys[j];\n\t\t\t\t\titem.load(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\tthis.getCsvStringFromResultSet = function(\/* dojo.data.old.ResultSet *\/ resultSet) {\n\t\tdojo.unimplemented('dojo.data.old.format.Csv.getCsvStringFromResultSet');\n\t\tvar csvString = null;\n\t\treturn csvString; \/\/ String\n\t};","instance_variables":["getArrayStructureFromCsvFileContents","loadDataProviderFromFileContents","getCsvStringFromResultSet"],"returns":"mixed"}},"dojo.data.old.format.Csv.getArrayStructureFromCsvFileContents":{"meta":{"summary":"","parameters":{"csvFileContents":{"type":"string"}},"src":" \tdojo.lang.assertType(csvFileContents, String);\n\t\tvar lineEndingCharacters = new RegExp(\"\\r\\n|\\n|\\r\");\n\t\tvar leadingWhiteSpaceCharacters = new RegExp(\"^\\\\s+\",'g');\n\t\tvar trailingWhiteSpaceCharacters = new RegExp(\"\\\\s+$\",'g');\n\t\tvar doubleQuotes = new RegExp('\"\"','g');\n\t\tvar arrayOfOutputRecords = [];\n\t\tvar arrayOfInputLines = csvFileContents.split(lineEndingCharacters);\n\t\tfor (var i in arrayOfInputLines) {\n\t\t\tvar singleLine = arrayOfInputLines[i];\n\t\t\tif (singleLine.length > 0) {\n\t\t\t\tvar listOfFields = singleLine.split(',');\n\t\t\t\tvar j = 0;\n\t\t\t\twhile (j < listOfFields.length) {\n\t\t\t\t\tvar space_field_space = listOfFields[j];\n\t\t\t\t\tvar field_space = space_field_space.replace(leadingWhiteSpaceCharacters, ''); \/\/ trim leading whitespace\n\t\t\t\t\tvar field = field_space.replace(trailingWhiteSpaceCharacters, ''); \/\/ trim trailing whitespace\n\t\t\t\t\tvar firstChar = field.charAt(0);\n\t\t\t\t\tvar lastChar = field.charAt(field.length - 1);\n\t\t\t\t\tvar secondToLastChar = field.charAt(field.length - 2);\n\t\t\t\t\tvar thirdToLastChar = field.charAt(field.length - 3);\n\t\t\t\t\tif ((firstChar == '\"') && \n\t\t\t\t\t\t\t((lastChar != '\"') || \n\t\t\t\t\t\t\t ((lastChar == '\"') && (secondToLastChar == '\"') && (thirdToLastChar != '\"')) )) {\n\t\t\t\t\t\tif (j+1 === listOfFields.length) {\n\t\t\t\t\t\t\t\/\/ alert(\"The last field in record \" + i + \" is corrupted:\\n\" + field);\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar nextField = listOfFields[j+1];\n\t\t\t\t\t\tlistOfFields[j] = field_space + ',' + nextField;\n\t\t\t\t\t\tlistOfFields.splice(j+1, 1); \/\/ delete element [j+1] from the list\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ((firstChar == '\"') && (lastChar == '\"')) {\n\t\t\t\t\t\t\tfield = field.slice(1, (field.length - 1)); \/\/ trim the \" characters off the ends\n\t\t\t\t\t\t\tfield = field.replace(doubleQuotes, '\"');   \/\/ replace \"\" with \"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlistOfFields[j] = field;\n\t\t\t\t\t\tj += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tarrayOfOutputRecords.push(listOfFields);\n\t\t\t}\n\t\t}\n\t\treturn arrayOfOutputRecords; \/\/ Array","returns":"Array","instance":"dojo.data.old.format.Csv"}},"dojo.data.old.format.Csv.loadDataProviderFromFileContents":{"meta":{"summary":"","parameters":{"dataProvider":{"type":"dojo.data.old.provider.Base"},"csvFileContents":{"type":"string"}},"src":" \tdojo.lang.assertType(dataProvider, dojo.data.old.provider.Base);\n\t\tdojo.lang.assertType(csvFileContents, String);\n\t\tvar arrayOfArrays = this.getArrayStructureFromCsvFileContents(csvFileContents);\n\t\tif (arrayOfArrays) {\n\t\t\tvar arrayOfKeys = arrayOfArrays[0];\n\t\t\tfor (var i = 1; i < arrayOfArrays.length; ++i) {\n\t\t\t\tvar row = arrayOfArrays[i];\n\t\t\t\tvar item = dataProvider.getNewItemToLoad();\n\t\t\t\tfor (var j in row) {\n\t\t\t\t\tvar value = row[j];\n\t\t\t\t\tvar key = arrayOfKeys[j];\n\t\t\t\t\titem.load(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}","instance":"dojo.data.old.format.Csv"}},"dojo.data.old.format.Csv.getCsvStringFromResultSet":{"meta":{"summary":"","parameters":{"resultSet":{"type":"dojo.data.old.ResultSet"}},"src":" \tdojo.unimplemented('dojo.data.old.format.Csv.getCsvStringFromResultSet');\n\t\tvar csvString = null;\n\t\treturn csvString; \/\/ String","returns":"String","instance":"dojo.data.old.format.Csv"}}}}},"dojo.data.old.format.Json":{"meta":{"requires":{"common":["dojo.lang.assert"]},"functions":{"dojo.data.old.format.Json":{"meta":{"initialized":true,"summary":"","src":" this.loadDataProviderFromFileContents = function(\/* dojo.data.old.provider.Base *\/ dataProvider, \/* string *\/ jsonFileContents) {\n\t\tdojo.lang.assertType(dataProvider, dojo.data.old.provider.Base);\n\t\tdojo.lang.assertType(jsonFileContents, String);\n\t\tvar arrayOfJsonData = eval(\"(\" + jsonFileContents + \")\");\n\t\tthis.loadDataProviderFromArrayOfJsonData(dataProvider, arrayOfJsonData);\n\t};\n\tthis.loadDataProviderFromArrayOfJsonData = function(\/* dojo.data.old.provider.Base *\/ dataProvider, \/* Array *\/ arrayOfJsonData) {\n\t\tdojo.lang.assertType(arrayOfJsonData, Array, {optional: true});\n\t\tif (arrayOfJsonData && (arrayOfJsonData.length > 0)) {\n\t\t\tvar firstRow = arrayOfJsonData[0];\n\t\t\tdojo.lang.assertType(firstRow, [Array, \"pureobject\"]);\n\t\t\tif (dojo.lang.isArray(firstRow)) {\n\t\t\t\t_loadDataProviderFromArrayOfArrays(dataProvider, arrayOfJsonData);\n\t\t\t} else {\n\t\t\t\tdojo.lang.assertType(firstRow, \"pureobject\");\n\t\t\t\t_loadDataProviderFromArrayOfObjects(dataProvider, arrayOfJsonData);\n\t\t\t}\n\t\t}\n\t};\n\tthis.getJsonStringFromResultSet = function(\/* dojo.data.old.ResultSet *\/ resultSet) {\n\t\tdojo.unimplemented('dojo.data.old.format.Json.getJsonStringFromResultSet');\n\t\tvar jsonString = null;\n\t\treturn jsonString; \/\/ String\n\t};\n\t\/\/ -------------------------------------------------------------------\n\t\/\/ Private functions\n\t\/\/ -------------------------------------------------------------------\n\tfunction _loadDataProviderFromArrayOfArrays(\/* dojo.data.old.provider.Base *\/ dataProvider, \/* Array *\/ arrayOfJsonData) {\n\t\t\/** \n\t\t * Example: \n\t\t * var arrayOfJsonStates = [\n\t\t * \t [ \"abbr\",  \"population\",  \"name\" ]\n\t\t * \t [  \"WA\",     5894121,      \"Washington\"    ],\n\t\t * \t [  \"WV\",     1808344,      \"West Virginia\" ],\n\t\t * \t [  \"WI\",     5453896,      \"Wisconsin\"     ],\n\t\t *   [  \"WY\",      493782,      \"Wyoming\"       ] ];\n\t\t * this._loadFromArrayOfArrays(arrayOfJsonStates);\n\t\t *\/\n\t\tvar arrayOfKeys = arrayOfJsonData[0];\n\t\tfor (var i = 1; i < arrayOfJsonData.length; ++i) {\n\t\t\tvar row = arrayOfJsonData[i];\n\t\t\tvar item = dataProvider.getNewItemToLoad();\n\t\t\tfor (var j in row) {\n\t\t\t\tvar value = row[j];\n\t\t\t\tvar key = arrayOfKeys[j];\n\t\t\t\titem.load(key, value);\n\t\t\t}\n\t\t}\n\t}\n\tfunction _loadDataProviderFromArrayOfObjects(\/* dojo.data.old.provider.Base *\/ dataProvider, \/* Array *\/ arrayOfJsonData) {\n\t\t\/** \n\t\t * Example: \n\t\t * var arrayOfJsonStates = [\n\t\t * \t { abbr: \"WA\", name: \"Washington\" },\n\t\t * \t { abbr: \"WV\", name: \"West Virginia\" },\n\t\t * \t { abbr: \"WI\", name: \"Wisconsin\", song: \"On, Wisconsin!\" },\n\t\t * \t { abbr: \"WY\", name: \"Wyoming\", cities: [\"Lander\", \"Cheyenne\", \"Laramie\"] } ];\n\t\t * this._loadFromArrayOfArrays(arrayOfJsonStates);\n\t\t *\/\n\t\t\/\/ dojo.debug(\"_loadDataProviderFromArrayOfObjects\");\n\t\tfor (var i in arrayOfJsonData) {\n\t\t\tvar row = arrayOfJsonData[i];\n\t\t\tvar item = dataProvider.getNewItemToLoad();\n\t\t\tfor (var key in row) {\n\t\t\t\tvar value = row[key];\n\t\t\t\tif (dojo.lang.isArray(value)) {\n\t\t\t\t\tvar arrayOfValues = value;\n\t\t\t\t\tfor (var j in arrayOfValues) {\n\t\t\t\t\t\tvalue = arrayOfValues[j];\n\t\t\t\t\t\titem.load(key, value);\n\t\t\t\t\t\t\/\/ dojo.debug(\"loaded: \" + key + \" = \" + value); \n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\titem.load(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","instance_variables":["loadDataProviderFromFileContents","loadDataProviderFromArrayOfJsonData","getJsonStringFromResultSet"],"returns":"String"}},"dojo.data.old.format.Json.loadDataProviderFromFileContents":{"meta":{"summary":"","parameters":{"dataProvider":{"type":"dojo.data.old.provider.Base"},"jsonFileContents":{"type":"string"}},"src":" \tdojo.lang.assertType(dataProvider, dojo.data.old.provider.Base);\n\t\tdojo.lang.assertType(jsonFileContents, String);\n\t\tvar arrayOfJsonData = eval(\"(\" + jsonFileContents + \")\");\n\t\tthis.loadDataProviderFromArrayOfJsonData(dataProvider, arrayOfJsonData);","instance":"dojo.data.old.format.Json"}},"dojo.data.old.format.Json.loadDataProviderFromArrayOfJsonData":{"meta":{"summary":"","parameters":{"dataProvider":{"type":"dojo.data.old.provider.Base"},"arrayOfJsonData":{"type":"Array"}},"src":" \tdojo.lang.assertType(arrayOfJsonData, Array, {optional: true});\n\t\tif (arrayOfJsonData && (arrayOfJsonData.length > 0)) {\n\t\t\tvar firstRow = arrayOfJsonData[0];\n\t\t\tdojo.lang.assertType(firstRow, [Array, \"pureobject\"]);\n\t\t\tif (dojo.lang.isArray(firstRow)) {\n\t\t\t\t_loadDataProviderFromArrayOfArrays(dataProvider, arrayOfJsonData);\n\t\t\t} else {\n\t\t\t\tdojo.lang.assertType(firstRow, \"pureobject\");\n\t\t\t\t_loadDataProviderFromArrayOfObjects(dataProvider, arrayOfJsonData);\n\t\t\t}\n\t\t}","instance":"dojo.data.old.format.Json"}},"dojo.data.old.format.Json.getJsonStringFromResultSet":{"meta":{"summary":"","parameters":{"resultSet":{"type":"dojo.data.old.ResultSet"}},"src":" \tdojo.unimplemented('dojo.data.old.format.Json.getJsonStringFromResultSet');\n\t\tvar jsonString = null;\n\t\treturn jsonString; \/\/ String","returns":"String","instance":"dojo.data.old.format.Json"}}}}},"dojo.data.old.provider.Base":{"meta":{"requires":{"common":["dojo.lang.assert"]},"functions":{"dojo.data.old.provider.Base":{"meta":{"summary":"","src":" this._countOfNestedTransactions = 0;\n\tthis._changesInCurrentTransaction = null;","instance_variables":["_countOfNestedTransactions","_changesInCurrentTransaction"]}},"dojo.data.old.provider.Base.beginTransaction":{"meta":{"summary":"","src":" if (this._countOfNestedTransactions === 0) {\n\t\tthis._changesInCurrentTransaction = [];\n\t}\n\tthis._countOfNestedTransactions += 1;","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.endTransaction":{"meta":{"summary":"","src":" this._countOfNestedTransactions -= 1;\n\tdojo.lang.assert(this._countOfNestedTransactions >= 0);\n\tif (this._countOfNestedTransactions === 0) {\n\t\tvar listOfChangesMade = this._saveChanges();\n\t\tthis._changesInCurrentTransaction = null;\n\t\tif (listOfChangesMade.length > 0) {\n\t\t\t\/\/ dojo.debug(\"endTransaction: \" + listOfChangesMade.length + \" changes made\");\n\t\t\tthis._notifyObserversOfChanges(listOfChangesMade);\n\t\t}\n\t}","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.getNewItemToLoad":{"meta":{"summary":"","src":" return this._newItem(); \/\/ dojo.data.old.Item","returns":"dojo.data.old.Item","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.newItem":{"meta":{"summary":"","parameters":{"itemName":{"type":"string"}},"src":" dojo.lang.assertType(itemName, String, {optional: true});\n\tvar item = this._newItem();\n\tif (itemName) {\n\t\titem.set('name', itemName);\n\t}\n\treturn item; \/\/ dojo.data.old.Item","returns":"dojo.data.old.Item","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.newAttribute":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string"}},"src":" dojo.lang.assertType(attributeId, String, {optional: true});\n\tvar attribute = this._newAttribute(attributeId);\n\treturn attribute; \/\/ dojo.data.old.Attribute","returns":"dojo.data.old.Attribute","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.getAttribute":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string"}},"src":" dojo.unimplemented('dojo.data.old.provider.Base');\n\tvar attribute;\n\treturn attribute; \/\/ dojo.data.old.Attribute","returns":"dojo.data.old.Attribute","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.getAttributes":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.provider.Base');\n\treturn this._arrayOfAttributes; \/\/ Array","returns":"Array","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.fetchArray":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.provider.Base');\n\treturn []; \/\/ Array","returns":"Array","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.fetchResultSet":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.provider.Base');\n\tvar resultSet;\n\treturn resultSet; \/\/ dojo.data.old.ResultSet","returns":"dojo.data.old.ResultSet","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.noteChange":{"meta":{"summary":"","parameters":{"item":{"type":"dojo.data.old.Item"},"attribute":{"type":"string or dojo.data.old.Attribute"},"value":{"type":"anything"}},"src":" var change = {item: item, attribute: attribute, value: value};\n\tif (this._countOfNestedTransactions === 0) {\n\t\tthis.beginTransaction();\n\t\tthis._changesInCurrentTransaction.push(change);\n\t\tthis.endTransaction();\n\t} else {\n\t\tthis._changesInCurrentTransaction.push(change);\n\t}","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.addItemObserver":{"meta":{"summary":"","parameters":{"item":{"type":"dojo.data.old.Item"},"observer":{"type":"object"}},"src":" dojo.lang.assertType(item, dojo.data.old.Item);\n\titem.addObserver(observer);","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base.removeItemObserver":{"meta":{"summary":"","parameters":{"item":{"type":"dojo.data.old.Item"},"observer":{"type":"object"}},"src":" dojo.lang.assertType(item, dojo.data.old.Item);\n\titem.removeObserver(observer);","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base._newItem":{"meta":{"summary":"","src":" var item = new dojo.data.old.Item(this);\n\treturn item; \/\/ dojo.data.old.Item","returns":"dojo.data.old.Item","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base._newAttribute":{"meta":{"summary":"","parameters":{"attributeId":{"type":"String"}},"src":" var attribute = new dojo.data.old.Attribute(this);\n\treturn attribute; \/\/ dojo.data.old.Attribute","returns":"dojo.data.old.Attribute","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base._saveChanges":{"meta":{"summary":"","src":" var arrayOfChangesMade = this._changesInCurrentTransaction;\n\treturn arrayOfChangesMade; \/\/ Array","returns":"Array","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base._notifyObserversOfChanges":{"meta":{"summary":"","parameters":{"arrayOfChanges":{"type":"Array"}},"src":" var arrayOfResultSets = this._getResultSets();\n\tfor (var i in arrayOfChanges) {\n\t\tvar change = arrayOfChanges[i];\n\t\tvar changedItem = change.item;\n\t\tvar arrayOfItemObservers = changedItem.getObservers();\n\t\tfor (var j in arrayOfItemObservers) {\n\t\t\tvar observer = arrayOfItemObservers[j];\n\t\t\tobserver.observedObjectHasChanged(changedItem, change);\n\t\t}\n\t\tfor (var k in arrayOfResultSets) {\n\t\t\tvar resultSet = arrayOfResultSets[k];\n\t\t\tvar arrayOfResultSetObservers = resultSet.getObservers();\n\t\t\tfor (var m in arrayOfResultSetObservers) {\n\t\t\t\tobserver = arrayOfResultSetObservers[m];\n\t\t\t\tobserver.observedObjectHasChanged(resultSet, change);\n\t\t\t}\n\t\t}\n\t}","prototype":"dojo.data.old.provider.Base"}},"dojo.data.old.provider.Base._getResultSets":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.provider.Base');\n\treturn []; \/\/ Array","returns":"Array","prototype":"dojo.data.old.provider.Base"}}}}},"dojo.data.old.provider.Delicious":{"meta":{"requires":{"common":["dojo.data.old.provider.FlatFile","dojo.data.old.format.Json"]},"functions":{"dojo.data.old.provider.Delicious":{"meta":{"summary":"","src":" dojo.data.old.provider.FlatFile.call(this);\n\t\/\/ Delicious = null;\n\tif (Delicious && Delicious.posts) {\n\t\tdojo.data.old.format.Json.loadDataProviderFromArrayOfJsonData(this, Delicious.posts);\n\t} else {\n\t\t\/\/ document.write(\"<script type='text\/javascript'>dojo.data.old.provider.Delicious._fetchComplete()<\/script>\");\t\t\n\t\t\/*\n\t\tdocument.write(\"<script type='text\/javascript'>alert('boo!');<\/script>\");\t\t\n\t\tdocument.write(\"<script type='text\/javascript'>var foo = 'not dojo'; alert('dojo == ' + foo);<\/script>\");\t\t\n\t\tdocument.write(\"<script type='text\/javascript'>var foo = fetchComplete; alert('dojo == ' + foo);<\/script>\");\t\t\n\t\tfetchComplete();\n\t\t*\/\n\t\t\/\/ dojo.debug(\"Delicious line 29: constructor\");\n\t}\n\tvar u = this.registerAttribute('u');\n\tvar d = this.registerAttribute('d');\n\tvar t = this.registerAttribute('t');\n\tu.load('name', 'Bookmark');\n\td.load('name', 'Description');\n\tt.load('name', 'Tags');\n\tu.load('type', 'String');\n\td.load('type', 'String');\n\tt.load('type', 'String');","call_chain":["dojo.data.old.provider.FlatFile"],"prototype_chain":["dojo.data.old.provider.FlatFile"]}}}}},"dojo.data.old.provider.FlatFile":{"meta":{"requires":{"common":["dojo.data.old.provider.Base","dojo.data.old.Item","dojo.data.old.Attribute","dojo.data.old.ResultSet","dojo.data.old.format.Json","dojo.data.old.format.Csv","dojo.lang.assert"]},"functions":{"dojo.data.old.provider.FlatFile":{"meta":{"summary":"","parameters":{"keywordParameters":{"type":"keywords"}},"src":" dojo.lang.assertType(keywordParameters, \"pureobject\", {optional: true});\n\tdojo.data.old.provider.Base.call(this);\n\tthis._arrayOfItems = [];\n\tthis._resultSet = null;\n\tthis._dictionaryOfAttributes = {};\n\tif (keywordParameters) {\n\t\tvar jsonObjects = keywordParameters[\"jsonObjects\"];\n\t\tvar jsonString  = keywordParameters[\"jsonString\"];\n\t\tvar fileUrl     = keywordParameters[\"url\"];\n\t\tif (jsonObjects) {\n\t\t\tdojo.data.old.format.Json.loadDataProviderFromArrayOfJsonData(this, jsonObjects);\n\t\t}\n\t\tif (jsonString) {\n\t\t\tdojo.data.old.format.Json.loadDataProviderFromFileContents(this, jsonString);\n\t\t}\n\t\tif (fileUrl) {\n\t\t\tvar arrayOfParts = fileUrl.split('.');\n\t\t\tvar lastPart = arrayOfParts[(arrayOfParts.length - 1)];\n\t\t\tvar formatParser = null;\n\t\t\tif (lastPart == \"json\") {\n\t\t\t\tformatParser = dojo.data.old.format.Json;\n\t\t\t}\n\t\t\tif (lastPart == \"csv\") {\n\t\t\t\tformatParser = dojo.data.old.format.Csv;\n\t\t\t}\n\t\t\tif (formatParser) {\n\t\t\t\tvar fileContents = dojo.hostenv.getText(fileUrl);\n\t\t\t\tformatParser.loadDataProviderFromFileContents(this, fileContents);\n\t\t\t} else {\n\t\t\t\tdojo.lang.assert(false, \"new dojo.data.old.provider.FlatFile({url: }) was passed a file without a .csv or .json suffix\");\n\t\t\t}\n\t\t}\n\t}","instance_variables":["_arrayOfItems","_resultSet","_dictionaryOfAttributes","_ourCapabilities"],"call_chain":["dojo.data.old.provider.Base"],"prototype_chain":["dojo.data.old.provider.Base"]}},"dojo.data.old.provider.FlatFile.getProviderCapabilities":{"meta":{"summary":"","parameters":{"keyword":{"type":"string"}},"src":" dojo.lang.assertType(keyword, String, {optional: true});\n\tif (!this._ourCapabilities) {\n\t\tthis._ourCapabilities = {\n\t\t\ttransactions: false,\n\t\t\tundo: false,\n\t\t\tlogin: false,\n\t\t\tversioning: false,\n\t\t\tanonymousRead: true,\n\t\t\tanonymousWrite: false,\n\t\t\tpermissions: false,\n\t\t\tqueries: false,\n\t\t\tstrongTyping: false,\n\t\t\tdatatypes: [String, Date, Number]\n\t\t};\n\t}\n\tif (keyword) {\n\t\treturn this._ourCapabilities[keyword];\n\t} else {\n\t\treturn this._ourCapabilities;\n\t}","prototype":"dojo.data.old.provider.FlatFile"}},"dojo.data.old.provider.FlatFile.registerAttribute":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"}},"src":" var registeredAttribute = this.getAttribute(attributeId);\n\tif (!registeredAttribute) {\n\t\tvar newAttribute = new dojo.data.old.Attribute(this, attributeId);\n\t\tthis._dictionaryOfAttributes[attributeId] = newAttribute;\n\t\tregisteredAttribute = newAttribute;\n\t}\n\treturn registeredAttribute; \/\/ dojo.data.old.Attribute","returns":"dojo.data.old.Attribute","prototype":"dojo.data.old.provider.FlatFile"}},"dojo.data.old.provider.FlatFile.getAttribute":{"meta":{"summary":"","parameters":{"attributeId":{"type":"string or dojo.data.old.Attribute"}},"src":" var attribute = (this._dictionaryOfAttributes[attributeId] || null);\n\treturn attribute; \/\/ dojo.data.old.Attribute or null","returns":"dojo.data.old.Attribute or null","prototype":"dojo.data.old.provider.FlatFile"}},"dojo.data.old.provider.FlatFile.getAttributes":{"meta":{"summary":"","src":" var arrayOfAttributes = [];\n\tfor (var key in this._dictionaryOfAttributes) {\n\t\tvar attribute = this._dictionaryOfAttributes[key];\n\t\tarrayOfAttributes.push(attribute);\n\t}\n\treturn arrayOfAttributes; \/\/ Array","returns":"Array","prototype":"dojo.data.old.provider.FlatFile"}},"dojo.data.old.provider.FlatFile.fetchArray":{"meta":{"summary":"","parameters":{"query":{"type":""}},"src":" return this._arrayOfItems; \/\/ Array","returns":"Array","prototype":"dojo.data.old.provider.FlatFile"}},"dojo.data.old.provider.FlatFile.fetchResultSet":{"meta":{"summary":"","parameters":{"query":{"type":""}},"src":" if (!this._resultSet) {\n\t\tthis._resultSet = new dojo.data.old.ResultSet(this, this.fetchArray(query));\n\t}\n\treturn this._resultSet; \/\/ dojo.data.old.ResultSet","returns":"dojo.data.old.ResultSet","prototype":"dojo.data.old.provider.FlatFile"}},"dojo.data.old.provider.FlatFile._newItem":{"meta":{"summary":"","src":" var item = new dojo.data.old.Item(this);\n\tthis._arrayOfItems.push(item);\n\treturn item; \/\/ dojo.data.old.Item","returns":"dojo.data.old.Item","prototype":"dojo.data.old.provider.FlatFile"}},"dojo.data.old.provider.FlatFile._newAttribute":{"meta":{"summary":"","parameters":{"attributeId":{"type":"String"}},"src":" dojo.lang.assertType(attributeId, String);\n\tdojo.lang.assert(this.getAttribute(attributeId) === null);\n\tvar attribute = new dojo.data.old.Attribute(this, attributeId);\n\tthis._dictionaryOfAttributes[attributeId] = attribute;\n\treturn attribute; \/\/ dojo.data.old.Attribute","returns":"dojo.data.old.Attribute","prototype":"dojo.data.old.provider.FlatFile"}},"dojo.data.old.provider.Base._getResultSets":{"meta":{"summary":"","src":" return [this._resultSet]; \/\/ Array","returns":"Array","prototype":"dojo.data.old.provider.Base"}}}}},"dojo.data.old.provider.JotSpot":{"meta":{"requires":{"common":["dojo.data.old.provider.Base"]},"functions":{"dojo.data.old.provider.JotSpot":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.provider.JotSpot');","prototype_chain":["dojo.data.old.provider.Base"]}}}}},"dojo.data.old.provider.MySql":{"meta":{"requires":{"common":["dojo.data.old.provider.Base"]},"functions":{"dojo.data.old.provider.MySql":{"meta":{"summary":"","src":" dojo.unimplemented('dojo.data.old.provider.MySql');","prototype_chain":["dojo.data.old.provider.Base"]}}}}}}