{"dojo.widget.AccordionContainer":{"meta":{"requires":{"common":["dojo.widget.*","dojo.html.*","dojo.lfx.html","dojo.html.selection","dojo.widget.html.layout","dojo.widget.PageContainer"]},"functions":{"dojo.widget.AccordionContainer":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","labelNodeClass","containerNodeClass","duration"],"variables":["isContainer","labelNodeClass","containerNodeClass","duration"],"instance_variables":["children"],"summary":"Holds a set of panes where every pane's title is visible, but only one pane's content is visible at a time, and switching between panes is visualized by sliding the other panes up\/down."},"extra":{"variables":{"labelNodeClass":{"type":"String","summary":"CSS class name for dom node w\/the title"},"containerNodeClass":{"type":"String","summary":"CSS class name for dom node holding the content"}}}},"dojo.widget.AccordionContainer.fillInTemplate":{"meta":{"summary":"","src":" \t\twith(this.domNode.style){\n\t\t\t\t\/\/ position must be either relative or absolute\n\t\t\t\tif(position!=\"absolute\"){\n\t\t\t\t\tposition=\"relative\";\n\t\t\t\t}\n\t\t\t\toverflow=\"hidden\";\n\t\t\t}","prototype":"dojo.widget.AccordionContainer"}},"dojo.widget.AccordionContainer.addChild":{"meta":{"summary":"","parameters":{"widget":{"type":"Widget"}},"src":" \t\tvar child = this._addChild(widget);\n\t\t\tthis._setSizes();\n\t\t\treturn child;\t\/\/ Widget","returns":"Widget","prototype":"dojo.widget.AccordionContainer"}},"dojo.widget.AccordionContainer._addChild":{"meta":{"summary":"Internal call to add child, used during postCreate() and by the real addChild() call","parameters":{"widget":{"type":"Widget"}},"src":" \t\tif(widget.open){\n\t\t\t\tdojo.deprecated(\"open parameter deprecated, use 'selected=true' instead will be removed in \", \"0.5\");\n\t\t\t\tdojo.debug(widget.widgetId + \": open == \" + widget.open);\n\t\t\t\twidget.selected=true;\n\t\t\t}\n\t\t\tif (widget.widgetType != \"AccordionPane\") {\n\t\t\t\tvar wrapper=dojo.widget.createWidget(\"AccordionPane\",{label: widget.label, selected: widget.selected, labelNodeClass: this.labelNodeClass, containerNodeClass: this.containerNodeClass, allowCollapse: this.allowCollapse });\n\t\t\t\twrapper.addChild(widget);\n\t\t\t\tthis.addWidgetAsDirectChild(wrapper);\n\t\t\t\tthis.registerChild(wrapper, this.children.length);\n\t\t\t\treturn wrapper;\t\/\/ Widget\n\t\t\t} else {\n\t\t\t\tdojo.html.addClass(widget.containerNode, this.containerNodeClass);\n\t\t\t\tdojo.html.addClass(widget.labelNode, this.labelNodeClass);\n\t\t\t\tthis.addWidgetAsDirectChild(widget);\n\t\t\t\tthis.registerChild(widget, this.children.length);\t\n\t\t\t\treturn widget;\t\/\/ Widget\n\t\t\t}","returns":"Widget","prototype":"dojo.widget.AccordionContainer"}},"dojo.widget.AccordionContainer.postCreate":{"meta":{"summary":"","src":" \t\tvar tmpChildren = this.children;\n\t\t\tthis.children=[];\n\t\t\tdojo.html.removeChildren(this.domNode);\n\t\t\tdojo.lang.forEach(tmpChildren, dojo.lang.hitch(this,\"_addChild\"));\n\t\t\tthis._setSizes();","prototype":"dojo.widget.AccordionContainer"}},"dojo.widget.AccordionContainer.removeChild":{"meta":{"summary":"","parameters":{"widget":{"type":"Widget"}},"src":" \t\tdojo.widget.AccordionContainer.superclass.removeChild.call(this, widget);\n\t\t\tthis._setSizes();","call_chain":["dojo.widget.AccordionContainer.superclass.removeChild"],"prototype":"dojo.widget.AccordionContainer"}},"dojo.widget.AccordionContainer.onResized":{"meta":{"summary":"","src":" \t\tthis._setSizes();","prototype":"dojo.widget.AccordionContainer"}},"dojo.widget.AccordionContainer._setSizes":{"meta":{"summary":"Set panes' size\/position based on my size, and the current open node.","src":"\t\t\t\/\/ get cumulative height of all the title bars, and figure out which pane is open\n\t\t\tvar totalCollapsedHeight = 0;\n\t\t\tvar openIdx = 0;\n\t\t\tdojo.lang.forEach(this.children, function(child, idx){\n\t\t\t\ttotalCollapsedHeight += child.getLabelHeight();\n\t\t\t\tif(child.selected){ openIdx=idx; }\n\t\t\t});\n\t\t\t\/\/ size and position each pane\n\t\t\tvar mySize=dojo.html.getContentBox(this.domNode);\n\t\t\tvar y = 0;\n\t\t\tdojo.lang.forEach(this.children, function(child, idx){\n\t\t\t\tvar childCollapsedHeight = child.getLabelHeight();\n\t\t\t\tchild.resizeTo(mySize.width, mySize.height-totalCollapsedHeight+childCollapsedHeight);\n\t\t\t\tchild.domNode.style.zIndex=idx+1;\n\t\t\t\tchild.domNode.style.position=\"absolute\";\n\t\t\t\tchild.domNode.style.top = y+\"px\";\n\t\t\t\ty += (idx==openIdx) ? dojo.html.getBorderBox(child.domNode).height : childCollapsedHeight;\n\t\t\t});","prototype":"dojo.widget.AccordionContainer"}},"dojo.widget.AccordionContainer.selectChild":{"meta":{"summary":"close the current page and select a new one","parameters":{"page":{"type":"Widget"}},"src":" \t\tdojo.lang.forEach(this.children, function(child){child.setSelected(child==page);});\n\t\t\t\/\/ slide each pane that needs to be moved\n\t\t\tvar y = 0;\n\t\t\tvar anims = [];\n\t\t\tdojo.lang.forEach(this.children, function(child, idx){\n\t\t\t\tif(child.domNode.style.top != (y+\"px\")){\n\t\t\t\t\tanims.push(dojo.lfx.html.slideTo(child.domNode, {top: y, left: 0}, this.duration));\n\t\t\t\t}\n\t\t\t\ty += child.selected ? dojo.html.getBorderBox(child.domNode).height : child.getLabelHeight();\n\t\t\t}, this);\n\t\t\tdojo.lfx.combine(anims).play();","prototype":"dojo.widget.AccordionContainer"}},"dojo.widget.AccordionPane":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["label","class","labelNodeClass","containerNodeClass","selected","templatePath","templateCssPath","isContainer"],"variables":["label","class","labelNodeClass","containerNodeClass","selected","templatePath","templateCssPath","isContainer"],"instance_variables":["labelNode.innerHTML","selected"],"summary":"AccordionPane is a box with a title that contains another widget (often a ContentPane). It's a widget used internally by AccordionContainer."},"extra":{"variables":{"label":{"type":"to","summary":"print on top of AccordionPane"},"selected":{"type":"Boolean","summary":"if true, this is the open pane"}}}},"dojo.widget.AccordionPane.fillInTemplate":{"meta":{"summary":"","src":" \tdojo.html.addClass(this.domNode, this[\"class\"]);\n\t\tdojo.widget.AccordionPane.superclass.fillInTemplate.call(this);\n\t\tdojo.html.disableSelection(this.labelNode);\n\t\tthis.setSelected(this.selected);","call_chain":["dojo.widget.AccordionPane.superclass.fillInTemplate"],"prototype":"dojo.widget.AccordionPane"}},"dojo.widget.AccordionPane.setLabel":{"meta":{"summary":"set the title of the node","parameters":{"label":{"type":"String"}},"src":" \tthis.labelNode.innerHTML=label;","prototype":"dojo.widget.AccordionPane"}},"dojo.widget.AccordionPane.resizeTo":{"meta":{"summary":"","parameters":{"width":{"type":""},"height":{"type":""}},"src":" \tdojo.html.setMarginBox(this.domNode, {width: width, height: height});\n\t\tvar children = [\n\t\t\t{domNode: this.labelNode, layoutAlign: \"top\"},\n\t\t\t{domNode: this.containerNode, layoutAlign: \"client\"}\n\t\t];\n\t\tdojo.widget.html.layout(this.domNode, children);\n\t\tvar childSize = dojo.html.getContentBox(this.containerNode);\n\t\tthis.children[0].resizeTo(childSize.width, childSize.height);","prototype":"dojo.widget.AccordionPane"}},"dojo.widget.AccordionPane.getLabelHeight":{"meta":{"summary":"returns the height of the title dom node","src":" \treturn dojo.html.getMarginBox(this.labelNode).height;\t\/\/ Integer","returns":"Integer","prototype":"dojo.widget.AccordionPane"}},"dojo.widget.AccordionPane.onLabelClick":{"meta":{"summary":"callback when someone clicks my label","src":" \tthis.parent.selectChild(this);","prototype":"dojo.widget.AccordionPane"}},"dojo.widget.AccordionPane.setSelected":{"meta":{"summary":"","parameters":{"isSelected":{"type":"Boolean"}},"src":" \tthis.selected=isSelected;\n\t\t(isSelected ? dojo.html.addClass : dojo.html.removeClass)(this.domNode, this[\"class\"]+\"-selected\");\n\t\t\/\/ make sure child is showing (lazy load), and also that onShow()\/onHide() is called\n\t\tvar child = this.children[0];\n\t\tif(child){\n\t\t\tif(isSelected){\n\t\t\t\tif(!child.isShowing()){\n\t\t\t\t\tchild.show();\n\t\t\t\t}else{\n\t\t\t\t\tchild.onShow();\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tchild.onHide();\n\t\t\t}\n\t\t}","prototype":"dojo.widget.AccordionPane"}},"dojo.widget.Widget":{"meta":{"prototype_variables":["open"]}}}}},"dojo.widget.AnimatedPng":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.AnimatedPng":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","width","height","aniSrc","interval","_blankSrc","templateString"],"variables":["isContainer","width","height","aniSrc","interval","_blankSrc","templateString"],"instance_variables":["cellWidth","cellHeight","domNode.src","domNode.width","domNode.height","domNode.style.backgroundImage","domNode.style.backgroundRepeat","aniCols","aniRows","aniCells","aniFrame","domNode.style.backgroundPosition"],"summary":"PNGs have great tranparency, but lack animation. This widget lets you point an img tag at an animated gif for graceful degrading, while letting you specify a png containing a grid of cells to animate between."},"extra":{"variables":{"height":{"type":"of","summary":"each frame) in pixels"},"aniSrc":{"type":"String","summary":"pathname to png file containing frames to be animated (ie, displayed sequentially)"},"interval":{"type":"Integer","summary":"time to display each frame"}}}},"dojo.widget.AnimatedPng.postCreate":{"meta":{"summary":"","src":" \t\tthis.cellWidth = this.width;\n\t\t\tthis.cellHeight = this.height;\n\t\t\tvar img = new Image();\n\t\t\tvar self = this;\n\t\t\timg.onload = function(){ self._initAni(img.width, img.height); };\n\t\t\timg.src = this.aniSrc;","prototype":"dojo.widget.AnimatedPng"}},"dojo.widget.AnimatedPng._initAni":{"meta":{"summary":"","parameters":{"w":{"type":""},"h":{"type":""}},"src":" \t\tthis.domNode.src = this._blankSrc;\n\t\t\tthis.domNode.width = this.cellWidth;\n\t\t\tthis.domNode.height = this.cellHeight;\n\t\t\tthis.domNode.style.backgroundImage = 'url('+this.aniSrc+')';\n\t\t\tthis.domNode.style.backgroundRepeat = 'no-repeat';\n\t\t\tthis.aniCols = Math.floor(w\/this.cellWidth);\n\t\t\tthis.aniRows = Math.floor(h\/this.cellHeight);\n\t\t\tthis.aniCells = this.aniCols * this.aniRows;\n\t\t\tthis.aniFrame = 0;\n\t\t\twindow.setInterval(dojo.lang.hitch(this, '_tick'), this.interval);","prototype":"dojo.widget.AnimatedPng"}},"dojo.widget.AnimatedPng._tick":{"meta":{"summary":"","src":" \t\tthis.aniFrame++;\n\t\t\tif (this.aniFrame == this.aniCells) this.aniFrame = 0;\n\t\t\tvar col = this.aniFrame % this.aniCols;\n\t\t\tvar row = Math.floor(this.aniFrame \/ this.aniCols);\n\t\t\tvar bx = -1 * col * this.cellWidth;\n\t\t\tvar by = -1 * row * this.cellHeight;\n\t\t\tthis.domNode.style.backgroundPosition = bx+'px '+by+'px';","prototype":"dojo.widget.AnimatedPng"}}}}},"dojo.widget.Button":{"meta":{"requires":{"common":["dojo.lang.extras","dojo.html.*","dojo.html.selection","dojo.widget.*"]},"functions":{"dojo.widget.Button":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","caption","templatePath","templateCssPath","inactiveImg","activeImg","pressedImg","disabledImg","width2height"],"variables":["isContainer","caption","templatePath","templateCssPath","inactiveImg","activeImg","pressedImg","disabledImg","width2height"],"instance_variables":["height","containerWidth","containerNode.style.left","leftImage.height","leftImage.width","centerImage.width","centerImage.style.left","domNode.style.height","domNode.style.width","leftImage.src","centerImage.src","rightImage.src","caption","containerNode.innerHTML","disabled"],"summary":"Basically the same thing as a normal HTML button, but with special styling."},"extra":{"variables":{"inactiveImg":{"type":"Url","summary":"prefix of filename holding images (left, center, right) for button in normal state"},"activeImg":{"type":"Url","summary":"prefix of filename holding images (left, center, right) for button when it's being hovered over widget2height: Number shape of the button's end pieces; the height of the end pieces is a function of the button's height (which in turn is a function of the button's content), and then the width of the end pieces is relative to their height."}}}},"dojo.widget.Button.fillInTemplate":{"meta":{"summary":"","src":" \t\tif(this.caption){\n\t\t\t\tthis.containerNode.appendChild(document.createTextNode(this.caption));\n\t\t\t}\n\t\t\tdojo.html.disableSelection(this.containerNode);","prototype":"dojo.widget.Button"}},"dojo.widget.Button.postCreate":{"meta":{"summary":"","src":" \t\tthis._sizeMyself();","prototype":"dojo.widget.Button"}},"dojo.widget.Button._sizeMyself":{"meta":{"summary":"","src":" \t\tif(this.domNode.parentNode){\n\t\t\t\tvar placeHolder = document.createElement(\"span\");\n\t\t\t\tdojo.html.insertBefore(placeHolder, this.domNode);\n\t\t\t}\n\t\t\tdojo.body().appendChild(this.domNode);\n\t\t\tthis._sizeMyselfHelper();\n\t\t\t\/\/ Put this.domNode back where it was originally\n\t\t\tif(placeHolder){\n\t\t\t\tdojo.html.insertBefore(this.domNode, placeHolder);\n\t\t\t\tdojo.html.removeNode(placeHolder);\n\t\t\t}","prototype":"dojo.widget.Button"}},"dojo.widget.Button._sizeMyselfHelper":{"meta":{"summary":"","src":" \t\tvar mb = dojo.html.getMarginBox(this.containerNode);\n\t\t\tthis.height = mb.height;\n\t\t\tthis.containerWidth = mb.width;\n\t\t\tvar endWidth= this.height * this.width2height;\n\t\t\tthis.containerNode.style.left=endWidth+\"px\";\n\t\t\tthis.leftImage.height = this.rightImage.height = this.centerImage.height = this.height;\n\t\t\tthis.leftImage.width = this.rightImage.width = endWidth+1;\n\t\t\tthis.centerImage.width = this.containerWidth;\n\t\t\tthis.centerImage.style.left=endWidth+\"px\";\n\t\t\tthis._setImage(this.disabled ? this.disabledImg : this.inactiveImg);\n\t\t\tif ( this.disabled ) {\n\t\t\t\tdojo.html.prependClass(this.domNode, \"dojoButtonDisabled\");\n\t\t\t\tthis.domNode.removeAttribute(\"tabIndex\");\n\t\t\t\tdojo.widget.wai.setAttr(this.domNode, \"waiState\", \"disabled\", true);\n\t\t\t} else {\n\t\t\t\tdojo.html.removeClass(this.domNode, \"dojoButtonDisabled\");\n\t\t\t\tthis.domNode.setAttribute(\"tabIndex\", \"0\");\n\t\t\t\tdojo.widget.wai.setAttr(this.domNode, \"waiState\", \"disabled\", false);\n\t\t\t}\n\t\t\tthis.domNode.style.height=this.height + \"px\";\n\t\t\tthis.domNode.style.width= (this.containerWidth+2*endWidth) + \"px\";","prototype":"dojo.widget.Button"}},"dojo.widget.Button.onMouseOver":{"meta":{"summary":"callback when user mouses-over the button","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\tdojo.html.prependClass(this.buttonNode, \"dojoButtonHover\");\n\t\t\tthis._setImage(this.activeImg);","prototype":"dojo.widget.Button"}},"dojo.widget.Button.onMouseDown":{"meta":{"summary":"callback when user starts to click the button","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\tdojo.html.prependClass(this.buttonNode, \"dojoButtonDepressed\");\n\t\t\tdojo.html.removeClass(this.buttonNode, \"dojoButtonHover\");\n\t\t\tthis._setImage(this.pressedImg);","prototype":"dojo.widget.Button"}},"dojo.widget.Button.onMouseUp":{"meta":{"summary":"callback when the user finishes clicking","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\tdojo.html.prependClass(this.buttonNode, \"dojoButtonHover\");\n\t\t\tdojo.html.removeClass(this.buttonNode, \"dojoButtonDepressed\");\n\t\t\tthis._setImage(this.activeImg);","prototype":"dojo.widget.Button"}},"dojo.widget.Button.onMouseOut":{"meta":{"summary":"callback when the user moves the mouse off the button","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\tif( e.toElement && dojo.html.isDescendantOf(e.toElement, this.buttonNode) ){\n\t\t\t\treturn; \/\/ Ignore IE mouseOut events that dont actually leave button - Prevents hover image flicker in IE\n\t\t\t}\n\t\t\tdojo.html.removeClass(this.buttonNode, \"dojoButtonHover\");\n\t\t\tdojo.html.removeClass(this.buttonNode, \"dojoButtonDepressed\");\n\t\t\tthis._setImage(this.inactiveImg);","returns":"Ignore IE mouseOut events that dont actually leave button - Prevents hover image flicker in IE","prototype":"dojo.widget.Button"}},"dojo.widget.Button.onKey":{"meta":{"summary":"callback when the user presses a key (on key-down)","parameters":{"e":{"type":"Event"}},"src":" \t\tif (!e.key) { return; }\n\t\t\tvar menu = dojo.widget.getWidgetById(this.menuId);\n\t\t\tif (e.key == e.KEY_ENTER || e.key == \" \"){\n\t\t\t\tthis.onMouseDown(e);\n\t\t\t\tthis.buttonClick(e);\n\t\t\t\tdojo.lang.setTimeout(this, \"onMouseUp\", 75, e);\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t}\n\t\t\tif(menu && menu.isShowingNow && e.key == e.KEY_DOWN_ARROW){\n\t\t\t\t\/\/ disconnect onBlur when focus moves into menu\n\t\t\t\tdojo.event.disconnect(this.domNode, \"onblur\", this, \"onBlur\");\n\t\t\t\t\/\/ allow event to propagate to menu\n\t\t\t}","prototype":"dojo.widget.Button"}},"dojo.widget.Button.onFocus":{"meta":{"summary":"callback on focus to the button","parameters":{"e":{"type":"Event"}},"src":" \t\tvar menu = dojo.widget.getWidgetById(this.menuId);\n\t\t\tif (menu){\n\t\t\t\tdojo.event.connectOnce(this.domNode, \"onblur\", this, \"onBlur\");\n\t\t\t}","prototype":"dojo.widget.Button"}},"dojo.widget.Button.onBlur":{"meta":{"summary":"callback when button loses focus","parameters":{"e":{"type":"Event"}},"src":" \t\tvar menu = dojo.widget.getWidgetById(this.menuId);\n\t\t\tif ( !menu ) { return; }\n\t\t\tif ( menu.close && menu.isShowingNow ){\n\t\t\t\tmenu.close();\n\t\t\t}","prototype":"dojo.widget.Button"}},"dojo.widget.Button.buttonClick":{"meta":{"summary":"internal function for handling button clicks","parameters":{"e":{"type":"Event"}},"src":" \t\tif(!this.disabled){ \n\t\t\t\t\/\/ focus may fail when tabIndex is not supported on div's\n\t\t\t\t\/\/ by the browser, or when the node is disabled\n\t\t\t\ttry { this.domNode.focus(); } catch(e2) {};\n\t\t\t\tthis.onClick(e); \n\t\t\t}","prototype":"dojo.widget.Button"}},"dojo.widget.Button.onClick":{"meta":{"summary":"callback for when button is clicked; user can override this function","parameters":{"e":{"type":"Event"}},"src":"\t\t\t\/\/ summary: callback for when button is clicked; user can override this function","prototype":"dojo.widget.Button"}},"dojo.widget.Button._setImage":{"meta":{"summary":"","parameters":{"prefix":{"type":"String"}},"src":" \t\tthis.leftImage.src=dojo.uri.dojoUri(prefix + \"l.gif\");\n\t\t\tthis.centerImage.src=dojo.uri.dojoUri(prefix + \"c.gif\");\n\t\t\tthis.rightImage.src=dojo.uri.dojoUri(prefix + \"r.gif\");","prototype":"dojo.widget.Button"}},"dojo.widget.Button._toggleMenu":{"meta":{"summary":"","parameters":{"menuId":{"type":"String"}},"src":" \t\tvar menu = dojo.widget.getWidgetById(menuId); \n\t\t\tif ( !menu ) { return; }\n\t\t\tif ( menu.open && !menu.isShowingNow) {\n\t\t\t\tvar pos = dojo.html.getAbsolutePosition(this.domNode, false);\n\t\t\t\tmenu.open(pos.x, pos.y+this.height, this);\n\t\t\t} else if ( menu.close && menu.isShowingNow ){\n\t\t\t\tmenu.close();\n\t\t\t} else {\n\t\t\t\tmenu.toggle();\n\t\t\t}","prototype":"dojo.widget.Button"}},"dojo.widget.Button.setCaption":{"meta":{"summary":"reset the caption (text) of the button; takes an HTML string","parameters":{"content":{"type":"String"}},"src":" \t\tthis.caption=content;\n\t\t\tthis.containerNode.innerHTML=content;\n\t\t\tthis._sizeMyself();","prototype":"dojo.widget.Button"}},"dojo.widget.Button.setDisabled":{"meta":{"summary":"set disabled state of button","parameters":{"disabled":{"type":"Boolean"}},"src":" \t\tthis.disabled=disabled;\n\t\t\tthis._sizeMyself();","prototype":"dojo.widget.Button"}},"dojo.widget.DropDownButton":{"meta":{"prototype_chain":["dojo.widget.Button"],"call_chain":["dojo.widget.Button"],"prototype_variables":["menuId","downArrow","disabledDownArrow"],"variables":["menuId","downArrow","disabledDownArrow"],"instance_variables":["arrow","arrow.src"],"summary":"push the button and a menu shows up"},"extra":{"variables":{"menuId":{"type":"String","summary":"widget id of the menu that this button should activate"}}}},"dojo.widget.DropDownButton.fillInTemplate":{"meta":{"summary":"","src":" \t\tdojo.widget.DropDownButton.superclass.fillInTemplate.apply(this, arguments);\n\t\t\tthis.arrow = document.createElement(\"img\");\n\t\t\tdojo.html.setClass(this.arrow, \"downArrow\");\n\t\t\tdojo.widget.wai.setAttr(this.domNode, \"waiState\", \"haspopup\", this.menuId);","call_chain":["dojo.widget.DropDownButton.superclass.fillInTemplate"],"prototype":"dojo.widget.DropDownButton"}},"dojo.widget.DropDownButton._sizeMyselfHelper":{"meta":{"summary":"","src":" \t\tthis.arrow.src = dojo.uri.dojoUri(this.disabled ? this.disabledDownArrow : this.downArrow);\n\t\t\tthis.containerNode.appendChild(this.arrow);\n\t\t\tdojo.widget.DropDownButton.superclass._sizeMyselfHelper.call(this);","call_chain":["dojo.widget.DropDownButton.superclass._sizeMyselfHelper"],"prototype":"dojo.widget.DropDownButton"}},"dojo.widget.DropDownButton.onClick":{"meta":{"summary":"callback when button is clicked; user shouldn't override this function or else the menu won't toggle","parameters":{"e":{"type":"Event"}},"src":" \t\tthis._toggleMenu(this.menuId);","prototype":"dojo.widget.DropDownButton"}},"dojo.widget.ComboButton":{"meta":{"prototype_chain":["dojo.widget.Button"],"call_chain":["dojo.widget.Button"],"prototype_variables":["menuId","templatePath","splitWidth","arrowWidth"],"variables":["menuId","templatePath","splitWidth","arrowWidth"],"instance_variables":["height","containerWidth","leftImage.height","arrowBackgroundImage.height","leftImage.width","centerImage.width","buttonNode.style.height","buttonNode.style.width","arrowBackgroundImage.width","rightImage.width","rightPart.style.height","rightPart.style.width","domNode.style.height","domNode.style.width","leftImage.src","centerImage.src","arrowBackgroundImage.src","rightImage.src"],"summary":"left side is normal button, right side displays menu"},"extra":{"variables":{"menuId":{"type":"String","summary":"widget id of the menu that this button should activate"},"splitWidth":{"type":"Integer","summary":"# of pixels between left & right part of button"},"arrowWidth":{"type":"Integer","summary":"width of segment holding down arrow ** functions on right part of button **"}}}},"dojo.widget.ComboButton._sizeMyselfHelper":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \t\tvar mb = dojo.html.getMarginBox(this.containerNode);\n\t\t\tthis.height = mb.height;\n\t\t\tthis.containerWidth = mb.width;\n\t\t\tvar endWidth= this.height\/3;\n\t\t\tif(this.disabled){\n\t\t\t\tdojo.widget.wai.setAttr(this.domNode, \"waiState\", \"disabled\", true);\n\t\t\t\tthis.domNode.removeAttribute(\"tabIndex\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdojo.widget.wai.setAttr(this.domNode, \"waiState\", \"disabled\", false);\n\t\t\t\tthis.domNode.setAttribute(\"tabIndex\", \"0\");\n\t\t\t}\n\t\t\t\/\/ left part\n\t\t\tthis.leftImage.height = this.rightImage.height = this.centerImage.height = \n\t\t\t\tthis.arrowBackgroundImage.height = this.height;\n\t\t\tthis.leftImage.width = endWidth+1;\n\t\t\tthis.centerImage.width = this.containerWidth;\n\t\t\tthis.buttonNode.style.height = this.height + \"px\";\n\t\t\tthis.buttonNode.style.width = endWidth + this.containerWidth + \"px\";\n\t\t\tthis._setImage(this.disabled ? this.disabledImg : this.inactiveImg);\n\t\t\t\/\/ right part\n\t\t\tthis.arrowBackgroundImage.width=this.arrowWidth;\n\t\t\tthis.rightImage.width = endWidth+1;\n\t\t\tthis.rightPart.style.height = this.height + \"px\";\n\t\t\tthis.rightPart.style.width = this.arrowWidth + endWidth + \"px\";\n\t\t\tthis._setImageR(this.disabled ? this.disabledImg : this.inactiveImg);\n\t\t\t\/\/ outer container\n\t\t\tthis.domNode.style.height=this.height + \"px\";\n\t\t\tvar totalWidth = this.containerWidth+this.splitWidth+this.arrowWidth+2*endWidth;\n\t\t\tthis.domNode.style.width= totalWidth + \"px\";","prototype":"dojo.widget.ComboButton"}},"dojo.widget.ComboButton._setImage":{"meta":{"summary":"","parameters":{"prefix":{"type":""}},"src":" \t\tthis.leftImage.src=dojo.uri.dojoUri(prefix + \"l.gif\");\n\t\t\tthis.centerImage.src=dojo.uri.dojoUri(prefix + \"c.gif\");","prototype":"dojo.widget.ComboButton"}},"dojo.widget.ComboButton.rightOver":{"meta":{"summary":"callback when mouse-over right part of button; onMouseOver() is the callback for the left side of the button.","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\tdojo.html.prependClass(this.rightPart, \"dojoButtonHover\");\n\t\t\tthis._setImageR(this.activeImg);","prototype":"dojo.widget.ComboButton"}},"dojo.widget.ComboButton.rightDown":{"meta":{"summary":"callback when mouse-down right part of button; onMouseDown() is the callback for the left side of the button.","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\tdojo.html.prependClass(this.rightPart, \"dojoButtonDepressed\");\n\t\t\tdojo.html.removeClass(this.rightPart, \"dojoButtonHover\");\n\t\t\tthis._setImageR(this.pressedImg);","prototype":"dojo.widget.ComboButton"}},"dojo.widget.ComboButton.rightUp":{"meta":{"summary":"callback when mouse-up right part of button; onMouseUp() is the callback for the left side of the button.","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\tdojo.html.prependClass(this.rightPart, \"dojoButtonHover\");\n\t\t\tdojo.html.removeClass(this.rightPart, \"dojoButtonDepressed\");\n\t\t\tthis._setImageR(this.activeImg);","prototype":"dojo.widget.ComboButton"}},"dojo.widget.ComboButton.rightOut":{"meta":{"summary":"callback when moving the mouse off of the right part of button; onMouseOut() is the callback for the left side of the button.","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\tdojo.html.removeClass(this.rightPart, \"dojoButtonHover\");\n\t\t\tdojo.html.removeClass(this.rightPart, \"dojoButtonDepressed\");\n\t\t\tthis._setImageR(this.inactiveImg);","prototype":"dojo.widget.ComboButton"}},"dojo.widget.ComboButton.rightClick":{"meta":{"summary":"callback when clicking the right part of button; onClick() is the callback for the left side of the button.","parameters":{"e":{"type":"Event"}},"src":" \t\tif( this.disabled ){ return; }\n\t\t\t\/\/ focus may fail when tabIndex is not supported on div's\n\t\t\t\/\/ by the browser, or when the node is disabled\n\t\t\ttry { this.domNode.focus(); } catch(e2) {};\n\t\t\tthis._toggleMenu(this.menuId);","prototype":"dojo.widget.ComboButton"}},"dojo.widget.ComboButton._setImageR":{"meta":{"summary":"","parameters":{"prefix":{"type":""}},"src":" \t\tthis.arrowBackgroundImage.src=dojo.uri.dojoUri(prefix + \"c.gif\");\n\t\t\tthis.rightImage.src=dojo.uri.dojoUri(prefix + \"r.gif\");","prototype":"dojo.widget.ComboButton"}},"dojo.widget.ComboButton.onKey":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \t\tif (!e.key) { return; }\n\t\t\tvar menu = dojo.widget.getWidgetById(this.menuId);\n\t\t\tif(e.key== e.KEY_ENTER || e.key == \" \"){\n\t\t\t\tthis.onMouseDown(e);\n\t\t\t\tthis.buttonClick(e);\n\t\t\t\tdojo.lang.setTimeout(this, \"onMouseUp\", 75, e);\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t} else if (e.key == e.KEY_DOWN_ARROW && e.altKey){\n\t\t\t\tthis.rightDown(e);\n\t\t\t\tthis.rightClick(e);\n\t\t\t\tdojo.lang.setTimeout(this, \"rightUp\", 75, e);\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t} else if(menu && menu.isShowingNow && e.key == e.KEY_DOWN_ARROW){\n\t\t\t\t\/\/ disconnect onBlur when focus moves into menu\n\t\t\t\tdojo.event.disconnect(this.domNode, \"onblur\", this, \"onBlur\");\n\t\t\t\t\/\/ allow event to propagate to menu\n\t\t\t}","prototype":"dojo.widget.ComboButton"}}}}},"dojo.widget.Chart":{"meta":{"requires":{"common":["dojo.widget.*","dojo.gfx.color","dojo.gfx.color.hsl"]},"functions":{"dojo.widget.Chart":{"meta":{"prototype_variables":["isContainer"],"variables":["isContainer"],"summary":"Base class for svg and vml implementations of Chart","src":" \tthis.series = [];","instance_variables":["series"]}},"dojo.widget.Chart.assignColors":{"meta":{"summary":"Assigns\/generates a color for a data series.","src":" \tvar hue=30;\n\t\tvar sat=120;\n\t\tvar lum=120;\n\t\tvar steps = Math.round(330\/this.series.length);\n\t\tfor(var i=0; i<this.series.length; i++){\n\t\t\tvar c=dojo.gfx.color.hsl2rgb(hue,sat,lum);\n\t\t\tif(!this.series[i].color){\n\t\t\t\tthis.series[i].color = dojo.gfx.color.rgb2hex(c[0],c[1],c[2]);\n\t\t\t}\n\t\t\thue += steps;\n\t\t}","prototype":"dojo.widget.Chart"}},"dojo.widget.Chart.parseData":{"meta":{"summary":"","parameters":{"table":{"type":""}},"src":" \tvar thead=table.getElementsByTagName(\"thead\")[0];\n\t\tvar tbody=table.getElementsByTagName(\"tbody\")[0];\n\t\tif(!(thead&&tbody)) dojo.raise(\"dojo.widget.Chart: supplied table must define a head and a body.\");\n\t\t\/\/\tset up the series.\n\t\tvar columns=thead.getElementsByTagName(\"tr\")[0].getElementsByTagName(\"th\");\t\/\/\tshould be <tr><..>\n\t\t\/\/\tassume column 0 == X\n\t\tfor (var i=1; i<columns.length; i++){\n\t\t\tvar key=\"column\"+i;\n\t\t\tvar label=columns[i].innerHTML;\n\t\t\tvar plotType=columns[i].getAttribute(\"plotType\")||\"line\";\n\t\t\tvar color=columns[i].getAttribute(\"color\");\n\t\t\tvar ds=new dojo.widget.Chart.DataSeries(key,label,plotType,color);\n\t\t\tthis.series.push(ds);\n\t\t}\n\t\t\/\/\tok, get the values.\n\t\tvar rows=tbody.rows;\n\t\tvar xMin=Number.MAX_VALUE,xMax=Number.MIN_VALUE;\n\t\tvar yMin=Number.MAX_VALUE,yMax=Number.MIN_VALUE;\n\t\tvar ignore = [\n\t\t\t\"accesskey\",\"align\",\"bgcolor\",\"class\",\n\t\t\t\"colspan\",\"height\",\"id\",\"nowrap\",\n\t\t\t\"rowspan\",\"style\",\"tabindex\",\"title\",\n\t\t\t\"valign\",\"width\"\n\t\t];\n\t\tfor(var i=0; i<rows.length; i++){\n\t\t\tvar row=rows[i];\n\t\t\tvar cells=row.cells;\n\t\t\tvar x=Number.MIN_VALUE;\n\t\t\tfor (var j=0; j<cells.length; j++){\n\t\t\t\tif (j==0){\n\t\t\t\t\tx=parseFloat(cells[j].innerHTML);\n\t\t\t\t\txMin=Math.min(xMin, x);\n\t\t\t\t\txMax=Math.max(xMax, x);\n\t\t\t\t} else {\n\t\t\t\t\tvar ds=this.series[j-1];\n\t\t\t\t\tvar y=parseFloat(cells[j].innerHTML);\n\t\t\t\t\tyMin=Math.min(yMin,y);\n\t\t\t\t\tyMax=Math.max(yMax,y);\n\t\t\t\t\tvar o={x:x, value:y};\n\t\t\t\t\tvar attrs=cells[j].attributes;\n\t\t\t\t\tfor(var k=0; k<attrs.length; k++){\n\t\t\t\t\t\tvar attr=attrs.item(k);\n\t\t\t\t\t\tvar bIgnore=false;\n\t\t\t\t\t\tfor (var l=0; l<ignore.length; l++){\n\t\t\t\t\t\t\tif (attr.nodeName.toLowerCase()==ignore[l]){\n\t\t\t\t\t\t\t\tbIgnore=true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!bIgnore) o[attr.nodeName]=attr.nodeValue;\n\t\t\t\t\t}\n\t\t\t\t\tds.add(o);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { x:{ min:xMin, max:xMax}, y:{ min:yMin, max:yMax} };","prototype":"dojo.widget.Chart"}},"dojo.widget.Chart.DataSeries.add":{"meta":{"summary":"","parameters":{"v":{"type":""}},"src":" \tif(v.x==null||v.value==null){\n\t\t\tdojo.raise(\"dojo.widget.Chart.DataSeries.add: v must have both an 'x' and 'value' property.\");\n\t\t}\n\t\tthis.values.push(v);","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.clear":{"meta":{"summary":"","src":" \tthis.values=[];","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries":{"meta":{"instance_variables":["values","id","key","label","plotType","color"],"summary":"Every chart has a set of data series; this is the series. Note that each member of value is an object and in the minimum has 2 properties: .x and .value.","parameters":{"key":{"type":""},"label":{"type":""},"plotType":{"type":""},"color":{"type":""}},"src":" \tthis.id = \"DataSeries\"+dojo.widget.Chart.DataSeries.count++;\n\t\tthis.key = key;\n\t\tthis.label = label||this.id;\n\t\tthis.plotType = plotType||\"line\";\t\/\/\tlet line be the default.\n\t\tthis.color = color;\n\t\tthis.values = [];"}},"dojo.widget.Chart.DataSeries.createRange":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \tvar idx = this.values.length-1;\n\t\tvar length = (len||this.values.length);\n\t\treturn { \"index\": idx, \"length\": length, \"start\":Math.max(idx-length,0) };","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.getMean":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \tvar range = this.createRange(len);\n\t\tif(range.index<0){ return 0; }\n\t\tvar t = 0;\n\t\tvar c = 0;\n\t\tfor(var i=range.index; i>=range.start; i--){\n\t\t\tvar n = parseFloat(this.values[i].value);\n\t\t\tif(!isNaN(n)){ t += n; c++; }\n\t\t}\n\t\tt \/= Math.max(c,1);\n\t\treturn t;","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.getMovingAverage":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \tvar range = this.createRange(len);\n\t\tif(range.index<0){ return 0; }\n\t\tvar t = 0;\n\t\tvar c = 0;\n\t\tfor(var i=range.index; i>=range.start; i--){\n\t\t\tvar n = parseFloat(this.values[i].value);\n\t\t\tif(!isNaN(n)){ t += n; c++; }\n\t\t}\n\t\tt \/= Math.max(c,1);\n\t\treturn t;","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.getVariance":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \tvar range = this.createRange(len);\n\t\tif(range.index < 0){ return 0; }\n\t\tvar t = 0; \/\/ FIXME: for tom: wtf are t, c, and s?\n\t\tvar s = 0;\n\t\tvar c = 0;\n\t\tfor(var i=range.index; i>=range.start; i--){\n\t\t\tvar n = parseFloat(this.values[i].value);\n\t\t\tif(!isNaN(n)){\n\t\t\t\tt += n;\n\t\t\t\ts += Math.pow(n,2);\n\t\t\t\tc++;\n\t\t\t}\n\t\t}\n\t\treturn (s\/c)-Math.pow(t\/c,2);","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.getStandardDeviation":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \treturn Math.sqrt(this.getVariance(len));","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.getMax":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \tvar range = this.createRange(len);\n\t\tif(range.index < 0){ return 0; }\n\t\tvar t = 0;\n\t\tfor (var i=range.index; i>=range.start; i--){\n\t\t\tvar n=parseFloat(this.values[i].value);\n\t\t\tif (!isNaN(n)){\n\t\t\t\tt=Math.max(n,t);\n\t\t\t}\n\t\t}\n\t\treturn t;","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.getMin":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \tvar range=this.createRange(len);\n\t\tif(range.index < 0){ return 0; }\n\t\tvar t = 0;\n\t\tfor(var i=range.index; i>=range.start; i--){\n\t\t\tvar n = parseFloat(this.values[i].value);\n\t\t\tif(!isNaN(n)){\n\t\t\t\tt=Math.min(n,t);\n\t\t\t}\n\t\t}\n\t\treturn t;","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.getMedian":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \tvar range = this.createRange(len);\n\t\tif(range.index<0){ return 0; }\n\t\tvar a = [];\n\t\tfor (var i=range.index; i>=range.start; i--){\n\t\t\tvar n=parseFloat(this.values[i].value);\n\t\t\tif (!isNaN(n)){\n\t\t\t\tvar b=false;\n\t\t\t\tfor(var j=0; j<a.length&&!b; j++){\n\t\t\t\t\tif (n==a[j]) b=true; \n\t\t\t\t}\n\t\t\t\tif(!b){ a.push(n); }\n\t\t\t}\n\t\t}\n\t\ta.sort();\n\t\tif(a.length>0){ return a[Math.ceil(a.length\/2)]; }\n\t\treturn 0;","prototype":"dojo.widget.Chart.DataSeries"}},"dojo.widget.Chart.DataSeries.getMode":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":" \tvar range=this.createRange(len);\n\t\tif(range.index<0){ return 0; }\n\t\tvar o = {};\n\t\tvar ret = 0\n\t\tvar m = 0;\n\t\tfor(var i=range.index; i>=range.start; i--){\n\t\t\tvar n=parseFloat(this.values[i].value);\n\t\t\tif(!isNaN(n)){\n\t\t\t\tif (!o[this.values[i].value]) o[this.values[i].value] = 1;\n\t\t\t\telse o[this.values[i].value]++;\n\t\t\t}\n\t\t}\n\t\tfor(var p in o){\n\t\t\tif(m<o[p]){ m=o[p]; ret=p; }\n\t\t}\n\t\treturn parseFloat(ret);","prototype":"dojo.widget.Chart.DataSeries"}}}}},"dojo.widget.Checkbox":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.event.*","dojo.html.style","dojo.html.selection"]},"functions":{"dojo.widget.Checkbox":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath","name","id","checked","tabIndex","value"],"variables":["templatePath","templateCssPath","name","id","checked","tabIndex","value"],"instance_variables":["tabIndex","id","inputNode.checked","disabled","checked"],"summary":"Same as an HTML checkbox, but with fancy styling"},"extra":{"variables":{"tabIndex":{"type":"Integer","summary":"order fields are traversed when user hits the tab key"}}}},"dojo.widget.Checkbox.postMixInProperties":{"meta":{"summary":"","src":" \t\tdojo.widget.Checkbox.superclass.postMixInProperties.apply(this, arguments);\n\t\t\t\/\/ set tabIndex=\"0\" because if tabIndex==\"\" user won't be able to tab to the field\n\t\t\tif(!this.disabled && this.tabIndex==\"\"){ this.tabIndex=\"0\"; }","call_chain":["dojo.widget.Checkbox.superclass.postMixInProperties"],"prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox.fillInTemplate":{"meta":{"summary":"","src":" \t\tthis._setInfo();","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox.postCreate":{"meta":{"summary":"","src":" \t\tvar notcon = true;\n\t\t\tthis.id = this.id !=\"\" ? this.id : this.widgetId;\n\t\t\tif(this.id != \"\"){\n\t\t\t\tvar labels = document.getElementsByTagName(\"label\");\n\t\t\t\tif (labels != null && labels.length > 0){\n\t\t\t\t\tfor(var i=0; i<labels.length; i++){\n\t\t\t\t\t\tif (labels[i].htmlFor == this.id){\n\t\t\t\t\t\t\tlabels[i].id = (labels[i].htmlFor + \"label\");\n\t\t\t\t\t\t\tthis._connectEvents(labels[i]);\n\t\t\t\t\t\t\tdojo.widget.wai.setAttr(this.domNode, \"waiState\", \"labelledby\", labels[i].id);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._connectEvents(this.domNode);\n\t\t\t\/\/ this is needed here for IE\n\t\t\tthis.inputNode.checked=this.checked;","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox._connectEvents":{"meta":{"summary":"","parameters":{"node":{"type":"DomNode"}},"src":" \t\tdojo.event.connect(node, \"onmouseover\", this, \"mouseOver\");\n\t\t\tdojo.event.connect(node, \"onmouseout\", this, \"mouseOut\");\n\t\t\tdojo.event.connect(node, \"onkey\", this, \"onKey\");\n\t\t\tdojo.event.connect(node, \"onclick\", this, \"_onClick\");\n\t\t\tdojo.html.disableSelection(node);","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox._onClick":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \t\tif(this.disabled == false){\n\t\t\t\tthis.checked = !this.checked;\n\t\t\t\tthis._setInfo();\n\t\t\t}\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis.onClick();","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox.setValue":{"meta":{"summary":"set the checkbox state","parameters":{"bool":{"type":"boolean"}},"src":" \t\tif(this.disabled == false){\n\t\t\t\tthis.checked = bool;\n\t\t\t\tthis._setInfo();\n\t\t\t}","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox.onClick":{"meta":{"summary":"user overridable callback function for checkbox being clicked","src":"\t\t\t\/\/ summary: user overridable callback function for checkbox being clicked","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox.onKey":{"meta":{"summary":"callback when user hits a key","parameters":{"e":{"type":"Event"}},"src":" \t\tvar k = dojo.event.browser.keys;\n\t\t\tif(e.key == \" \"){\n\t \t\t\tthis._onClick(e);\n\t \t\t}","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox.mouseOver":{"meta":{"summary":"callback when user moves mouse over checkbox","parameters":{"e":{"type":"Event"}},"src":" \t\tthis._hover(e, true);","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox.mouseOut":{"meta":{"summary":"callback when user moves mouse off of checkbox","parameters":{"e":{"type":"Event"}},"src":" \t\tthis._hover(e, false);","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox._hover":{"meta":{"summary":"","parameters":{"e":{"type":"Event"},"isOver":{"type":"Boolean"}},"src":" \t\tif (this.disabled == false){\n\t\t\t\tvar state = this.checked ? \"On\" : \"Off\";\n\t\t\t\tvar style = \"dojoHtmlCheckbox\" + state + \"Hover\";\n\t\t\t\tif (isOver){\n\t\t\t\t\tdojo.html.addClass(this.imageNode, style);\n\t\t\t\t}else{\n\t\t\t\t\tdojo.html.removeClass(this.imageNode,style);\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.Checkbox"}},"dojo.widget.Checkbox._setInfo":{"meta":{"summary":"set state of hidden checkbox node to correspond to displayed value. also set CSS class string according to checked\/unchecked and disabled\/enabled state","src":" \t\tvar state = \"dojoHtmlCheckbox\" + (this.disabled ? \"Disabled\" : \"\") + (this.checked ? \"On\" : \"Off\");\n\t\t\tdojo.html.setClass(this.imageNode, \"dojoHtmlCheckbox \" + state);\n\t\t\tthis.inputNode.checked = this.checked;\n\t\t\tif(this.disabled){\n\t\t\t\tthis.inputNode.setAttribute(\"disabled\",true);\n\t\t\t}else{\n\t\t\t\tthis.inputNode.removeAttribute(\"disabled\");\n\t\t\t}\n\t\t\tdojo.widget.wai.setAttr(this.domNode, \"waiState\", \"checked\", this.checked);","prototype":"dojo.widget.Checkbox"}},"dojo.widget.a11y.Checkbox":{"meta":{"prototype_chain":["dojo.widget.Checkbox"],"call_chain":["dojo.widget.Checkbox"],"prototype_variables":["templatePath"],"variables":["templatePath"],"instance_variables":["inputNode.checked"],"summary":"variation on Checkbox widget to be display on monitors in high-contrast mode (that don't display CSS background images)"}},"dojo.widget.a11y.Checkbox.fillInTemplate":{"meta":{"summary":"","src":"","prototype":"dojo.widget.a11y.Checkbox"}},"dojo.widget.a11y.Checkbox.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tthis.inputNode.checked=this.checked;\n\t\t\t\/\/only set disabled if true since FF interprets any value for disabled as true\n\t\t\tif (this.disabled){\n\t\t\t\tthis.inputNode.setAttribute(\"disabled\",true);\n\t\t\t} ","prototype":"dojo.widget.a11y.Checkbox"}},"dojo.widget.a11y.Checkbox._onClick":{"meta":{"summary":"","src":" \t\tthis.onClick();","prototype":"dojo.widget.a11y.Checkbox"}}}}},"dojo.widget.Clock":{"meta":{"requires":{"common":["dojo.widget.*","dojo.gfx.*","dojo.uri.Uri","dojo.lang.common","dojo.lang.timing.Timer"]},"functions":{"dojo.widget.Clock":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["set","start","stop","_initPoly","_placeHand","placeHour","placeMinute","placeSecond","init","postCreate"],"variables":["set","start","stop","_initPoly","_placeHand","placeHour","placeMinute","placeSecond","init","postCreate"],"summary":"A basic clock that supports offset and labels","src":" \tvar self=this;\r\n\t\tthis.timeZoneOffset=0;\t\/\/\tthis is fun.\r\n\t\tthis.label=\"\";\t\t\/\/\toptional label.\r\n\t\tthis.date=new Date();\r\n\t\tthis.handColor=\"#788598\";\r\n\t\tthis.handStroke=\"#6f7b8c\";\r\n\t\/\/\tthis.secondHandColor=\"#c90405\";\r\n\t\tthis.secondHandColor=[201, 4, 5, 0.8];\r\n\t\tthis.topLabelColor=\"#efefef\";\r\n\t\tthis.labelColor=\"#fff\";\r\n\t\t\/\/\ttimer\r\n\t\tthis.timer = new dojo.lang.timing.Timer(1000);\r\n\t\t\/\/\tshapes\r\n\t\tthis.center={ x:75, y:75 };\r\n\t\tthis.hands={\r\n\t\t\thour:null,\r\n\t\t\tminute:null,\r\n\t\t\tsecond:null\r\n\t\t};\r\n\t\tthis.shadows={\r\n\t\t\thour:{ shadow:null, shift:{ dx:2, dy:2} },\r\n\t\t\tminute:{ shadow:null, shift:{ dx:2, dy:3} },\r\n\t\t\tsecond:{ shadow:null, shift:{ dx:4, dy:4} }\r\n\t\t};\r\n\t\tthis.image = dojo.uri.dojoUri(\"src\/widget\/templates\/images\/clock.png\");\r\n\t\tthis.surface=null;\r\n\t\tthis.labelNode=null;\r\n\t\tthis.topLabelNode=null;\r\n\t\tthis.draw=function(){\r\n\t\t\t\/\/\tsummary: Moves the hands of the clock to the proper position based on the current date.\r\n\t\t\tself.date=new Date();\r\n\t\t\tvar h=(self.date.getHours()+self.timeZoneOffset) % 12;\r\n\t\t\tvar m=self.date.getMinutes();\r\n\t\t\tvar s=self.date.getSeconds();\r\n\t\t\tself.placeHour(h, m, s);\r\n\t\t\tself.placeMinute(m, s);\r\n\t\t\tself.placeSecond(s);\r\n\t\t\tself.topLabelNode.innerHTML=((self.date.getHours()+self.timeZoneOffset)>11)?\"PM\":\"AM\";\r\n\t\t};\r\n\t\tthis.timer.onTick=self.draw;\r","instance_variables":["timeZoneOffset","label","date","handColor","handStroke","secondHandColor","topLabelColor","labelColor","timer","center","hands","shadows","image","surface","labelNode","topLabelNode","timer.onTick"],"description":"Uses SVG and Internet Explorer's VML implementation to render a clock using the gfx module. timeZoneOffset: Integer Amount (in hours) to offset the clock, relative to local time. date: Date image: String Location of the background image"}},"dojo.widget.Clock.draw":{"meta":{"summary":"Moves the hands of the clock to the proper position based on the current date.","src":" \t\tself.date=new Date();\r\n\t\t\tvar h=(self.date.getHours()+self.timeZoneOffset) % 12;\r\n\t\t\tvar m=self.date.getMinutes();\r\n\t\t\tvar s=self.date.getSeconds();\r\n\t\t\tself.placeHour(h, m, s);\r\n\t\t\tself.placeMinute(m, s);\r\n\t\t\tself.placeSecond(s);\r\n\t\t\tself.topLabelNode.innerHTML=((self.date.getHours()+self.timeZoneOffset)>11)?\"PM\":\"AM\";\r","instance":"dojo.widget.Clock"}}}}},"dojo.widget.ColorPalette":{"meta":{"requires":{"common":["dojo.widget.*","dojo.html.layout","dojo.html.display","dojo.html.selection"]},"functions":{"dojo.widget.ColorPalette":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["palette"],"variables":["palette"],"instance_variables":["domNode","style.borderColor"],"summary":"Grid showing various colors, so the user pick a certain color"},"extra":{"variables":{"palette":{"type":"String","summary":"Size of grid, either \"7x10\" or \"3x4\"."}}}},"dojo.widget.ColorPalette.buildRendering":{"meta":{"summary":"","src":" \tthis.domNode = document.createElement(\"table\");\n\t\tdojo.html.disableSelection(this.domNode);\n\t\tdojo.event.connect(this.domNode, \"onmousedown\", function (e) {\n\t\t\te.preventDefault();\n\t\t});\n\t\twith (this.domNode) { \/\/ set the table's properties\n\t\t\tcellPadding = \"0\"; cellSpacing = \"1\"; border = \"1\";\n\t\t\tstyle.backgroundColor = \"white\";\n\t\t}\n\t\tvar colors = this._palettes[this.palette];\n\t\tfor (var i = 0; i < colors.length; i++) {\n\t\t\tvar tr = this.domNode.insertRow(-1);\n\t\t\tfor (var j = 0; j < colors[i].length; j++) {\n\t\t\t\tif (colors[i][j].length == 3) {\n\t\t\t\t\tcolors[i][j] = colors[i][j].replace(\/(.)(.)(.)\/, \"$1$1$2$2$3$3\");\n\t\t\t\t}\n\t\t\t\tvar td = tr.insertCell(-1);\n\t\t\t\twith (td.style) {\n\t\t\t\t\tbackgroundColor = \"#\" + colors[i][j];\n\t\t\t\t\tborder = \"1px solid gray\";\n\t\t\t\t\twidth = height = \"15px\";\n\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t}\n\t\t\t\ttd.color = \"#\" + colors[i][j];\n\t\t\t\ttd.onmouseover = function (e) { this.style.borderColor = \"white\"; }\n\t\t\t\ttd.onmouseout = function (e) { this.style.borderColor = \"gray\"; }\n\t\t\t\tdojo.event.connect(td, \"onmousedown\", this, \"onClick\");\n\t\t\t\ttd.innerHTML = \"&nbsp;\";\n\t\t\t}\n\t\t}","prototype":"dojo.widget.ColorPalette"}},"dojo.widget.ColorPalette.onClick":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \tthis.onColorSelect(e.currentTarget.color);\n\t\te.currentTarget.style.borderColor = \"gray\";","prototype":"dojo.widget.ColorPalette"}},"dojo.widget.ColorPalette.onColorSelect":{"meta":{"summary":"Callback when a color is selected.","parameters":{"color":{"type":""}},"src":"\t\t\/\/ summary:\n\t\t\/\/\t\tCallback when a color is selected.\n\t\t\/\/ color: String\n\t\t\/\/\t\tHex value corresponding to color.","prototype":"dojo.widget.ColorPalette"},"extra":{"parameters":{"color":{"type":"String","summary":"Hex value corresponding to color."}}}}},"objects":{"dojo.widget.ColorPalette._palettes":{"meta":{"variables":["7x10","3x4"]}}}}},"dojo.widget.ComboBox":{"meta":{"requires":{"common":["dojo.widget.*","dojo.event.*","dojo.io.*","dojo.html.*","dojo.string","dojo.widget.html.stabile","dojo.widget.PopupContainer"]},"functions":{"dojo.widget.incrementalComboBoxDataProvider._addToCache":{"meta":{"summary":"","parameters":{"keyword":{"type":"String"},"data":{"type":"Array"}},"src":" \t\tif(this.allowCache){\n\t\t\t\tthis._cache[keyword] = data;\n\t\t\t}","prototype":"dojo.widget.incrementalComboBoxDataProvider"}},"dojo.widget.incrementalComboBoxDataProvider.startSearch":{"meta":{"summary":"Start the search for patterns that match searchStr, and call specified callback functions with the results","parameters":{"searchStr":{"type":"String"},"callback":{"type":"Function"}},"src":"\t\t\tif(this._inFlight){\n\t\t\t\t\/\/ FIXME: implement backoff!\n\t\t\t}\n\t\t\tvar tss = encodeURIComponent(searchStr);\n\t\t\tvar realUrl = dojo.string.substituteParams(this.searchUrl, {\"searchString\": tss});\n\t\t\tvar _this = this;\n\t\t\tvar request = this._lastRequest = dojo.io.bind({\n\t\t\t\turl: realUrl,\n\t\t\t\tmethod: \"get\",\n\t\t\t\tmimetype: \"text\/json\",\n\t\t\t\tload: function(type, data, evt){\n\t\t\t\t\t_this._inFlight = false;\n\t\t\t\t\tif(!dojo.lang.isArray(data)){\n\t\t\t\t\t\tvar arrData = [];\n\t\t\t\t\t\tfor(var key in data){\n\t\t\t\t\t\t\tarrData.push([data[key], key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = arrData;\n\t\t\t\t\t}\n\t\t\t\t\t_this._addToCache(searchStr, data);\n\t\t\t\t\tif (request == _this._lastRequest){\n\t\t\t\t\t\tcallback(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._inFlight = true;","prototype":"dojo.widget.incrementalComboBoxDataProvider"},"extra":{"parameters":{"searchStr":{"type":"The","summary":"characters the user has typed into the <input>."},"callback":{"type":"This","summary":"function will be called with the result, as an array of label\/value pairs (the value is used for the Select widget). Example: [ [\"Alabama\",\"AL\"], [\"Alaska\",\"AK\"], [\"American Samoa\",\"AS\"] ]"}}}},"dojo.widget.incrementalComboBoxDataProvider":{"meta":{"instance_variables":["_lastRequest","_inFlight","searchUrl","_cache","allowCache"],"summary":"Reference implementation \/ interface for Combobox incremental data provider. This class takes a search string and returns values that match that search string. The filtering of values (to find values matching given search string) is done on the server.","parameters":{"options":{"type":""}},"src":"\t\tthis.searchUrl = options.dataUrl;\n\t\t\/\/ TODO: cache doesn't work\n\t\tthis._cache = {};\n\t\tthis._inFlight = false;\n\t\tthis._lastRequest = null;\n\t\t\/\/ allowCache: Boolean\n\t\t\/\/\tSetting to use\/not use cache for previously seen values\n\t\t\/\/\tTODO: caching doesn't work.\n\t\t\/\/\tTODO: read the setting for this value from the widget parameters\n\t\tthis.allowCache = false;"},"extra":{"parameters":{"options":{"type":"Structure","summary":"containing {dataUrl: \"foo.js?search={searchString}\"} or similar data. dataUrl is a URL that is passed the search string a returns a JSON structure showing the matching values, like [ [\"Alabama\",\"AL\"], [\"Alaska\",\"AK\"], [\"American Samoa\",\"AS\"] ]"}}}},"dojo.widget.basicComboBoxDataProvider._getData":{"meta":{"summary":"","parameters":{"url":{"type":"String"}},"src":" \t\tdojo.io.bind({\n\t\t\t\turl: url,\n\t\t\t\tload: dojo.lang.hitch(this, function(type, data, evt){\n\t\t\t\t\tif(!dojo.lang.isArray(data)){\n\t\t\t\t\t\tvar arrData = [];\n\t\t\t\t\t\tfor(var key in data){\n\t\t\t\t\t\t\tarrData.push([data[key], key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = arrData;\n\t\t\t\t\t}\n\t\t\t\t\tthis.setData(data);\n\t\t\t\t}),\n\t\t\t\tmimetype: \"text\/json\"\n\t\t\t});","prototype":"dojo.widget.basicComboBoxDataProvider"}},"dojo.widget.basicComboBoxDataProvider.startSearch":{"meta":{"summary":"Start the search for patterns that match searchStr.","parameters":{"searchStr":{"type":"String"},"callback":{"type":"Function"}},"src":"\t\t\t\/\/ FIXME: need to add timeout handling here!!\n\t\t\tthis._performSearch(searchStr, callback);","prototype":"dojo.widget.basicComboBoxDataProvider"},"extra":{"parameters":{"searchStr":{"type":"The","summary":"characters the user has typed into the <input>."},"callback":{"type":"This","summary":"function will be called with the result, as an array of label\/value pairs (the value is used for the Select widget). Example: [ [\"Alabama\",\"AL\"], [\"Alaska\",\"AK\"], [\"American Samoa\",\"AS\"] ]"}}}},"dojo.widget.basicComboBoxDataProvider._performSearch":{"meta":{"summary":"","parameters":{"searchStr":{"type":"String"},"callback":{"type":"Function"}},"src":" \t\tvar st = this.searchType;\n\t\t\t\/\/ FIXME: this is just an example search, which means that we implement\n\t\t\t\/\/ only a linear search without any of the attendant (useful!) optimizations\n\t\t\tvar ret = [];\n\t\t\tif(!this.caseSensitive){\n\t\t\t\tsearchStr = searchStr.toLowerCase();\n\t\t\t}\n\t\t\tfor(var x=0; x<this._data.length; x++){\n\t\t\t\tif((this.searchLimit > 0)&&(ret.length >= this.searchLimit)){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\/\/ FIXME: we should avoid copies if possible!\n\t\t\t\tvar dataLabel = new String((!this.caseSensitive) ? this._data[x][0].toLowerCase() : this._data[x][0]);\n\t\t\t\tif(dataLabel.length < searchStr.length){\n\t\t\t\t\t\/\/ this won't ever be a good search, will it? What if we start\n\t\t\t\t\t\/\/ to support regex search?\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(st == \"STARTSTRING\"){\n\t\t\t\t\tif(searchStr == dataLabel.substr(0, searchStr.length)){\n\t\t\t\t\t\tret.push(this._data[x]);\n\t\t\t\t\t}\n\t\t\t\t}else if(st == \"SUBSTRING\"){\n\t\t\t\t\t\/\/ this one is a gimmie\n\t\t\t\t\tif(dataLabel.indexOf(searchStr) >= 0){\n\t\t\t\t\t\tret.push(this._data[x]);\n\t\t\t\t\t}\n\t\t\t\t}else if(st == \"STARTWORD\"){\n\t\t\t\t\t\/\/ do a substring search and then attempt to determine if the\n\t\t\t\t\t\/\/ preceeding char was the beginning of the string or a\n\t\t\t\t\t\/\/ whitespace char.\n\t\t\t\t\tvar idx = dataLabel.indexOf(searchStr);\n\t\t\t\t\tif(idx == 0){\n\t\t\t\t\t\t\/\/ implicit match\n\t\t\t\t\t\tret.push(this._data[x]);\n\t\t\t\t\t}\n\t\t\t\t\tif(idx <= 0){\n\t\t\t\t\t\t\/\/ if we didn't match or implicily matched, march onward\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\/\/ otherwise, we have to go figure out if the match was at the\n\t\t\t\t\t\/\/ start of a word...\n\t\t\t\t\t\/\/ this code is taken almost directy from nWidgets\n\t\t\t\t\tvar matches = false;\n\t\t\t\t\twhile(idx!=-1){\n\t\t\t\t\t\t\/\/ make sure the match either starts whole string, or\n\t\t\t\t\t\t\/\/ follows a space, or follows some punctuation\n\t\t\t\t\t\tif(\" ,\/(\".indexOf(dataLabel.charAt(idx-1)) != -1){\n\t\t\t\t\t\t\t\/\/ FIXME: what about tab chars?\n\t\t\t\t\t\t\tmatches = true; break;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tidx = dataLabel.indexOf(searchStr, idx+1);\n\t\t\t\t\t}\n\t\t\t\t\tif(!matches){\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tret.push(this._data[x]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcallback(ret);","prototype":"dojo.widget.basicComboBoxDataProvider"}},"dojo.widget.basicComboBoxDataProvider.setData":{"meta":{"summary":"set (or reset) the data and initialize lookup structures","parameters":{"pdata":{"type":"Array"}},"src":" \t\tthis._data = pdata;","prototype":"dojo.widget.basicComboBoxDataProvider"}},"dojo.widget.basicComboBoxDataProvider":{"meta":{"instance_variables":["_data","searchLimit","searchType","caseSensitive"],"summary":"Reference implementation \/ interface for Combobox data provider. This class takes a search string and returns values that match that search string. All possible values for the combobox are downloaded on initialization, and then startSearch() runs locally, merely filting that downloaded list, to find values matching search string NOTE: this data provider is designed as a naive reference implementation, and as such it is written more for readability than speed. A deployable data provider would implement lookups, search caching (and invalidation), and a significantly less naive data structure for storage of items.","parameters":{"options":{"type":"Object"},"node":{"type":"DomNode"}},"src":"\t\t\/\/ _data: Array\n\t\t\/\/\t\tList of every possible value for the drop down list\n\t\t\/\/\t\tstartSearch() simply searches this array and returns matching values.\n\t\tthis._data = [];\n\t\t\/\/ searchLimit: Integer\n\t\t\/\/\t\tMaximum number of results to return.\n\t\t\/\/\t\tTODO: need to read this value from the widget parameters\n\t\tthis.searchLimit = 30;\n\t\t\/\/ searchType: String\n\t\t\/\/\t\tDefines what values match the search string; see searchType parameter\n\t\t\/\/\t\tof ComboBox for details\n\t\t\/\/\t\tTODO: need to read this value from the widget parameters; the setting in ComboBox is being ignored.\n\t\tthis.searchType = \"STARTSTRING\";\n\t\t\/\/ caseSensitive: Boolean\n\t\t\/\/\t\tShould search be case sensitive?\n\t\t\/\/\t\tTODO: this should be a parameter to combobox?\n\t\tthis.caseSensitive = false;\n\t\tif(!dj_undef(\"dataUrl\", options) && !dojo.string.isBlank(options.dataUrl)){\n\t\t\tthis._getData(options.dataUrl);\n\t\t}else{\n\t\t\t\/\/ check to see if we can populate the list from <option> elements\n\t\t\tif((node)&&(node.nodeName.toLowerCase() == \"select\")){\n\t\t\t\t\/\/ NOTE: we're not handling <optgroup> here yet\n\t\t\t\tvar opts = node.getElementsByTagName(\"option\");\n\t\t\t\tvar ol = opts.length;\n\t\t\t\tvar data = [];\n\t\t\t\tfor(var x=0; x<ol; x++){\n\t\t\t\t\tvar text = opts[x].textContent || opts[x].innerText || opts[x].innerHTML;\n\t\t\t\t\tvar keyValArr = [String(text), String(opts[x].value)];\n\t\t\t\t\tdata.push(keyValArr);\n\t\t\t\t\tif(opts[x].selected){\n\t\t\t\t\t\toptions.setAllValues(keyValArr[0], keyValArr[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setData(data);\n\t\t\t}\n\t\t}"},"extra":{"parameters":{"options":{"type":"Object","summary":"Options object. Example: { dataUrl: String (URL to query to get list of possible drop down values), setAllValues: Function (callback for setting initially selected value) } The return format for dataURL is (for example) [ [\"Alabama\",\"AL\"], [\"Alaska\",\"AK\"], [\"American Samoa\",\"AS\"] ... ]"},"node":{"type":"Pointer","summary":"to the domNode in the original markup. This is needed in the case when the list of values is embedded in the html like <select> <option>Alabama<\/option> <option>Arkansas<\/option> ... rather than specified as a URL."}}}},"dojo.widget.ComboBox":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["forceValidOption","searchType","dataProvider","autoComplete","searchDelay","dataUrl","fadeTime","maxListLength","mode","selectedResult","dataProviderClass","buttonSrc","dropdownToggle","templatePath","templateCssPath","enable","_onMouseOut"],"variables":["forceValidOption","searchType","dataProvider","autoComplete","searchDelay","dataUrl","fadeTime","maxListLength","mode","selectedResult","dataProviderClass","buttonSrc","dropdownToggle","templatePath","templateCssPath","enable","_onMouseOut"],"instance_variables":["comboBoxValue.value","textInputNode.value","disabled","_prev_key_backspace","_prev_key_esc","searchTimer","comboBoxSelectionValue.value","_highlighted_option","name","comboBoxValue.name","comboBoxSelectionValue.name","dataProviderClass","mode","dataProvider","popupWidget","optionsListNode","_hasFocus","blurTimer","_mouseover_list","selectedResult","optionsListNode.innerHTML"],"summary":"Auto-completing text box, and base class for Select widget. The drop down box's values are populated from an class called a data provider, which returns a list of values based on the characters that the user has typed into the input box. Some of the options to the ComboBox are actually arguments to the data provider."}},"dojo.widget.ComboBox.setValue":{"meta":{"summary":"Sets the value of the combobox","parameters":{"value":{"type":"String"}},"src":" \t\tthis.comboBoxValue.value = value;\n\t\t\tif (this.textInputNode.value != value){ \/\/ prevent mucking up of selection\n\t\t\t\tthis.textInputNode.value = value;\n\t\t\t\t\/\/ only change state and value if a new value is set\n\t\t\t\tdojo.widget.html.stabile.setState(this.widgetId, this.getState(), true);\n\t\t\t\tthis.onValueChanged(value);\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.onValueChanged":{"meta":{"summary":"callback when value changes, for user to attach to","parameters":{"value":{"type":"String"}},"src":"\t\t\t\/\/ summary: callback when value changes, for user to attach to","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.getValue":{"meta":{"summary":"Rerturns combo box value","src":" \t\treturn this.comboBoxValue.value;","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.getState":{"meta":{"summary":"Used for saving state of ComboBox when navigates to a new page, in case they then hit the browser's \"Back\" button.","src":" \t\treturn {value: this.getValue()};","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.setState":{"meta":{"summary":"Used for restoring state of ComboBox when has navigated to a new page but then hits browser's \"Back\" button.","parameters":{"state":{"type":"Object"}},"src":" \t\tthis.setValue(state.value);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.disable":{"meta":{"summary":"","src":" \t\tthis.disabled = true;\n\t\t\tthis.textInputNode.setAttribute(\"disabled\",true);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._getCaretPos":{"meta":{"summary":"","parameters":{"element":{"type":"DomNode"}},"src":" \t\tif(dojo.lang.isNumber(element.selectionStart)){\n\t\t\t\t\/\/ FIXME: this is totally borked on Moz < 1.3. Any recourse?\n\t\t\t\treturn element.selectionStart;\n\t\t\t}else if(dojo.render.html.ie){\n\t\t\t\t\/\/ in the case of a mouse click in a popup being handled,\n\t\t\t\t\/\/ then the document.selection is not the textarea, but the popup\n\t\t\t\t\/\/ var r = document.selection.createRange();\n\t\t\t\t\/\/ hack to get IE 6 to play nice. What a POS browser.\n\t\t\t\tvar tr = document.selection.createRange().duplicate();\n\t\t\t\tvar ntr = element.createTextRange();\n\t\t\t\ttr.move(\"character\",0);\n\t\t\t\tntr.move(\"character\",0);\n\t\t\t\ttry {\n\t\t\t\t\t\/\/ If control doesnt have focus, you get an exception.\n\t\t\t\t\t\/\/ Seems to happen on reverse-tab, but can also happen on tab (seems to be a race condition - only happens sometimes).\n\t\t\t\t\t\/\/ There appears to be no workaround for this - googled for quite a while.\n\t\t\t\t\tntr.setEndPoint(\"EndToEnd\", tr);\n\t\t\t\t\treturn String(ntr.text).replace(\/\\r\/g,\"\").length;\n\t\t\t\t} catch (e){\n\t\t\t\t\treturn 0; \/\/ If focus has shifted, 0 is fine for caret pos.\n\t\t\t\t}\n\t\t\t}","returns":"If focus has shifted, 0 is fine for caret pos.","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._setCaretPos":{"meta":{"summary":"","parameters":{"element":{"type":"DomNode"},"location":{"type":"Number"}},"src":" \t\tlocation = parseInt(location);\n\t\t\tthis._setSelectedRange(element, location, location);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._setSelectedRange":{"meta":{"summary":"","parameters":{"element":{"type":"DomNode"},"start":{"type":"Number"},"end":{"type":"Number"}},"src":" \t\tif(!end){ end = element.value.length; }  \/\/ NOTE: Strange - should be able to put caret at start of text?\n\t\t\t\/\/ Mozilla\n\t\t\t\/\/ parts borrowed from http:\/\/www.faqts.com\/knowledge_base\/view.phtml\/aid\/13562\/fid\/130\n\t\t\tif(element.setSelectionRange){\n\t\t\t\telement.focus();\n\t\t\t\telement.setSelectionRange(start, end);\n\t\t\t}else if(element.createTextRange){ \/\/ IE\n\t\t\t\tvar range = element.createTextRange();\n\t\t\t\twith(range){\n\t\t\t\t\tcollapse(true);\n\t\t\t\t\tmoveEnd('character', end);\n\t\t\t\t\tmoveStart('character', start);\n\t\t\t\t\tselect();\n\t\t\t\t}\n\t\t\t}else{ \/\/otherwise try the event-creation hack (our own invention)\n\t\t\t\t\/\/ do we need these?\n\t\t\t\telement.value = element.value;\n\t\t\t\telement.blur();\n\t\t\t\telement.focus();\n\t\t\t\t\/\/ figure out how far back to go\n\t\t\t\tvar dist = parseInt(element.value.length)-end;\n\t\t\t\tvar tchar = String.fromCharCode(37);\n\t\t\t\tvar tcc = tchar.charCodeAt(0);\n\t\t\t\tfor(var x = 0; x < dist; x++){\n\t\t\t\t\tvar te = document.createEvent(\"KeyEvents\");\n\t\t\t\t\tte.initKeyEvent(\"keypress\", true, true, null, false, false, false, false, tcc, tcc);\n\t\t\t\t\telement.dispatchEvent(te);\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._handleKeyEvents":{"meta":{"summary":"handles keyboard events","parameters":{"evt":{"type":"Event"}},"src":" \t\tif(evt.ctrlKey || evt.altKey || !evt.key){ return; }\n\t\t\t\/\/ reset these\n\t\t\tthis._prev_key_backspace = false;\n\t\t\tthis._prev_key_esc = false;\n\t\t\tvar k = dojo.event.browser.keys;\n\t\t\tvar doSearch = true;\n\t\t\tswitch(evt.key){\n\t \t\t\tcase k.KEY_DOWN_ARROW:\n\t\t\t\t\tif(!this.popupWidget.isShowingNow){\n\t\t\t\t\t\tthis._startSearchFromInput();\n\t\t\t\t\t}\n\t\t\t\t\tthis._highlightNextOption();\n\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\treturn;\n\t\t\t\tcase k.KEY_UP_ARROW:\n\t\t\t\t\tthis._highlightPrevOption();\n\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\treturn;\n\t\t\t\tcase k.KEY_TAB:\n\t\t\t\t\t\/\/ using linux alike tab for autocomplete\n\t\t\t\t\tif(!this.autoComplete && this.popupWidget.isShowingNow && this._highlighted_option){\n\t\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\t\tthis._selectOption({ 'target': this._highlighted_option, 'noHide': false});\n\t\t\t\t\t\t\/\/ put caret last\n\t\t\t\t\t\tthis._setSelectedRange(this.textInputNode, this.textInputNode.value.length, null);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._selectOption();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase k.KEY_ENTER:\n\t\t\t\t\t\/\/ prevent submitting form if we press enter with list open\n\t\t\t\t\tif(this.popupWidget.isShowingNow){\n\t\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\t}\n\t\t\t\t\tif(this.autoComplete){\n\t\t\t\t\t\tthis._selectOption();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\/\/ fallthrough\n\t\t\t\tcase \" \":\n\t\t\t\t\tif(this.popupWidget.isShowingNow && this._highlighted_option){\n\t\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\t\tthis._selectOption();\n\t\t\t\t\t\tthis._hideResultList();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase k.KEY_ESCAPE:\n\t\t\t\t\tthis._hideResultList();\n\t\t\t\t\tthis._prev_key_esc = true;\n\t\t\t\t\treturn;\n\t\t\t\tcase k.KEY_BACKSPACE:\n\t\t\t\t\tthis._prev_key_backspace = true;\n\t\t\t\t\tif(!this.textInputNode.value.length){\n\t\t\t\t\t\tthis.setAllValues(\"\", \"\");\n\t\t\t\t\t\tthis._hideResultList();\n\t\t\t\t\t\tdoSearch = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase k.KEY_RIGHT_ARROW: \/\/ fall through\n\t\t\t\tcase k.KEY_LEFT_ARROW: \/\/ fall through\n\t\t\t\t\tdoSearch = false;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\/\/ non char keys (F1-F12 etc..)  shouldn't open list\n\t\t\t\t\tif(evt.charCode==0){\n\t\t\t\t\t\tdoSearch = false;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.searchTimer){\n\t\t\t\tclearTimeout(this.searchTimer);\n\t\t\t}\n\t\t\tif(doSearch){\n\t\t\t\t\/\/ if we have gotten this far we dont want to keep our highlight\n\t\t\t\tthis._blurOptionNode();\n\t\t\t\t\/\/ need to wait a tad before start search so that the event bubbles through DOM and we have value visible\n\t\t\t\tthis.searchTimer = setTimeout(dojo.lang.hitch(this, this._startSearchFromInput), this.searchDelay);\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.compositionEnd":{"meta":{"summary":"When inputting characters using an input method, such as Asian languages, it will generate this event instead of onKeyDown event","parameters":{"evt":{"type":"Event"}},"src":" \t\tevt.key = evt.keyCode;\n\t\t\tthis._handleKeyEvents(evt);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.onKeyUp":{"meta":{"summary":"callback on key up event","parameters":{"evt":{"type":"Event"}},"src":" \t\tthis.setValue(this.textInputNode.value);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.setSelectedValue":{"meta":{"summary":"This sets a hidden value associated w\/the displayed value. The hidden value (and this function) shouldn't be used; if you need a hidden value then use Select widget instead of ComboBox. TODO: remove? FIXME, not sure what to do here!","parameters":{"value":{"type":"String"}},"src":" \t\tthis.comboBoxSelectionValue.value = value;","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.setAllValues":{"meta":{"summary":"This sets the displayed value and hidden value. The hidden value (and this function) shouldn't be used; if you need a hidden value then use Select widget instead of ComboBox.","parameters":{"value1":{"type":"String"},"value2":{"type":"String"}},"src":" \t\tthis.setSelectedValue(value2);\n\t\t\tthis.setValue(value1);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._focusOptionNode":{"meta":{"summary":"does the actual highlight","parameters":{"node":{"type":"DomNode"}},"src":" \t\tif(this._highlighted_option != node){\n\t\t\t\tthis._blurOptionNode();\n\t\t\t\tthis._highlighted_option = node;\n\t\t\t\tdojo.html.addClass(this._highlighted_option, \"dojoComboBoxItemHighlight\");\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._blurOptionNode":{"meta":{"summary":"","src":" \t\tif(this._highlighted_option){\n\t\t\t\tdojo.html.removeClass(this._highlighted_option, \"dojoComboBoxItemHighlight\");\n\t\t\t\tthis._highlighted_option = null;\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._highlightNextOption":{"meta":{"summary":"","src":" \t\tif((!this._highlighted_option) || !this._highlighted_option.parentNode){\n\t\t\t\tthis._focusOptionNode(this.optionsListNode.firstChild);\n\t\t\t}else if(this._highlighted_option.nextSibling){\n\t\t\t\tthis._focusOptionNode(this._highlighted_option.nextSibling);\n\t\t\t}\n\t\t\tdojo.html.scrollIntoView(this._highlighted_option);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._highlightPrevOption":{"meta":{"summary":"","src":" \t\tif(this._highlighted_option && this._highlighted_option.previousSibling){\n\t\t\t\tthis._focusOptionNode(this._highlighted_option.previousSibling);\n\t\t\t}else{\n\t\t\t\tthis._highlighted_option = null;\n\t\t\t\tthis._hideResultList();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdojo.html.scrollIntoView(this._highlighted_option);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._itemMouseOver":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tif (evt.target === this.optionsListNode){ return; }\n\t\t\tthis._focusOptionNode(evt.target);\n\t\t\tdojo.html.addClass(this._highlighted_option, \"dojoComboBoxItemHighlight\");","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._itemMouseOut":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tif (evt.target === this.optionsListNode){ return; }\n\t\t\tthis._blurOptionNode();","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.onResize":{"meta":{"summary":"this function is called when the input area has changed size","src":" \t\tvar inputSize = dojo.html.getContentBox(this.textInputNode);\n\t\t\tif( inputSize.height <= 0 ){\n\t\t\t\t\/\/ need more time to calculate size\n\t\t\t\tdojo.lang.setTimeout(this, \"onResize\", 100);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar buttonSize = { width: inputSize.height, height: inputSize.height};\n\t\t\tdojo.html.setContentBox(this.downArrowNode, buttonSize);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":" \t\tdojo.html.applyBrowserClass(this.domNode);\n\t\t\tvar source = this.getFragNodeRef(frag);\n\t\t\tif (! this.name && source.name){ this.name = source.name; }\n\t\t\tthis.comboBoxValue.name = this.name;\n\t\t\tthis.comboBoxSelectionValue.name = this.name+\"_selected\";\n\t\t\t\/* different nodes get different parts of the style *\/\n\t\t\tdojo.html.copyStyle(this.domNode, source);\n\t\t\tdojo.html.copyStyle(this.textInputNode, source);\n\t\t\tdojo.html.copyStyle(this.downArrowNode, source);\n\t\t\twith (this.downArrowNode.style){ \/\/ calculate these later\n\t\t\t\twidth = \"0px\";\n\t\t\t\theight = \"0px\";\n\t\t\t}\n\t\t\t\/\/ Use specified data provider class; if no class is specified\n\t\t\t\/\/ then use comboboxDataProvider or incrmentalComboBoxDataProvider\n\t\t\t\/\/ depending on setting of mode\n\t\t\tvar dpClass;\n\t\t\tif(this.dataProviderClass){\n\t\t\t\tif(typeof this.dataProviderClass == \"string\"){\n\t\t\t\t\tdpClass = dojo.evalObjPath(this.dataProviderClass)\n\t\t\t\t}else{\n\t\t\t\t\tdpClass = this.dataProviderClass;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(this.mode == \"remote\"){\n\t\t\t\t\tdpClass = dojo.widget.incrementalComboBoxDataProvider;\n\t\t\t\t}else{\n\t\t\t\t\tdpClass = dojo.widget.basicComboBoxDataProvider;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.dataProvider = new dpClass(this, this.getFragNodeRef(frag));\n\t\t\tthis.popupWidget = new dojo.widget.createWidget(\"PopupContainer\",\n\t\t\t\t{toggle: this.dropdownToggle, toggleDuration: this.toggleDuration});\n\t\t\tdojo.event.connect(this, 'destroy', this.popupWidget, 'destroy');\n\t\t\tthis.optionsListNode = this.popupWidget.domNode;\n\t\t\tthis.domNode.appendChild(this.optionsListNode);\n\t\t\tdojo.html.addClass(this.optionsListNode, 'dojoComboBoxOptions');\n\t\t\tdojo.event.connect(this.optionsListNode, 'onclick', this, '_selectOption');\n\t\t\tdojo.event.connect(this.optionsListNode, 'onmouseover', this, '_onMouseOver');\n\t\t\tdojo.event.connect(this.optionsListNode, 'onmouseout', this, '_onMouseOut');\n\t\t\t\/\/ TODO: why does onmouseover and onmouseout connect to two separate handlers???\n\t\t\tdojo.event.connect(this.optionsListNode, \"onmouseover\", this, \"_itemMouseOver\");\n\t\t\tdojo.event.connect(this.optionsListNode, \"onmouseout\", this, \"_itemMouseOut\");","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._openResultList":{"meta":{"summary":"","parameters":{"results":{"type":"Array"}},"src":" \t\tif (this.disabled){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._clearResultList();\n\t\t\tif(!results.length){\n\t\t\t\tthis._hideResultList();\n\t\t\t}\n\t\t\tif(\t(this.autoComplete)&&\n\t\t\t\t(results.length)&&\n\t\t\t\t(!this._prev_key_backspace)&&\n\t\t\t\t(this.textInputNode.value.length > 0)){\n\t\t\t\tvar cpos = this._getCaretPos(this.textInputNode);\n\t\t\t\t\/\/ only try to extend if we added the last character at the end of the input\n\t\t\t\tif((cpos+1) > this.textInputNode.value.length){\n\t\t\t\t\t\/\/ only add to input node as we would overwrite Capitalisation of chars\n\t\t\t\t\tthis.textInputNode.value += results[0][0].substr(cpos);\n\t\t\t\t\t\/\/ build a new range that has the distance from the earlier\n\t\t\t\t\t\/\/ caret position to the end of the first string selected\n\t\t\t\t\tthis._setSelectedRange(this.textInputNode, cpos, this.textInputNode.value.length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar even = true;\n\t\t\twhile(results.length){\n\t\t\t\tvar tr = results.shift();\n\t\t\t\tif(tr){\n\t\t\t\t\tvar td = document.createElement(\"div\");\n\t\t\t\t\ttd.appendChild(document.createTextNode(tr[0]));\n\t\t\t\t\ttd.setAttribute(\"resultName\", tr[0]);\n\t\t\t\t\ttd.setAttribute(\"resultValue\", tr[1]);\n\t\t\t\t\ttd.className = \"dojoComboBoxItem \"+((even) ? \"dojoComboBoxItemEven\" : \"dojoComboBoxItemOdd\");\n\t\t\t\t\teven = (!even);\n\t\t\t\t\tthis.optionsListNode.appendChild(td);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/ show our list (only if we have content, else nothing)\n\t\t\tthis._showResultList();","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._onFocusInput":{"meta":{"summary":"","src":" \t\tthis._hasFocus = true;","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._onBlurInput":{"meta":{"summary":"","src":" \t\tthis._hasFocus = false;\n\t\t\tthis._handleBlurTimer(true, 500);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._handleBlurTimer":{"meta":{"summary":"collect all blur timers issues here","parameters":{"clear":{"type":"Boolean"},"millisec":{"type":"Number"}},"src":" \t\tif(this.blurTimer && (clear || millisec)){\n\t\t\t\tclearTimeout(this.blurTimer);\n\t\t\t}\n\t\t\tif(millisec){ \/\/ we ignore that zero is false and never sets as that never happens in this widget\n\t\t\t\tthis.blurTimer = dojo.lang.setTimeout(this, \"_checkBlurred\", millisec);\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._onMouseOver":{"meta":{"summary":"needed in IE and Safari as inputTextNode loses focus when scrolling optionslist","parameters":{"evt":{"type":"Event"}},"src":" \t\tif(!this._mouseover_list){\n\t\t\t\tthis._handleBlurTimer(true, 0);\n\t\t\t\tthis._mouseover_list = true;\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._isInputEqualToResult":{"meta":{"summary":"","parameters":{"result":{"type":"String"}},"src":" \t\tvar input = this.textInputNode.value;\n\t\t\tif(!this.dataProvider.caseSensitive){\n\t\t\t\tinput = input.toLowerCase();\n\t\t\t\tresult = result.toLowerCase();\n\t\t\t}\n\t\t\treturn (input == result);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._isValidOption":{"meta":{"summary":"","src":" \t\tvar tgt = dojo.html.firstElement(this.optionsListNode);\n\t\t\tvar isValidOption = false;\n\t\t\twhile(!isValidOption && tgt){\n\t\t\t\tif(this._isInputEqualToResult(tgt.getAttribute(\"resultName\"))){\n\t\t\t\t\tisValidOption = true;\n\t\t\t\t}else{\n\t\t\t\t\ttgt = dojo.html.nextElement(tgt);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isValidOption;","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._checkBlurred":{"meta":{"summary":"","src":" \t\tif(!this._hasFocus && !this._mouseover_list){\n\t\t\t\tthis._hideResultList();\n\t\t\t\t\/\/ clear the list if the user empties field and moves away.\n\t\t\t\tif(!this.textInputNode.value.length){\n\t\t\t\t\tthis.setAllValues(\"\", \"\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar isValidOption = this._isValidOption();\n\t\t\t\t\/\/ enforce selection from option list\n\t\t\t\tif(this.forceValidOption && !isValidOption){\n\t\t\t\t\tthis.setAllValues(\"\", \"\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(!isValidOption){\/\/ clear\n\t\t\t\t\tthis.setSelectedValue(\"\");\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._selectOption":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tvar tgt = null;\n\t\t\tif(!evt){\n\t\t\t\tevt = { target: this._highlighted_option };\n\t\t\t}\n\t\t\tif(!dojo.html.isDescendantOf(evt.target, this.optionsListNode)){\n\t\t\t\t\/\/ handle autocompletion where the the user has hit ENTER or TAB\n\t\t\t\t\/\/ if the input is empty do nothing\n\t\t\t\tif(!this.textInputNode.value.length){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttgt = dojo.html.firstElement(this.optionsListNode);\n\t\t\t\t\/\/ user has input value not in option list\n\t\t\t\tif(!tgt || !this._isInputEqualToResult(tgt.getAttribute(\"resultName\"))){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\/\/ otherwise the user has accepted the autocompleted value\n\t\t\t}else{\n\t\t\t\ttgt = evt.target;\n\t\t\t}\n\t\t\twhile((tgt.nodeType!=1)||(!tgt.getAttribute(\"resultName\"))){\n\t\t\t\ttgt = tgt.parentNode;\n\t\t\t\tif(tgt === dojo.body()){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.selectedResult = [tgt.getAttribute(\"resultName\"), tgt.getAttribute(\"resultValue\")];\n\t\t\tthis.setAllValues(tgt.getAttribute(\"resultName\"), tgt.getAttribute(\"resultValue\"));\n\t\t\tif(!evt.noHide){\n\t\t\t\tthis._hideResultList();\n\t\t\t\tthis._setSelectedRange(this.textInputNode, 0, null);\n\t\t\t}\n\t\t\tthis._tryFocus();","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._clearResultList":{"meta":{"summary":"","src":" \t\tif(this.optionsListNode.innerHTML){\n\t\t\t\tthis.optionsListNode.innerHTML = \"\";  \/\/ browser natively knows how to collect this memory\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._hideResultList":{"meta":{"summary":"","src":" \t\tthis.popupWidget.close();","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._showResultList":{"meta":{"summary":"","src":" \t\tvar childs = this.optionsListNode.childNodes;\n\t\t\tif(childs.length){\n\t\t\t\tvar visibleCount = Math.min(childs.length,this.maxListLength);\n\t\t\t\twith(this.optionsListNode.style)\n\t\t\t\t{\n\t\t\t\t\tdisplay = \"\";\n\t\t\t\t\tif(visibleCount == childs.length){\n\t\t\t\t\t\t\/\/no scrollbar is required, so unset height to let browser calcuate it,\n\t\t\t\t\t\t\/\/as in css, overflow is already set to auto\n\t\t\t\t\t\theight = \"\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\/\/show it first to get the correct dojo.style.getOuterHeight(childs[0])\n\t\t\t\t\t\t\/\/FIXME: shall we cache the height of the item?\n\t\t\t\t\t\theight = visibleCount * dojo.html.getMarginBox(childs[0]).height +\"px\";\n\t\t\t\t\t}\n\t\t\t\t\twidth = (dojo.html.getMarginBox(this.domNode).width-2)+\"px\";\n\t\t\t\t}\n\t\t\t\tthis.popupWidget.open(this.domNode, this, this.downArrowNode);\n\t\t\t}else{\n\t\t\t\tthis._hideResultList();\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.handleArrowClick":{"meta":{"summary":"callback when arrow is clicked","src":" \t\tthis._handleBlurTimer(true, 0);\n\t\t\tthis._tryFocus();\n\t\t\tif(this.popupWidget.isShowingNow){\n\t\t\t\tthis._hideResultList();\n\t\t\t}else{\n\t\t\t\t\/\/ forces full population of results, if they click\n\t\t\t\t\/\/ on the arrow it means they want to see more options\n\t\t\t\tthis._startSearch(\"\");\n\t\t\t}","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._tryFocus":{"meta":{"summary":"","src":" \t\ttry {\n\t\t\t\tthis.textInputNode.focus();\n\t\t\t} catch (e){\n\t\t\t\t\/\/ element isn't focusable if disabled, or not visible etc - not easy to test for.\n\t \t\t};","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._startSearchFromInput":{"meta":{"summary":"","src":" \t\tthis._startSearch(this.textInputNode.value);","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox._startSearch":{"meta":{"summary":"","parameters":{"key":{"type":"String"}},"src":" \t\tthis.dataProvider.startSearch(key, dojo.lang.hitch(this, \"_openResultList\"));","prototype":"dojo.widget.ComboBox"}},"dojo.widget.ComboBox.postCreate":{"meta":{"summary":"","src":" \t\tthis.onResize();\n\t\t\t\/\/ TODO: add these attach events to template\n\t\t\tdojo.event.connect(this.textInputNode, \"onblur\", this, \"_onBlurInput\");\n\t\t\tdojo.event.connect(this.textInputNode, \"onfocus\", this, \"_onFocusInput\");\n\t\t\tif (this.disabled){\n\t\t\t\tthis.disable();\n\t\t\t}\n\t\t\tvar s = dojo.widget.html.stabile.getState(this.widgetId);\n\t\t\tif (s){\n\t\t\t\tthis.setState(s);\n\t\t\t}","prototype":"dojo.widget.ComboBox"}}}}},"dojo.widget.ContentPane":{"meta":{"requires":{"common":["dojo.widget.*","dojo.io.*","dojo.widget.HtmlWidget","dojo.string","dojo.string.extras","dojo.html.style"]},"functions":{"dojo.widget.ContentPane":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","adjustPaths","href","extractContent","parseContent","cacheContent","preload","refreshOnShow","handler","executeScripts","scriptSeparation","loadingMessage","isLoaded"],"variables":["isContainer","adjustPaths","href","extractContent","parseContent","cacheContent","preload","refreshOnShow","handler","executeScripts","scriptSeparation","loadingMessage","isLoaded"],"instance_variables":["isLoaded","href","_ioBindObj","returnValue","_callOnUnload","_styleNodes","handler","scriptScope","_onLoadStack","_onUnloadStack","bindArgs"],"summary":"A widget that can be used as a standalone widget or as a baseclass for other widgets Handles replacement of document fragment using either external uri or javascript\/java generated markup or DomNode content, instanciating widgets within content and runs scripts. Dont confuse it with an iframe, it only needs document fragments. It's useful as a child of LayoutContainer, SplitContainer, or TabContainer. But note that those classes can contain any widget as a child. scriptScope: Function reference holder to the inline scripts container, if scriptSeparation is true bindArgs: String[] Send in extra args to the dojo.io.bind call per widgetImpl variables","src":" \tthis._styleNodes =  [];\n\t\tthis._onLoadStack = [];\n\t\tthis._onUnloadStack = [];\n\t\tthis._callOnUnload = false;\n\t\tthis._ioBindObj;\n\t\t\/\/\tNote:\n\t\t\/\/\t\tdont change this value externally\n\t\tthis.scriptScope; \/\/ undefined for now\n\t\t\/\/ loading option\n\t\t\/\/\texample:\n\t\t\/\/\t\tbindArgs=\"preventCache:false;\" overrides cacheContent\n\t\tthis.bindArgs = {};"}},"dojo.widget.ContentPane.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""},"parentComp":{"type":""}},"src":" \t\tif (this.handler!==\"\"){\n\t\t\t\tthis.setHandler(this.handler);\n\t\t\t}\n\t\t\tif(this.isShowing() || this.preload){\n\t\t\t\tthis.loadContents(); \n\t\t\t}","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.show":{"meta":{"summary":"","src":" \t\tif(this.refreshOnShow){\n\t\t\t\tthis.refresh();\n\t\t\t}else{\n\t\t\t\tthis.loadContents();\n\t\t\t}\n\t\t\tdojo.widget.ContentPane.superclass.show.call(this);","call_chain":["dojo.widget.ContentPane.superclass.show"],"prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.refresh":{"meta":{"summary":"Force a refresh (re-download) of content, be sure to turn of cache","src":" \t\tthis.isLoaded=false;\n\t\t\tthis.loadContents();","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.loadContents":{"meta":{"summary":"Download if isLoaded is false, else ignore","src":" \t\tif ( this.isLoaded ){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( dojo.lang.isFunction(this.handler)) {\n\t\t\t\tthis._runHandler();\n\t\t\t} else if ( this.href != \"\" ) {\n\t\t\t\tthis._downloadExternalContent(this.href, this.cacheContent && !this.refreshOnShow);\n\t\t\t}","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.setUrl":{"meta":{"summary":"Reset the (external defined) content of this pane and replace with new url","parameters":{"url":{"type":"String||dojo.uri.Uri"}},"src":"\t\t\t\/\/\tNote:\n\t\t\t\/\/\t\tIt delays the download until widget is shown if preload is false\n\t\t\tthis.href = url;\n\t\t\tthis.isLoaded = false;\n\t\t\tif ( this.preload || this.isShowing() ){\n\t\t\t\tthis.loadContents();\n\t\t\t}","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.abort":{"meta":{"summary":"Aborts a inflight download of content","src":" \t\tvar bind = this._ioBindObj;\n\t\t\tif(!bind || !bind.abort){ return; }\n\t\t\tbind.abort();\n\t\t\tdelete this._ioBindObj;","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane._downloadExternalContent":{"meta":{"summary":"","parameters":{"url":{"type":""},"useCache":{"type":""}},"src":" \t\tthis.abort();\n\t\t\tthis._handleDefaults(this.loadingMessage, \"onDownloadStart\");\n\t\t\tvar self = this;\n\t\t\tthis._ioBindObj = dojo.io.bind(\n\t\t\t\tthis._cacheSetting({\n\t\t\t\t\turl: url,\n\t\t\t\t\tmimetype: \"text\/html\",\n\t\t\t\t\thandler: function(type, data, xhr){\n\t\t\t\t\t\tdelete self._ioBindObj; \/\/ makes sure abort doesnt clear cache\n\t\t\t\t\t\tif(type==\"load\"){\n\t\t\t\t\t\t\tself.onDownloadEnd.call(self, url, data);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\/\/ XHR isnt a normal JS object, IE doesnt have prototype on XHR so we cant extend it or shallowCopy it\n\t\t\t\t\t\t\tvar e = {\n\t\t\t\t\t\t\t\tresponseText: xhr.responseText,\n\t\t\t\t\t\t\t\tstatus: xhr.status,\n\t\t\t\t\t\t\t\tstatusText: xhr.statusText,\n\t\t\t\t\t\t\t\tresponseHeaders: xhr.getAllResponseHeaders(),\n\t\t\t\t\t\t\t\ttext: \"Error loading '\" + url + \"' (\" + xhr.status + \" \"+  xhr.statusText + \")\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tself._handleDefaults.call(self, e, \"onDownloadError\");\n\t\t\t\t\t\t\tself.onLoad();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, useCache)\n\t\t\t);","call_chain":["self.onDownloadEnd","self._handleDefaults"],"prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane._cacheSetting":{"meta":{"summary":"","parameters":{"bindObj":{"type":""},"useCache":{"type":""}},"src":" \t\tfor(var x in this.bindArgs){\n\t\t\t\tif(dojo.lang.isUndefined(bindObj[x])){\n\t\t\t\t\tbindObj[x] = this.bindArgs[x];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(dojo.lang.isUndefined(bindObj.useCache)){ bindObj.useCache = useCache; }\n\t\t\tif(dojo.lang.isUndefined(bindObj.preventCache)){ bindObj.preventCache = !useCache; }\n\t\t\tif(dojo.lang.isUndefined(bindObj.mimetype)){ bindObj.mimetype = \"text\/html\"; }\n\t\t\treturn bindObj;","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.onLoad":{"meta":{"summary":"Event hook, is called after everything is loaded and widgetified","parameters":{"e":{"type":""}},"src":" \t\tthis._runStack(\"_onLoadStack\");\n\t\t\tthis.isLoaded=true;","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.onUnLoad":{"meta":{"summary":"Deprecated, use onUnload (lowercased load)","parameters":{"e":{"type":""}},"src":" \t\tdojo.deprecated(this.widgetType+\".onUnLoad, use .onUnload (lowercased load)\", 0.5);","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.onUnload":{"meta":{"summary":"Event hook, is called before old content is cleared","parameters":{"e":{"type":""}},"src":" \t\tthis._runStack(\"_onUnloadStack\");\n\t\t\tdelete this.scriptScope;\n\t\t\t\/\/ FIXME: remove for 0.5 along with onUnLoad\n\t\t\tif(this.onUnLoad !== dojo.widget.ContentPane.prototype.onUnLoad){\n\t\t\t\tthis.onUnLoad.apply(this, arguments);\n\t\t\t}","call_chain":["this.onUnLoad"],"prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane._runStack":{"meta":{"summary":"","parameters":{"stName":{"type":""}},"src":" \t\tvar st = this[stName]; var err = \"\";\n\t\t\tvar scope = this.scriptScope || window;\n\t\t\tfor(var i = 0;i < st.length; i++){\n\t\t\t\ttry{\n\t\t\t\t\tst[i].call(scope);\n\t\t\t\t}catch(e){ \n\t\t\t\t\terr += \"\\n\"+st[i]+\" failed: \"+e.description;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis[stName] = [];\n\t\t\tif(err.length){\n\t\t\t\tvar name = (stName== \"_onLoadStack\") ? \"addOnLoad\" : \"addOnUnLoad\";\n\t\t\t\tthis._handleDefaults(name+\" failure\\n \"+err, \"onExecError\", \"debug\");\n\t\t\t}","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.addOnLoad":{"meta":{"summary":"Stores function refs and calls them one by one in the order they came in when load event occurs.","parameters":{"obj":{"type":""},"func":{"type":""}},"src":" \t\tthis._pushOnStack(this._onLoadStack, obj, func);","prototype":"dojo.widget.ContentPane"},"extra":{"parameters":{"obj":{"type":"Function||Object?","summary":"holder object"},"func":{"type":"Function","summary":"function that will be called"}}}},"dojo.widget.ContentPane.addOnUnload":{"meta":{"summary":"Stores function refs and calls them one by one in the order they came in when unload event occurs.","parameters":{"obj":{"type":""},"func":{"type":""}},"src":" \t\tthis._pushOnStack(this._onUnloadStack, obj, func);","prototype":"dojo.widget.ContentPane"},"extra":{"parameters":{"obj":{"type":"Function||Object","summary":"holder object"},"func":{"type":"Function","summary":"function that will be called"}}}},"dojo.widget.ContentPane.addOnUnLoad":{"meta":{"summary":"Deprecated use addOnUnload (lower cased load)","src":" \t\tdojo.deprecated(this.widgetType + \".addOnUnLoad, use addOnUnload instead. (lowercased Load)\", 0.5);\n\t\t\tthis.addOnUnload.apply(this, arguments);","call_chain":["this.addOnUnload"],"prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane._pushOnStack":{"meta":{"summary":"","parameters":{"stack":{"type":""},"obj":{"type":""},"func":{"type":""}},"src":" \t\tif(typeof func == 'undefined') {\n\t\t\t\tstack.push(obj);\n\t\t\t}else{\n\t\t\t\tstack.push(function(){ obj[func](); });\n\t\t\t}","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.destroy":{"meta":{"summary":"","src":" \t\tthis.onUnload();\n\t\t\tdojo.widget.ContentPane.superclass.destroy.call(this);","call_chain":["dojo.widget.ContentPane.superclass.destroy"],"prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.onExecError":{"meta":{"summary":"called when content script eval error or Java error occurs, preventDefault-able default is to debug not alert as in 0.3.1","parameters":{"e":{"type":"Object"}},"src":"\t\t\t\/\/ summary:\n\t\t\t\/\/\t\tcalled when content script eval error or Java error occurs, preventDefault-able\n\t\t\t\/\/\t\tdefault is to debug not alert as in 0.3.1","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.onContentError":{"meta":{"summary":"called on DOM faults, require fault etc in content, preventDefault-able default is to display errormessage inside pane","parameters":{"e":{"type":"Object"}},"src":"\t\t\t\/\/ summary: \n\t\t\t\/\/\t\tcalled on DOM faults, require fault etc in content, preventDefault-able\n\t\t\t\/\/\t\tdefault is to display errormessage inside pane","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.onDownloadError":{"meta":{"summary":"called when download error occurs, preventDefault-able default is to display errormessage inside pane","parameters":{"e":{"type":"Object"}},"src":"\t\t\t\/\/ summary: \n\t\t\t\/\/\t\tcalled when download error occurs, preventDefault-able\n\t\t\t\/\/\t\tdefault is to display errormessage inside pane","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.onDownloadStart":{"meta":{"summary":"called before download starts, preventDefault-able default is to display loadingMessage inside pane by changing e.text in your event handler you can change loading message","parameters":{"e":{"type":"Object"}},"src":"\t\t\t\/\/ summary:\n\t\t\t\/\/\t\tcalled before download starts, preventDefault-able\n\t\t\t\/\/\t\tdefault is to display loadingMessage inside pane\n\t\t\t\/\/\t\tby changing e.text in your event handler you can change loading message","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.onDownloadEnd":{"meta":{"summary":"called when download is finished","parameters":{"url":{"type":""},"data":{"type":""}},"src":" \t\tdata = this.splitAndFixPaths(data, url);\n\t\t\tthis.setContent(data);","prototype":"dojo.widget.ContentPane"},"extra":{"parameters":{"url":{"type":"String","summary":"url that downloaded data"},"data":{"type":"String","summary":"the markup that was downloaded"}}}},"dojo.widget.ContentPane._handleDefaults":{"meta":{"summary":"","parameters":{"e":{"type":""},"handler":{"type":""},"messType":{"type":""}},"src":" \t\tif(!handler){ handler = \"onContentError\"; }\n\t\t\tif(dojo.lang.isString(e)){ e = {text: e}; }\n\t\t\tif(!e.text){ e.text = e.toString(); }\n\t\t\te.toString = function(){ return this.text; };\n\t\t\tif(typeof e.returnValue != \"boolean\"){\n\t\t\t\te.returnValue = true; \n\t\t\t}\n\t\t\tif(typeof e.preventDefault != \"function\"){\n\t\t\t\te.preventDefault = function(){ this.returnValue = false; };\n\t\t\t}\n\t\t\t\/\/ call our handler\n\t\t\tthis[handler](e);\n\t\t\tif(e.returnValue){\n\t\t\t\tswitch(messType){\n\t\t\t\t\tcase true: \/\/ fallthrough, old compat\n\t\t\t\t\tcase \"alert\":\n\t\t\t\t\t\talert(e.toString()); break;\n\t\t\t\t\tcase \"debug\":\n\t\t\t\t\t\tdojo.debug(e.toString()); break;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\/\/ makes sure scripts can clean up after themselves, before we setContent\n\t\t\t\t\tif(this._callOnUnload){ this.onUnload(); } \n\t\t\t\t\t\/\/ makes sure we dont try to call onUnLoad again on this event,\n\t\t\t\t\t\/\/ ie onUnLoad before 'Loading...' but not before clearing 'Loading...'\n\t\t\t\t\tthis._callOnUnload = false;\n\t\t\t\t\t\/\/ we might end up in a endless recursion here if domNode cant append content\n\t\t\t\t\tif(arguments.callee._loopStop){\n\t\t\t\t\t\tdojo.debug(e.toString());\n\t\t\t\t\t}else{\n\t\t\t\t\t\targuments.callee._loopStop = true;\n\t\t\t\t\t\tthis._setContent(e.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\targuments.callee._loopStop = false;","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.splitAndFixPaths":{"meta":{"summary":"adjusts all relative paths in (hopefully) all cases, images, remote scripts, links etc. splits up content in different pieces, scripts, title, style, link and whats left becomes .xml","parameters":{"s":{"type":""},"url":{"type":""}},"src":"\t\t\tvar titles = [], scripts = [],tmp = [];\/\/ init vars\n\t\t\tvar match = [], requires = [], attr = [], styles = [];\n\t\t\tvar str = '', path = '', fix = '', tagFix = '', tag = '', origPath = '';\n\t\t\tif(!url) { url = \".\/\"; } \/\/ point to this page if not set\n\t\t\tif(s){ \/\/ make sure we dont run regexes on empty content\n\t\t\t\t\/************** <title> ***********\/\n\t\t\t\t\/\/ khtml is picky about dom faults, you can't attach a <style> or <title> node as child of body\n\t\t\t\t\/\/ must go into head, so we need to cut out those tags\n\t\t\t\tvar regex = \/<title[^>]*>([\\s\\S]*?)<\\\/title>\/i;\n\t\t\t\twhile(match = regex.exec(s)){\n\t\t\t\t\ttitles.push(match[1]);\n\t\t\t\t\ts = s.substring(0, match.index) + s.substr(match.index + match[0].length);\n\t\t\t\t};\n\t\t\t\t\/************** adjust paths *****************\/\n\t\t\t\tif(this.adjustPaths){\n\t\t\t\t\t\/\/ attributepaths one tag can have multiple paths example:\n\t\t\t\t\t\/\/ <input src=\"...\" style=\"url(..)\"\/> or <a style=\"url(..)\" href=\"..\">\n\t\t\t\t\t\/\/ strip out the tag and run fix on that.\n\t\t\t\t\t\/\/ this guarantees that we won't run replace on another tag's attribute + it was easier do\n\t\t\t\t\tvar regexFindTag = \/<[a-z][a-z0-9]*[^>]*\\s(?:(?:src|href|style)=[^>])+[^>]*>\/i;\n\t\t\t\t\tvar regexFindAttr = \/\\s(src|href|style)=(['\"]?)([\\w()\\[\\]\\\/.,\\\\'\"-:;#=&?\\s@]+?)\\2\/i;\n\t\t\t\t\t\/\/ these are the supported protocols, all other is considered relative\n\t\t\t\t\tvar regexProtocols = \/^(?:[#]|(?:(?:https?|ftps?|file|javascript|mailto|news):))\/;\n\t\t\t\t\twhile(tag = regexFindTag.exec(s)){\n\t\t\t\t\t\tstr += s.substring(0, tag.index);\n\t\t\t\t\t\ts = s.substring((tag.index + tag[0].length), s.length);\n\t\t\t\t\t\ttag = tag[0];\n\t\t\t\t\t\t\/\/ loop through attributes\n\t\t\t\t\t\ttagFix = '';\n\t\t\t\t\t\twhile(attr = regexFindAttr.exec(tag)){\n\t\t\t\t\t\t\tpath = \"\"; origPath = attr[3];\n\t\t\t\t\t\t\tswitch(attr[1].toLowerCase()){\n\t\t\t\t\t\t\t\tcase \"src\":\/\/ falltrough\n\t\t\t\t\t\t\t\tcase \"href\":\n\t\t\t\t\t\t\t\t\tif(regexProtocols.exec(origPath)){\n\t\t\t\t\t\t\t\t\t\tpath = origPath;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpath = (new dojo.uri.Uri(url, origPath).toString());\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"style\":\/\/ style\n\t\t\t\t\t\t\t\t\tpath = dojo.html.fixPathsInCssText(origPath, url);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tpath = origPath;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfix = \" \" + attr[1] + \"=\" + attr[2] + path + attr[2];\n\t\t\t\t\t\t\t\/\/ slices up tag before next attribute check\n\t\t\t\t\t\t\ttagFix += tag.substring(0, attr.index) + fix;\n\t\t\t\t\t\t\ttag = tag.substring((attr.index + attr[0].length), tag.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += tagFix + tag; \/\/dojo.debug(tagFix + tag);\n\t\t\t\t\t}\n\t\t\t\t\ts = str+s;\n\t\t\t\t}\n\t\t\t\t\/****************  cut out all <style> and <link rel=\"stylesheet\" href=\"..\"> **************\/\n\t\t\t\tregex = \/(?:<(style)[^>]*>([\\s\\S]*?)<\\\/style>|<link ([^>]*rel=['\"]?stylesheet['\"]?[^>]*)>)\/i;\n\t\t\t\twhile(match = regex.exec(s)){\n\t\t\t\t\tif(match[1] && match[1].toLowerCase() == \"style\"){\n\t\t\t\t\t\tstyles.push(dojo.html.fixPathsInCssText(match[2],url));\n\t\t\t\t\t}else if(attr = match[3].match(\/href=(['\"]?)([^'\">]*)\\1\/i)){\n\t\t\t\t\t\tstyles.push({path: attr[2]});\n\t\t\t\t\t}\n\t\t\t\t\ts = s.substring(0, match.index) + s.substr(match.index + match[0].length);\n\t\t\t\t};\n\t\t\t\t\/***************** cut out all <script> tags, push them into scripts array ***************\/\n\t\t\t\tvar regex = \/<script([^>]*)>([\\s\\S]*?)<\\\/script>\/i;\n\t\t\t\tvar regexSrc = \/src=(['\"]?)([^\"']*)\\1\/i;\n\t\t\t\tvar regexDojoJs = \/.*(\\bdojo\\b\\.js(?:\\.uncompressed\\.js)?)$\/;\n\t\t\t\tvar regexInvalid = \/(?:var )?\\bdjConfig\\b(?:[\\s]*=[\\s]*\\{[^}]+\\}|\\.[\\w]*[\\s]*=[\\s]*[^;\\n]*)?;?|dojo\\.hostenv\\.writeIncludes\\(\\s*\\);?\/g;\n\t\t\t\tvar regexRequires = \/dojo\\.(?:(?:require(?:After)?(?:If)?)|(?:widget\\.(?:manager\\.)?registerWidgetPackage)|(?:(?:hostenv\\.)?setModulePrefix|registerModulePath)|defineNamespace)\\((['\"]).*?\\1\\)\\s*;?\/;\n\t\t\t\twhile(match = regex.exec(s)){\n\t\t\t\t\tif(this.executeScripts && match[1]){\n\t\t\t\t\t\tif(attr = regexSrc.exec(match[1])){\n\t\t\t\t\t\t\t\/\/ remove a dojo.js or dojo.js.uncompressed.js from remoteScripts\n\t\t\t\t\t\t\t\/\/ we declare all files named dojo.js as bad, regardless of path\n\t\t\t\t\t\t\tif(regexDojoJs.exec(attr[2])){\n\t\t\t\t\t\t\t\tdojo.debug(\"Security note! inhibit:\"+attr[2]+\" from  being loaded again.\");\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tscripts.push({path: attr[2]});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(match[2]){\n\t\t\t\t\t\t\/\/ remove all invalid variables etc like djConfig and dojo.hostenv.writeIncludes()\n\t\t\t\t\t\tvar sc = match[2].replace(regexInvalid, \"\");\n\t\t\t\t\t\tif(!sc){ continue; }\n\t\t\t\t\t\t\/\/ cut out all dojo.require (...) calls, if we have execute \n\t\t\t\t\t\t\/\/ scripts false widgets dont get there require calls\n\t\t\t\t\t\t\/\/ takes out possible widgetpackage registration as well\n\t\t\t\t\t\twhile(tmp = regexRequires.exec(sc)){\n\t\t\t\t\t\t\trequires.push(tmp[0]);\n\t\t\t\t\t\t\tsc = sc.substring(0, tmp.index) + sc.substr(tmp.index + tmp[0].length);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.executeScripts){\n\t\t\t\t\t\t\tscripts.push(sc);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ts = s.substr(0, match.index) + s.substr(match.index + match[0].length);\n\t\t\t\t}\n\t\t\t\t\/********* extract content *********\/\n\t\t\t\tif(this.extractContent){\n\t\t\t\t\tmatch = s.match(\/<body[^>]*>\\s*([\\s\\S]+)\\s*<\\\/body>\/im);\n\t\t\t\t\tif(match) { s = match[1]; }\n\t\t\t\t}\n\t\t\t\t\/*** replace scriptScope prefix in html Event handler\n\t\t\t\t* working order: find tags with scriptScope in a tag attribute\n\t\t\t\t* then replace all standalone scriptScope occurencies with reference to to this widget\n\t\t\t\t* valid onClick=\"scriptScope.func()\" or onClick=\"scriptScope['func']();scriptScope.i++\"\n\t\t\t\t* not valid onClick=\"var.scriptScope.ref\" nor onClick=\"var['scriptScope'].ref\" *\/\n\t\t\t\tif(this.executeScripts && this.scriptSeparation){\n\t\t\t\t\tvar regex = \/(<[a-zA-Z][a-zA-Z0-9]*\\s[^>]*?\\S=)((['\"])[^>]*scriptScope[^>]*>)\/;\n\t\t\t\t\tvar regexAttr = \/([\\s'\";:\\(])scriptScope(.*)\/; \/\/ we rely on that attribute begins ' or \"\n\t\t\t\t\tstr = \"\"; \n\t\t\t\t\twhile(tag = regex.exec(s)){\n\t\t\t\t\t\ttmp = ((tag[3]==\"'\") ? '\"': \"'\");fix= \"\";\n\t\t\t\t\t\tstr += s.substring(0, tag.index) + tag[1];\n\t\t\t\t\t\twhile(attr = regexAttr.exec(tag[2])){\n\t\t\t\t\t\t\ttag[2] = tag[2].substring(0, attr.index) + attr[1] + \"dojo.widget.byId(\"+ tmp + this.widgetId + tmp + \").scriptScope\" + attr[2];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += tag[2];\n\t\t\t\t\t\ts = s.substr(tag.index + tag[0].length);\n\t\t\t\t\t}\n\t\t\t\t\ts = str + s;\n\t\t\t\t}\n\t \t\t}\n\t\t\treturn {\"xml\": \t\ts, \/\/ Object\n\t\t\t\t\"styles\":\t\tstyles,\n\t\t\t\t\"titles\": \t\ttitles,\n\t\t\t\t\"requires\": \trequires,\n\t\t\t\t\"scripts\": \t\tscripts,\n\t\t\t\t\"url\": \t\t\turl};","returns":"Object","prototype":"dojo.widget.ContentPane"},"extra":{"parameters":{"s":{"type":"String","summary":"The markup in string"},"url":{"type":"String||dojo.uri.Uri?","summary":"url that pulled in markup"}}}},"dojo.widget.ContentPane._setContent":{"meta":{"summary":"","parameters":{"cont":{"type":""}},"src":" \t\tthis.destroyChildren();\n\t\t\t\/\/ remove old stylenodes from HEAD\n\t\t\tfor(var i = 0; i < this._styleNodes.length; i++){\n\t\t\t\tif(this._styleNodes[i] && this._styleNodes[i].parentNode){\n\t\t\t\t\tthis._styleNodes[i].parentNode.removeChild(this._styleNodes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._styleNodes = [];\n\t\t\ttry{\n\t\t\t\tvar node = this.containerNode || this.domNode;\n\t\t\t\twhile(node.firstChild){\n\t\t\t\t\tdojo.html.destroyNode(node.firstChild);\n\t\t\t\t}\n\t\t\t\tif(typeof cont != \"string\"){\n\t\t\t\t\tnode.appendChild(cont);\n\t\t\t\t}else{\n\t\t\t\t\tnode.innerHTML = cont;\n\t\t\t\t}\n\t\t\t}catch(e){\n\t\t\t\te.text = \"Couldn't load content:\"+e.description;\n\t\t\t\tthis._handleDefaults(e, \"onContentError\");\n\t\t\t}","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.setContent":{"meta":{"summary":"Replaces old content with data content, include style classes from old content","parameters":{"data":{"type":""}},"src":" \t\tthis.abort();\n\t\t\tif(this._callOnUnload){ this.onUnload(); }\/\/ this tells a remote script clean up after itself\n\t\t\tthis._callOnUnload = true;\n\t\t\tif(!data || dojo.html.isNode(data)){\n\t\t\t\t\/\/ if we do a clean using setContent(\"\"); or setContent(#node) bypass all parsing, extractContent etc\n\t\t\t\tthis._setContent(data);\n\t\t\t\tthis.onResized();\n\t\t\t\tthis.onLoad();\n\t\t\t}else{\n\t\t\t\t\/\/ need to run splitAndFixPaths? ie. manually setting content\n\t\t\t\t\/\/ adjustPaths is taken care of inside splitAndFixPaths\n\t\t\t\tif(typeof data.xml != \"string\"){ \n\t\t\t\t\tthis.href = \"\"; \/\/ so we can refresh safely\n\t\t\t\t\tdata = this.splitAndFixPaths(data); \n\t\t\t\t}\n\t\t\t\tthis._setContent(data.xml);\n\t\t\t\t\/\/ insert styles from content (in same order they came in)\n\t\t\t\tfor(var i = 0; i < data.styles.length; i++){\n\t\t\t\t\tif(data.styles[i].path){\n\t\t\t\t\t\tthis._styleNodes.push(dojo.html.insertCssFile(data.styles[i].path, dojo.doc(), false, true));\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._styleNodes.push(dojo.html.insertCssText(data.styles[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this.parseContent){\n\t\t\t\t\tfor(var i = 0; i < data.requires.length; i++){\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\teval(data.requires[i]);\n\t\t\t\t\t\t} catch(e){\n\t\t\t\t\t\t\te.text = \"ContentPane: error in package loading calls, \" + (e.description||e);\n\t\t\t\t\t\t\tthis._handleDefaults(e, \"onContentError\", \"debug\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\/\/ need to allow async load, Xdomain uses it\n\t\t\t\t\/\/ is inline function because we cant send args to dojo.addOnLoad\n\t\t\t\tvar _self = this;\n\t\t\t\tfunction asyncParse(){\n\t\t\t\t\tif(_self.executeScripts){\n\t\t\t\t\t\t_self._executeScripts(data.scripts);\n\t\t\t\t\t}\n\t\t\t\t\tif(_self.parseContent){\n\t\t\t\t\t\tvar node = _self.containerNode || _self.domNode;\n\t\t\t\t\t\tvar parser = new dojo.xml.Parse();\n\t\t\t\t\t\tvar frag = parser.parseElement(node, null, true);\n\t\t\t\t\t\t\/\/ createSubComponents not createComponents because frag has already been created\n\t\t\t\t\t\tdojo.widget.getParser().createSubComponents(frag, _self);\n\t\t\t\t\t}\n\t\t\t\t\t_self.onResized();\n\t\t\t\t\t_self.onLoad();\n\t\t\t\t}\n\t\t\t\t\/\/ try as long as possible to make setContent sync call\n\t\t\t\tif(dojo.hostenv.isXDomain && data.requires.length){\n\t\t\t\t\tdojo.addOnLoad(asyncParse);\n\t\t\t\t}else{\n\t\t\t\t\tasyncParse();\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.ContentPane"},"extra":{"parameters":{"data":{"type":"String||DomNode","summary":"new content, be it Document fragment or a DomNode chain If data contains style tags, link rel=stylesheet it inserts those styles into DOM"}}}},"dojo.widget.ContentPane.setHandler":{"meta":{"summary":"Generate pane content from given java function","parameters":{"handler":{"type":"Function"}},"src":" \t\tvar fcn = dojo.lang.isFunction(handler) ? handler : window[handler];\n\t\t\tif(!dojo.lang.isFunction(fcn)) {\n\t\t\t\t\/\/ FIXME: needs testing! somebody with java knowledge needs to try this\n\t\t\t\tthis._handleDefaults(\"Unable to set handler, '\" + handler + \"' not a function.\", \"onExecError\", true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.handler = function() {\n\t\t\t\treturn fcn.apply(this, arguments);\n\t\t\t}","call_chain":["fcn"],"prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane.setHandler.handler":{"meta":{"summary":"","src":" \t\t\treturn fcn.apply(this, arguments);","call_chain":["fcn"],"instance":"dojo.widget.ContentPane.setHandler"}},"dojo.widget.ContentPane._runHandler":{"meta":{"summary":"","src":" \t\tvar ret = true;\n\t\t\tif(dojo.lang.isFunction(this.handler)) {\n\t\t\t\tthis.handler(this, this.domNode);\n\t\t\t\tret = false;\n\t\t\t}\n\t\t\tthis.onLoad();\n\t\t\treturn ret;","prototype":"dojo.widget.ContentPane"}},"dojo.widget.ContentPane._executeScripts":{"meta":{"summary":"","parameters":{"scripts":{"type":""}},"src":" \t\tvar self = this;\n\t\t\tvar tmp = \"\", code = \"\";\n\t\t\tfor(var i = 0; i < scripts.length; i++){\n\t\t\t\tif(scripts[i].path){ \/\/ remotescript\n\t\t\t\t\tdojo.io.bind(this._cacheSetting({\n\t\t\t\t\t\t\"url\": \t\tscripts[i].path,\n\t\t\t\t\t\t\"load\":     function(type, scriptStr){\n\t\t\t\t\t\t\t\tdojo.lang.hitch(self, tmp = \";\"+scriptStr);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"error\":    function(type, error){\n\t\t\t\t\t\t\t\terror.text = type + \" downloading remote script\";\n\t\t\t\t\t\t\t\tself._handleDefaults.call(self, error, \"onExecError\", \"debug\");\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"mimetype\": \"text\/plain\",\n\t\t\t\t\t\t\"sync\":     true\n\t\t\t\t\t}, this.cacheContent));\n\t\t\t\t\tcode += tmp;\n\t\t\t\t}else{\n\t\t\t\t\tcode += scripts[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry{\n\t\t\t\tif(this.scriptSeparation){\n\t\t\t\t\t\/\/ initialize a new anonymous container for our script, dont make it part of this widgets scope chain\n\t\t\t\t\t\/\/ instead send in a variable that points to this widget, useful to connect events to onLoad, onUnload etc..\n\t\t\t\t\tdelete this.scriptScope;\n\t\t\t\t\tthis.scriptScope = new (new Function('_container_', code+'; return this;'))(self);\n\t\t\t\t}else{\n\t\t\t\t\t\/\/ exec in global, lose the _container_ feature\n\t\t\t\t\tvar djg = dojo.global();\n\t\t\t\t\tif(djg.execScript){\n\t\t\t\t\t\tdjg.execScript(code);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar djd = dojo.doc();\n\t\t\t\t\t\tvar sc = djd.createElement(\"script\");\n\t\t\t\t\t\tsc.appendChild(djd.createTextNode(code));\n\t\t\t\t\t\t(this.containerNode||this.domNode).appendChild(sc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}catch(e){\n\t\t\t\te.text = \"Error running scripts from content:\\n\"+e.description;\n\t\t\t\tthis._handleDefaults(e, \"onExecError\", \"debug\");\n\t\t\t}","call_chain":["self._handleDefaults"],"prototype":"dojo.widget.ContentPane"}}}}},"dojo.widget.CurrencyTextbox":{"meta":{"requires":{"common":["dojo.widget.IntegerTextbox","dojo.validate.common"]},"functions":{"dojo.widget.CurrencyTextbox":{"meta":{"prototype_chain":["dojo.widget.IntegerTextbox"],"call_chain":["dojo.widget.IntegerTextbox"],"prototype_variables":["fractional","symbol","separator","min","max"],"variables":["fractional","symbol","separator","min","max"],"instance_variables":["flags.fractional","flags.symbol","flags.min","flags.max"],"summary":"A subclass that extends IntegerTextbox. Over-rides isValid\/isInRange to test if input denotes a monetary value ."}},"dojo.widget.CurrencyTextbox.mixInProperties":{"meta":{"summary":"","parameters":{"localProperties":{"type":""},"frag":{"type":""}},"src":" \t\tdojo.widget.CurrencyTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif(localProperties.fractional){\n\t\t\t\tthis.flags.fractional = (localProperties.fractional == \"true\");\n\t\t\t}else if(localProperties.cents){\n\t\t\t\tdojo.deprecated(\"dojo.widget.IntegerTextbox\", \"use fractional attr instead of cents\", \"0.5\");\n\t\t\t\tthis.flags.fractional = (localProperties.cents == \"true\");\n\t\t\t}\n\t\t\tif(localProperties.symbol){\n\t\t\t\tthis.flags.symbol = localProperties.symbol;\n\t\t\t}\n\t\t\tif(localProperties.min){ \n\t\t\t\tthis.flags.min = parseFloat(localProperties.min);\n\t\t\t}\n\t\t\tif(localProperties.max){ \n\t\t\t\tthis.flags.max = parseFloat(localProperties.max);\n\t\t\t}","call_chain":["dojo.widget.CurrencyTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.CurrencyTextbox"}},"dojo.widget.CurrencyTextbox.isValid":{"meta":{"summary":"Over-ride for currency validation","src":" \t\treturn dojo.validate.isCurrency(this.textbox.value, this.flags);","prototype":"dojo.widget.CurrencyTextbox"}},"dojo.widget.CurrencyTextbox.isInRange":{"meta":{"summary":"Over-ride for currency validation","src":" \t\treturn dojo.validate.isInRange(this.textbox.value, this.flags);","prototype":"dojo.widget.CurrencyTextbox"}}}}},"dojo.widget.DatePicker":{"meta":{"requires":{"common":["dojo.date.common","dojo.date.format","dojo.date.serialize","dojo.widget.*","dojo.widget.HtmlWidget","dojo.event.*","dojo.dom","dojo.html.style"]},"functions":{"dojo.widget.DatePicker":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["value","name","displayWeeks","adjustWeeks","startDate","endDate","weekStartsOn","storedDate","staticDisplay","dayWidth","templatePath","templateCssPath"],"variables":["value","name","displayWeeks","adjustWeeks","startDate","endDate","weekStartsOn","storedDate","staticDisplay","dayWidth","templatePath","templateCssPath"],"instance_variables":["value","startDate","endDate","weekStartsOn","today","weekTemplate","selectedNode","clickedNode","firstDay","selectedIsUsed","currentIsUsed","curMonth","displayWeeks","adjustWeeks","staticDisplay","lastDay","monthLabelNode.innerHTML"]},"extra":{"variables":{"value":{"type":"start","summary":"attributes String|Date form value property if =='today' will be today's date"},"dayWidth":{"type":"String","summary":"how to render the names of the days in the header. see dojo.date.getDayNames"}}}},"dojo.widget.DatePicker.postMixInProperties":{"meta":{"summary":"see dojo.widget.DomWidget","src":"\t\t\tdojo.widget.DatePicker.superclass.postMixInProperties.apply(this, arguments);\n\t\t\tif(this.storedDate){\n\t\t\t\tdojo.deprecated(\"dojo.widget.DatePicker\", \"use 'value' instead of 'storedDate'\", \"0.5\");\n\t\t\t\tthis.value=this.storedDate;\n\t\t\t}\n\t\t\tthis.startDate = dojo.date.fromRfc3339(this.startDate);\n\t\t\tthis.endDate = dojo.date.fromRfc3339(this.endDate);\n\t\t\tthis.startDate.setHours(0,0,0,0); \/\/adjust startDate to be exactly midnight\n\t\t\tthis.endDate.setHours(24,0,0,-1); \/\/adjusting endDate to be a fraction of a second before  midnight\n\t\t\tif(!this.weekStartsOn){\n\t\t\t\tthis.weekStartsOn=dojo.date.getFirstDayOfWeek(this.lang);\n\t\t\t}\n\t\t\tthis.today = new Date();\n\t\t\tthis.today.setHours(0,0,0,0);\n\t\t\tif(typeof(this.value)=='string'&&this.value.toLowerCase()=='today'){\n\t\t\t\tthis.value = new Date();\n\t\t\t}else if(this.value && (typeof this.value==\"string\") && (this.value.split(\"-\").length > 2)) {\n\t\t\t\tthis.value = dojo.date.fromRfc3339(this.value);\n\t\t\t\tthis.value.setHours(0,0,0,0);\n\t\t\t}","call_chain":["dojo.widget.DatePicker.superclass.postMixInProperties"],"prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.fillInTemplate":{"meta":{"summary":"see dojo.widget.DomWidget","parameters":{"args":{"type":""},"frag":{"type":""}},"src":"\t\t\tdojo.widget.DatePicker.superclass.fillInTemplate.apply(this, arguments);\n\t\t\t\/\/ Copy style info from input node to output node\n\t\t\tvar source = this.getFragNodeRef(frag);\n\t\t\tdojo.html.copyStyle(this.domNode, source);\n\t\t\tthis.weekTemplate = dojo.dom.removeNode(this.calendarWeekTemplate);\n\t\t\tthis._preInitUI(this.value ? this.value : this.today, false, true); \/\/init UI with date selected ONLY if user supplies one\n\t\t\t\/\/ Insert localized day names in the template\n\t\t\tvar dayLabels = dojo.lang.unnest(dojo.date.getNames('days', this.dayWidth, 'standAlone', this.lang)); \/\/if we dont use unnest, we risk modifying the dayLabels array inside of dojo.date and screwing up other calendars on the page\n\t\t\tif(this.weekStartsOn > 0){\n\t\t\t\t\/\/adjust dayLabels for different first day of week. ie: Monday or Thursday instead of Sunday\n\t\t\t\tfor(var i=0;i<this.weekStartsOn;i++){\n\t\t\t\t\tdayLabels.push(dayLabels.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar dayLabelNodes = this.dayLabelsRow.getElementsByTagName(\"td\");\n \t\t\tfor(i=0; i<7; i++) {\n\t\t\t\tdayLabelNodes.item(i).innerHTML = dayLabels[i];\n\t\t\t}\n\t\t\tif(this.value){\n\t\t\t\tthis.setValue(this.value);\n\t\t\t}","call_chain":["dojo.widget.DatePicker.superclass.fillInTemplate"],"prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.getValue":{"meta":{"summary":"return current date in RFC 3339 format","src":" \t\treturn dojo.date.toRfc3339(new Date(this.value),'dateOnly'); \/*String*\/","returns":"String","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.getDate":{"meta":{"summary":"return current date as a Date object","src":" \t\treturn this.value; \/*Date*\/","returns":"Date","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.setValue":{"meta":{"summary":"set the current date from RFC 3339 formatted string or a date object, synonymous with setDate","parameters":{"rfcDate":{"type":"Date|String"}},"src":" \t\tthis.setDate(rfcDate);","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.setDate":{"meta":{"summary":"set the current date and update the UI","parameters":{"dateObj":{"type":"Date|String"}},"src":" \t\tif(typeof dateObj==\"string\"){\n\t\t\t\tthis.value = dojo.date.fromRfc3339(dateObj);\n\t\t\t}else{\n\t\t\t\tthis.value = new Date(dateObj);\n\t\t\t}\n\t\t\tthis.value.setHours(0,0,0,0);\n\t\t\tif(this.selectedNode!=null){\n\t\t\t\tdojo.html.removeClass(this.selectedNode,this.classNames.selectedDate);\n\t\t\t}\n\t\t\tif(this.clickedNode!=null){\n\t\t\t\tdojo.html.addClass(this.clickedNode,this.classNames.selectedDate);\n\t\t\t\tthis.selectedNode = this.clickedNode;\n\t\t\t}else{\n\t\t\t\t\/\/only call this if setDate was called by means other than clicking a date\n\t\t\t\tthis._preInitUI(this.value,false,true);\n\t\t\t}\n\t\t\tthis.clickedNode=null;\n\t\t\tthis.onValueChanged(this.value);","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._preInitUI":{"meta":{"summary":"","parameters":{"dateObj":{"type":""},"initFirst":{"type":""},"initUI":{"type":""}},"src":" \t\tif(dateObj<this.startDate||dateObj>this.endDate){\n\t\t\t\tdateObj = new Date((dateObj<this.startDate)?this.startDate:this.endDate);\n\t\t\t}\n\t\t\tthis.firstDay = this._initFirstDay(dateObj,initFirst);\n\t\t\tthis.selectedIsUsed = false;\n\t\t\tthis.currentIsUsed = false;\n\t\t\tvar nextDate = new Date(this.firstDay);\n\t\t\tvar tmpMonth = nextDate.getMonth();\n\t\t\tthis.curMonth = new Date(nextDate);\n\t\t\tthis.curMonth.setDate(nextDate.getDate()+6); \/\/first saturday gives us the current Month\n\t\t\tthis.curMonth.setDate(1);\n\t\t\tif(this.displayWeeks==\"\" || this.adjustWeeks){\n\t\t\t\tthis.adjustWeeks = true;\n\t\t\t\tthis.displayWeeks = Math.ceil((dojo.date.getDaysInMonth(this.curMonth) + this._getAdjustedDay(this.curMonth))\/7);\n\t\t\t}\n\t\t\tvar days = this.displayWeeks*7; \/\/init total days to display\n\t\t\tif(dojo.date.diff(this.startDate,this.endDate, dojo.date.dateParts.DAY) < days){\n\t\t\t\tthis.staticDisplay = true;\n\t\t\t\tif(dojo.date.diff(nextDate,this.endDate, dojo.date.dateParts.DAY) > days){\n\t\t\t\t\tthis._preInitUI(this.startDate,true,false);\n\t\t\t\t\tnextDate = new Date(this.firstDay);\n\t\t\t\t}\n\t\t\t\tthis.curMonth = new Date(nextDate);\n\t\t\t\tthis.curMonth.setDate(nextDate.getDate()+6);\n\t\t\t\tthis.curMonth.setDate(1);\n\t\t\t\tvar curClass = (nextDate.getMonth() == this.curMonth.getMonth())?'current':'previous';\n\t\t\t}\n\t\t\tif(initUI){\n\t\t\t\tthis._initUI(days);\n\t\t\t}","prototype":"dojo.widget.DatePicker"},"extra":{"parameters":{"initFirst":{"type":"is","summary":"to tell _initFirstDay if you want first day of the displayed calendar, or first day of the week for dateObj"},"initUI":{"type":"tells","summary":"preInitUI to go ahead and run initUI if set to true"}}}},"dojo.widget.DatePicker._initUI":{"meta":{"summary":"","parameters":{"days":{"type":""}},"src":" \t\tdojo.dom.removeChildren(this.calendarDatesContainerNode);\n\t\t\tfor(var i=0;i<this.displayWeeks;i++){\n\t\t\t\tthis.calendarDatesContainerNode.appendChild(this.weekTemplate.cloneNode(true));\n\t\t\t}\n\t\t\tvar nextDate = new Date(this.firstDay);\n\t\t\tthis._setMonthLabel(this.curMonth.getMonth());\n\t\t\tthis._setYearLabels(this.curMonth.getFullYear());\n\t\t\tvar calendarNodes = this.calendarDatesContainerNode.getElementsByTagName(\"td\");\n\t\t\tvar calendarRows = this.calendarDatesContainerNode.getElementsByTagName(\"tr\");\n\t\t\tvar currentCalendarNode;\n\t\t\tfor(i=0;i<days;i++){\n\t\t\t\t\/\/this is our new UI loop... one loop to rule them all, and in the datepicker bind them\n\t\t\t\tcurrentCalendarNode = calendarNodes.item(i);\n\t\t\t\tcurrentCalendarNode.innerHTML = nextDate.getDate();\n\t\t\t\tvar curClass = (nextDate.getMonth()<this.curMonth.getMonth())?'previous':(nextDate.getMonth()==this.curMonth.getMonth())?'current':'next';\n\t\t\t\tvar mappedClass = curClass;\n\t\t\t\tif(this._isDisabledDate(nextDate)){\n\t\t\t\t\tvar classMap={previous:\"disabledPrevious\",current:\"disabledCurrent\",next:\"disabledNext\"};\n\t\t\t\t\tmappedClass=classMap[curClass];\n\t\t\t\t}\n\t\t\t\tdojo.html.setClass(currentCalendarNode, this._getDateClassName(nextDate, mappedClass));\n\t\t\t\tif(dojo.html.hasClass(currentCalendarNode,this.classNames.selectedDate)){\n\t\t\t\t\tthis.selectedNode = currentCalendarNode;\n\t\t\t\t}\n\t\t\t\tnextDate = dojo.date.add(nextDate, dojo.date.dateParts.DAY, 1);\n\t\t\t}\n\t\t\tthis.lastDay = dojo.date.add(nextDate,dojo.date.dateParts.DAY,-1);\n\t\t\tthis._initControls();","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._initControls":{"meta":{"summary":"","src":" \t\tvar d = this.firstDay;\n\t\t\tvar d2 = this.lastDay;\n\t\t\tvar decWeek, incWeek, decMonth, incMonth, decYear, incYear;\n\t\t\tdecWeek = incWeek = decMonth = incMonth = decYear = incYear = !this.staticDisplay;\n\t\t\twith(dojo.date.dateParts){\n\t\t\t\tvar add = dojo.date.add;\n\t\t\t\tif(decWeek && add(d,DAY,(-1*(this._getAdjustedDay(d)+1)))<this.startDate){\n\t\t\t\t\tdecWeek = decMonth = decYear = false;\n\t\t\t\t}\n\t\t\t\tif(incWeek && d2>this.endDate){\n\t\t\t\t\tincWeek = incMonth = incYear = false;\n\t\t\t\t}\n\t\t\t\tif(decMonth && add(d,DAY,-1)<this.startDate){\n\t\t\t\t\tdecMonth = decYear = false;\n\t\t\t\t}\n\t\t\t\tif(incMonth && add(d2,DAY,1)>this.endDate){\n\t\t\t\t\tincMonth = incYear = false;\n\t\t\t\t}\n\t\t\t\tif(decYear && add(d2,YEAR,-1)<this.startDate){\n\t\t\t\t\tdecYear = false;\n\t\t\t\t}\n\t\t\t\tif(incYear && add(d,YEAR,1)>this.endDate){\n\t\t\t\t\tincYear = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction enableControl(node, enabled){\n\t\t\t\tdojo.html.setVisibility(node, enabled ? '' : 'hidden');\n\t\t\t}\n\t\t\tenableControl(this.decreaseWeekNode,decWeek);\n\t\t\tenableControl(this.increaseWeekNode,incWeek);\n\t\t\tenableControl(this.decreaseMonthNode,decMonth);\n\t\t\tenableControl(this.increaseMonthNode,incMonth);\n\t\t\tenableControl(this.previousYearLabelNode,decYear);\n\t\t\tenableControl(this.nextYearLabelNode,incYear);","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._incrementWeek":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \t\tvar d = new Date(this.firstDay);\n\t\t\tswitch(evt.target) {\n\t\t\t\tcase this.increaseWeekNode.getElementsByTagName(\"img\").item(0): \n\t\t\t\tcase this.increaseWeekNode:\n\t\t\t\t\tvar tmpDate = dojo.date.add(d, dojo.date.dateParts.WEEK, 1);\n\t\t\t\t\tif(tmpDate < this.endDate){\n\t\t\t\t\t\td = dojo.date.add(d, dojo.date.dateParts.WEEK, 1);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.decreaseWeekNode.getElementsByTagName(\"img\").item(0):\n\t\t\t\tcase this.decreaseWeekNode:\n\t\t\t\t\tif(d >= this.startDate){\n\t\t\t\t\t\td = dojo.date.add(d, dojo.date.dateParts.WEEK, -1);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._preInitUI(d,true,true);","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._incrementMonth":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \t\tvar d = new Date(this.curMonth);\n\t\t\tvar tmpDate = new Date(this.firstDay);\n\t\t\tswitch(evt.currentTarget) {\n\t\t\t\tcase this.increaseMonthNode.getElementsByTagName(\"img\").item(0):\n\t\t\t\tcase this.increaseMonthNode:\n\t\t\t\t\ttmpDate = dojo.date.add(tmpDate, dojo.date.dateParts.DAY, this.displayWeeks*7);\n\t\t\t\t\tif(tmpDate < this.endDate){\n\t\t\t\t\t\td = dojo.date.add(d, dojo.date.dateParts.MONTH, 1);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar revertToEndDate = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.decreaseMonthNode.getElementsByTagName(\"img\").item(0):\n\t\t\t\tcase this.decreaseMonthNode:\n\t\t\t\t\tif(tmpDate > this.startDate){\n\t\t\t\t\t\td = dojo.date.add(d, dojo.date.dateParts.MONTH, -1);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar revertToStartDate = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(revertToStartDate){\n\t\t\t\td = new Date(this.startDate);\n\t\t\t}else if(revertToEndDate){\n\t\t\t\td = new Date(this.endDate);\n\t\t\t}\n\t\t\tthis._preInitUI(d,false,true);","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._incrementYear":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \t\tvar year = this.curMonth.getFullYear();\n\t\t\tvar tmpDate = new Date(this.firstDay);\n\t\t\tswitch(evt.target) {\n\t\t\t\tcase this.nextYearLabelNode:\n\t\t\t\t\ttmpDate = dojo.date.add(tmpDate, dojo.date.dateParts.YEAR, 1);\n\t\t\t\t\tif(tmpDate<this.endDate){\n\t\t\t\t\t\tyear++;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar revertToEndDate = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.previousYearLabelNode:\n\t\t\t\t\ttmpDate = dojo.date.add(tmpDate, dojo.date.dateParts.YEAR, -1);\n\t\t\t\t\tif(tmpDate>this.startDate){\n\t\t\t\t\t\tyear--;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar revertToStartDate = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar d;\n\t\t\tif(revertToStartDate){\n\t\t\t\td = new Date(this.startDate);\n\t\t\t}else if(revertToEndDate){\n\t\t\t\td = new Date(this.endDate);\n\t\t\t}else{\n\t\t\t\td = new Date(year, this.curMonth.getMonth(), 1);\n\t\t\t}\n\t\t\tthis._preInitUI(d,false,true);","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.onIncrementWeek":{"meta":{"summary":"handler for increment week event","parameters":{"evt":{"type":"Event"}},"src":" \t\tevt.stopPropagation();\n\t\t\tif(!this.staticDisplay){\n\t\t\t\tthis._incrementWeek(evt);\n\t\t\t}","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.onIncrementMonth":{"meta":{"summary":"handler for increment month event","parameters":{"evt":{"type":"Event"}},"src":" \t\tevt.stopPropagation();\n\t\t\tif(!this.staticDisplay){\n\t\t\t\tthis._incrementMonth(evt);\n\t\t\t}","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.onIncrementYear":{"meta":{"summary":"handler for increment year event","parameters":{"evt":{"type":"Event"}},"src":" \t\tevt.stopPropagation();\n\t\t\tif(!this.staticDisplay){\n\t\t\t\tthis._incrementYear(evt);\n\t\t\t}","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._setMonthLabel":{"meta":{"summary":"","parameters":{"monthIndex":{"type":""}},"src":" \t\tthis.monthLabelNode.innerHTML = dojo.date.getNames('months', 'wide', 'standAlone', this.lang)[monthIndex];","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._setYearLabels":{"meta":{"summary":"","parameters":{"year":{"type":""}},"src":" \t\tvar y = year - 1;\n\t\t\tvar that = this;\n\t\t\tfunction f(n){\n\t\t\t\tthat[n+\"YearLabelNode\"].innerHTML =\n\t\t\t\t\tdojo.date.format(new Date(y++, 0), {formatLength:'yearOnly', locale:that.lang});\n\t\t\t}\n\t\t\tf(\"previous\");\n\t\t\tf(\"current\");\n\t\t\tf(\"next\");","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._getDateClassName":{"meta":{"summary":"","parameters":{"date":{"type":""},"monthState":{"type":""}},"src":" \t\tvar currentClassName = this.classNames[monthState];\n\t\t\t\/\/we use Number comparisons because 2 dateObjects never seem to equal each other otherwise\n\t\t\tif ((!this.selectedIsUsed && this.value) && (Number(date) == Number(this.value))) {\n\t\t\t\tcurrentClassName = this.classNames.selectedDate + \" \" + currentClassName;\n\t\t\t\tthis.selectedIsUsed = true;\n\t\t\t}\n\t\t\tif((!this.currentIsUsed) && (Number(date) == Number(this.today))) {\n\t\t\t\tcurrentClassName = currentClassName + \" \"  + this.classNames.currentDate;\n\t\t\t\tthis.currentIsUsed = true;\n\t\t\t}\n\t\t\treturn currentClassName;","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.onClick":{"meta":{"summary":"the click event handler","parameters":{"evt":{"type":"Event"}},"src":" \t\tdojo.event.browser.stopEvent(evt);","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._handleUiClick":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tvar eventTarget = evt.target;\n\t\t\tif(eventTarget.nodeType != dojo.dom.ELEMENT_NODE){eventTarget = eventTarget.parentNode;}\n\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\tthis.selectedIsUsed = this.todayIsUsed = false;\n\t\t\tvar month = this.curMonth.getMonth();\n\t\t\tvar year = this.curMonth.getFullYear();\n\t\t\tif(dojo.html.hasClass(eventTarget, this.classNames[\"disabledPrevious\"])||dojo.html.hasClass(eventTarget, this.classNames[\"disabledCurrent\"])||dojo.html.hasClass(eventTarget, this.classNames[\"disabledNext\"])){\n\t\t\t\treturn; \/\/this date is disabled... ignore it\n\t\t\t}else if (dojo.html.hasClass(eventTarget, this.classNames[\"next\"])) {\n\t\t\t\tmonth = ++month % 12;\n\t\t\t\tif(month===0){++year;}\n\t\t\t} else if (dojo.html.hasClass(eventTarget, this.classNames[\"previous\"])) {\n\t\t\t\tmonth = --month % 12;\n\t\t\t\tif(month==11){--year;}\n\t\t\t}\n\t\t\tthis.clickedNode = eventTarget;\n\t\t\tthis.setDate(new Date(year, month, eventTarget.innerHTML));","returns":"this date is disabled... ignore it","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.onValueChanged":{"meta":{"summary":"the set date event handler","parameters":{"date":{"type":"Date"}},"src":"\t\t\t\/\/summary: the set date event handler","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._isDisabledDate":{"meta":{"summary":"","parameters":{"dateObj":{"type":""}},"src":" \t\tif(dateObj<this.startDate||dateObj>this.endDate){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this.isDisabledDate(dateObj, this.lang);","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.isDisabledDate":{"meta":{"summary":"May be overridden to disable certain dates in the calendar e.g. isDisabledDate=dojo.date.isWeekend","parameters":{"dateObj":{"type":"Date"},"locale":{"type":"String?"}},"src":"\t\t\treturn false; \/\/ Boolean","returns":"Boolean","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker._initFirstDay":{"meta":{"summary":"","parameters":{"dateObj":{"type":"Date"},"adj":{"type":"Boolean"}},"src":" \t\tvar d = new Date(dateObj);\n\t\t\tif(!adj){d.setDate(1);}\n\t\t\td.setDate(d.getDate()-this._getAdjustedDay(d,this.weekStartsOn));\n\t\t\td.setHours(0,0,0,0);\n\t\t\treturn d; \/\/ Date","returns":"Date","prototype":"dojo.widget.DatePicker"},"extra":{"parameters":{"adj":{"type":"false","summary":"for first day of month, true for first day of week adjusted by startOfWeek"}}}},"dojo.widget.DatePicker._getAdjustedDay":{"meta":{"summary":"used to adjust date.getDay() values to the new values based on the current first day of the week value","parameters":{"dateObj":{"type":"Date"}},"src":" \t\tvar days = [0,1,2,3,4,5,6];\n\t\t\tif(this.weekStartsOn>0){\n\t\t\t\tfor(var i=0;i<this.weekStartsOn;i++){\n\t\t\t\t\tdays.unshift(days.pop());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn days[dateObj.getDay()]; \/\/ Number: 0..6 where 0=Sunday","returns":"Number: 0..6 where 0=Sunday","prototype":"dojo.widget.DatePicker"}},"dojo.widget.DatePicker.destroy":{"meta":{"summary":"","src":" \t\tdojo.widget.DatePicker.superclass.destroy.apply(this, arguments);\n\t\t\tdojo.html.destroyNode(this.weekTemplate);","call_chain":["dojo.widget.DatePicker.superclass.destroy"],"prototype":"dojo.widget.DatePicker"}}},"objects":{"dojo.widget.DatePicker.classNames":{"meta":{"variables":["previous","disabledPrevious","current","disabledCurrent","next","disabledNext","currentDate","selectedDate"],"summary":"stores a list of class names that may be overriden TODO: this is not good; can't be adjusted via markup, etc. since it's an array"}}}}},"dojo.widget.DateTextbox":{"meta":{"requires":{"common":["dojo.widget.ValidationTextbox","dojo.date.format","dojo.validate.datetime"]},"functions":{"dojo.widget.DateTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"prototype_variables":["displayFormat","formatLength"],"variables":["displayFormat","formatLength"],"instance_variables":["flags.format"]}},"dojo.widget.DateTextbox.mixInProperties":{"meta":{"summary":"see dojo.widget.Widget","parameters":{"localProperties":{"type":"Object"}},"src":"\t\t\t\/\/ First initialize properties in super-class.\n\t\t\tdojo.widget.DateTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif(localProperties.format){ \n\t\t\t\tthis.flags.format = localProperties.format;\n\t\t\t}","call_chain":["dojo.widget.DateTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.DateTextbox"}},"dojo.widget.DateTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":"\t\t\tif(this.flags.format){\n\t\t\t\tdojo.deprecated(\"dojo.widget.DateTextbox\", \"format attribute is deprecated; use displayFormat or formatLength instead\", \"0.5\");\n\t\t\t\treturn dojo.validate.isValidDate(this.textbox.value, this.flags.format);\n\t\t\t}\n\t\t\treturn dojo.date.parse(this.textbox.value, {formatLength:this.formatLength, selector:'dateOnly', locale:this.lang, datePattern: this.displayFormat});","prototype":"dojo.widget.DateTextbox"}},"dojo.widget.TimeTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"prototype_variables":["displayFormat","formatLength"],"variables":["displayFormat","formatLength"],"instance_variables":["flags.format","flags.amSymbol","flags.pmSymbol"]}},"dojo.widget.TimeTextbox.mixInProperties":{"meta":{"summary":"see dojo.widget.Widget","parameters":{"localProperties":{"type":"Object"}},"src":"\t\t\t\/\/ First initialize properties in super-class.\n\t\t\tdojo.widget.TimeTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif(localProperties.format){ \n\t\t\t\tthis.flags.format = localProperties.format;\n\t\t\t}\n\t\t\tif(localProperties.amsymbol){ \n\t\t\t\tthis.flags.amSymbol = localProperties.amsymbol;\n\t\t\t}\n\t\t\tif(localProperties.pmsymbol){ \n\t\t\t\tthis.flags.pmSymbol = localProperties.pmsymbol;\n\t\t\t}","call_chain":["dojo.widget.TimeTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.TimeTextbox"}},"dojo.widget.TimeTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\tif(this.flags.format){\n\t\t\t\tdojo.deprecated(\"dojo.widget.TimeTextbox\", \"format attribute is deprecated; use displayFormat or formatLength instead\", \"0.5\");\n\t\t\t\treturn dojo.validate.isValidTime(this.textbox.value, this.flags);\n\t\t\t}\n\t\t\treturn dojo.date.parse(this.textbox.value, {formatLength:this.formatLength, selector:'timeOnly', locale:this.lang, timePattern: this.displayFormat});","prototype":"dojo.widget.TimeTextbox"}}}}},"dojo.widget.DebugConsole":{"meta":{"requires":{"common":["dojo.widget.Widget","dojo.widget.*","dojo.widget.FloatingPane"]},"functions":{"dojo.widget.DebugConsole":{"meta":{"prototype_chain":["dojo.widget.FloatingPane"],"call_chain":["dojo.widget.FloatingPane"],"instance_variables":["containerNode.id"],"summary":"opens a floating pane that collects and display debug messages (from dojo.debug(), etc.)"}},"dojo.widget.DebugConsole.fillInTemplate":{"meta":{"summary":"","src":" \tdojo.widget.DebugConsole.superclass.fillInTemplate.apply(this, arguments);\n\t\tthis.containerNode.id = \"debugConsoleClientPane\";\n\t\tdjConfig.isDebug = true;\n\t\tdjConfig.debugContainerId = this.containerNode.id;","call_chain":["dojo.widget.DebugConsole.superclass.fillInTemplate"],"prototype":"dojo.widget.DebugConsole"}}}}},"dojo.widget.Dialog":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.ContentPane","dojo.event.*","dojo.gfx.color","dojo.html.layout","dojo.html.display","dojo.html.iframe"]},"functions":{"dojo.widget.Dialog":{"meta":{"prototype_variables":["templatePath","blockDuration","lifetime","closeNode"],"variables":["templatePath","blockDuration","lifetime","closeNode"],"instance_variables":["timeRemaining","timerNode.innerHTML","closeNode.style.visibility","closeNode.style.display","timer","timerNode","closeNode"],"summary":"Pops up a modal dialog window, blocking access to the screen and also graying out the screen Dialog is extended from ContentPane so it supports all the same parameters (href, etc.)"},"extra":{"variables":{"lifetime":{"type":"Integer","summary":"if set, this controls the number of seconds the dialog will be displayed before automatically disappearing"}}}},"dojo.widget.Dialog.postMixInProperties":{"meta":{"summary":"","src":" \t\tdojo.widget.Dialog.superclass.postMixInProperties.apply(this, arguments);\n\t\t\tif(this.closeNode){\n\t\t\t\tthis.setCloseControl(this.closeNode);\n\t\t\t}","call_chain":["dojo.widget.Dialog.superclass.postMixInProperties"],"prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog.postCreate":{"meta":{"summary":"","src":" \t\tdojo.widget.Dialog.superclass.postCreate.apply(this, arguments);\n\t\t\tdojo.widget.ModalDialogBase.prototype.postCreate.apply(this, arguments);","call_chain":["dojo.widget.Dialog.superclass.postCreate","dojo.widget.ModalDialogBase.prototype.postCreate"],"prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog.show":{"meta":{"summary":"","src":" \t\tif(this.lifetime){\n\t\t\t\tthis.timeRemaining = this.lifetime;\n\t\t\t\tif(this.timerNode){\n\t\t\t\t\tthis.timerNode.innerHTML = Math.ceil(this.timeRemaining\/1000);\n\t\t\t\t}\n\t\t\t\tif(this.blockDuration && this.closeNode){\n\t\t\t\t\tif(this.lifetime > this.blockDuration){\n\t\t\t\t\t\tthis.closeNode.style.visibility = \"hidden\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.closeNode.style.display = \"none\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.timer) {\n\t\t\t\t\tclearInterval(this.timer);\n\t\t\t\t}\n\t\t\t\tthis.timer = setInterval(dojo.lang.hitch(this, \"_onTick\"), 100);\n\t\t\t}\n\t\t\tthis.showModalDialog();\n\t\t\tdojo.widget.Dialog.superclass.show.call(this);","call_chain":["dojo.widget.Dialog.superclass.show"],"prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog.onLoad":{"meta":{"summary":"","src":" \t\tthis.placeModalDialog();\n\t\t\tdojo.widget.Dialog.superclass.onLoad.call(this);","call_chain":["dojo.widget.Dialog.superclass.onLoad"],"prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog.fillInTemplate":{"meta":{"summary":"","src":"\t\t\t\/\/ dojo.event.connect(this.domNode, \"onclick\", this, \"killEvent\");","prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog.hide":{"meta":{"summary":"","src":" \t\tthis.hideModalDialog();\n\t\t\tdojo.widget.Dialog.superclass.hide.call(this);\n\t\t\tif(this.timer){\n\t\t\t\tclearInterval(this.timer);\n\t\t\t}","call_chain":["dojo.widget.Dialog.superclass.hide"],"prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog.setTimerNode":{"meta":{"summary":"specify into which node to write the remaining # of seconds TODO: make this a parameter too","parameters":{"node":{"type":""}},"src":" \t\tthis.timerNode = node;","prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog.setCloseControl":{"meta":{"summary":"Specify which node is the close button for this dialog. If no close node is specified then clicking anywhere on the screen will close the dialog.","parameters":{"node":{"type":"String|DomNode"}},"src":" \t\tthis.closeNode = dojo.byId(node);\n\t\t\tdojo.event.connect(this.closeNode, \"onclick\", this, \"hide\");","prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog.setShowControl":{"meta":{"summary":"when specified node is clicked, show this dialog TODO: make this a parameter too","parameters":{"node":{"type":"String|DomNode"}},"src":" \t\tnode = dojo.byId(node);\n\t\t\tdojo.event.connect(node, \"onclick\", this, \"show\");","prototype":"dojo.widget.Dialog"}},"dojo.widget.Dialog._onTick":{"meta":{"summary":"callback every second that the timer clicks","src":" \t\tif(this.timer){\n\t\t\t\tthis.timeRemaining -= 100;\n\t\t\t\tif(this.lifetime - this.timeRemaining >= this.blockDuration){\n\t\t\t\t\t\/\/ TODO: this block of code is executing over and over again, rather than just once\n\t\t\t\t\tif(this.closeNode){\n\t\t\t\t\t\tthis.closeNode.style.visibility = \"visible\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!this.timeRemaining){\n\t\t\t\t\tclearInterval(this.timer);\n\t\t\t\t\tthis.hide();\n\t\t\t\t}else if(this.timerNode){\n\t\t\t\t\tthis.timerNode.innerHTML = Math.ceil(this.timeRemaining\/1000);\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.Dialog"}}}}},"dojo.widget.DocPane":{"meta":{"requires":{"common":["dojo.widget.*","dojo.io.*","dojo.event.*","dojo.widget.HtmlWidget","dojo.widget.Editor2","dojo.widget.Dialog","dojo.html.common","dojo.html.display"]},"functions":{"dojo.widget.DocPane":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["dialog","dialogBg","dialogFg","logIn","edit","save","cancel","detail","result","packag","fn","fnLink","count","row","summary","description","variables","vRow","vLink","vDesc","methods","mRow","mLink","mDesc","requires","rRow","rRow2","rH3","rLink","parameters","pRow","pLink","pDesc","pOpt","pType","sType","sName","sParams","sPType","sPTypeSave","sPName","sPNameSave","pkgDescription","_appends","templatePath","templateCssPath","isContainer"],"variables":["dialog","dialogBg","dialogFg","logIn","edit","save","cancel","detail","result","packag","fn","fnLink","count","row","summary","description","variables","vRow","vLink","vDesc","methods","mRow","mLink","mDesc","requires","rRow","rRow2","rH3","rLink","parameters","pRow","pLink","pDesc","pOpt","pType","sType","sName","sParams","sPType","sPTypeSave","sPName","sPNameSave","pkgDescription","_appends","templatePath","templateCssPath","isContainer"],"instance_variables":["requires","rRow.style.display","rRow2.style.display","methods","mRow.style.display","dialog","homeSave","detailSave","resultSave","packageSave","results","rowParent","rowSave","vParent","vSave","pParent","pSave","sPTypeSave","sPNameSave","navSave","_isLoggedIn","pkgEditor","fn.innerHTML","variables.style.display","vLink.innerHTML","vDesc.parentNode.style.display","sParams.innerHTML","parameters.style.display","pLink.innerHTML","pOpt.style.display","pType.parentNode.style.display","pType.innerHTML","pDesc.parentNode.style.display","pDesc.innerHTML","sPTypeSave.innerHTML","sPNameSave.innerHTML","sType.innerHTML","sName.innerHTML","_pkgPath","pkg.innerHTML","rH3.style.display","rH3.innerHTML","rLink.innerHTML","rLink.href","mLink.innerHTML","mLink.href","mDesc.parentNode.style.display","mDesc.innerHTML","pkgDescription.innerHTML","count.innerHTML","fnLink.innerHTML","fnLink.href","summary.parentNode.style.display","summary.innerHTML"],"summary":"","src":" dojo.event.topic.subscribe(\"\/docs\/function\/results\", this, \"onDocResults\");\n\tdojo.event.topic.subscribe(\"\/docs\/package\/results\", this, \"onPkgResults\");\n\tdojo.event.topic.subscribe(\"\/docs\/function\/detail\", this, \"onDocSelectFunction\");"},"extra":{"variables":{"summary":{"type":"This","summary":"widget is used by the API documentation system; Users aren't expected to use this widget directly."}}}},"dojo.widget.DocPane.fillInTemplate":{"meta":{"summary":"","src":" \t\tthis.requires = dojo.html.removeNode(this.requires);\n\t\t\tthis.rRow.style.display = \"none\";\n\t\t\tthis.rRow2.style.display = \"none\";\n\t\t\tthis.methods = dojo.html.removeNode(this.methods);\n\t\t\tthis.mRow.style.display = \"none\";\n\t\t\tthis.dialog = dojo.widget.createWidget(\"dialog\", {}, this.dialog);\n\t\t\tthis.dialog.setCloseControl(this.cancel);\n\t\t\tdojo.html.setOpacity(this.dialogBg, 0.8);\n\t\t\tdojo.html.setOpacity(this.dialogFg, 1);\n\t\t\tdojo.event.connect(this.edit, \"onclick\", dojo.lang.hitch(this, function(){\n\t\t\t\tif(!this._isLoggedIn){\n\t\t\t\t\tthis.dialog.show();\n\t\t\t\t}\n\t\t\t}));\n\t\t\tdojo.event.connect(this.logIn, \"onclick\", this, \"_logIn\");\n\t\t\tdojo.event.connect(this.save, \"onclick\", this, \"_save\");\n\t\t\tdojo.event.connect(dojo.docs, \"logInSuccess\", this, \"_loggedIn\");\n\t\t\t\/*\n\t\t\tthis.pkgDescription = dojo.widget.createWidget(\"editor2\", {\n\t\t\t\ttoolbarAlwaysVisible: true\n\t\t\t}, this.pkgDescription);\n\t\t\t*\/\n\t\t\tthis.homeSave = this.containerNode.cloneNode(true);\n\t\t\tthis.detailSave = dojo.html.removeNode(this.detail);\n\t\t\tthis.resultSave = dojo.html.removeNode(this.result);\n\t\t\tthis.packageSave = dojo.html.removeNode(this.packag);\n\t\t\tthis.results = dojo.html.removeNode(this.results);\n\t\t\tthis.rowParent = this.row.parentNode;\n\t\t\tthis.rowSave = dojo.html.removeNode(this.row);\n\t\t\tthis.vParent = this.vRow.parentNode;\n\t\t\tthis.vSave = dojo.html.removeNode(this.vRow);\n\t\t\tthis.pParent = this.pRow.parentNode;\n\t\t\tthis.pSave = dojo.html.removeNode(this.pRow);\n\t\t\tthis.sPTypeSave = dojo.html.removeNode(this.sPType);\n\t\t\tthis.sPNameSave = dojo.html.removeNode(this.sPName);\n\t\t\tthis.navSave = dojo.html.removeNode(this.nav);","prototype":"dojo.widget.DocPane"}},"dojo.widget.DocPane._logIn":{"meta":{"summary":"","src":" \t\tdojo.docs.setUserName(this.userName.value);\n\t\t\tdojo.docs.setPassword(this.password.value);","prototype":"dojo.widget.DocPane"}},"dojo.widget.DocPane._loggedIn":{"meta":{"summary":"","src":" \t\tthis._isLoggedIn = true;\n\t\t\tthis.dialog.hide();\n\t\t\tthis.pkgEditor = dojo.widget.createWidget(\"editor2\", {\n\t\t\t\ttoolbarAlwaysVisible: true\n\t\t\t}, this.pkgDescription);","prototype":"dojo.widget.DocPane"}},"dojo.widget.DocPane._save":{"meta":{"summary":"","src":" \t\tif(this.pkgEditor){\n\t\t\t\tdojo.docs.savePackage(this._pkgPath, {\n\t\t\t\t\tdescription: this.pkgEditor.getEditorContent()\n\t\t\t\t});\n\t\t\t}","prototype":"dojo.widget.DocPane"}},"dojo.widget.DocPane.onDocSelectFunction":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \t\tdojo.debug(\"onDocSelectFunction()\");\n\t\t\tfor(var key in message){\n\t\t\t\tdojo.debug(key + \": \" + dojo.json.serialize(message[key]));\n\t\t\t}\n\t\t\tvar meta = message.meta;\n\t\t\tif(meta){\n\t\t\t\tvar variables = meta.variables;\n\t\t\t\tvar this_variables = meta.this_variables;\n\t\t\t\tvar child_variables = meta.child_variables;\n\t\t\t\tvar parameters = meta.parameters;\n\t\t\t}\n\t\t\tvar doc = message.doc;\n\t\t\tdojo.debug(dojo.json.serialize(doc));\n\t\t\tvar appends = this._appends;\n\t\t\tdojo.html.removeChildren(this.domNode);\n\t\t\tthis.fn.innerHTML = message.name;\n\t\t\tthis.variables.style.display = \"block\";\n\t\t\tvar all = [];\n\t\t\tif(variables){\n\t\t\t\tall = variables;\n\t\t\t}\n\t\t\tif(this_variables){\n\t\t\t\tall = all.concat(this_variables);\n\t\t\t}\n\t\t\tif(child_variables){\n\t\t\t\tall = all.concat(child_variables);\n\t\t\t}\n\t\t\tif(!all.length){\n\t\t\t\tthis.variables.style.display = \"none\";\n\t\t\t}else{\n\t\t\t\tfor(var i = 0, one; one = all[i]; i++){\n\t\t\t\t\tthis.vLink.innerHTML = one;\n\t\t\t\t\tthis.vDesc.parentNode.style.display = \"none\";\n\t\t\t\t\tappends.push(this.vParent.appendChild(this.vSave.cloneNode(true)));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.sParams.innerHTML = \"\";\n\t\t\tvar first = true;\n\t\t\tfor(var param in parameters){\n\t\t\t\tvar paramType = parameters[param].type;\n\t\t\t\tvar paramSummary = parameters[param].summary;\n\t\t\t\tvar paramName = param;\n\t\t\t\tthis.parameters.style.display = \"block\";\t\t\n\t\t\t\tthis.pLink.innerHTML = paramName;\n\t\t\t\tthis.pOpt.style.display = \"none\";\n\t\t\t\tif(parameters[param].opt){\n\t\t\t\t\tthis.pOpt.style.display = \"inline\";\t\t\t\t\n\t\t\t\t}\n\t\t\t\tthis.pType.parentNode.style.display = \"none\";\n\t\t\t\tif(parameters[param][0]){\n\t\t\t\t\tthis.pType.parentNode.style.display = \"inline\";\n\t\t\t\t\tthis.pType.innerHTML = paramType;\n\t\t\t\t}\n\t\t\t\tthis.pDesc.parentNode.style.display = \"none\";\n\t\t\t\tif(paramSummary){\n\t\t\t\t\tthis.pDesc.parentNode.style.display = \"inline\";\n\t\t\t\t\tthis.pDesc.innerHTML = paramSummary;\n\t\t\t\t}\n\t\t\t\tappends.push(this.pParent.appendChild(this.pSave.cloneNode(true)));\n\t\t\t\tif(!first) {\n\t\t\t\t\tthis.sParams.appendChild(document.createTextNode(\", \"));\n\t\t\t\t}\n\t\t\t\tfirst = false;\n\t\t\t\tif(paramType){\n\t\t\t\t\tdojo.debug(this.sPTypeSave);\n\t\t\t\t\tthis.sPTypeSave.innerHTML = paramType;\n\t\t\t\t\tthis.sParams.appendChild(this.sPTypeSave.cloneNode(true));\n\t\t\t\t\tthis.sParams.appendChild(document.createTextNode(\" \"));\n\t\t\t\t}\n\t\t\t\tdojo.debug(this.sPNameSave);\n\t\t\t\tthis.sPNameSave.innerHTML = paramName;\n\t\t\t\tthis.sParams.appendChild(this.sPNameSave.cloneNode(true))\n\t\t\t}\n\t\t\tif(message.returns){\n\t\t\t\tthis.sType.innerHTML = message.returns;\n\t\t\t}else{\n\t\t\t\tthis.sType.innerHTML = \"void\";\n\t\t\t}\n\t\t\tthis.sName.innerHTML = message.name;\n\t\t\tthis.domNode.appendChild(this.navSave);\n\t\t\tthis.domNode.appendChild(this.detailSave.cloneNode(true));\n\t\t\tfor(var i = 0, append; append = appends[i]; i++){\n\t\t\t\tdojo.html.removeNode(append);\n\t\t\t}","prototype":"dojo.widget.DocPane"}},"dojo.widget.DocPane.onPkgResult":{"meta":{"summary":"","parameters":{"results":{"type":"Object"}},"src":" \t\tif(this.pkgEditor){\n\t\t\t\tthis.pkgEditor.close(true);\n\t\t\t\tdojo.debug(this.pkgDescription);\n\t\t\t}\n\t\t\tvar methods = results.methods;\n\t\t\tvar requires = results.requires;\n\t\t\tvar description = results.description;\n\t\t\tthis._pkgPath = results.path;\n\t\t\tvar requireLinks = [];\n\t\t\tvar appends = this._appends;\n\t\t\twhile(appends.length){\n\t\t\t\tdojo.html.removeNode(appends.shift());\n\t\t\t}\n\t\t\tdojo.html.removeChildren(this.domNode);\n\t\t\tthis.pkg.innerHTML = results.pkg;\n\t\t\tvar hasRequires = false;\n\t\t\tfor(var env in requires){\n\t\t\t\thasRequires = true;\n\t\t\t\tthis.rH3.style.display = \"none\";\n\t\t\t\tif(env != \"common\"){\n\t\t\t\t\tthis.rH3.style.display = \"\";\n\t\t\t\t\tthis.rH3.innerHTML = env;\n\t\t\t\t}\n\t\t\t\tfor(var i = 0, require; require = requires[env][i]; i++){\n\t\t\t\t\trequireLinks.push({\n\t\t\t\t\t\tname: require\n\t\t\t\t\t});\n\t\t\t\t\tthis.rLink.innerHTML = require;\n\t\t\t\t\tthis.rLink.href = \"#\" + require;\n\t\t\t\t\tvar rRow2 = this.rRow2.parentNode.insertBefore(this.rRow2.cloneNode(true), this.rRow2);\n\t\t\t\t\trRow2.style.display = \"\";\n\t\t\t\t\tappends.push(rRow2);\n\t\t\t\t}\n\t\t\t\tvar rRow = this.rRow.parentNode.insertBefore(this.rRow.cloneNode(true), this.rRow);\n\t\t\t\trRow.style.display = \"\";\n\t\t\t\tappends.push(rRow);\n\t\t\t}\n\t\t\tif(hasRequires){\n\t\t\t\tappends.push(this.packageSave.appendChild(this.requires.cloneNode(true)));\n\t\t\t}\n\t\t\tif(results.size){\n\t\t\t\tfor(var i = 0, method; method = methods[i]; i++){\n\t\t\t\t\tthis.mLink.innerHTML = method.name;\n\t\t\t\t\tthis.mLink.href = \"#\" + method.name;\n\t\t\t\t\tthis.mDesc.parentNode.style.display = \"none\";\n\t\t\t\t\tif(method.summary){\n\t\t\t\t\t\tthis.mDesc.parentNode.style.display = \"inline\";\t\t\t\t\n\t\t\t\t\t\tthis.mDesc.innerHTML = method.summary;\n\t\t\t\t\t}\n\t\t\t\t\tvar mRow = this.mRow.parentNode.insertBefore(this.mRow.cloneNode(true), this.mRow);\n\t\t\t\t\tmRow.style.display = \"\";\n\t\t\t\t\tappends.push(mRow);\n\t\t\t\t}\n\t\t\t\tappends.push(this.packageSave.appendChild(this.methods.cloneNode(true)));\n\t\t\t}\n\t\t\tthis.domNode.appendChild(this.packageSave);\n\t\t\t\/*\n\t\t\tdojo.debug(description);\n\t\t\tfunction fillContent(){\n\t\t\t\tthis.pkgDescription.replaceEditorContent(description);\n\t\t\t\tthis.pkgDescription._updateHeight();\n\t\t\t}\n\t\t\tif(this.pkgDescription.isLoaded){\n\t\t\t\tfillContent();\n\t\t\t}else{\n\t\t\t\tdojo.event.connect(this.pkgDescription, \"onLoad\", dojo.lang.hitch(this, fillContent));\n\t\t\t}\n\t\t\t*\/\n\t\t\tthis.pkgDescription.innerHTML = description;\n\t\t\tfunction makeSelect(fOrP, x){\n\t\t\t\treturn function(e) {\n\t\t\t\t\tdojo.event.topic.publish(\"\/docs\/\" + fOrP + \"\/select\", x);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar as = this.domNode.getElementsByTagName(\"a\");\n\t\t\tfor(var i = 0, a; a = as[i]; i++){\n\t\t\t\tif(a.className == \"docMLink\"){\n\t\t\t\t\tdojo.event.connect(a, \"onclick\", makeSelect(\"function\", methods[i]));\n\t\t\t\t}else if(a.className == \"docRLink\"){\n\t\t\t\t\tdojo.event.connect(a, \"onclick\", makeSelect(\"package\", requireLinks[i]));\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.DocPane"}},"dojo.widget.DocPane.onDocResults":{"meta":{"summary":"","parameters":{"fns":{"type":""}},"src":" \t\tdojo.debug(\"onDocResults(): called\");\n\t\t\tif(fns.length == 1){\n\t\t\t\tdojo.event.topic.publish(\"\/docs\/function\/select\", fns[0]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdojo.html.removeChildren(this.domNode);\n\t\t\tthis.count.innerHTML = fns.length;\n\t\t\tvar appends = [];\n\t\t\tfor(var i = 0, fn; fn = fns[i]; i++){\n\t\t\t\tthis.fnLink.innerHTML = fn.name;\n\t\t\t\tthis.fnLink.href = \"#\" + fn.name;\n\t\t\t\tif(fn.id){\n\t\t\t\t\tthis.fnLink.href = this.fnLink.href + \",\" + fn.id;\t\n\t\t\t\t}\n\t\t\t\tthis.summary.parentNode.style.display = \"none\";\n\t\t\t\tif(fn.summary){\n\t\t\t\t\tthis.summary.parentNode.style.display = \"inline\";\t\t\t\t\n\t\t\t\t\tthis.summary.innerHTML = fn.summary;\n\t\t\t\t}\n\t\t\t\tappends.push(this.rowParent.appendChild(this.rowSave.cloneNode(true)));\n\t\t\t}\n\t\t\tfunction makeSelect(x){\n\t\t\t\treturn function(e) {\n\t\t\t\t\tdojo.event.topic.publish(\"\/docs\/function\/select\", x);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.domNode.appendChild(this.resultSave.cloneNode(true));\n\t\t\tvar as = this.domNode.getElementsByTagName(\"a\");\n\t\t\tfor(var i = 0, a; a = as[i]; i++){\n\t\t\t\tdojo.event.connect(a, \"onclick\", makeSelect(fns[i]));\n\t\t\t}\n\t\t\tfor(var i = 0, append; append = appends[i]; i++){\n\t\t\t\tthis.rowParent.removeChild(append);\n\t\t\t}","prototype":"dojo.widget.DocPane"}}}}},"dojo.widget.DomWidget":{"meta":{"requires":{"common":["dojo.event.*","dojo.widget.Widget","dojo.dom","dojo.html.style","dojo.xml.Parse","dojo.uri.*","dojo.lang.func","dojo.lang.extras"]},"functions":{"dojo.widget.DomWidget":{"meta":{"prototype_chain":["dojo.widget.Widget"],"call_chain":["dojo.widget.Widget"],"prototype_variables":["templateNode","templateString","templateCssString","preventClobber","domNode","containerNode","widgetsInTemplate"],"variables":["templateNode","templateString","templateCssString","preventClobber","domNode","containerNode","widgetsInTemplate"],"instance_variables":["containerNode","_sourceNodeRef","templateCssString","templateCssPath","domNode","templateString","templateNode"],"summary":"dojo.widget.DomWidget is the superclass that provides behavior for all DOM-based renderers, including HtmlWidget and SvgWidget. DomWidget implements the templating system that most widget authors use to define the UI for their widgets.","src":" \tif((arguments.length>0)&&(typeof arguments[0] == \"object\")){\n\t\t\tthis.create(arguments[0]);\n\t\t}"},"extra":{"variables":{"templateNode":{"type":"DomNode","summary":"a node that represents the widget template. Pre-empts both templateString and templatePath. method over-ride"}}}},"dojo.widget.DomWidget.addChild":{"meta":{"summary":"Process the given child widget, inserting it's dom node as a child of our dom node","parameters":{"widget":{"type":"Widget"},"overrideContainerNode":{"type":""},"pos":{"type":""},"ref":{"type":""},"insertIndex":{"type":""}},"src":"\t\t\t\/\/ FIXME: should we support addition at an index in the children arr and\n\t\t\t\/\/ order the display accordingly? Right now we always append.\n\t\t\tif(!this.isContainer){ \/\/ we aren't allowed to contain other widgets, it seems\n\t\t\t\tdojo.debug(\"dojo.widget.DomWidget.addChild() attempted on non-container widget\");\n\t\t\t\treturn null;\n\t\t\t}else{\n\t\t\t\tif(insertIndex == undefined){\n\t\t\t\t\tinsertIndex = this.children.length;\n\t\t\t\t}\n\t\t\t\tthis.addWidgetAsDirectChild(widget, overrideContainerNode, pos, ref, insertIndex);\n\t\t\t\tthis.registerChild(widget, insertIndex);\n\t\t\t}\n\t\t\treturn widget; \/\/ Widget","returns":"Widget","prototype":"dojo.widget.DomWidget"},"extra":{"parameters":{"overrideContainerNode":{"type":"DomNode?","summary":"a non-default container node for the widget"},"pos":{"type":"String?","summary":"can be one of \"before\", \"after\", \"first\", or \"last\". This has the same meaning as in dojo.dom.insertAtPosition()"},"ref":{"type":"DomNode?","summary":"a node to place the widget relative to"},"insertIndex":{"type":"int?","summary":"DOM index, same meaning as in dojo.dom.insertAtIndex()"}},"returns":"the widget that was inserted"}},"dojo.widget.DomWidget.addWidgetAsDirectChild":{"meta":{"summary":"Process the given child widget, inserting it's dom node as a child of our dom node","parameters":{"widget":{"type":"Widget"},"overrideContainerNode":{"type":""},"pos":{"type":""},"ref":{"type":""},"insertIndex":{"type":""}},"src":" \t\tif((!this.containerNode)&&(!overrideContainerNode)){\n\t\t\t\tthis.containerNode = this.domNode;\n\t\t\t}\n\t\t\tvar cn = (overrideContainerNode) ? overrideContainerNode : this.containerNode;\n\t\t\tif(!pos){ pos = \"after\"; }\n\t\t\tif(!ref){ \n\t\t\t\tif(!cn){ cn = dojo.body(); }\n\t\t\t\tref = cn.lastChild; \n\t\t\t}\n\t\t\tif(!insertIndex) { insertIndex = 0; }\n\t\t\twidget.domNode.setAttribute(\"dojoinsertionindex\", insertIndex);\n\t\t\t\/\/ insert the child widget domNode directly underneath my domNode, in the\n\t\t\t\/\/ specified position (by default, append to end)\n\t\t\tif(!ref){\n\t\t\t\tcn.appendChild(widget.domNode);\n\t\t\t}else{\n\t\t\t\t\/\/ FIXME: was this meant to be the (ugly hack) way to support insert @ index?\n\t\t\t\t\/\/dojo.dom[pos](widget.domNode, ref, insertIndex);\n\t\t\t\t\/\/ CAL: this appears to be the intended way to insert a node at a given position...\n\t\t\t\tif (pos == 'insertAtIndex'){\n\t\t\t\t\t\/\/ dojo.debug(\"idx:\", insertIndex, \"isLast:\", ref === cn.lastChild);\n\t\t\t\t\tdojo.dom.insertAtIndex(widget.domNode, ref.parentNode, insertIndex);\n\t\t\t\t}else{\n\t\t\t\t\t\/\/ dojo.debug(\"pos:\", pos, \"isLast:\", ref === cn.lastChild);\n\t\t\t\t\tif((pos == \"after\")&&(ref === cn.lastChild)){\n\t\t\t\t\t\tcn.appendChild(widget.domNode);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tdojo.dom.insertAtPosition(widget.domNode, cn, pos);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.DomWidget"},"extra":{"parameters":{"overrideContainerNode":{"type":"DomNode","summary":"a non-default container node for the widget"},"pos":{"type":"String?","summary":"can be one of \"before\", \"after\", \"first\", or \"last\". This has the same meaning as in dojo.dom.insertAtPosition()"},"ref":{"type":"DomNode?","summary":"a node to place the widget relative to"},"insertIndex":{"type":"int?","summary":"DOM index, same meaning as in dojo.dom.insertAtIndex()"}}}},"dojo.widget.DomWidget.registerChild":{"meta":{"summary":"record that given widget descends from me","parameters":{"widget":{"type":""},"insertionIndex":{"type":""}},"src":"\t\t\t\/\/ we need to insert the child at the right point in the parent's \n\t\t\t\/\/ 'children' array, based on the insertionIndex\n\t\t\twidget.dojoInsertionIndex = insertionIndex;\n\t\t\tvar idx = -1;\n\t\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\t\t\/\/This appears to fix an out of order issue in the case of mixed\n\t\t\t\t\/\/markup and programmatically added children.  Previously, if a child\n\t\t\t\t\/\/existed from markup, and another child was addChild()d without specifying\n\t\t\t\t\/\/any additional parameters, it would end up first in the list, when in fact\n\t\t\t\t\/\/it should be after.  I can't see cases where this would break things, but\n\t\t\t\t\/\/I could see no other obvious solution. -dustin\n\t\t\t\tif (this.children[i].dojoInsertionIndex <= insertionIndex){\n\t\t\t\t\tidx = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.children.splice(idx+1, 0, widget);\n\t\t\twidget.parent = this;\n\t\t\twidget.addedTo(this, idx+1);\n\t\t\t\/\/ If this widget was created programatically, then it was erroneously added\n\t\t\t\/\/ to dojo.widget.manager.topWidgets.  Fix that here.\n\t\t\tdelete dojo.widget.manager.topWidgets[widget.widgetId];","prototype":"dojo.widget.DomWidget"},"extra":{"parameters":{"widget":{"type":"Widget","summary":"the widget that is now a child"},"insertionIndex":{"type":"int","summary":"where in the children[] array to place it"}}}},"dojo.widget.DomWidget.removeChild":{"meta":{"summary":"detach child domNode from parent domNode","parameters":{"widget":{"type":"Widget"}},"src":" \t\tdojo.dom.removeNode(widget.domNode);\n\t\t\t\/\/ remove child widget from parent widget \n\t\t\treturn dojo.widget.DomWidget.superclass.removeChild.call(this, widget); \/\/ Widget","returns":"Widget","call_chain":["dojo.widget.DomWidget.superclass.removeChild"],"prototype":"dojo.widget.DomWidget"}},"dojo.widget.DomWidget.getFragNodeRef":{"meta":{"summary":"","parameters":{"frag":{"type":""}},"src":" \t\tif(!frag){return null;} \/\/ null\n\t\t\tif(!frag[this.getNamespacedType()]){\n\t\t\t\tdojo.raise(\"Error: no frag for widget type \" + this.getNamespacedType() \n\t\t\t\t\t+ \", id \" + this.widgetId\n\t\t\t\t\t+ \" (maybe a widget has set it's type incorrectly)\");\n\t\t\t}\n\t\t\treturn frag[this.getNamespacedType()][\"nodeRef\"]; \/\/ DomNode","returns":"mixed","prototype":"dojo.widget.DomWidget"},"extra":{"returns":"the source node, if any, that the widget was declared from","parameters":{"frag":{"type":"Object","summary":"an opaque data structure generated by the first-pass parser"}}}},"dojo.widget.DomWidget.postInitialize":{"meta":{"summary":"Replace the source domNode with the generated dom structure, and register the widget with its parent. This is an implementation of the stub function defined in dojo.widget.Widget. dojo.profile.start(this.widgetType + \" postInitialize\");","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"},"parentComp":{"type":"Widget"}},"src":" \t\tvar sourceNodeRef = this.getFragNodeRef(frag);\n\t\t\t\/\/ Stick my generated dom into the output tree\n\t\t\t\/\/alert(this.widgetId + \": replacing \" + sourceNodeRef + \" with \" + this.domNode.innerHTML);\n\t\t\tif (parentComp && (parentComp.snarfChildDomOutput || !sourceNodeRef)){\n\t\t\t\t\/\/ Add my generated dom as a direct child of my parent widget\n\t\t\t\t\/\/ This is important for generated widgets, and also cases where I am generating an\n\t\t\t\t\/\/ <li> node that can't be inserted back into the original DOM tree\n\t\t\t\tparentComp.addWidgetAsDirectChild(this, \"\", \"insertAtIndex\", \"\",  args[\"dojoinsertionindex\"], sourceNodeRef);\n\t\t\t} else if (sourceNodeRef){\n\t\t\t\t\/\/ Do in-place replacement of the my source node with my generated dom\n\t\t\t\tif(this.domNode && (this.domNode !== sourceNodeRef)){\n\t\t\t\t\tthis._sourceNodeRef = dojo.dom.replaceNode(sourceNodeRef, this.domNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/ Register myself with my parent, or with the widget manager if\n\t\t\t\/\/ I have no parent\n\t\t\t\/\/ TODO: the code below erroneously adds all programatically generated widgets\n\t\t\t\/\/ to topWidgets (since we don't know who the parent is until after creation finishes)\n\t\t\tif ( parentComp ) {\n\t\t\t\tparentComp.registerChild(this, args.dojoinsertionindex);\n\t\t\t} else {\n\t\t\t\tdojo.widget.manager.topWidgets[this.widgetId]=this;\n\t\t\t}\n\t\t\tif(this.widgetsInTemplate){\n\t\t\t\tvar parser = new dojo.xml.Parse();\n\t\t\t\tvar subContainerNode;\n\t\t\t\t\/\/TODO: use xpath here?\n\t\t\t\tvar subnodes = this.domNode.getElementsByTagName(\"*\");\n\t\t\t\tfor(var i=0;i<subnodes.length;i++){\n\t\t\t\t\tif(subnodes[i].getAttribute('dojoAttachPoint') == 'subContainerWidget'){\n\t\t\t\t\t\tsubContainerNode = subnodes[i];\n\/\/\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif(subnodes[i].getAttribute('dojoType')){\n\t\t\t\t\t\tsubnodes[i].setAttribute('isSubWidget', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.isContainer && !this.containerNode){\n\t\t\t\t\t\/\/no containerNode is available, which means a widget is used as a container. find it here and move\n\t\t\t\t\t\/\/all dom nodes defined in the main html page as children of this.domNode into the actual container\n\t\t\t\t\t\/\/widget's node (at this point, the subwidgets defined in the template file is not parsed yet)\n\t\t\t\t\tif(subContainerNode){\n\t\t\t\t\t\tvar src = this.getFragNodeRef(frag);\n\t\t\t\t\t\tif (src){\n\t\t\t\t\t\t\tdojo.dom.moveChildren(src, subContainerNode);\n\t\t\t\t\t\t\t\/\/do not need to follow children nodes in the main html page, as they\n\t\t\t\t\t\t\t\/\/will be dealt with in the subContainerWidget\n\t\t\t\t\t\t\tfrag['dojoDontFollow'] = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tdojo.debug(\"No subContainerWidget node can be found in template file for widget \"+this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar templatefrag = parser.parseElement(this.domNode, null, true);\n\t\t\t\t\/\/ createSubComponents not createComponents because frag has already been created\n\t\t\t\tdojo.widget.getParser().createSubComponents(templatefrag, this);\n\t\t\t\t\/\/find all the sub widgets defined in the template file of this widget\n\t\t\t\tvar subwidgets = [];\n\t\t\t\tvar stack = [this];\n\t\t\t\tvar w;\n\t\t\t\twhile((w = stack.pop())){\n\t\t\t\t\tfor(var i = 0; i < w.children.length; i++){\n\t\t\t\t\t\tvar cwidget = w.children[i];\n\t\t\t\t\t\tif(cwidget._processedSubWidgets || !cwidget.extraArgs['issubwidget']){ continue; }\n\t\t\t\t\t\tsubwidgets.push(cwidget);\n\t\t\t\t\t\tif(cwidget.isContainer){\n\t\t\t\t\t\t\tstack.push(cwidget);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\/\/connect event to this widget\/attach dom node\n\t\t\t\tfor(var i = 0; i < subwidgets.length; i++){\n\t\t\t\t\tvar widget = subwidgets[i];\n\t\t\t\t\tif(widget._processedSubWidgets){\n\t\t\t\t\t\tdojo.debug(\"This should not happen: widget._processedSubWidgets is already true!\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\twidget._processedSubWidgets = true;\n\t\t\t\t\tif(widget.extraArgs['dojoattachevent']){\n\t\t\t\t\t\tvar evts = widget.extraArgs['dojoattachevent'].split(\";\");\n\t\t\t\t\t\tfor(var j=0; j<evts.length; j++){\n\t\t\t\t\t\t\tvar thisFunc = null;\n\t\t\t\t\t\t\tvar tevt = dojo.string.trim(evts[j]);\n\t\t\t\t\t\t\tif(tevt.indexOf(\":\") >= 0){\n\t\t\t\t\t\t\t\t\/\/ oh, if only JS had tuple assignment\n\t\t\t\t\t\t\t\tvar funcNameArr = tevt.split(\":\");\n\t\t\t\t\t\t\t\ttevt = dojo.string.trim(funcNameArr[0]);\n\t\t\t\t\t\t\t\tthisFunc = dojo.string.trim(funcNameArr[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!thisFunc){\n\t\t\t\t\t\t\t\tthisFunc = tevt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(dojo.lang.isFunction(widget[tevt])){\n\t\t\t\t\t\t\t\tdojo.event.kwConnect({\n\t\t\t\t\t\t\t\t\tsrcObj: widget, \n\t\t\t\t\t\t\t\t\tsrcFunc: tevt, \n\t\t\t\t\t\t\t\t\ttargetObj: this, \n\t\t\t\t\t\t\t\t\ttargetFunc: thisFunc\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\talert(tevt+\" is not a function in widget \"+widget);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(widget.extraArgs['dojoattachpoint']){\n\t\t\t\t\t\t\/\/don't attach widget.domNode here, as we do not know which\n\t\t\t\t\t\t\/\/dom node we should connect to (in checkbox widget case, \n\t\t\t\t\t\t\/\/it is inputNode). So we make the widget itself available\n\t\t\t\t\t\tthis[widget.extraArgs['dojoattachpoint']] = widget;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/dojo.profile.end(this.widgetType + \" postInitialize\");\n\t\t\t\/\/ Expand my children widgets\n\t\t\t\/* dojoDontFollow is important for a very special case\n\t\t\t * basically if you have a widget that you instantiate from script\n\t\t\t * and that widget is a container, and it contains a reference to a parent\n\t\t\t * instance, the parser will start recursively parsing until the browser\n\t\t\t * complains.  So the solution is to set an initialization property of \n\t\t\t * dojoDontFollow: true and then it won't recurse where it shouldn't\n\t\t\t *\/\n\t\t\tif(this.isContainer && !frag[\"dojoDontFollow\"]){\n\t\t\t\t\/\/alert(\"recurse from \" + this.widgetId);\n\t\t\t\t\/\/ build any sub-components with us as the parent\n\t\t\t\tdojo.widget.getParser().createSubComponents(frag, this);\n\t\t\t}","prototype":"dojo.widget.DomWidget"}},"dojo.widget.DomWidget.buildRendering":{"meta":{"summary":"Construct the UI for this widget, generally from a template. This can be over-ridden for custom UI creation to to side-step the template system. This is an implementation of the stub function defined in dojo.widget.Widget.","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":"\t\t\t\/\/ DOM widgets construct themselves from a template\n\t\t\tvar ts = dojo.widget._templateCache[this.widgetType];\n\t\t\t\/\/ Handle style for this widget here, as even if templatePath\n\t\t\t\/\/ is not set, style specified by templateCssString or templateCssPath\n\t\t\t\/\/ should be applied. templateCssString has higher priority\n\t\t\t\/\/ than templateCssPath\n\t\t\tif(args[\"templatecsspath\"]){\n\t\t\t\targs[\"templateCssPath\"] = args[\"templatecsspath\"];\n\t\t\t}\n\t\t\tvar cpath = args[\"templateCssPath\"] || this.templateCssPath;\n\t\t\tif(cpath && !dojo.widget._cssFiles[cpath.toString()]){\n\t\t\t\tif((!this.templateCssString)&&(cpath)){\n\t\t\t\t\tthis.templateCssString = dojo.hostenv.getText(cpath);\n\t\t\t\t\tthis.templateCssPath = null;\n\t\t\t\t}\n\t\t\t\tdojo.widget._cssFiles[cpath.toString()] = true;\n\t\t\t}\n\t\t\tif((this[\"templateCssString\"])&&(!dojo.widget._cssStrings[this.templateCssString])){\n\t\t\t\tdojo.html.insertCssText(this.templateCssString, null, cpath);\n\t\t\t\tdojo.widget._cssStrings[this.templateCssString] = true;\n\t\t\t}\n\t\t\tif(\t\n\t\t\t\t(!this.preventClobber)&&(\n\t\t\t\t\t(this.templatePath)||\n\t\t\t\t\t(this.templateNode)||\n\t\t\t\t\t(\n\t\t\t\t\t\t(this[\"templateString\"])&&(this.templateString.length) \n\t\t\t\t\t)||\n\t\t\t\t\t(\n\t\t\t\t\t\t(typeof ts != \"undefined\")&&( (ts[\"string\"])||(ts[\"node\"]) )\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t){\n\t\t\t\t\/\/ if it looks like we can build the thing from a template, do it!\n\t\t\t\tthis.buildFromTemplate(args, frag);\n\t\t\t}else{\n\t\t\t\t\/\/ otherwise, assign the DOM node that was the source of the widget\n\t\t\t\t\/\/ parsing to be the root node\n\t\t\t\tthis.domNode = this.getFragNodeRef(frag);\n\t\t\t}\n\t\t\tthis.fillInTemplate(args, frag); \t\/\/ this is where individual widgets\n\t\t\t\t\t\t\t\t\t\t\t\t\/\/ will handle population of data\n\t\t\t\t\t\t\t\t\t\t\t\t\/\/ from properties, remote data\n\t\t\t\t\t\t\t\t\t\t\t\t\/\/ sets, etc.","prototype":"dojo.widget.DomWidget"}},"dojo.widget.DomWidget.buildFromTemplate":{"meta":{"summary":"Called by buildRendering, creates the actual UI in a DomWidget.","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":"\t\t\t\/\/ var start = new Date();\n\t\t\t\/\/ copy template properties if they're already set in the templates object\n\t\t\t\/\/ dojo.debug(\"buildFromTemplate:\", this);\n\t\t\tvar avoidCache = false;\n\t\t\tif(args[\"templatepath\"]){\n\/\/\t\t\t\tavoidCache = true;\n\t\t\t\targs[\"templatePath\"] = args[\"templatepath\"];\n\t\t\t}\n\t\t\tdojo.widget.fillFromTemplateCache(\tthis, \n\t\t\t\t\t\t\t\t\t\t\t\targs[\"templatePath\"], \n\t\t\t\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t\t\t\tavoidCache);\n\t\t\tvar ts = dojo.widget._templateCache[this.templatePath?this.templatePath.toString():this.widgetType];\n\t\t\tif((ts)&&(!avoidCache)){\n\t\t\t\tif(!this.templateString.length){\n\t\t\t\t\tthis.templateString = ts[\"string\"];\n\t\t\t\t}\n\t\t\t\tif(!this.templateNode){\n\t\t\t\t\tthis.templateNode = ts[\"node\"];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar matches = false;\n\t\t\tvar node = null;\n\t\t\t\/\/ var tstr = new String(this.templateString); \n\t\t\tvar tstr = this.templateString; \n\t\t\t\/\/ attempt to clone a template node, if there is one\n\t\t\tif((!this.templateNode)&&(this.templateString)){\n\t\t\t\tmatches = this.templateString.match(\/\\$\\{([^\\}]+)\\}\/g);\n\t\t\t\tif(matches) {\n\t\t\t\t\t\/\/ if we do property replacement, don't create a templateNode\n\t\t\t\t\t\/\/ to clone from.\n\t\t\t\t\tvar hash = this.strings || {};\n\t\t\t\t\t\/\/ FIXME: should this hash of default replacements be cached in\n\t\t\t\t\t\/\/ templateString?\n\t\t\t\t\tfor(var key in dojo.widget.defaultStrings) {\n\t\t\t\t\t\tif(dojo.lang.isUndefined(hash[key])) {\n\t\t\t\t\t\t\thash[key] = dojo.widget.defaultStrings[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\/\/ FIXME: this is a lot of string munging. Can we make it faster?\n\t\t\t\t\tfor(var i = 0; i < matches.length; i++) {\n\t\t\t\t\t\tvar key = matches[i];\n\t\t\t\t\t\tkey = key.substring(2, key.length-1);\n\t\t\t\t\t\tvar kval = (key.substring(0, 5) == \"this.\") ? dojo.lang.getObjPathValue(key.substring(5), this) : hash[key];\n\t\t\t\t\t\tvar value;\n\t\t\t\t\t\tif((kval)||(dojo.lang.isString(kval))){\n\t\t\t\t\t\t\tvalue = new String((dojo.lang.isFunction(kval)) ? kval.call(this, key, this.templateString) : kval);\n\t\t\t\t\t\t\t\/\/ Safer substitution, see heading \"Attribute values\" in  \n\t\t\t\t\t\t\t\/\/ http:\/\/www.w3.org\/TR\/REC-html40\/appendix\/notes.html#h-B.3.2\n\t\t\t\t\t\t\twhile (value.indexOf(\"\\\"\") > -1) {\n\t\t\t\t\t\t\t\tvalue=value.replace(\"\\\"\",\"&quot;\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttstr = tstr.replace(matches[i], value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t\/\/ otherwise, we are required to instantiate a copy of the template\n\t\t\t\t\t\/\/ string if one is provided.\n\t\t\t\t\t\/\/ FIXME: need to be able to distinguish here what should be done\n\t\t\t\t\t\/\/ or provide a generic interface across all DOM implementations\n\t\t\t\t\t\/\/ FIMXE: this breaks if the template has whitespace as its first \n\t\t\t\t\t\/\/ characters\n\t\t\t\t\t\/\/ node = this.createNodesFromText(this.templateString, true);\n\t\t\t\t\t\/\/ this.templateNode = node[0].cloneNode(true); \/\/ we're optimistic here\n\t\t\t\t\tthis.templateNode = this.createNodesFromText(this.templateString, true)[0];\n\t\t\t\t\tif(!avoidCache){\n\t\t\t\t\t\tts.node = this.templateNode;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif((!this.templateNode)&&(!matches)){ \n\t\t\t\tdojo.debug(\"DomWidget.buildFromTemplate: could not create template\");\n\t\t\t\treturn false;\n\t\t\t}else if(!matches){\n\t\t\t\tnode = this.templateNode.cloneNode(true);\n\t\t\t\tif(!node){ return false; }\n\t\t\t}else{\n\t\t\t\tnode = this.createNodesFromText(tstr, true)[0];\n\t\t\t}\n\t\t\t\/\/ recurse through the node, looking for, and attaching to, our\n\t\t\t\/\/ attachment points which should be defined on the template node.\n\t\t\tthis.domNode = node;\n\t\t\t\/\/ dojo.profile.start(\"attachTemplateNodes\");\n\t\t\tthis.attachTemplateNodes();\n\t\t\t\/\/ dojo.profile.end(\"attachTemplateNodes\");\n\t\t\t\/\/ relocate source contents to templated container node\n\t\t\t\/\/ this.containerNode must be able to receive children, or exceptions will be thrown\n\t\t\tif (this.isContainer && this.containerNode){\n\t\t\t\tvar src = this.getFragNodeRef(frag);\n\t\t\t\tif (src){\n\t\t\t\t\tdojo.dom.moveChildren(src, this.containerNode);\n\t\t\t\t}\n\t\t\t}","call_chain":["kval"],"prototype":"dojo.widget.DomWidget"}},"dojo.widget.DomWidget.attachTemplateNodes":{"meta":{"summary":"hooks up event handlers and property\/node linkages. Calls dojo.widget.attachTemplateNodes to do all the hard work.","parameters":{"baseNode":{"type":""},"targetObj":{"type":""}},"src":" \t\tif(!baseNode){ baseNode = this.domNode; }\n\t\t\tif(!targetObj){ targetObj = this; }\n\t\t\treturn dojo.widget.attachTemplateNodes(baseNode, targetObj, \n\t\t\t\t\t\tdojo.widget.getDojoEventsFromStr(this.templateString));","prototype":"dojo.widget.DomWidget"},"extra":{"parameters":{"baseNode":{"type":"DomNode","summary":"defaults to \"this.domNode\""},"targetObj":{"type":"Widget","summary":"defaults to \"this\""}}}},"dojo.widget.DomWidget.fillInTemplate":{"meta":{"summary":"stub function! sub-classes may use as a default UI initializer function. The UI rendering will be available by the time this is called from buildRendering. If buildRendering is over-ridden, this function may not be fired!","src":"\t\t\t\/\/ dojo.unimplemented(\"dojo.widget.DomWidget.fillInTemplate\");","prototype":"dojo.widget.DomWidget"}},"dojo.widget.DomWidget.destroyRendering":{"meta":{"summary":"UI destructor. Destroy the dom nodes associated w\/this widget.","src":" \t\ttry{\n\t\t\t\tdojo.dom.destroyNode(this.domNode);\n\t\t\t\tdelete this.domNode;\n\t\t\t}catch(e){ \/* squelch! *\/ }\n\t\t\tif(this._sourceNodeRef){\n\t\t\t\ttry{\n\t\t\t\t\tdojo.dom.destroyNode(this._sourceNodeRef);\n\t\t\t\t}catch(e){ \/* squelch! *\/ }\n\t\t\t}","prototype":"dojo.widget.DomWidget"}},"dojo.widget.DomWidget.createNodesFromText":{"meta":{"summary":"Attempts to create a set of nodes based on the structure of the passed text. Implemented in HtmlWidget and SvgWidget.","src":" \t\tdojo.unimplemented(\"dojo.widget.DomWidget.createNodesFromText\");","prototype":"dojo.widget.DomWidget"}},"dojo.widget.fillFromTemplateCache":{"meta":{"summary":"static method to build from a template w\/ or w\/o a real widget in place","parameters":{"obj":{"type":""},"templatePath":{"type":""},"templateString":{"type":""},"avoidCache":{"type":""}},"src":"\t\/\/ dojo.debug(\"avoidCache:\", avoidCache);\n\tvar tpath = templatePath || obj.templatePath;\n\tvar tmplts = dojo.widget._templateCache;\n\tif(!tpath && !obj[\"widgetType\"]) { \/\/ don't have a real template here\n\t\tdo {\n\t\t\tvar dummyName = \"__dummyTemplate__\" + dojo.widget._templateCache.dummyCount++;\n\t\t} while(tmplts[dummyName]);\n\t\tobj.widgetType = dummyName;\n\t}\n\tvar wt = tpath?tpath.toString():obj.widgetType;\n\tvar ts = tmplts[wt];\n\tif(!ts){\n\t\ttmplts[wt] = {\"string\": null, \"node\": null};\n\t\tif(avoidCache){\n\t\t\tts = {};\n\t\t}else{\n\t\t\tts = tmplts[wt];\n\t\t}\n\t}\n\tif((!obj.templateString)&&(!avoidCache)){\n\t\tobj.templateString = templateString || ts[\"string\"];\n\t}\n\tif((!obj.templateNode)&&(!avoidCache)){\n\t\tobj.templateNode = ts[\"node\"];\n\t}\n\tif((!obj.templateNode)&&(!obj.templateString)&&(tpath)){\n\t\t\/\/ fetch a text fragment and assign it to templateString\n\t\t\/\/ NOTE: we rely on blocking IO here!\n\t\tvar tstring = dojo.hostenv.getText(tpath);\n\t\tif(tstring){\n\t\t\t\/\/ strip <?xml ...?> declarations so that external SVG and XML\n\t\t\t\/\/ documents can be added to a document without worry\n\t\t\ttstring = tstring.replace(\/^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>\/im, \"\");\n\t\t\tvar matches = tstring.match(\/<body[^>]*>\\s*([\\s\\S]+)\\s*<\\\/body>\/im);\n\t\t\tif(matches){\n\t\t\t\ttstring = matches[1];\n\t\t\t}\n\t\t}else{\n\t\t\ttstring = \"\";\n\t\t}\n\t\tobj.templateString = tstring;\n\t\tif(!avoidCache){\n\t\t\ttmplts[wt][\"string\"] = tstring;\n\t\t}\n\t}\n\tif((!ts[\"string\"])&&(!avoidCache)){\n\t\tts.string = obj.templateString;\n\t}"},"extra":{"parameters":{"obj":{"type":"DomWidget","summary":"an instance of dojo.widget.DomWidget to initialize the template for"},"templatePath":{"type":"String","summary":"the URL to get the template from. dojo.uri.Uri is often passed as well."},"templateString":{"type":"String?","summary":"a string to use in lieu of fetching the template from a URL"},"avoidCache":{"type":"Boolean?","summary":"should the template system not use whatever is in the cache and always use the passed templatePath or templateString?"}}}},"dojo.widget.attachTemplateNodes":{"meta":{"summary":"map widget properties and functions to the handlers specified in the dom node and it's descendants. This function iterates over all nodes and looks for these properties: * dojoAttachPoint * dojoAttachEvent * waiRole * waiState * any \"dojoOn*\" proprties passed in the events array","parameters":{"rootNode":{"type":""},"targetObj":{"type":"Widget"},"events":{"type":""}},"src":"\t\/\/ FIXME: this method is still taking WAAAY too long. We need ways of optimizing:\n\t\/\/\ta.) what we are looking for on each node\n\t\/\/\tb.) the nodes that are subject to interrogation (use xpath instead?)\n\t\/\/\tc.) how expensive event assignment is (less eval(), more connect())\n\t\/\/ var start = new Date();\n\tvar elementNodeType = dojo.dom.ELEMENT_NODE;\n\tfunction trim(str){\n\t\treturn str.replace(\/^\\s+|\\s+$\/g, \"\");\n\t}\n\tif(!rootNode){ \n\t\trootNode = targetObj.domNode;\n\t}\n\tif(rootNode.nodeType != elementNodeType){\n\t\treturn;\n\t}\n\t\/\/ alert(events.length);\n\tvar nodes = rootNode.all || rootNode.getElementsByTagName(\"*\");\n\tvar _this = targetObj;\n\tfor(var x=-1; x<nodes.length; x++){\n\t\tvar baseNode = (x == -1) ? rootNode : nodes[x];\n\t\t\/\/ FIXME: is this going to have capitalization problems?  Could use getAttribute(name, 0); to get attributes case-insensitve\n\t\tvar attachPoint = [];\n\t\tif(!targetObj.widgetsInTemplate || !baseNode.getAttribute('dojoType')){\n\t\t\tfor(var y=0; y<this.attachProperties.length; y++){\n\t\t\t\tvar tmpAttachPoint = baseNode.getAttribute(this.attachProperties[y]);\n\t\t\t\tif(tmpAttachPoint){\n\t\t\t\t\tattachPoint = tmpAttachPoint.split(\";\");\n\t\t\t\t\tfor(var z=0; z<attachPoint.length; z++){\n\t\t\t\t\t\tif(dojo.lang.isArray(targetObj[attachPoint[z]])){\n\t\t\t\t\t\t\ttargetObj[attachPoint[z]].push(baseNode);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\ttargetObj[attachPoint[z]]=baseNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar attachEvent = baseNode.getAttribute(this.eventAttachProperty);\n\t\t\tif(attachEvent){\n\t\t\t\t\/\/ NOTE: we want to support attributes that have the form\n\t\t\t\t\/\/ \"domEvent: nativeEvent; ...\"\n\t\t\t\tvar evts = attachEvent.split(\";\");\n\t\t\t\tfor(var y=0; y<evts.length; y++){\n\t\t\t\t\tif((!evts[y])||(!evts[y].length)){ continue; }\n\t\t\t\t\tvar thisFunc = null;\n\t\t\t\t\tvar tevt = trim(evts[y]);\n\t\t\t\t\tif(evts[y].indexOf(\":\") >= 0){\n\t\t\t\t\t\t\/\/ oh, if only JS had tuple assignment\n\t\t\t\t\t\tvar funcNameArr = tevt.split(\":\");\n\t\t\t\t\t\ttevt = trim(funcNameArr[0]);\n\t\t\t\t\t\tthisFunc = trim(funcNameArr[1]);\n\t\t\t\t\t}\n\t\t\t\t\tif(!thisFunc){\n\t\t\t\t\t\tthisFunc = tevt;\n\t\t\t\t\t}\n\t\t\t\t\tvar tf = function(){ \n\t\t\t\t\t\tvar ntf = new String(thisFunc);\n\t\t\t\t\t\treturn function(evt){\n\t\t\t\t\t\t\tif(_this[ntf]){\n\t\t\t\t\t\t\t\t_this[ntf](dojo.event.browser.fixEvent(evt, this));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}();\n\t\t\t\t\tdojo.event.browser.addListener(baseNode, tevt, tf, false, true);\n\t\t\t\t\t\/\/ dojo.event.browser.addListener(baseNode, tevt, dojo.lang.hitch(_this, thisFunc));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var y=0; y<events.length; y++){\n\t\t\t\t\/\/alert(events[x]);\n\t\t\t\tvar evtVal = baseNode.getAttribute(events[y]);\n\t\t\t\tif((evtVal)&&(evtVal.length)){\n\t\t\t\t\tvar thisFunc = null;\n\t\t\t\t\tvar domEvt = events[y].substr(4); \/\/ clober the \"dojo\" prefix\n\t\t\t\t\tthisFunc = trim(evtVal);\n\t\t\t\t\tvar funcs = [thisFunc];\n\t\t\t\t\tif(thisFunc.indexOf(\";\")>=0){\n\t\t\t\t\t\tfuncs = dojo.lang.map(thisFunc.split(\";\"), trim);\n\t\t\t\t\t}\n\t\t\t\t\tfor(var z=0; z<funcs.length; z++){\n\t\t\t\t\t\tif(!funcs[z].length){ continue; }\n\t\t\t\t\t\tvar tf = function(){ \n\t\t\t\t\t\t\tvar ntf = new String(funcs[z]);\n\t\t\t\t\t\t\treturn function(evt){\n\t\t\t\t\t\t\t\tif(_this[ntf]){\n\t\t\t\t\t\t\t\t\t_this[ntf](dojo.event.browser.fixEvent(evt, this));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t\tdojo.event.browser.addListener(baseNode, domEvt, tf, false, true);\n\t\t\t\t\t\t\/\/ dojo.event.browser.addListener(baseNode, domEvt, dojo.lang.hitch(_this, funcs[z]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\/\/ continue;\n\t\t\/\/ FIXME: we need to put this into some kind of lookup structure\n\t\t\/\/ instead of direct assignment\n\t\tvar tmpltPoint = baseNode.getAttribute(this.templateProperty);\n\t\tif(tmpltPoint){\n\t\t\ttargetObj[tmpltPoint]=baseNode;\n\t\t}\n\t\tdojo.lang.forEach(dojo.widget.waiNames, function(name){\n\t\t\tvar wai = dojo.widget.wai[name];\n\t\t\tvar val = baseNode.getAttribute(wai.name);\n\t\t\tif(val){\n\t\t\t\tif(val.indexOf('-') == -1){ \n\t\t\t\t\tdojo.widget.wai.setAttr(baseNode, wai.name, \"role\", val);\n\t\t\t\t}else{\n\t\t\t\t\t\/\/ this is a state-value pair\n\t\t\t\t\tvar statePair = val.split('-');\n\t\t\t\t\tdojo.widget.wai.setAttr(baseNode, wai.name, statePair[0], statePair[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}, this);\n\t\tvar onBuild = baseNode.getAttribute(this.onBuildProperty);\n\t\tif(onBuild){\n\t\t\teval(\"var node = baseNode; var widget = targetObj; \"+onBuild);\n\t\t}\n\t}"},"extra":{"parameters":{"rootNode":{"type":"DomNode","summary":"the node to search for properties. All children will be searched."},"events":{"type":"Array","summary":"a list of properties generated from getDojoEventsFromStr."}}}},"dojo.widget.getDojoEventsFromStr":{"meta":{"summary":"generates a list of properties with names that match the form dojoOn*","parameters":{"str":{"type":""}},"src":" var re = \/(dojoOn([a-z]+)(\\s?))=\/gi;\n\tvar evts = str ? str.match(re)||[] : [];\n\tvar ret = [];\n\tvar lem = {};\n\tfor(var x=0; x<evts.length; x++){\n\t\tif(evts[x].length < 1){ continue; }\n\t\tvar cm = evts[x].replace(\/\\s\/, \"\");\n\t\tcm = (cm.slice(0, cm.length-1));\n\t\tif(!lem[cm]){\n\t\t\tlem[cm] = true;\n\t\t\tret.push(cm);\n\t\t}\n\t}\n\treturn ret; \/\/ Array","returns":"Array"},"extra":{"parameters":{"str":{"type":"String","summary":"the template string to search var lstr = str.toLowerCase();"}}}},"dojo.widget.wai.setAttr":{"meta":{"summary":"Use appropriate API to set the role or state attribute onto the element.","parameters":{"node":{"type":"DomNode"},"ns":{"type":"String"},"attr":{"type":"String"},"value":{"type":"String|Boolean"}},"src":" \tif(dojo.render.html.ie){\n\t\t\tnode.setAttribute(this[ns].alias+\":\"+ attr, this[ns].prefix+value);\n\t\t}else{\n\t\t\tnode.setAttributeNS(this[ns][\"namespace\"], attr, this[ns].prefix+value);\n\t\t}","description":"In IE use the generic setAttribute() api. Append a namespace alias to the attribute name and appropriate prefix to the value. Otherwise, use the setAttribueNS api to set the namespaced attribute. Also add the appropriate prefix to the attribute value."}},"dojo.widget.wai.getAttr":{"meta":{"summary":"","parameters":{"node":{"type":"DomNode"},"ns":{"type":"String"},"attr":{"type":"String|Boolena"}},"src":" \tif(dojo.render.html.ie){\n\t\t\treturn node.getAttribute(this[ns].alias+\":\"+attr);\n\t\t}else{\n\t\t\treturn node.getAttributeNS(this[ns][\"namespace\"], attr);\n\t\t}"}},"dojo.widget.wai.removeAttr":{"meta":{"summary":"Use the appropriate API to remove the role or state value","parameters":{"node":{"type":"DomNode"},"ns":{"type":"String"},"attr":{"type":"String|Boolena"}},"src":" \tvar success = true; \/\/only IE returns a value\n\t\tif(dojo.render.html.ie){\n\t\t\t success = node.removeAttribute(this[ns].alias+\":\"+attr);\n\t\t}else{\n\t\t\tnode.removeAttributeNS(this[ns][\"namespace\"], attr);\n\t\t}\n\t\treturn success;","description":"In IE use the generic removeAttribute() api. An alias value was added to the attribute name to simulate a namespace when the attribute was set. Otherwise use the removeAttributeNS() api to remove the state value","returns":"only IE returns a value"}}},"objects":{"dojo.widget.defaultStrings":{"meta":{"variables":["dojoRoot","baseScriptUri"],"summary":"a mapping of strings that are used in template variable replacement"}},"dojo.widget.wai.waiRole":{"meta":{"variables":["name","namespace","alias","prefix"]},"extra":{"variables":{"name":{"type":"String","summary":"information for mapping accessibility role"},"namespace":{"type":"String","summary":"URI of the namespace for the set of roles"},"alias":{"type":"String","summary":"The alias to assign the namespace"},"prefix":{"type":"String","summary":"The prefix to assign to the role value"}}}},"dojo.widget.wai.waiState":{"meta":{"variables":["name","namespace","alias","prefix"]},"extra":{"variables":{"name":{"type":"String","summary":"information for mapping accessibility state"},"namespace":{"type":"String","summary":"URI of the namespace for the set of states"},"alias":{"type":"String","summary":"The alias to assign the namespace"},"prefix":{"type":"String","summary":"empty string - state value does not require prefix"}}}},"dojo.widget.wai":{"meta":{"summary":"Contains functions to set accessibility roles and states onto widget elements"}}}}},"dojo.widget.DropdownContainer":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.widget.PopupContainer","dojo.event.*","dojo.html.layout","dojo.html.display","dojo.html.iframe","dojo.html.util"]},"functions":{"dojo.widget.DropdownContainer":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["inputWidth","id","inputId","inputName","iconURL","copyClasses","iconAlt","containerToggle","containerToggleDuration","templateString","templateCssPath","isContainer"],"variables":["inputWidth","id","inputId","inputName","iconURL","copyClasses","iconAlt","containerToggle","containerToggleDuration","templateString","templateCssPath","isContainer"],"instance_variables":["popup","containerNode","domNode.id","inputNode.id","inputNode.name","inputNode.style.width","inputNode.disabled","inputNode.style","inputNode.className"],"summary":"provides an input box and a button for a dropdown. In subclass, the dropdown can be specified."}},"dojo.widget.DropdownContainer.attachTemplateNodes":{"meta":{"summary":"use attachTemplateNodes to specify containerNode, as fillInTemplate is too late for this","src":" \t\tdojo.widget.DropdownContainer.superclass.attachTemplateNodes.apply(this, arguments);\n\t\t\tthis.popup = dojo.widget.createWidget(\"PopupContainer\", {toggle: this.containerToggle, toggleDuration: this.containerToggleDuration});\n\t\t\tthis.containerNode = this.popup.domNode;","call_chain":["dojo.widget.DropdownContainer.superclass.attachTemplateNodes"],"prototype":"dojo.widget.DropdownContainer"}},"dojo.widget.DropdownContainer.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tthis.domNode.appendChild(this.popup.domNode);\n\t\t\tif(this.id) { this.domNode.id = this.id; }\n\t\t\tif(this.inputId){ this.inputNode.id = this.inputId; }\n\t\t\tif(this.inputName){ this.inputNode.name = this.inputName; }\n\t\t\tthis.inputNode.style.width = this.inputWidth;\n\t\t\tthis.inputNode.disabled = this.disabled;\n\t\t\tif(this.copyClasses){\n\t\t\t\tthis.inputNode.style = \"\";\n\t\t\t\tthis.inputNode.className = this.getFragNodeRef(frag).className;\n\t\t\t}\n\t\t\tdojo.event.connect(this.inputNode, \"onchange\", this, \"onInputChange\");","prototype":"dojo.widget.DropdownContainer"}},"dojo.widget.DropdownContainer.onIconClick":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tif(this.disabled) return;\n\t\t\tif(!this.popup.isShowingNow){\n\t\t\t\tthis.popup.open(this.inputNode, this, this.buttonNode);\n\t\t\t}else{\n\t\t\t\tthis.popup.close();\n\t\t\t}","prototype":"dojo.widget.DropdownContainer"}},"dojo.widget.DropdownContainer.hideContainer":{"meta":{"summary":"hide the dropdown","src":" \t\tif(this.popup.isShowingNow){\n\t\t\t\tthis.popup.close();\n\t\t\t}","prototype":"dojo.widget.DropdownContainer"}},"dojo.widget.DropdownContainer.onInputChange":{"meta":{"summary":"signal for changes in the input box","src":"\t\t\t\/\/ summary: signal for changes in the input box","prototype":"dojo.widget.DropdownContainer"}},"dojo.widget.DropdownContainer.enable":{"meta":{"summary":"enable this widget to accept user input","src":" \t\tthis.inputNode.disabled = false;\n\t\t\tdojo.widget.DropdownContainer.superclass.enable.apply(this, arguments);","call_chain":["dojo.widget.DropdownContainer.superclass.enable"],"prototype":"dojo.widget.DropdownContainer"}},"dojo.widget.DropdownContainer.disable":{"meta":{"summary":"lock this widget so that the user can't change the value","src":" \t\tthis.inputNode.disabled = true;\n\t\t\tdojo.widget.DropdownContainer.superclass.disable.apply(this, arguments);","call_chain":["dojo.widget.DropdownContainer.superclass.disable"],"prototype":"dojo.widget.DropdownContainer"}}}}},"dojo.widget.DropdownDatePicker":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.DropdownContainer","dojo.widget.DatePicker","dojo.event.*","dojo.html.*","dojo.date.format","dojo.date.serialize","dojo.string.common","dojo.i18n.common"]},"functions":{"dojo.widget.DropdownDatePicker":{"meta":{"prototype_chain":["dojo.widget.DropdownContainer"],"call_chain":["dojo.widget.DropdownContainer"],"prototype_variables":["iconURL","formatLength","displayFormat","dateFormat","saveFormat","value","name","displayWeeks","adjustWeeks","startDate","endDate","weekStartsOn","staticDisplay"],"variables":["iconURL","formatLength","displayFormat","dateFormat","saveFormat","value","name","displayWeeks","adjustWeeks","startDate","endDate","weekStartsOn","staticDisplay"],"instance_variables":["iconAlt","value","datePicker","containerNode.explodeClassName","valueNode.name","inputNode.value","valueNode.value"]}},"dojo.widget.DropdownDatePicker.postMixInProperties":{"meta":{"summary":"see dojo.widget.DomWidget","parameters":{"localProperties":{"type":""},"frag":{"type":""}},"src":"\t\t\tdojo.widget.DropdownDatePicker.superclass.postMixInProperties.apply(this, arguments);\n\t\t\tvar messages = dojo.i18n.getLocalization(\"dojo.widget\", \"DropdownDatePicker\", this.lang);\n\t\t\tthis.iconAlt = messages.selectDate;\n\t\t\t\/\/FIXME: should this be if\/else\/else?\n\t\t\tif(typeof(this.value)=='string'&&this.value.toLowerCase()=='today'){\n\t\t\t\tthis.value = new Date();\n\t\t\t}\n\t\t\tif(this.value && isNaN(this.value)){\n\t\t\t\tvar orig = this.value;\n\t\t\t\tthis.value = dojo.date.fromRfc3339(this.value);\n\t\t\t\tif(!this.value){this.value = new Date(orig); dojo.deprecated(\"dojo.widget.DropdownDatePicker\", \"date attributes must be passed in Rfc3339 format\", \"0.5\");}\n\t\t\t}\n\t\t\tif(this.value && !isNaN(this.value)){\n\t\t\t\tthis.value = new Date(this.value);\n\t\t\t}","call_chain":["dojo.widget.DropdownDatePicker.superclass.postMixInProperties"],"prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker.fillInTemplate":{"meta":{"summary":"see dojo.widget.DomWidget","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tdojo.widget.DropdownDatePicker.superclass.fillInTemplate.call(this, args, frag);\n\t\t\t\/\/attributes to be passed on to DatePicker\n\t\t\tvar dpArgs = {widgetContainerId: this.widgetId, lang: this.lang, value: this.value,\n\t\t\t\tstartDate: this.startDate, endDate: this.endDate, displayWeeks: this.displayWeeks,\n\t\t\t\tweekStartsOn: this.weekStartsOn, adjustWeeks: this.adjustWeeks, staticDisplay: this.staticDisplay};\n\t\t\t\/\/build the args for DatePicker based on the public attributes of DropdownDatePicker\n\t\t\tthis.datePicker = dojo.widget.createWidget(\"DatePicker\", dpArgs, this.containerNode, \"child\");\n\t\t\tdojo.event.connect(this.datePicker, \"onValueChanged\", this, \"_updateText\");\n\t\t\tif(this.value){\n\t\t\t\tthis._updateText();\n\t\t\t}\n\t\t\tthis.containerNode.explodeClassName = \"calendarBodyContainer\";\n\t\t\tthis.valueNode.name=this.name;","call_chain":["dojo.widget.DropdownDatePicker.superclass.fillInTemplate"],"prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker.getValue":{"meta":{"summary":"return current date in RFC 3339 format","src":" \t\treturn this.valueNode.value; \/*String*\/","returns":"String","prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker.getDate":{"meta":{"summary":"return current date as a Date object","src":" \t\treturn this.datePicker.value; \/*Date*\/","returns":"Date","prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker.setValue":{"meta":{"summary":"set the current date from RFC 3339 formatted string or a date object, synonymous with setDate","parameters":{"rfcDate":{"type":"Date|String"}},"src":" \t\tthis.setDate(rfcDate);","prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker.setDate":{"meta":{"summary":"set the current date and update the UI","parameters":{"dateObj":{"type":"Date|String"}},"src":" \t\tthis.datePicker.setDate(dateObj);\n\t\t\tthis._syncValueNode();","prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker._updateText":{"meta":{"summary":"updates the <input> field according to the current value (ie, displays the formatted date)","src":" \t\tif(this.dateFormat){\n\t\t\t\tdojo.deprecated(\"dojo.widget.DropdownDatePicker\",\n\t\t\t\t\"Must use displayFormat attribute instead of dateFormat.  See dojo.date.format for specification.\", \"0.5\");\n\t\t\t\tthis.inputNode.value = dojo.date.strftime(this.datePicker.value, this.dateFormat, this.lang);\n\t\t\t}else if(this.datePicker.value){\n\t\t\t\tthis.inputNode.value = dojo.date.format(this.datePicker.value,\n\t\t\t\t\t{formatLength:this.formatLength, datePattern:this.displayFormat, selector:'dateOnly', locale:this.lang});\n\t\t\t}else{\n\t\t\t\tthis.inputNode.value = \"\";\n\t\t\t}\n\t\t\tif(this.value < this.datePicker.startDate||this.value>this.datePicker.endDate){\n\t\t\t\tthis.inputNode.value = \"\";\n\t\t\t}\n\t\t\tthis._syncValueNode();\n\t\t\tthis.onValueChanged(this.getDate());\n\t\t\tthis.hideContainer();","prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker.onValueChanged":{"meta":{"summary":"triggered when this.value is changed","parameters":{"dateObj":{"type":"Date"}},"src":"\t\t\t\/\/summary: triggered when this.value is changed","prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker.onInputChange":{"meta":{"summary":"callback when user manually types a date into the <input> field","src":" \t\tif(this.dateFormat){\n\t\t\t\tdojo.deprecated(\"dojo.widget.DropdownDatePicker\",\n\t\t\t\t\"Cannot parse user input.  Must use displayFormat attribute instead of dateFormat.  See dojo.date.format for specification.\", \"0.5\");\n\t\t\t}else{\n\t\t\t\tvar input = dojo.string.trim(this.inputNode.value);\n\t\t\t\tif(input){\n\t\t\t\t\tvar inputDate = dojo.date.parse(input,\n\t\t\t\t\t\t\t{formatLength:this.formatLength, datePattern:this.displayFormat, selector:'dateOnly', locale:this.lang});\t\t\t\n\t\t\t\t\tif(inputDate){\n\t\t\t\t\t\tthis.setDate(inputDate);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.valueNode.value = input;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/ If the date entered didn't parse, reset to the old date.  KISS, for now.\n\t\t\t\/\/TODO: usability?  should we provide more feedback somehow? an error notice?\n\t\t\t\/\/ seems redundant to do this if the parse failed, but at least until we have validation,\n\t\t\t\/\/ this will fix up the display of entries like 01\/32\/2006\n\t\t\tif(input){ this._updateText(); }","prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker._syncValueNode":{"meta":{"summary":"","src":" \t\tvar date = this.datePicker.value;\n\t\t\t\tvar value = \"\";\n\t\t\tswitch(this.saveFormat.toLowerCase()){\n\t\t\t\tcase \"rfc\": case \"iso\": case \"\":\n\t\t\t\t\tvalue = dojo.date.toRfc3339(date, 'dateOnly');\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"posix\": case \"unix\":\n\t\t\t\t\tvalue = Number(date);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif(date){\n\t\t\t\t\t\tvalue = dojo.date.format(date, {datePattern:this.saveFormat, selector:'dateOnly', locale:this.lang});\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tthis.valueNode.value = value;","prototype":"dojo.widget.DropdownDatePicker"}},"dojo.widget.DropdownDatePicker.destroy":{"meta":{"summary":"","parameters":{"finalize":{"type":"Boolean"}},"src":" \t\tthis.datePicker.destroy(finalize);\n\t\t\tdojo.widget.DropdownDatePicker.superclass.destroy.apply(this, arguments);","call_chain":["dojo.widget.DropdownDatePicker.superclass.destroy"],"prototype":"dojo.widget.DropdownDatePicker"}}}}},"dojo.widget.DropdownTimePicker":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.DropdownContainer","dojo.widget.TimePicker","dojo.event.*","dojo.html.*","dojo.date.format","dojo.date.serialize","dojo.i18n.common"]},"functions":{"dojo.widget.DropdownTimePicker":{"meta":{"prototype_chain":["dojo.widget.DropdownContainer"],"call_chain":["dojo.widget.DropdownContainer"],"prototype_variables":["iconURL","formatLength","displayFormat","timeFormat","saveFormat","value","name"],"variables":["iconURL","formatLength","displayFormat","timeFormat","saveFormat","value","name"],"instance_variables":["iconAlt","value","timePicker","containerNode.style.zIndex","containerNode.explodeClassName","valueNode.name","inputNode.value","valueNode.value"]},"extra":{"variables":{"iconURL":{"type":"URL","summary":"path of icon for button to display time picker widget"},"formatLength":{"type":"String","summary":"Type of formatting used for visual display, appropriate to locale (choice of long, short, medium or full) See dojo.date.format for details. deprecated, will be removed for 0.5"}}}},"dojo.widget.DropdownTimePicker.postMixInProperties":{"meta":{"summary":"see dojo.widget.DomWidget","src":" \t\tdojo.widget.DropdownTimePicker.superclass.postMixInProperties.apply(this, arguments);\n\t\t\tvar messages = dojo.i18n.getLocalization(\"dojo.widget\", \"DropdownTimePicker\", this.lang);\n\t\t\tthis.iconAlt = messages.selectTime;\n\t\t\t\/\/FIXME: should this be if\/else\/else?\n\t\t\tif(typeof(this.value)=='string'&&this.value.toLowerCase()=='today'){\n\t\t\t\tthis.value = new Date();\n\t\t\t}\n\t\t\tif(this.value && isNaN(this.value)){\n\t\t\t\tvar orig = this.value;\n\t\t\t\tthis.value = dojo.date.fromRfc3339(this.value);\n\t\t\t\tif(!this.value){\n\t\t\t\t\tvar d = dojo.date.format(new Date(), { selector: \"dateOnly\", datePattern: \"yyyy-MM-dd\" });\n\t\t\t\t\tvar c = orig.split(\":\");\n\t\t\t\t\tfor(var i = 0; i < c.length; ++i){\n\t\t\t\t\t\tif(c[i].length == 1) c[i] = \"0\" + c[i];\n\t\t\t\t\t}\n\t\t\t\t\torig = c.join(\":\");\n\t\t\t\t\tthis.value = dojo.date.fromRfc3339(d + \"T\" + orig);\n\t\t\t\t\tdojo.deprecated(\"dojo.widget.DropdownTimePicker\", \"time attributes must be passed in Rfc3339 format\", \"0.5\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.value && !isNaN(this.value)){\n\t\t\t\tthis.value = new Date(this.value);\n\t\t\t}","call_chain":["dojo.widget.DropdownTimePicker.superclass.postMixInProperties"],"prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker.fillInTemplate":{"meta":{"summary":"see dojo.widget.DomWidget","src":"\t\t\tdojo.widget.DropdownTimePicker.superclass.fillInTemplate.apply(this, arguments);\n\t\t\tvar value = \"\";\n\t\t\tif(this.value instanceof Date) {\n\t\t\t\tvalue = this.value;\n\t\t\t} else if(this.value) {\n\t\t\t\tvar orig = this.value;\n\t\t\t\tvar d = dojo.date.format(new Date(), { selector: \"dateOnly\", datePattern: \"yyyy-MM-dd\" });\n\t\t\t\tvar c = orig.split(\":\");\n\t\t\t\tfor(var i = 0; i < c.length; ++i){\n\t\t\t\t\tif(c[i].length == 1) c[i] = \"0\" + c[i];\n\t\t\t\t}\n\t\t\t\torig = c.join(\":\");\n\t\t\t\tvalue = dojo.date.fromRfc3339(d + \"T\" + orig);\n\t\t\t}\n\t\t\tvar tpArgs = { widgetContainerId: this.widgetId, lang: this.lang, value: value };\n\t\t\tthis.timePicker = dojo.widget.createWidget(\"TimePicker\", tpArgs, this.containerNode, \"child\");\n\t\t\tdojo.event.connect(this.timePicker, \"onValueChanged\", this, \"_updateText\");\n\t\t\tif(this.value){\n\t\t\t\tthis._updateText();\n\t\t\t}\n\t\t\tthis.containerNode.style.zIndex = this.zIndex;\n\t\t\tthis.containerNode.explodeClassName = \"timeContainer\";\n\t\t\tthis.valueNode.name = this.name;","call_chain":["dojo.widget.DropdownTimePicker.superclass.fillInTemplate"],"prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker.getValue":{"meta":{"summary":"return current time in time-only portion of RFC 3339 format","src":" \t\treturn this.valueNode.value; \/*String*\/","returns":"String","prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker.getTime":{"meta":{"summary":"return current time as a Date object","src":" \t\treturn this.timePicker.storedTime; \/*Date*\/","returns":"Date","prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker.setValue":{"meta":{"summary":"set the current time from RFC 3339 formatted string or a date object, synonymous with setTime","parameters":{"rfcDate":{"type":"Date|String"}},"src":" \t\tthis.setTime(rfcDate);","prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker.setTime":{"meta":{"summary":"set the current time and update the UI","parameters":{"dateObj":{"type":"Date|String"}},"src":" \t\tvar value = \"\";\n\t\t\tif(dateObj instanceof Date) {\n\t\t\t\tvalue = dateObj;\n\t\t\t} else if(this.value) {\n\t\t\t\tvar orig = this.value;\n\t\t\t\tvar d = dojo.date.format(new Date(), { selector: \"dateOnly\", datePattern: \"yyyy-MM-dd\" });\n\t\t\t\tvar c = orig.split(\":\");\n\t\t\t\tfor(var i = 0; i < c.length; ++i){\n\t\t\t\t\tif(c[i].length == 1) c[i] = \"0\" + c[i];\n\t\t\t\t}\n\t\t\t\torig = c.join(\":\");\n\t\t\t\tvalue = dojo.date.fromRfc3339(d + \"T\" + orig);\n\t\t\t}\n\t\t\tthis.timePicker.setTime(value);\n\t\t\tthis._syncValueNode();","prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker._updateText":{"meta":{"summary":"updates the <input> field according to the current value (ie, displays the formatted date)","src":" \t\tif(this.timePicker.selectedTime.anyTime){\n\t\t\t\tthis.inputNode.value = \"\";\n\t\t\t}else if(this.timeFormat){\n\t\t\t\tdojo.deprecated(\"dojo.widget.DropdownTimePicker\",\n\t\t\t\t\"Must use displayFormat attribute instead of timeFormat.  See dojo.date.format for specification.\", \"0.5\");\n\t\t\t\tthis.inputNode.value = dojo.date.strftime(this.timePicker.time, this.timeFormat, this.lang);\n\t\t\t}else{\n\t\t\t\tthis.inputNode.value = dojo.date.format(this.timePicker.time,\n\t\t\t\t\t{formatLength:this.formatLength, timePattern:this.displayFormat, selector:'timeOnly', locale:this.lang});\n\t\t\t}\n\t\t\tthis._syncValueNode();\n\t\t\tthis.onValueChanged(this.getTime());\n\t\t\tthis.hideContainer();","prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker.onValueChanged":{"meta":{"summary":"triggered when this.value is changed","parameters":{"dateObj":{"type":"Date"}},"src":"\t\t\t\/\/ summary: triggered when this.value is changed","prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker.onInputChange":{"meta":{"summary":"callback when user manually types a time into the <input> field","src":" \t\tif(this.dateFormat){\n\t\t\t\tdojo.deprecated(\"dojo.widget.DropdownTimePicker\",\n\t\t\t\t\"Cannot parse user input.  Must use displayFormat attribute instead of dateFormat.  See dojo.date.format for specification.\", \"0.5\");\n\t\t\t}else{\n\t\t\t\tvar input = dojo.string.trim(this.inputNode.value);\n\t\t\t\tif(input){\n\t\t\t\t\tvar inputTime = dojo.date.parse(input,\n\t\t\t\t\t\t\t{formatLength:this.formatLength, timePattern:this.displayFormat, selector:'timeOnly', locale:this.lang});\t\t\t\n\t\t\t\t\tif(inputTime){\n\t\t\t\t\t\tthis.setTime(inputTime);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.valueNode.value = input;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/ If the time entered didn't parse, reset to the old time.  KISS, for now.\n\t\t\t\/\/TODO: usability?  should we provide more feedback somehow? an error notice?\n\t\t\t\/\/ seems redundant to do this if the parse failed, but at least until we have validation,\n\t\t\t\/\/ this will fix up the display of entries like 01\/32\/2006\n\t\t\tif(input){ this._updateText(); }","prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker._syncValueNode":{"meta":{"summary":"","src":" \t\tvar time = this.timePicker.time;\n\t\t\tvar value;\n\t\t\tswitch(this.saveFormat.toLowerCase()){\n\t\t\t\tcase \"rfc\": case \"iso\": case \"\":\n\t\t\t\t\tvalue = dojo.date.toRfc3339(time, 'timeOnly');\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"posix\": case \"unix\":\n\t\t\t\t\tvalue = Number(time);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvalue = dojo.date.format(time, {datePattern:this.saveFormat, selector:'timeOnly', locale:this.lang});\n\t\t\t}\n\t\t\tthis.valueNode.value = value;","prototype":"dojo.widget.DropdownTimePicker"}},"dojo.widget.DropdownTimePicker.destroy":{"meta":{"summary":"","parameters":{"finalize":{"type":"Boolean"}},"src":" \t\tthis.timePicker.destroy(finalize);\n\t\t\tdojo.widget.DropdownTimePicker.superclass.destroy.apply(this, arguments);","call_chain":["dojo.widget.DropdownTimePicker.superclass.destroy"],"prototype":"dojo.widget.DropdownTimePicker"}}}}},"dojo.widget.Editor":{"meta":{"requires":{"common":["dojo.io.*","dojo.widget.*","dojo.widget.Toolbar","dojo.widget.RichText","dojo.widget.ColorPalette","dojo.string.extras"]},"functions":{"dojo.widget.Editor":{"meta":{"summary":"","src":" dojo.widget.HtmlWidget.call(this);\n\tthis.contentFilters = [];\n\tthis._toolbars = [];","instance_variables":["contentFilters","_toolbars","_richText","_toolbarContainer","_toolbarContainer.domNode.style.display","_updateToolbarTimer","_updateToolbarLastRan","_richText.contentFilters"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["widgetType","saveUrl","saveMethod","saveArgName","closeOnSave","items","formatBlockItems","fontNameItems","fontSizeItems","validateItems","focusOnLoad","minHeight","_richText","_richTextType","_toolbarContainer","_toolbarContainerType","_toolbars","_toolbarType","_toolbarItemType","_updateToolbarLastRan","_updateToolbarTimer","_updateToolbarFrequency","supportedCommands"]}},"dojo.widget.Editor.getItemProperties":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tvar props = {};\n\t\tswitch(name.toLowerCase()) {\n\t\t\tcase \"bold\":\n\t\t\tcase \"italic\":\n\t\t\tcase \"underline\":\n\t\t\tcase \"strikethrough\":\n\t\t\t\tprops.toggleItem = true;\n\t\t\t\tbreak;\n\t\t\tcase \"justifygroup\":\n\t\t\t\tprops.defaultButton = \"justifyleft\";\n\t\t\t\tprops.preventDeselect = true;\n\t\t\t\tprops.buttonGroup = true;\n\t\t\t\tbreak;\n\t\t\tcase \"listgroup\":\n\t\t\t\tprops.buttonGroup = true;\n\t\t\t\tbreak;\n\t\t\tcase \"save\":\n\t\t\tcase \"cancel\":\n\t\t\t\tprops.label = dojo.string.capitalize(name);\n\t\t\t\tbreak;\n\t\t\tcase \"forecolor\":\n\t\t\tcase \"hilitecolor\":\n\t\t\t\tprops.name = name;\n\t\t\t\tprops.toggleItem = true; \/\/ FIXME: they aren't exactly toggle items\n\t\t\t\tprops.icon = this.getCommandImage(name);\n\t\t\t\tbreak;\n\t\t\tcase \"formatblock\":\n\t\t\t\tprops.name = \"formatBlock\";\n\t\t\t\tprops.values = this.formatBlockItems;\n\t\t\t\tbreak;\n\t\t\tcase \"fontname\":\n\t\t\t\tprops.name = \"fontName\";\n\t\t\t\tprops.values = this.fontNameItems;\n\t\t\tcase \"fontsize\":\n\t\t\t\tprops.name = \"fontSize\";\n\t\t\t\tprops.values = this.fontSizeItems;\n\t\t}\n\t\treturn props;","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.buildRendering":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tvar node = frag[\"dojo:\"+this.widgetType.toLowerCase()][\"nodeRef\"];\n\t\tvar trt = dojo.widget.createWidget(this._richTextType, {\n\t\t\tfocusOnLoad: this.focusOnLoad,\n\t\t\tminHeight: this.minHeight\n\t\t}, node)\n\t\tvar _this = this;\n\t\t\/\/ this appears to fix a weird timing bug on Safari\n\t\tsetTimeout(function(){\n\t\t\t_this.setRichText(trt);\n\t\t\t_this.initToolbar();\n\t\t\t_this.fillInTemplate(args, frag);\n\t\t}, 0);","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.setRichText":{"meta":{"summary":"","parameters":{"richText":{"type":""}},"src":" \tif(this._richText && this._richText == richText) {\n\t\t\tdojo.debug(\"Already set the richText to this richText!\");\n\t\t\treturn;\n\t\t}\n\t\tif(this._richText && !this._richText.isClosed) {\n\t\t\tdojo.debug(\"You are switching richTexts yet you haven't closed the current one. Losing reference!\");\n\t\t}\n\t\tthis._richText = richText;\n\t\tdojo.event.connect(this._richText, \"close\", this, \"onClose\");\n\t\tdojo.event.connect(this._richText, \"onLoad\", this, \"onLoad\");\n\t\tdojo.event.connect(this._richText, \"onDisplayChanged\", this, \"updateToolbar\");\n\t\tif(this._toolbarContainer) {\n\t\t\tthis._toolbarContainer.enable();\n\t\t\tthis.updateToolbar(true);\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.initToolbar":{"meta":{"summary":"","src":" \tif(this._toolbarContainer) { return; } \/\/ only create it once\n\t\tthis._toolbarContainer = dojo.widget.createWidget(this._toolbarContainerType);\n\t\tvar tb = this.addToolbar();\n\t\tvar last = true;\n\t\tfor(var i = 0; i < this.items.length; i++) {\n\t\t\tif(this.items[i] == \"\\n\") { \/\/ new row\n\t\t\t\ttb = this.addToolbar();\n\t\t\t} else {\n\t\t\t\tif((this.items[i] == \"|\")&&(!last)){\n\t\t\t\t\tlast = true;\n\t\t\t\t}else{\n\t\t\t\t\tlast = this.addItem(this.items[i], tb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.insertToolbar(this._toolbarContainer.domNode, this._richText.domNode);\n\t\t\/\/ alert(new Date - tic);","returns":"only create it once","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.insertToolbar":{"meta":{"summary":"","parameters":{"tbNode":{"type":""},"richTextNode":{"type":""}},"src":" \tdojo.html.insertBefore(tbNode, richTextNode);\n\t\t\/\/dojo.html.insertBefore(this._toolbarContainer.domNode, this._richText.domNode);","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.addToolbar":{"meta":{"summary":"","parameters":{"toolbar":{"type":""}},"src":" \tthis.initToolbar();\n\t\tif(!(toolbar instanceof dojo.widget.Toolbar)) {\n\t\t\ttoolbar = dojo.widget.createWidget(this._toolbarType);\n\t\t}\n\t\tthis._toolbarContainer.addChild(toolbar);\n\t\tthis._toolbars.push(toolbar);\n\t\treturn toolbar;","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.addItem":{"meta":{"summary":"","parameters":{"item":{"type":""},"tb":{"type":""},"dontValidate":{"type":""}},"src":" \tif(!tb) { tb = this._toolbars[0]; }\n\t\tvar cmd = ((item)&&(!dojo.lang.isUndefined(item[\"getValue\"]))) ?  cmd = item[\"getValue\"](): item;\n\t\tvar groups = dojo.widget.Editor.itemGroups;\n\t\tif(item instanceof dojo.widget.ToolbarItem) {\n\t\t\ttb.addChild(item);\n\t\t} else if(groups[cmd]) {\n\t\t\tvar group = groups[cmd];\n\t\t\tvar worked = true;\n\t\t\tif(cmd == \"justifyGroup\" || cmd == \"listGroup\") {\n\t\t\t\tvar btnGroup = [cmd];\n\t\t\t\tfor(var i = 0 ; i < group.length; i++) {\n\t\t\t\t\tif(dontValidate || this.isSupportedCommand(group[i])) {\n\t\t\t\t\t\tbtnGroup.push(this.getCommandImage(group[i]));\n\t\t\t\t\t}else{\n\t\t\t\t\t\tworked = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(btnGroup.length){\n\t\t\t\t\t\/*\n\t\t\t\t\t\/\/ the addChild interface is assinine. Work around it.\n\t\t\t\t\tvar tprops = this.getItemProperties(cmd);\n\t\t\t\t\tvar tmpGroup = dojo.widget.createWidget(\"ToolbarButtonGroup\", tprops);\n\t\t\t\t\tdojo.debug(btnGroup);\n\t\t\t\t\tdojo.event.connect(tmpGroup, \"onClick\", this, \"_action\");\n\t\t\t\t\tdojo.event.connect(tmpGroup, \"onChangeSelect\", this, \"_action\");\n\t\t\t\t\t*\/\n\t\t\t\t\tvar btn = tb.addChild(btnGroup, null, this.getItemProperties(cmd));\n\t\t\t\t\tdojo.event.connect(btn, \"onClick\", this, \"_action\");\n\t\t\t\t\tdojo.event.connect(btn, \"onChangeSelect\", this, \"_action\");\n\t\t\t\t}\n\t\t\t\treturn worked;\n\t\t\t} else {\n\t\t\t\tfor(var i = 0; i < group.length; i++) {\n\t\t\t\t\tif(!this.addItem(group[i], tb)){\n\t\t\t\t\t\tworked = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn worked;\n\t\t\t}\n\t\t} else {\n\t\t\tif((!dontValidate)&&(!this.isSupportedCommand(cmd))){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(dontValidate || this.isSupportedCommand(cmd)) {\n\t\t\t\tcmd = cmd.toLowerCase();\n\t\t\t\tif(cmd == \"formatblock\") {\n\t\t\t\t\tvar select = dojo.widget.createWidget(\"ToolbarSelect\", {\n\t\t\t\t\t\tname: \"formatBlock\",\n\t\t\t\t\t\tvalues: this.formatBlockItems\n\t\t\t\t\t});\n\t\t\t\t\ttb.addChild(select);\n\t\t\t\t\tvar _this = this;\n\t\t\t\t\tdojo.event.connect(select, \"onSetValue\", function(item, value) {\n\t\t\t\t\t\t_this.onAction(\"formatBlock\", value);\n\t\t\t\t\t});\n\t\t\t\t} else if(cmd == \"fontname\") {\n\t\t\t\t\tvar select = dojo.widget.createWidget(\"ToolbarSelect\", {\n\t\t\t\t\t\tname: \"fontName\",\n\t\t\t\t\t\tvalues: this.fontNameItems\n\t\t\t\t\t});\n\t\t\t\t\ttb.addChild(select);\n\t\t\t\t\tdojo.event.connect(select, \"onSetValue\", dojo.lang.hitch(this, function(item, value) {\n\t\t\t\t\t\tthis.onAction(\"fontName\", value);\n\t\t\t\t\t}));\n\t\t\t\t} else if(cmd == \"fontsize\") {\n\t\t\t\t\tvar select = dojo.widget.createWidget(\"ToolbarSelect\", {\n\t\t\t\t\t\tname: \"fontSize\",\n\t\t\t\t\t\tvalues: this.fontSizeItems\n\t\t\t\t\t});\n\t\t\t\t\ttb.addChild(select);\n\t\t\t\t\tdojo.event.connect(select, \"onSetValue\", dojo.lang.hitch(this, function(item, value) {\n\t\t\t\t\t\tthis.onAction(\"fontSize\", value);\n\t\t\t\t\t}));\n\t\t\t\t} else if(dojo.lang.inArray(cmd, [\"forecolor\", \"hilitecolor\"])) {\n\t\t\t\t\tvar btn = tb.addChild(dojo.widget.createWidget(\"ToolbarColorDialog\", this.getItemProperties(cmd)));\n\t\t\t\t\tdojo.event.connect(btn, \"onSetValue\", this, \"_setValue\");\n\t\t\t\t} else {\n\t\t\t\t\tvar btn = tb.addChild(this.getCommandImage(cmd), null, this.getItemProperties(cmd));\n\t\t\t\t\tif(cmd == \"save\"){\n\t\t\t\t\t\tdojo.event.connect(btn, \"onClick\", this, \"_save\");\n\t\t\t\t\t}else if(cmd == \"cancel\"){\n\t\t\t\t\t\tdojo.event.connect(btn, \"onClick\", this, \"_close\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdojo.event.connect(btn, \"onClick\", this, \"_action\");\n\t\t\t\t\t\tdojo.event.connect(btn, \"onChangeSelect\", this, \"_action\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.enableToolbar":{"meta":{"summary":"","src":" \tif(this._toolbarContainer) {\n\t\t\tthis._toolbarContainer.domNode.style.display = \"\";\n\t\t\tthis._toolbarContainer.enable();\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.disableToolbar":{"meta":{"summary":"","parameters":{"hide":{"type":""}},"src":" \tif(hide){\n\t\t\tif(this._toolbarContainer){\n\t\t\t\tthis._toolbarContainer.domNode.style.display = \"none\";\n\t\t\t}\n\t\t}else{\n\t\t\tif(this._toolbarContainer){\n\t\t\t\tthis._toolbarContainer.disable();\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.updateToolbar":{"meta":{"summary":"","parameters":{"force":{"type":""}},"src":" \tif(!this._toolbarContainer) { return; }\n\t\t\/\/ keeps the toolbar from updating too frequently\n\t\t\/\/ TODO: generalize this functionality?\n\t\tvar diff = new Date() - this._updateToolbarLastRan;\n\t\tif(!force && this._updateToolbarLastRan && (diff < this._updateToolbarFrequency)) {\n\t\t\tclearTimeout(this._updateToolbarTimer);\n\t\t\tvar _this = this;\n\t\t\tthis._updateToolbarTimer = setTimeout(function() {\n\t\t\t\t_this.updateToolbar();\n\t\t\t}, this._updateToolbarFrequency\/2);\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis._updateToolbarLastRan = new Date();\n\t\t}\n\t\t\/\/ end frequency checker\n\t\tvar items = this._toolbarContainer.getItems();\n\t\tfor(var i = 0; i < items.length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif(item instanceof dojo.widget.ToolbarSeparator) { continue; }\n\t\t\tvar cmd = item._name;\n\t\t\tif (cmd == \"save\" || cmd == \"cancel\") { continue; }\n\t\t\telse if(cmd == \"justifyGroup\") {\n\t\t\t\ttry {\n\t\t\t\t\tif(!this._richText.queryCommandEnabled(\"justifyleft\")) {\n\t\t\t\t\t\titem.disable(false, true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\titem.enable(false, true);\n\t\t\t\t\t\tvar jitems = item.getItems();\n\t\t\t\t\t\tfor(var j = 0; j < jitems.length; j++) {\n\t\t\t\t\t\t\tvar name = jitems[j]._name;\n\t\t\t\t\t\t\tvar value = this._richText.queryCommandValue(name);\n\t\t\t\t\t\t\tif(typeof value == \"boolean\" && value) {\n\t\t\t\t\t\t\t\tvalue = name;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else if(typeof value == \"string\") {\n\t\t\t\t\t\t\t\tvalue = \"justify\"+value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!value) { value = \"justifyleft\"; } \/\/ TODO: query actual style\n\t\t\t\t\t\titem.setValue(value, false, true);\n\t\t\t\t\t}\n\t\t\t\t} catch(err) {}\n\t\t\t} else if(cmd == \"listGroup\") {\n\t\t\t\tvar litems = item.getItems();\n\t\t\t\tfor(var j = 0; j < litems.length; j++) {\n\t\t\t\t\tthis.updateItem(litems[j]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.updateItem(item);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.updateItem":{"meta":{"summary":"","parameters":{"item":{"type":""}},"src":" \ttry {\n\t\t\tvar cmd = item._name;\n\t\t\tvar enabled = this._richText.queryCommandEnabled(cmd);\n\t\t\titem.setEnabled(enabled, false, true);\n\t\t\tvar active = this._richText.queryCommandState(cmd);\n\t\t\tif(active && cmd == \"underline\") {\n\t\t\t\t\/\/ don't activate underlining if we are on a link\n\t\t\t\tactive = !this._richText.queryCommandEnabled(\"unlink\");\n\t\t\t}\n\t\t\titem.setSelected(active, false, true);\n\t\t\treturn true;\n\t\t} catch(err) {\n\t\t\treturn false;\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.isSupportedCommand":{"meta":{"summary":"","parameters":{"cmd":{"type":""}},"src":" \tvar yes = dojo.lang.inArray(cmd, this.supportedCommands);\n\t\tif(!yes) {\n\t\t\ttry {\n\t\t\t\tvar richText = this._richText || dojo.widget.HtmlRichText.prototype;\n\t\t\t\tyes = richText.queryCommandAvailable(cmd);\n\t\t\t} catch(E) {}\n\t\t}\n\t\treturn yes;","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.getCommandImage":{"meta":{"summary":"","parameters":{"cmd":{"type":""}},"src":" \tif(cmd == \"|\") {\n\t\t\treturn cmd;\n\t\t} else {\n\t\t\treturn dojo.uri.dojoUri(\"src\/widget\/templates\/buttons\/\" + cmd + \".gif\");\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor._action":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tthis._fire(\"onAction\", e.getValue());","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor._setValue":{"meta":{"summary":"","parameters":{"a":{"type":""},"b":{"type":""}},"src":" \tthis._fire(\"onAction\", a.getValue(), b);","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor._save":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif(!this._richText.isClosed){\n\t\t\tif(this.saveUrl.length){\n\t\t\t\tvar content = {};\n\t\t\t\tcontent[this.saveArgName] = this.getHtml();\n\t\t\t\tdojo.io.bind({\n\t\t\t\t\tmethod: this.saveMethod,\n\t\t\t\t\turl: this.saveUrl,\n\t\t\t\t\tcontent: content\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\tdojo.debug(\"please set a saveUrl for the editor\");\n\t\t\t}\n\t\t\tif(this.closeOnSave){\n\t\t\t\tthis._richText.close(e.getName().toLowerCase() == \"save\");\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor._close":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif(!this._richText.isClosed) {\n\t\t\tthis._richText.close(e.getName().toLowerCase() == \"save\");\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.onAction":{"meta":{"summary":"","parameters":{"cmd":{"type":""},"value":{"type":""}},"src":" \tswitch(cmd) {\n\t\t\tcase \"createlink\":\n\t\t\t\tif(!(value = prompt(\"Please enter the URL of the link:\", \"http:\/\/\"))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"insertimage\":\n\t\t\t\tif(!(value = prompt(\"Please enter the URL of the image:\", \"http:\/\/\"))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._richText.execCommand(cmd, value);","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":"\t\t\/\/ dojo.event.connect(this, \"onResized\", this._richText, \"onResized\");","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor._fire":{"meta":{"summary":"","parameters":{"eventName":{"type":""}},"src":" \tif(dojo.lang.isFunction(this[eventName])) {\n\t\t\tvar args = [];\n\t\t\tif(arguments.length == 1) {\n\t\t\t\targs.push(this);\n\t\t\t} else {\n\t\t\t\tfor(var i = 1; i < arguments.length; i++) {\n\t\t\t\t\targs.push(arguments[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis[eventName].apply(this, args);\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.getHtml":{"meta":{"summary":"","src":" \tthis._richText.contentFilters = this._richText.contentFilters.concat(this.contentFilters);\n\t\treturn this._richText.getEditorContent();","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.getEditorContent":{"meta":{"summary":"","src":" \treturn this.getHtml();","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.onClose":{"meta":{"summary":"","parameters":{"save":{"type":""},"hide":{"type":""}},"src":" \tthis.disableToolbar(hide);\n\t\tif(save) {\n\t\t\tthis._fire(\"onSave\");\n\t\t} else {\n\t\t\tthis._fire(\"onCancel\");\n\t\t}","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.onLoad":{"meta":{"summary":"","src":"","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.onSave":{"meta":{"summary":"","src":"","prototype":"dojo.widget.Editor"}},"dojo.widget.Editor.onCancel":{"meta":{"summary":"","src":"","prototype":"dojo.widget.Editor"}}},"objects":{"dojo.widget.Editor.itemGroups":{"meta":{"variables":["textGroup","blockGroup","justifyGroup","commandGroup","colorGroup","listGroup","indentGroup","linkGroup"]}},"dojo.widget.Editor.formatBlockValues":{"meta":{"variables":["Normal","Main heading","Sub heading","Sub sub heading","Preformatted"]}},"dojo.widget.Editor.fontNameValues":{"meta":{"variables":["Arial","Verdana","Times New Roman","Courier"]}},"dojo.widget.Editor.fontSizeValues":{"meta":{"variables":["2 (10 pt)","3 (12 pt)","4 (14 pt)","5 (18 pt)","6 (24 pt)","7 (36 pt)"]}}}}},"dojo.widget.Editor2":{"meta":{"requires":{"common":["dojo.io.*","dojo.widget.RichText","dojo.widget.Editor2Toolbar","dojo.widget.FloatingPane","dojo.widget.Editor2Plugin.AlwaysShowToolbar"]},"functions":{"dojo.widget.Editor2Dialog":{"meta":{"prototype_variables":["templatePath","modal","width","height","windowState","displayCloseAction","contentFile","contentClass"],"variables":["templatePath","modal","width","height","windowState","displayCloseAction","contentFile","contentClass"],"instance_variables":["contentWidget","bg.style.zIndex"],"summary":"Provides a Dialog which can be modal or normal for the Editor2."},"extra":{"variables":{"contentClass":{"type":"String","summary":"TODO modified from ModalDialogBase.checkSize to call _sizeBackground conditionally"}}}},"dojo.widget.Editor2Dialog.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tthis.fillInFloatingPaneTemplate(args, frag);\n\t\t\tdojo.widget.Editor2Dialog.superclass.fillInTemplate.call(this, args, frag);","call_chain":["dojo.widget.Editor2Dialog.superclass.fillInTemplate"],"prototype":"dojo.widget.Editor2Dialog"}},"dojo.widget.Editor2Dialog.postCreate":{"meta":{"summary":"","src":" \t\tif(this.contentFile){\n\t\t\t\tdojo.require(this.contentFile);\n\t\t\t}\n\t\t\tif(this.modal){\n\t\t\t\tdojo.widget.ModalDialogBase.prototype.postCreate.call(this);\n\t\t\t}else{\n\t\t\t\twith(this.domNode.style) {\n\t\t\t\t\tzIndex = 999;\n\t\t\t\t\tdisplay = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tdojo.widget.FloatingPaneBase.prototype.postCreate.apply(this, arguments);\n\t\t\tdojo.widget.Editor2Dialog.superclass.postCreate.call(this);\n\t\t\tif(this.width && this.height){\n\t\t\t\twith(this.domNode.style){\n\t\t\t\t\twidth = this.width;\n\t\t\t\t\theight = this.height;\n\t\t\t\t}\n\t\t\t}","call_chain":["dojo.widget.ModalDialogBase.prototype.postCreate","dojo.widget.FloatingPaneBase.prototype.postCreate","dojo.widget.Editor2Dialog.superclass.postCreate"],"prototype":"dojo.widget.Editor2Dialog"}},"dojo.widget.Editor2Dialog.createContent":{"meta":{"summary":"","src":" \t\tif(!this.contentWidget && this.contentClass){\n\t\t\t\tthis.contentWidget = dojo.widget.createWidget(this.contentClass);\n\t\t\t\tthis.addChild(this.contentWidget);\n\t\t\t}","prototype":"dojo.widget.Editor2Dialog"}},"dojo.widget.Editor2Dialog.show":{"meta":{"summary":"","src":" \t\tif(!this.contentWidget){\n\t\t\t\t\/\/buggy IE: if the dialog is hidden, the button widgets\n\t\t\t\t\/\/in the dialog can not be shown, so show it temporary (as the\n\t\t\t\t\/\/dialog may decide not to show it in loadContent() later)\n\t\t\t\tdojo.widget.Editor2Dialog.superclass.show.apply(this, arguments);\n\t\t\t\tthis.createContent();\n\t\t\t\tdojo.widget.Editor2Dialog.superclass.hide.call(this);\n\t\t\t}\n\t\t\tif(!this.contentWidget || !this.contentWidget.loadContent()){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.showFloatingPane();\n\t\t\tdojo.widget.Editor2Dialog.superclass.show.apply(this, arguments);\n\t\t\tif(this.modal){\n\t\t\t\tthis.showModalDialog();\n\t\t\t}\n\t\t\tif(this.modal){\n\t\t\t\t\/\/place the background div under this modal pane\n\t\t\t\tthis.bg.style.zIndex = this.domNode.style.zIndex-1;\n\t\t\t}","call_chain":["dojo.widget.Editor2Dialog.superclass.show","dojo.widget.Editor2Dialog.superclass.hide"],"prototype":"dojo.widget.Editor2Dialog"}},"dojo.widget.Editor2Dialog.onShow":{"meta":{"summary":"","src":" \t\tdojo.widget.Editor2Dialog.superclass.onShow.call(this);\n\t\t\tthis.onFloatingPaneShow();","call_chain":["dojo.widget.Editor2Dialog.superclass.onShow"],"prototype":"dojo.widget.Editor2Dialog"}},"dojo.widget.Editor2Dialog.closeWindow":{"meta":{"summary":"","src":" \t\tthis.hide();\n\t\t\tdojo.widget.Editor2Dialog.superclass.closeWindow.apply(this, arguments);","call_chain":["dojo.widget.Editor2Dialog.superclass.closeWindow"],"prototype":"dojo.widget.Editor2Dialog"}},"dojo.widget.Editor2Dialog.hide":{"meta":{"summary":"","src":" \t\tif(this.modal){\n\t\t\t\tthis.hideModalDialog();\n\t\t\t}\n\t\t\tdojo.widget.Editor2Dialog.superclass.hide.call(this);","call_chain":["dojo.widget.Editor2Dialog.superclass.hide"],"prototype":"dojo.widget.Editor2Dialog"}},"dojo.widget.Editor2Dialog.checkSize":{"meta":{"summary":"","src":" \t\tif(this.isShowing()){\n\t\t\t\tif(this.modal){\n\t\t\t\t\tthis._sizeBackground();\n\t\t\t\t}\n\t\t\t\tthis.placeModalDialog();\n\t\t\t\tthis.onResized();\n\t\t\t}","prototype":"dojo.widget.Editor2Dialog"}},"dojo.widget.Editor2DialogContent":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["widgetsInTemplate","loadContent"],"variables":["widgetsInTemplate","loadContent"],"summary":"dojo.widget.Editor2DialogContent is the actual content of a Editor2Dialog. This class should be subclassed to provide the content."}},"dojo.widget.Editor2DialogContent.cancel":{"meta":{"summary":"Default handler when cancel button is clicked.","src":" \tthis.parent.hide();","prototype":"dojo.widget.Editor2DialogContent"}},"dojo.widget.Editor2":{"meta":{"prototype_chain":["dojo.widget.RichText"],"call_chain":["dojo.widget.RichText"],"prototype_variables":["toolbarAlwaysVisible","toolbarWidget","scrollInterval","toolbarTemplatePath","toolbarTemplateCssPath","toolbarPlaceHolder","_inSourceMode","_htmlEditNode","toolbarGroup","shareToolbar","contextMenuGroupSet","_updateToolbarLastRan","_updateToolbarTimer","_updateToolbarFrequency","_lastStateTimestamp","shortcuts"],"variables":["toolbarAlwaysVisible","toolbarWidget","scrollInterval","toolbarTemplatePath","toolbarTemplateCssPath","toolbarPlaceHolder","_inSourceMode","_htmlEditNode","toolbarGroup","shareToolbar","contextMenuGroupSet","_updateToolbarLastRan","_updateToolbarTimer","_updateToolbarFrequency","_lastStateTimestamp","shortcuts"],"instance_variables":["toolbarGroup","toolbarWidget","loadedPlugins","_inSourceMode","_htmlEditNode","_htmlEditNode.style.display","_htmlEditNode.style.width","_htmlEditNode.style.height","_htmlEditNode.value","_bookmark","_updateToolbarTimer","_updateToolbarLastRan","_lastStateTimestamp","_loadedCommands"],"summary":"","description":"Plugins are available using dojo's require syntax. Please find available built-in plugins under src\/widget\/Editor2Plugin. Array: Commands shortcuts. Each element can has up to 3 fields: 1. String: the name of the command 2. String Optional: the char for shortcut key, by default the first char from the command name is used 3. Int Optional: specify the modifier of the shortcut, by default ctrl is used","src":" \tthis._loadedCommands={};"}},"dojo.widget.Editor2.editorOnLoad":{"meta":{"summary":"Create toolbar and other initialization routines. This is called after the finish of the loading of document in the editing element dojo.profile.start(\"dojo.widget.Editor2::editorOnLoad\");","src":"\t\t\tdojo.event.topic.publish(\"dojo.widget.Editor2::preLoadingToolbar\", this);\n\t\t\tif(this.toolbarAlwaysVisible){\n\t\t\t\tdojo.require(\"dojo.widget.Editor2Plugin.AlwaysShowToolbar\");\n\t\t\t}\n\t\t\tif(this.toolbarWidget){\n\t\t\t\tthis.toolbarWidget.show();\n\t\t\t\t\/\/re-add the toolbar to the new domNode (caused by open() on another element)\n\t\t\t\tdojo.html.insertBefore(this.toolbarWidget.domNode, this.domNode.firstChild);\n\t\t\t}else{\n\t\t\t\tif(this.shareToolbar){\n\t\t\t\t\tdojo.deprecated(\"Editor2:shareToolbar is deprecated in favor of toolbarGroup\", \"0.5\");\n\t\t\t\t\tthis.toolbarGroup = 'defaultDojoToolbarGroup';\n\t\t\t\t}\n\t\t\t\tif(this.toolbarGroup){\n\t\t\t\t\tif(dojo.widget.Editor2ToolbarGroups[this.toolbarGroup]){\n\t\t\t\t\t\tthis.toolbarWidget = dojo.widget.Editor2ToolbarGroups[this.toolbarGroup];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!this.toolbarWidget){\n\t\t\t\t\t\tvar tbOpts = {shareGroup: this.toolbarGroup, parent: this};\n\t\t\t\t\t\ttbOpts.templatePath = this.toolbarTemplatePath;\n\t\t\t\t\t\tif(this.toolbarTemplateCssPath){\n\t\t\t\t\t\t\ttbOpts.templateCssPath = this.toolbarTemplateCssPath;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.toolbarPlaceHolder){\n\t\t\t\t\t\t\tthis.toolbarWidget = dojo.widget.createWidget(\"Editor2Toolbar\", tbOpts, dojo.byId(this.toolbarPlaceHolder), \"after\");\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.toolbarWidget = dojo.widget.createWidget(\"Editor2Toolbar\", tbOpts, this.domNode.firstChild, \"before\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.toolbarGroup){\n\t\t\t\t\t\t\tdojo.widget.Editor2ToolbarGroups[this.toolbarGroup] = this.toolbarWidget;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdojo.event.connect(this, \"close\", this.toolbarWidget, \"hide\");\n\t\t\t\t\t\tthis.toolbarLoaded();\n\t\t\t\t}\n\t\t\t}\n\t\t\tdojo.event.topic.registerPublisher(\"Editor2.clobberFocus\", this, \"clobberFocus\");\n\t\t\tdojo.event.topic.subscribe(\"Editor2.clobberFocus\", this, \"setBlur\");\n\t\t\tdojo.event.topic.publish(\"dojo.widget.Editor2::onLoad\", this);\n\/\/\t\t\tdojo.profile.end(\"dojo.widget.Editor2::editorOnLoad\");","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.toolbarLoaded":{"meta":{"summary":"Fired when the toolbar for this editor is created. This event is for plugins to use","src":"\t\t\t\/\/ summary:\n\t\t\t\/\/\t\tFired when the toolbar for this editor is created.\n\t\t\t\/\/\t\tThis event is for plugins to use","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.registerLoadedPlugin":{"meta":{"summary":"Register a plugin which is loaded for this instance","parameters":{"obj":{"type":"Object"}},"src":" \t\tif(!this.loadedPlugins){\n\t\t\t\tthis.loadedPlugins = [];\n\t\t\t}\n\t\t\tthis.loadedPlugins.push(obj);","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.unregisterLoadedPlugin":{"meta":{"summary":"Delete a loaded plugin for this instance","parameters":{"obj":{"type":"Object"}},"src":" \t\tfor(var i in this.loadedPlugins){\n\t\t\t\tif(this.loadedPlugins[i] === obj){\n\t\t\t\t\tdelete this.loadedPlugins[i];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdojo.debug(\"dojo.widget.Editor2.unregisterLoadedPlugin: unknow plugin object: \"+obj);","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.execCommand":{"meta":{"summary":"","parameters":{"command":{"type":"String"},"argument":{"type":""}},"src":" \t\tswitch(command.toLowerCase()){\n\t\t\t\tcase 'htmltoggle':\n\t\t\t\t\tthis.toggleHtmlEditing();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tdojo.widget.Editor2.superclass.execCommand.apply(this, arguments);\n\t\t\t}","call_chain":["dojo.widget.Editor2.superclass.execCommand"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.queryCommandEnabled":{"meta":{"summary":"","parameters":{"command":{"type":"String"},"argument":{"type":""}},"src":" \t\tswitch(command.toLowerCase()){\n\t\t\t\tcase 'htmltoggle':\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\tif(this._inSourceMode){ return false;}\n\t\t\t\t\treturn dojo.widget.Editor2.superclass.queryCommandEnabled.apply(this, arguments);\n\t\t\t}","call_chain":["dojo.widget.Editor2.superclass.queryCommandEnabled"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.queryCommandState":{"meta":{"summary":"","parameters":{"command":{"type":"String"},"argument":{"type":""}},"src":" \t\tswitch(command.toLowerCase()){\n\t\t\t\tcase 'htmltoggle':\n\t\t\t\t\treturn this._inSourceMode;\n\t\t\t\tdefault:\n\t\t\t\t\treturn dojo.widget.Editor2.superclass.queryCommandState.apply(this, arguments);\n\t\t\t}","call_chain":["dojo.widget.Editor2.superclass.queryCommandState"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.onClick":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \t\tdojo.widget.Editor2.superclass.onClick.call(this, e);\n\t\t\t\/\/if Popup is used, call dojo.widget.PopupManager.onClick\n\t\t\t\/\/manually when click in the editing area to close all\n\t\t\t\/\/open popups (dropdowns)\n\t\t\tif(dojo.widget.PopupManager){\n\t\t\t\tif(!e){ \/\/IE\n\t\t\t\t\te = this.window.event;\n\t\t\t\t}\n\t\t\t\tdojo.widget.PopupManager.onClick(e);\n\t\t\t}","call_chain":["dojo.widget.Editor2.superclass.onClick"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.clobberFocus":{"meta":{"summary":"stub to signal other instances to clobber focus","src":"\t\t\t\/\/ summary: stub to signal other instances to clobber focus","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.toggleHtmlEditing":{"meta":{"summary":"toggle between WYSIWYG mode and HTML source mode","src":" \t\tif(this===dojo.widget.Editor2Manager.getCurrentInstance()){\n\t\t\t\tif(!this._inSourceMode){\n\t\t\t\t\tvar html = this.getEditorContent();\n\t\t\t\t\tthis._inSourceMode = true;\n\t\t\t\t\tif(!this._htmlEditNode){\n\t\t\t\t\t\tthis._htmlEditNode = dojo.doc().createElement(\"textarea\");\n\t\t\t\t\t\tdojo.html.insertAfter(this._htmlEditNode, this.editorObject);\n\t\t\t\t\t}\n\t\t\t\t\tthis._htmlEditNode.style.display = \"\";\n\t\t\t\t\tthis._htmlEditNode.style.width = \"100%\";\n\t\t\t\t\tthis._htmlEditNode.style.height = dojo.html.getBorderBox(this.editNode).height+\"px\";\n\t\t\t\t\tthis._htmlEditNode.value = html;\n\t\t\t\t\t\/\/activeX object (IE) doesn't like to be hidden, so move it outside of screen instead\n\t\t\t\t\twith(this.editorObject.style){\n\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\tleft = \"-2000px\";\n\t\t\t\t\t\ttop = \"-2000px\";\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tthis._inSourceMode = false;\n\t\t\t\t\t\/\/In IE activeX mode, if _htmlEditNode is focused,\n\t\t\t\t\t\/\/when toggling, an error would occur, so unfocus it\n\t\t\t\t\tthis._htmlEditNode.blur();\n\t\t\t\t\twith(this.editorObject.style){\n\t\t\t\t\t\tposition = \"\";\n\t\t\t\t\t\tleft = \"\";\n\t\t\t\t\t\ttop = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tvar html = this._htmlEditNode.value;\n\t\t\t\t\tdojo.lang.setTimeout(this, \"replaceEditorContent\", 1, html);\n\t\t\t\t\tthis._htmlEditNode.style.display = \"none\";\n\t\t\t\t\tthis.focus();\n\t\t\t\t}\n\t\t\t\tthis.onDisplayChanged(null, true);\n\t\t\t}","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.setFocus":{"meta":{"summary":"focus is set on this instance dojo.debug(\"setFocus: start \"+this.widgetId);","src":" \t\tif(dojo.widget.Editor2Manager.getCurrentInstance() === this){ return; }\n\t\t\tthis.clobberFocus();\n\/\/\t\t\tdojo.debug(\"setFocus:\", this);\n\t\t\tdojo.widget.Editor2Manager.setCurrentInstance(this);","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.setBlur":{"meta":{"summary":"focus on this instance is lost dojo.debug(\"setBlur:\", this); dojo.event.disconnect(this.toolbarWidget, \"exec\", this, \"execCommand\");","src":"\t\t\t\/\/ summary: focus on this instance is lost\n\/\/\t\t\t dojo.debug(\"setBlur:\", this);\n\t\t\t\/\/dojo.event.disconnect(this.toolbarWidget, \"exec\", this, \"execCommand\");","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.saveSelection":{"meta":{"summary":"save the current selection for restoring it","src":" \t\tthis._bookmark = null;\n\t\t\tthis._bookmark = dojo.withGlobal(this.window, dojo.html.selection.getBookmark);","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.restoreSelection":{"meta":{"summary":"restore the last saved selection","src":" \t\tif(this._bookmark){\n\t\t\t\tthis.focus(); \/\/require for none-activeX IE\n\t\t\t\tdojo.withGlobal(this.window, \"moveToBookmark\", dojo.html.selection, [this._bookmark]);\n\t\t\t\tthis._bookmark = null;\n\t\t\t}else{\n\t\t\t\tdojo.debug(\"restoreSelection: no saved selection is found!\");\n\t\t\t}","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.updateToolbar":{"meta":{"summary":"update the associated toolbar of this Editor2","parameters":{"force":{"type":"Boolean"}},"src":" \t\tif((!this.isLoaded)||(!this.toolbarWidget)){ return; }\n\t\t\t\/\/ keeps the toolbar from updating too frequently\n\t\t\t\/\/ TODO: generalize this functionality?\n\t\t\tvar diff = new Date() - this._updateToolbarLastRan;\n\t\t\tif( (!force)&&(this._updateToolbarLastRan)&&\n\t\t\t\t((diff < this._updateToolbarFrequency)) ){\n\t\t\t\tclearTimeout(this._updateToolbarTimer);\n\t\t\t\tvar _this = this;\n\t\t\t\tthis._updateToolbarTimer = setTimeout(function() {\n\t\t\t\t\t_this.updateToolbar();\n\t\t\t\t}, this._updateToolbarFrequency\/2);\n\t\t\t\treturn;\n\t\t\t}else{\n\t\t\t\tthis._updateToolbarLastRan = new Date();\n\t\t\t}\n\t\t\t\/\/ end frequency checker\n\t\t\t\/\/IE has the habit of generating events even when this editor is blurred, prevent this\n\t\t\tif(dojo.widget.Editor2Manager.getCurrentInstance() !== this){ return; }\n\t\t\tthis.toolbarWidget.update();","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.destroy":{"meta":{"summary":"","parameters":{"finalize":{"type":"Boolean"}},"src":" \t\tthis._htmlEditNode = null;\n\t\t\tdojo.event.disconnect(this, \"close\", this.toolbarWidget, \"hide\");\n\t\t\tif(!finalize){\n\t\t\t\tthis.toolbarWidget.destroy();\n\t\t\t}\n\t\t\tdojo.widget.Editor2.superclass.destroy.call(this);","call_chain":["dojo.widget.Editor2.superclass.destroy"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.onDisplayChanged":{"meta":{"summary":"","parameters":{"e":{"type":"Object"},"forceUpdate":{"type":"Boolean"}},"src":" \t\tthis._lastStateTimestamp = (new Date()).getTime();\n\t\t\tdojo.widget.Editor2.superclass.onDisplayChanged.call(this,e);\n\t\t\tthis.updateToolbar(forceUpdate);","call_chain":["dojo.widget.Editor2.superclass.onDisplayChanged"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.onLoad":{"meta":{"summary":"","src":" \t\ttry{\n\t\t\t\tdojo.widget.Editor2.superclass.onLoad.call(this);\n\t\t\t}catch(e){ \/\/ FIXME: debug why this is throwing errors in IE!\n\t\t\t\tdojo.debug(e);\n\t\t\t}\n\t\t\tthis.editorOnLoad();","call_chain":["dojo.widget.Editor2.superclass.onLoad"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.onFocus":{"meta":{"summary":"","src":" \t\tdojo.widget.Editor2.superclass.onFocus.call(this);\n\t\t\tthis.setFocus();","call_chain":["dojo.widget.Editor2.superclass.onFocus"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.getEditorContent":{"meta":{"summary":"","src":" \t\tif(this._inSourceMode){\n\t\t\t\treturn this._htmlEditNode.value;\n\t\t\t}\n\t\t\treturn dojo.widget.Editor2.superclass.getEditorContent.call(this);","call_chain":["dojo.widget.Editor2.superclass.getEditorContent"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.replaceEditorContent":{"meta":{"summary":"","parameters":{"html":{"type":""}},"src":" \t\tif(this._inSourceMode){\n\t\t\t\tthis._htmlEditNode.value = html;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdojo.widget.Editor2.superclass.replaceEditorContent.apply(this,arguments);","call_chain":["dojo.widget.Editor2.superclass.replaceEditorContent"],"prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.getCommand":{"meta":{"summary":"return a command associated with this instance of editor","parameters":{"name":{"type":"String"}},"src":" \t\tif(this._loadedCommands[name]){\n\t\t\t\treturn this._loadedCommands[name];\n\t\t\t}\n\t\t\tvar cmd = dojo.widget.Editor2Manager.getCommand(this, name);\n\t\t\tthis._loadedCommands[name] = cmd;\n\t\t\treturn cmd;","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2.setupDefaultShortcuts":{"meta":{"summary":"setup default shortcuts using Editor2 commands","src":" \t\tvar exec = function(cmd){ return function(){ cmd.execute(); } };\n\/\/\t\t\tif(!dojo.render.html.ie){\n\/\/\t\t\t\tthis.shortcuts.push(['redo','Z']);\n\/\/\t\t\t}\n\t\t\tvar self = this;\n\t\t\tdojo.lang.forEach(this.shortcuts, function(item){\n\t\t\t\tvar cmd = self.getCommand(item[0]);\n\t\t\t\tif(cmd){\n\t\t\t\t\tself.addKeyHandler(item[1]?item[1]:item[0].charAt(0), item[2]==undefined?self.KEY_CTRL:item[2], exec(cmd));\n\t\t\t\t}\n\t\t\t});\n\/\/\t\t\tthis.addKeyHandler(\"s\", ctrl, function () { this.save(true); });","prototype":"dojo.widget.Editor2"}},"dojo.widget.Editor2Manager":{"meta":{"variables":["_currentInstance","commandState"]}},"dojo.widget.Editor2Manager.getCurrentInstance":{"meta":{"summary":"Return the current focused Editor2 instance","src":" \treturn this._currentInstance;"}},"dojo.widget.Editor2Manager.setCurrentInstance":{"meta":{"summary":"Set current focused Editor2 instance","parameters":{"inst":{"type":"Widget"}},"src":" \tthis._currentInstance = inst;","instance_variables":["_currentInstance"]}},"dojo.widget.Editor2Manager.getCommand":{"meta":{"summary":"Return Editor2 command with the given name","parameters":{"editor":{"type":"dojo.widget.Editor2"},"name":{"type":"String"}},"src":" \tvar oCommand;\n\t\tname = name.toLowerCase();\n\t\tfor(var i=0;i<this._registeredHandlers.length;i++){\n\t\t\toCommand = this._registeredHandlers[i](editor, name);\n\t\t\tif(oCommand){\n\t\t\t\treturn oCommand;\n\t\t\t}\n\t\t}\n\t\tswitch(name){\n\t\t\tcase 'htmltoggle':\n\t\t\t\t\/\/Editor2 natively provide the htmltoggle functionalitity\n\t\t\t\t\/\/and it is treated as a builtin command\n\t\t\t\toCommand = new dojo.widget.Editor2BrowserCommand(editor, name);\n\t\t\t\tbreak;\n\t\t\tcase 'formatblock':\n\t\t\t\toCommand = new dojo.widget.Editor2FormatBlockCommand(editor, name);\n\t\t\t\tbreak;\n\t\t\tcase 'anchor':\n\t\t\t\toCommand = new dojo.widget.Editor2Command(editor, name);\n\t\t\t\tbreak;\n\t\t\t\/\/dialog command\n\t\t\tcase 'createlink':\n\t\t\t\toCommand = new dojo.widget.Editor2DialogCommand(editor, name,\n\t\t\t\t\t\t{contentFile: \"dojo.widget.Editor2Plugin.CreateLinkDialog\",\n\t\t\t\t\t\t\tcontentClass: \"Editor2CreateLinkDialog\",\n\t\t\t\t\t\t\ttitle: \"Insert\/Edit Link\", width: \"300px\", height: \"200px\"});\n\t\t\t\tbreak;\n\t\t\tcase 'insertimage':\n\t\t\t\toCommand = new dojo.widget.Editor2DialogCommand(editor, name,\n\t\t\t\t\t\t{contentFile: \"dojo.widget.Editor2Plugin.InsertImageDialog\",\n\t\t\t\t\t\t\tcontentClass: \"Editor2InsertImageDialog\",\n\t\t\t\t\t\t\ttitle: \"Insert\/Edit Image\", width: \"400px\", height: \"270px\"});\n\t\t\t\tbreak;\n\t\t\t\/\/ By default we assume that it is a builtin simple command.\n\t\t\tdefault:\n\t\t\t\tvar curtInst = this.getCurrentInstance();\n\t\t\t\tif((curtInst && curtInst.queryCommandAvailable(name)) ||\n\t\t\t\t\t(!curtInst && dojo.widget.Editor2.prototype.queryCommandAvailable(name))){\n\t\t\t\t\toCommand = new dojo.widget.Editor2BrowserCommand(editor, name);\n\t\t\t\t}else{\n\t\t\t\t\tdojo.debug(\"dojo.widget.Editor2Manager.getCommand: Unknown command \"+name);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t}\n\t\treturn oCommand;"},"extra":{"parameters":{"name":{"type":"name","summary":"of the command (case insensitive)"}}}},"dojo.widget.Editor2Manager.destroy":{"meta":{"summary":"Cleaning up. This is called automatically on page unload.","src":" \tthis._currentInstance = null;\n\t\tdojo.widget.HandlerManager.prototype.destroy.call(this);","instance_variables":["_currentInstance"],"call_chain":["dojo.widget.HandlerManager.prototype.destroy"]}}},"objects":{"dojo.widget.Editor2ToolbarGroups":{"meta":{"summary":"keeping track of all available share toolbar groups"}}}}},"dojo.widget.Editor2Plugin.AlwaysShowToolbar":{"meta":{"functions":{"dojo.widget.Editor2Plugin.AlwaysShowToolbar":{"meta":{"prototype_variables":["_scrollSetUp","_fixEnabled","_scrollThreshold","_handleScroll"],"variables":["_scrollSetUp","_fixEnabled","_scrollThreshold","_handleScroll"],"instance_variables":["scrollInterval","_scrollSetUp","_scrollThreshold","editor.editorObject.style.marginTop","_IEOriginalPos","_fixEnabled","_handleScroll","editor"],"summary":"","parameters":{"editor":{"type":""}},"src":" \tthis.editor = editor;\n\t\tthis.editor.registerLoadedPlugin(this);\n\t\tthis.setup();"}},"dojo.widget.Editor2Plugin.AlwaysShowToolbar.setup":{"meta":{"summary":"","src":" \tvar tdn = this.editor.toolbarWidget;\n\t\tif(!tdn.tbBgIframe){\n\t\t\ttdn.tbBgIframe = new dojo.html.BackgroundIframe(tdn.domNode);\n\t\t\ttdn.tbBgIframe.onResized();\n\t\t}\n\t\tthis.scrollInterval = setInterval(dojo.lang.hitch(this, \"globalOnScrollHandler\"), 100);\n\t\tdojo.event.connect(\"before\", this.editor.toolbarWidget, \"destroy\", this, \"destroy\");","prototype":"dojo.widget.Editor2Plugin.AlwaysShowToolbar"}},"dojo.widget.Editor2Plugin.AlwaysShowToolbar.globalOnScrollHandler":{"meta":{"summary":"","src":" \tvar isIE = dojo.render.html.ie;\n\t\tif(!this._handleScroll){ return; }\n\t\tvar dh = dojo.html;\n\t\tvar tdn = this.editor.toolbarWidget.domNode;\n\t\tvar db = dojo.body();\n\t\tif(!this._scrollSetUp){\n\t\t\tthis._scrollSetUp = true;\n\t\t\tvar editorWidth =  dh.getMarginBox(this.editor.domNode).width; \n\t\t\tthis._scrollThreshold = dh.abs(tdn, true).y;\n\t\t\t\/\/ dojo.debug(\"threshold:\", this._scrollThreshold);\n\t\t\tif((isIE)&&(db)&&(dh.getStyle(db, \"background-image\")==\"none\")){\n\t\t\t\twith(db.style){\n\t\t\t\t\tbackgroundImage = \"url(\" + dojo.uri.dojoUri(\"src\/widget\/templates\/images\/blank.gif\") + \")\";\n\t\t\t\t\tbackgroundAttachment = \"fixed\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar scrollPos = (window[\"pageYOffset\"]) ? window[\"pageYOffset\"] : (document[\"documentElement\"]||document[\"body\"]).scrollTop;\n\t\t\/\/ FIXME: need to have top and bottom thresholds so toolbar doesn't keep scrolling past the bottom\n\t\tif(scrollPos > this._scrollThreshold){\n\t\t\t\/\/ dojo.debug(scrollPos);\n\t\t\tif(!this._fixEnabled){\n\t\t\t\tvar tdnbox = dojo.html.getMarginBox(tdn);\n\t\t\t\tthis.editor.editorObject.style.marginTop = tdnbox.height+\"px\";\n\t\t\t\tif(isIE){\n\t\t\t\t\t\/\/ FIXME: should we just use setBehvior() here instead?\n\t\t\t\t\ttdn.style.left = dojo.html.abs(tdn, dojo.html.boxSizing.MARGIN_BOX).x;\n\t\t\t\t\tif(tdn.previousSibling){\n\t\t\t\t\t\tthis._IEOriginalPos = ['after',tdn.previousSibling];\n\t\t\t\t\t}else if(tdn.nextSibling){\n\t\t\t\t\t\tthis._IEOriginalPos = ['before',tdn.nextSibling];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis._IEOriginalPos = ['',tdn.parentNode];\n\t\t\t\t\t}\n\t\t\t\t\tdojo.body().appendChild(tdn);\n\t\t\t\t\tdojo.html.addClass(tdn, \"IEFixedToolbar\");\n\t\t\t\t}else{\n\t\t\t\t\twith(tdn.style){\n\t\t\t\t\t\tposition = \"fixed\";\n\t\t\t\t\t\ttop = \"0px\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttdn.style.width = tdnbox.width + \"px\";\n\t\t\t\ttdn.style.zIndex = 1000;\n\t\t\t\tthis._fixEnabled = true;\n\t\t\t}\n\t\t\t\/\/ if we're showing the floating toolbar, make sure that if\n\t\t\t\/\/ we've scrolled past the bottom of the editor that we hide\n\t\t\t\/\/ the toolbar for this instance of the editor.\n\t\t\t\/\/ TODO: when we get multiple editor toolbar support working\n\t\t\t\/\/ correctly, ensure that we check this against the scroll\n\t\t\t\/\/ position of the bottom-most editor instance.\n\t\t\tif(!dojo.render.html.safari){\n\t\t\t\t\/\/ safari reports a bunch of things incorrectly here\n\t\t\t\tvar eHeight = (this.height) ? parseInt(this.editor.height) : this.editor._lastHeight;\n\t\t\t\tif(scrollPos > (this._scrollThreshold+eHeight)){\n\t\t\t\t\ttdn.style.display = \"none\";\n\t\t\t\t}else{\n\t\t\t\t\ttdn.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}else if(this._fixEnabled){\n\t\t\t(this.editor.object || this.editor.iframe).style.marginTop = null;\n\t\t\twith(tdn.style){\n\t\t\t\tposition = \"\";\n\t\t\t\ttop = \"\";\n\t\t\t\tzIndex = \"\";\n\t\t\t\tdisplay = \"\";\n\t\t\t}\n\t\t\tif(isIE){\n\t\t\t\ttdn.style.left = \"\";\n\t\t\t\tdojo.html.removeClass(tdn, \"IEFixedToolbar\");\n\t\t\t\tif(this._IEOriginalPos){\n\t\t\t\t\tdojo.html.insertAtPosition(tdn, this._IEOriginalPos[1], this._IEOriginalPos[0]);\n\t\t\t\t\tthis._IEOriginalPos = null;\n\t\t\t\t}else{\n\t\t\t\t\tdojo.html.insertBefore(tdn, this.editor.object||this.editor.iframe);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttdn.style.width = \"\";\n\t\t\tthis._fixEnabled = false;\n\t\t}","prototype":"dojo.widget.Editor2Plugin.AlwaysShowToolbar"}},"dojo.widget.Editor2Plugin.AlwaysShowToolbar.destroy":{"meta":{"summary":"","src":" \tthis._IEOriginalPos = null;\n\t\tthis._handleScroll = false;\n\t\tclearInterval(this.scrollInterval);\n\t\tthis.editor.unregisterLoadedPlugin(this);\n\t\tif(dojo.render.html.ie){\n\t\t\tdojo.html.removeClass(this.editor.toolbarWidget.domNode, \"IEFixedToolbar\");\n\t\t}","prototype":"dojo.widget.Editor2Plugin.AlwaysShowToolbar"}}}}},"dojo.widget.Editor2Plugin.ContextMenu":{"meta":{"requires":{"common":["dojo.widget.Menu2"]},"functions":{"dojo.widget.Editor2Plugin.ContextMenu.bindEditor":{"meta":{"summary":"","parameters":{"editor":{"type":""}},"src":" \tthis.contextMenu.bindDomNode(editor.document.body);","prototype":"dojo.widget.Editor2Plugin.ContextMenu"}},"dojo.widget.Editor2Plugin.ContextMenu.setup":{"meta":{"summary":"","parameters":{"gs":{"type":""}},"src":" \tfor(var i in gs){\n\t\t\tvar g = dojo.widget.Editor2Plugin.ContextMenuManager.getGroup(gs[i], this);\n\t\t\tif(g){\n\t\t\t\tthis.groups.push(g);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor2Plugin.ContextMenu"}},"dojo.widget.Editor2Plugin.ContextMenu.aboutToShow":{"meta":{"summary":"","src":" \tvar first = true;\n\t\tfor(var i in this.groups){\n\t\t\tif(i>0 && this.separators.length != this.groups.length-1){\n\t\t\t\tthis.separators.push(dojo.widget.createWidget(\"MenuSeparator2\", {}));\n\t\t\t\tthis.contextMenu.addChild(this.separators[this.separators.length-1]);\n\t\t\t}\n\t\t\tif(this.groups[i].refresh()){\n\t\t\t\tif(i>0){\n\t\t\t\t\tif(first){\n\t\t\t\t\t\tthis.separators[i-1].hide();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.separators[i-1].show();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(first){ first = false; }\n\t\t\t}else{\n\t\t\t\tif(i>0){\n\t\t\t\t\tthis.separators[i-1].hide();\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor2Plugin.ContextMenu"}},"dojo.widget.Editor2Plugin.ContextMenu.destroy":{"meta":{"summary":"","src":" \tthis.editor.unregisterLoadedPlugin(this);\n\t\tdelete this.groups;\n\t\tdelete this.separators;\n\t\tthis.contextMenu.destroy();\n\t\tdelete this.contextMenu;","prototype":"dojo.widget.Editor2Plugin.ContextMenu"}},"dojo.widget.Editor2Plugin.ContextMenu":{"meta":{"summary":"","parameters":{"editor":{"type":""},"gs":{"type":""}},"src":" \tthis.groups = [];\n\t\tthis.separators = [];\n\t\tthis.editor = editor;\n\t\tthis.editor.registerLoadedPlugin(this);\n\t\tthis.contextMenu = dojo.widget.createWidget(\"PopupMenu2\", {});\n\t\tdojo.body().appendChild(this.contextMenu.domNode);\n\t\tthis.bindEditor(this.editor);\n\t\tdojo.event.connect(this.contextMenu, \"aboutToShow\", this, \"aboutToShow\");\n\t\tdojo.event.connect(this.editor, \"destroy\", this, \"destroy\");\n\t\tthis.setup(gs);","instance_variables":["groups","separators","editor","contextMenu"]}},"dojo.widget.Editor2Plugin.SimpleContextMenuGroup.refresh":{"meta":{"summary":"","src":" \tif(!this.items.length){\n\t\t\tthis.createItems();\n\t\t\tfor(var i in this.items){\n\t\t\t\tthis.contextMenu.addChild(this.items[i]);\n\t\t\t}\n\t\t}\n\t\treturn this.checkVisibility();","prototype":"dojo.widget.Editor2Plugin.SimpleContextMenuGroup"}},"dojo.widget.Editor2Plugin.SimpleContextMenuGroup.destroy":{"meta":{"summary":"","src":" \tthis.contextmenu = null;\n\t\tdelete this.items;\n\t\tdelete this.contextMenu;","prototype":"dojo.widget.Editor2Plugin.SimpleContextMenuGroup"}},"dojo.widget.Editor2Plugin.SimpleContextMenuGroup":{"meta":{"instance_variables":["contextmenu","contextMenu","items"],"summary":"","parameters":{"contextmenuplugin":{"type":""}},"src":" \tthis.contextMenu = contextmenuplugin.contextMenu;\n\t\tthis.items = [];\n\t\tdojo.event.connect(contextmenuplugin, \"destroy\", this, \"destroy\");"}},"dojo.widget.Editor2Plugin.SimpleContextMenuGroup.createItems":{"meta":{"summary":"","src":"","prototype":"dojo.widget.Editor2Plugin.SimpleContextMenuGroup"}},"dojo.widget.Editor2Plugin.SimpleContextMenuGroup.checkVisibility":{"meta":{"summary":"","src":" \tvar show = false;\n\t\tfor(var i in this.items){\n\t\t\tshow = show || this.items[i].refresh();\n\t\t}\n\t\tvar action = show ? \"show\" : \"hide\";\n\t\tfor(var i in this.items){\n\t\t\tthis.items[i][action]();\n\t\t}\n\t\treturn show;","prototype":"dojo.widget.Editor2Plugin.SimpleContextMenuGroup"}},"dojo.widget.Editor2Plugin.GenericContextMenuGroup":{"meta":{"prototype_chain":["dojo.widget.Editor2Plugin.SimpleContextMenuGroup"],"call_chain":["dojo.widget.Editor2Plugin.SimpleContextMenuGroup"]}},"dojo.widget.Editor2Plugin.LinkContextMenuGroup":{"meta":{"prototype_chain":["dojo.widget.Editor2Plugin.SimpleContextMenuGroup"],"call_chain":["dojo.widget.Editor2Plugin.SimpleContextMenuGroup"]}},"dojo.widget.Editor2Plugin.ImageContextMenuGroup":{"meta":{"prototype_chain":["dojo.widget.Editor2Plugin.SimpleContextMenuGroup"],"call_chain":["dojo.widget.Editor2Plugin.SimpleContextMenuGroup"]}},"dojo.widget.Editor2ContextMenuItem":{"meta":{"prototype_chain":["dojo.widget.MenuItem2"],"call_chain":["dojo.widget.MenuItem2"],"prototype_variables":["command"],"variables":["command"],"instance_variables":["caption","domNode.style.display"]}},"dojo.widget.Editor2ContextMenuItem.buildRendering":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tthis.caption = curInst.getCommand(this.command).getText();\n\t\tdojo.widget.Editor2ContextMenuItem.superclass.buildRendering.apply(this, arguments);","call_chain":["dojo.widget.Editor2ContextMenuItem.superclass.buildRendering"],"prototype":"dojo.widget.Editor2ContextMenuItem"}},"dojo.widget.Editor2ContextMenuItem.onClick":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tif(curInst){\n\t\t\tvar _command = curInst.getCommand(this.command);\n\t\t\tif(_command){\n\t\t\t\t_command.execute();\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor2ContextMenuItem"}},"dojo.widget.Editor2ContextMenuItem.refresh":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tif(curInst){\n\t\t\tvar _command = curInst.getCommand(this.command);\n\t\t\tif(_command){\n\t\t\t\tif(_command.getState() == dojo.widget.Editor2Manager.commandState.Disabled){\n\t\t\t\t\tthis.disable();\n\t\t\t\t\treturn false;\n\t\t\t\t}else{\n\t\t\t\t\tthis.enable();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor2ContextMenuItem"}},"dojo.widget.Editor2ContextMenuItem.hide":{"meta":{"summary":"","src":" \tthis.domNode.style.display = \"none\";","prototype":"dojo.widget.Editor2ContextMenuItem"}},"dojo.widget.Editor2ContextMenuItem.show":{"meta":{"summary":"","src":" \tthis.domNode.style.display = \"\";","prototype":"dojo.widget.Editor2ContextMenuItem"}},"dojo.widget.Editor2Plugin.ContextMenuManager.registerGroup":{"meta":{"summary":"","parameters":{"name":{"type":""},"handler":{"type":""}},"src":" \tif(this._registeredGroups[name]){\n\t\t\talert(\"dojo.widget.Editor2Plugin.ContextMenuManager.registerGroup: menu group \"+name+\"is already registered. Ignored.\");\n\t\t\treturn;\n\t\t}\n\t\tthis._registeredGroups[name] = handler;"}},"dojo.widget.Editor2Plugin.ContextMenuManager.removeGroup":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tdelete this._registeredGroups[name];"}},"dojo.widget.Editor2Plugin.ContextMenuManager.getGroup":{"meta":{"summary":"","parameters":{"name":{"type":""},"contextmenuplugin":{"type":""}},"src":" \tif(this._registeredGroups[name]){\n\t\t\tvar item = this._registeredGroups[name](name, contextmenuplugin);\n\t\t\tif(item){\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t\tswitch(name){\n\t\t\tcase 'Generic':\n\t\t\tcase 'Link':\n\t\t\tcase 'Image':\n\t\t\t\treturn new dojo.widget.Editor2Plugin[name+\"ContextMenuGroup\"](contextmenuplugin);\n\t\t\t\/\/TODO\n\t\t\tcase 'Anchor':\n\t\t\tcase 'List':\n\t\t}"}},"dojo.widget.Editor2Plugin.ContextMenuManager.registerGroupSet":{"meta":{"summary":"register a group set","parameters":{"name":{"type":"String"},"set":{"type":"Array"}},"src":" \tthis._contextMenuGroupSets[name] = set;"},"extra":{"parameters":{"name":{"type":"name","summary":"of the group set"},"set":{"type":"an","summary":"array of groups, such as ['Generic','Link']"}}}},"dojo.widget.Editor2Plugin.ContextMenuManager.removeGroupSet":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tvar set = this._contextMenuGroupSets[name];\n\t\tdelete this._contextMenuGroupSets[name];\n\t\treturn set;"}},"dojo.widget.Editor2Plugin.ContextMenuManager.getContextMenu":{"meta":{"summary":"","parameters":{"editor":{"type":""}},"src":" \tvar set = editor.contextMenuGroupSet || 'defaultDojoEditor2MenuGroupSet';\n\t\tif(this._menus[set]){\n\t\t\tthis._menus[set].bindEditor(editor);\n\t\t\treturn this._menus[set];\n\t\t}\n\t\tvar gs = (editor.contextMenuGroupSet && this._contextMenuGroupSets[editor.contextMenuGroupSet]) || this.menuGroups;\n\t\tvar menu = new dojo.widget.Editor2Plugin.ContextMenu(editor, gs);\n\t\tthis._menus[set] = menu;\n\t\treturn menu;"}}},"objects":{"dojo.widget.Editor2Plugin.ContextMenuManager":{"meta":{"variables":["menuGroups"]}}}}},"dojo.widget.Editor2Plugin.CreateLinkDialog":{"meta":{"functions":{"dojo.widget.Editor2CreateLinkDialog":{"meta":{"prototype_chain":["dojo.widget.Editor2DialogContent"],"call_chain":["dojo.widget.Editor2DialogContent"],"prototype_variables":["templatePath","editableAttributes"],"variables":["templatePath","editableAttributes"],"instance_variables":["linkNode","extraAttribText"]}},"dojo.widget.Editor2CreateLinkDialog.loadContent":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tcurInst.saveSelection(); \/\/save selection (none-activeX IE)\n\t\tthis.linkNode = dojo.withGlobal(curInst.window, \"getAncestorElement\", dojo.html.selection, ['a']);\n\t\tvar linkAttributes = {};\n\t\tthis.extraAttribText = \"\";\n\t\tif(this.linkNode){\n\t\t\tvar attrs = this.linkNode.attributes;\n\t\t\tfor(var i=0; i<attrs.length; i++) {\n\t\t\t\tif(dojo.lang.find(this.editableAttributes, attrs[i].name.toLowerCase())>-1){\n\t\t\t\t\tlinkAttributes[attrs[i].name] = attrs[i].value;\n\t\t\t\t}else{\n\t\t\t\t\t\/\/IE lists all attributes, even default ones, filter them\n\t\t\t\t\tif(attrs[i].specified == undefined || attrs[i].specified){\n\t\t\t\t\t\tthis.extraAttribText += attrs[i].name + '=\"'+attrs[i].value+'\" ';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tvar html = dojo.withGlobal(curInst.window, \"getSelectedText\", dojo.html.selection);\n\t\t\tif(html == null || html.length == 0){\n\t\t\t\talert(\"Please select some text to create a link.\");\n\t\t\t\treturn false;\/\/do not show the dialog\n\t\t\t}\n\t\t}\n\t\tfor(var i=0; i<this.editableAttributes.length; ++i){\n\t\t\tname = this.editableAttributes[i];\n\t\t\tthis[\"link_\"+name].value = (linkAttributes[name] == undefined) ? \"\" : linkAttributes[name] ;\n\t\t}\n\t\treturn true;","returns":"do not show the dialog","prototype":"dojo.widget.Editor2CreateLinkDialog"}},"dojo.widget.Editor2CreateLinkDialog.ok":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tcurInst.restoreSelection(); \/\/restore previous selection, required for none-activeX IE\n\t\tif(!this.linkNode){\n\t\t\tvar html = dojo.withGlobal(curInst.window, \"getSelectedHtml\", dojo.html.selection);\n\t\t}else{\n\t\t\tvar html = this.linkNode.innerHTML;\n\t\t\tdojo.withGlobal(curInst.window, \"selectElement\", dojo.html.selection, [this.linkNode]);\n\t\t}\n\t\tvar attstr='';\n\t\tfor(var i=0; i<this.editableAttributes.length; ++i){\n\t\t\tname = this.editableAttributes[i];\n\t\t\tvar value = this[\"link_\"+name].value;\n\t\t\tif(value.length > 0){\n\t\t\t\tattstr += name + '=\"'+value+'\" ';\n\t\t\t}\n\t\t}\n\t\tcurInst.execCommand('inserthtml', '<a '+attstr+this.extraAttribText+'>'+html+'<\/a>');\n\t\tthis.cancel();","prototype":"dojo.widget.Editor2CreateLinkDialog"}}}}},"dojo.widget.Editor2Plugin.FindReplace":{"meta":{"requires":{"common":["dojo.widget.Editor2"]},"functions":{"dojo.widget.Editor2Plugin.FindCommand":{"meta":{"prototype_chain":["dojo.widget.Editor2DialogCommand"],"call_chain":["dojo.widget.Editor2DialogCommand"]}},"dojo.widget.Editor2Plugin.FindReplace.getCommand":{"meta":{"summary":"","parameters":{"editor":{"type":""},"name":{"type":""}},"src":" \tvar name = name.toLowerCase();\n\t\tvar command;\n\t\tif(name == 'find'){\n\t\t\tcommand = new dojo.widget.Editor2Plugin.FindCommand(editor, 'find', \n\t\t\t\t{contentFile: \"dojo.widget.Editor2Plugin.FindReplaceDialog\", \n\t\t\t\tcontentClass: \"Editor2FindDialog\",\n\t\t\t\ttitle: \"Find\", width: \"350px\", height: \"150px\", modal: false});\n\t\t}else if(name == 'replace') {\n\t\t\tcommand = new dojo.widget.Editor2DialogCommand(editor, 'replace', \n\t\t\t\t{contentFile: \"dojo.widget.Editor2Plugin.FindReplaceDialog\", \n\t\t\t\tcontentClass: \"Editor2ReplaceDialog\",\n\t\t\t\thref: dojo.uri.dojoUri(\"src\/widget\/templates\/Editor2\/Dialog\/replace.html\"), \n\t\t\t\ttitle: \"Replace\", width: \"350px\", height: \"200px\", modal: false});\n\t\t}\n\t\treturn command;"}},"dojo.widget.Editor2Plugin.FindReplace.getToolbarItem":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tvar name = name.toLowerCase();\n\t\tvar item;\n\t\tif(name == 'replace'){\n\t\t\titem = new dojo.widget.Editor2ToolbarButton('Replace');\n\t\t}else if(name == 'find') {\n\t\t\titem = new dojo.widget.Editor2ToolbarButton('Find');\n\t\t}\n\t\treturn item;"}}}}},"dojo.widget.Editor2Plugin.FindReplaceDialog":{"meta":{"functions":{"dojo.widget.Editor2FindDialog":{"meta":{"prototype_chain":["dojo.widget.Editor2DialogContent"],"call_chain":["dojo.widget.Editor2DialogContent"],"prototype_variables":["templatePath"],"variables":["templatePath"]}},"dojo.widget.Editor2FindDialog.find":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tvar findcmd = curInst.getCommand('find');\n\t\tvar option = 0;\n\t\tif(this[\"find_option_casesens\"].checked){\n\t\t\toption |= findcmd.SearchOption.CaseSensitive;\n\t\t}\n\t\tif(this[\"find_option_backwards\"].checked){\n\t\t\toption |= findcmd.SearchOption.SearchBackwards;\n\t\t}\n\t\tif(this[\"find_option_wholeword\"].checked){\n\t\t\toption |= findcmd.SearchOption.WholeWord;\n\t\t}\n\t\tfindcmd.find(this[\"find_text\"].value, option);","prototype":"dojo.widget.Editor2FindDialog"}},"dojo.widget.Editor2ReplaceDialog":{"meta":{"prototype_chain":["dojo.widget.Editor2DialogContent"],"call_chain":["dojo.widget.Editor2DialogContent"],"prototype_variables":["templatePath"],"variables":["templatePath"]}},"dojo.widget.Editor2ReplaceDialog.replace":{"meta":{"summary":"","src":" \talert(\"not implemented yet\");","prototype":"dojo.widget.Editor2ReplaceDialog"}},"dojo.widget.Editor2ReplaceDialog.replaceAll":{"meta":{"summary":"","src":" \talert(\"not implemented yet\");","prototype":"dojo.widget.Editor2ReplaceDialog"}}}}},"dojo.widget.Editor2Plugin.InsertImageDialog":{"meta":{"functions":{"dojo.widget.Editor2InsertImageDialog":{"meta":{"prototype_chain":["dojo.widget.Editor2DialogContent"],"call_chain":["dojo.widget.Editor2DialogContent"],"prototype_variables":["templatePath","editableAttributes"],"variables":["templatePath","editableAttributes"],"instance_variables":["imageNode","extraAttribText"]}},"dojo.widget.Editor2InsertImageDialog.loadContent":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tthis.imageNode = dojo.withGlobal(curInst.window, \"getSelectedElement\", dojo.html.selection);\n\t\tif(!this.imageNode){\n\t\t\tthis.imageNode = dojo.withGlobal(curInst.window, \"getAncestorElement\", dojo.html.selection, ['img']);\n\t\t}\n\t\tvar imageAttributes = {};\n\t\tthis.extraAttribText = \"\";\n\t\tif(this.imageNode){\n\t\t\tvar attrs = this.imageNode.attributes;\n\t\t\tfor(var i=0; i<attrs.length; i++) {\n\t\t\t\tif(dojo.lang.find(this.editableAttributes, attrs[i].name.toLowerCase())>-1){\n\t\t\t\t\timageAttributes[attrs[i].name] = attrs[i].value;\n\t\t\t\t}else{\n\t\t\t\t\tthis.extraAttribText += attrs[i].name + '=\"'+attrs[i].value+'\" ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(var i=0; i<this.editableAttributes.length; ++i){\n\t\t\tname = this.editableAttributes[i];\n\t\t\tthis[\"image_\"+name].value = (imageAttributes[name] == undefined) ? \"\" : imageAttributes[name] ;\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.Editor2InsertImageDialog"}},"dojo.widget.Editor2InsertImageDialog.ok":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tvar insertcmd = curInst.getCommand('inserthtml');\n\t\tvar option = 0;\n\t\tvar attstr='';\n\t\tfor(var i=0; i<this.editableAttributes.length; ++i){\n\t\t\tname = this.editableAttributes[i];\n\t\t\tvar value = this[\"image_\"+name].value;\n\t\t\tif(value.length > 0){\n\t\t\t\tattstr += name + '=\"'+value+'\" ';\n\t\t\t}\n\t\t}\n\t\tif(this.imageNode){\n\t\t\tdojo.withGlobal(curInst.window, \"selectElement\", dojo.html.selection, [this.imageNode]);\n\t\t}\n\t\tinsertcmd.execute('<img '+attstr+this.extraAttribText+'\/>');\n\t\tthis.cancel();","prototype":"dojo.widget.Editor2InsertImageDialog"}}}}},"dojo.widget.Editor2Plugin.InsertTableDialog":{"meta":{"functions":{"dojo.widget.Editor2InsertTableDialog":{"meta":{"prototype_chain":["dojo.widget.Editor2DialogContent"],"call_chain":["dojo.widget.Editor2DialogContent"],"prototype_variables":["templatePath","editableAttributes"],"variables":["templatePath","editableAttributes"],"instance_variables":["tableNode","extraAttribText"]}},"dojo.widget.Editor2InsertTableDialog.loadContent":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tcurInst.saveSelection(); \/\/save selection (none-activeX IE)\n\t\tthis.tableNode = dojo.withGlobal(curInst.window, \"getSelectedElement\", dojo.html.selection);\n\t\tif(!this.tableNode || this.tableNode.tagName.toLowerCase() != 'table'){\n\t\t\tthis.tableNode = dojo.withGlobal(curInst.window, \"getAncestorElement\", dojo.html.selection, ['table']);\n\t\t}\n\t\tvar tableAttributes = {};\n\t\tthis.extraAttribText = \"\";\n\t\tif(this.tableNode){\n\t\t\tthis[\"table_rows\"].value = this.tableNode.rows.length;\n\t\t\tthis[\"table_rows\"].disabled = true;\n\t\t\tthis[\"table_cols\"].value = this.tableNode.rows[0].cells.length;\n\t\t\tthis[\"table_cols\"].disabled = true;\n\t\t\tif (this.tableNode.caption){\n\t\t\t\tthis[\"table_caption\"].value = this.tableNode.caption.innerHTML;\n\t\t\t}else{\n\t\t\t\tthis[\"table_caption\"].value = \"\";\n\t\t\t}\n\t\t\tvar width = this.tableNode.style.width || this.tableNode.width;\n\t\t\tif(width){\n\t\t\t\tthis[\"table_width\"].value = parseInt(width);\n\t\t\t\tif (width.indexOf('%') > -1){\n\t\t\t\t\tthis[\"table_widthtype\"].value = \"percent\";\n\t\t\t\t}else{\n\t\t\t\t\tthis[\"table_widthtype\"].value = \"pixels\";\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis[\"table_width\"].value = \"100\";\n\t\t\t}\n\t\t\tvar height = this.tableNode.style.height || this.tableNode.height;\n\t\t\tif(height){\n\t\t\t\tthis[\"table_height\"].value = parseInt(width);\n\t\t\t}else{\n\t\t\t\tthis[\"table_height\"].value = \"\";\n\t\t\t}\n\t\t\tvar attrs = this.tableNode.attributes;\n\t\t\tfor(var i=0; i<attrs.length; i++) {\n\t\t\t\tif(dojo.lang.find(this.editableAttributes, attrs[i].name.toLowerCase())>-1){\n\t\t\t\t\ttableAttributes[attrs[i].name] = attrs[i].value;\n\t\t\t\t}else{\n\t\t\t\t\tthis.extraAttribText += attrs[i].name + '=\"'+attrs[i].value+'\" ';\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tthis[\"table_rows\"].value = 3;\n\t\t\tthis[\"table_rows\"].disabled = false;\n\t\t\tthis[\"table_cols\"].value = 2;\n\t\t\tthis[\"table_cols\"].disabled = false;\n\t\t\tthis[\"table_width\"].value = 100;\n\t\t\tthis[\"table_widthtype\"].value = \"percent\";\n\t\t\tthis[\"table_height\"].value = \"\";\n\t\t}\n\t\tfor(var i=0; i<this.editableAttributes.length; ++i){\n\t\t\tname = this.editableAttributes[i];\n\t\t\tthis[\"table_\"+name].value = (tableAttributes[name] == undefined) ? \"\" : tableAttributes[name];\n\t\t\tif(name == 'height' && tableAttributes[name] != undefined){\n\t\t\t\tthis[\"table_\"+name].value = tableAttributes[name];\n\t\t\t}\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.Editor2InsertTableDialog"}},"dojo.widget.Editor2InsertTableDialog.ok":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tvar args = {};\n\t\targs['rows'] = this[\"table_rows\"].value;\n\t\targs['cols'] = this[\"table_cols\"].value;\n\t\targs['caption'] = this[\"table_caption\"].value;\n\t\targs[\"tableattrs\"] = \"\";\n\t\tif(this[\"table_widthtype\"].value == \"percent\"){\n\t\t\targs[\"tableattrs\"] += 'width=\"'+this[\"table_width\"].value +'%\" ';\n\t\t}else{\n\t\t\targs[\"tableattrs\"] += 'width=\"'+this[\"table_width\"].value +'px\" ';\n\t\t}\n\t\tfor(var i=0; i<this.editableAttributes.length; ++i){\n\t\t\tvar name = this.editableAttributes[i];\n\t\t\tvar value = this[\"table_\"+name].value;\n\t\t\tif(value.length > 0){\n\t\t\t\targs[\"tableattrs\"] += name + '=\"'+value+'\" ';\n\t\t\t}\n\t\t}\n\t\tif(!args[\"tableattrs\"]){\n\t\t\targs[\"tableattrs\"] = \"\";\n\t\t}\n\t\t\/\/show the border in IE by applying a custom class\n\t\tif(dojo.render.html.ie && !this[\"table_border\"].value){\n\t\t\targs[\"tableattrs\"] += 'class=\"dojoShowIETableBorders\" ';\n\t\t}\n\t\tvar html = \"<table \"+args[\"tableattrs\"]+\">\";\n\t\tif(args['caption']){\n\t\t\thtml += \"<caption>\"+args[\"caption\"]+\"<\/caption>\";\n\t\t}\n\t\tvar outertbody = \"<tbody>\";\n\t\tif(this.tableNode){\n\t\t\t\/\/retain the content\n\t\t\tvar tbody = this.tableNode.getElementsByTagName(\"tbody\")[0];\n\t\t\toutertbody = tbody.outerHTML;\n\t\t\tif(!outertbody){\n\t\t\t\tvar cnode = tbody.cloneNode(true);\n\t\t\t\tvar tmpnode = tbody.ownerDocument.createElement(\"div\");\n\t\t\t\ttmpnode.appendChild(cnode);\n\t\t\t\toutertbody = tmpnode.innerHTML;\n\t\t\t}\n\t\t\t\/\/TODO: save current selection and restore it later\n\t\t\tdojo.withGlobal(curInst.window, \"selectElement\", dojo.html.selection, [this.tableNode]);\n\t\t}else{\n\t\t\tvar cols = \"<tr>\";\n\t\t\tfor (var i = 0; i < +args.cols; i++) { cols += \"<td><\/td>\"; }\n\t\t\tcols += \"<\/tr>\";\n\t\t\tfor (var i = 0; i < args.rows; i++) { outertbody += cols; }\n\t\t\toutertbody += \"<\/tbody>\";\n\t\t}\n\t\thtml += outertbody+\"<\/table>\";\n\t\tcurInst.restoreSelection(); \/\/restore previous selection, required for none-activeX IE\n\t\tcurInst.execCommand(\"inserthtml\", html);\n\t\tthis.cancel();","prototype":"dojo.widget.Editor2InsertTableDialog"}}}}},"dojo.widget.Editor2Plugin.SimpleSignalCommands":{"meta":{"requires":{"common":["dojo.widget.Editor2"]},"functions":{"dojo.widget.Editor2Plugin.SimpleSignalCommand":{"meta":{"prototype_chain":["dojo.widget.Editor2Command"],"call_chain":["dojo.widget.Editor2Command"],"summary":"","parameters":{"editor":{"type":""},"name":{"type":""}},"src":" \tif(dojo.widget.Editor2.prototype[name] == undefined){\n\t\t\tdojo.widget.Editor2.prototype[name] = function(){ \/*dojo.debug(\"Editor2::\"+name);*\/ };\n\t\t}"}},"dojo.widget.Editor2Plugin.SimpleSignalCommand.execute":{"meta":{"summary":"","src":" \tthis._editor[this._name]();","prototype":"dojo.widget.Editor2Plugin.SimpleSignalCommand"}},"dojo.widget.Editor2Plugin.SimpleSignalCommands.Handler":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tif(name.toLowerCase() == 'save'){\n\t\t\treturn new dojo.widget.Editor2ToolbarButton('Save');\n\t\t}else if(name.toLowerCase() == 'insertimage'){\n\t\t\treturn new dojo.widget.Editor2ToolbarButton('InsertImage');\n\t\t}"}},"dojo.widget.Editor2Plugin.SimpleSignalCommands.getCommand":{"meta":{"summary":"","parameters":{"editor":{"type":""},"name":{"type":""}},"src":" \tvar signal;\n\t\tdojo.lang.every(this.signals,function(s){\n\t\t\tif(s.toLowerCase() == name.toLowerCase()){\n\t\t\t\tsignal = s;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tif(signal){\n\t\t\treturn new dojo.widget.Editor2Plugin.SimpleSignalCommand(editor, signal);\n\t\t}"}}},"objects":{"dojo.widget.Editor2Plugin.SimpleSignalCommands":{"meta":{"variables":["signals"]}}}}},"dojo.widget.Editor2Plugin.TableOperation":{"meta":{"requires":{"common":["dojo.widget.Editor2"]},"functions":{"dojo.widget.Editor2Plugin.TableContextMenuGroup":{"meta":{"prototype_chain":["dojo.widget.Editor2Plugin.SimpleContextMenuGroup"],"call_chain":["dojo.widget.Editor2Plugin.SimpleContextMenuGroup"]}},"dojo.widget.Editor2Plugin.TableOperation.getCommand":{"meta":{"summary":"","parameters":{"editor":{"type":""},"name":{"type":""}},"src":" \tswitch(name.toLowerCase()){\n\t\t\tcase 'toggletableborder':\n\t\t\t\treturn new dojo.widget.Editor2Plugin.toggleTableBorderCommand(editor, name);\n\t\t\tcase 'inserttable':\n\t\t\t\treturn new dojo.widget.Editor2DialogCommand(editor, 'inserttable',\n\t\t\t\t\t{contentFile: \"dojo.widget.Editor2Plugin.InsertTableDialog\",\n\t\t\t\t\tcontentClass: \"Editor2InsertTableDialog\",\n\t\t\t\t\ttitle: \"Insert\/Edit Table\", width: \"450px\", height: \"250px\"})\n\t\t\tcase 'deletetable':\n\t\t\t\treturn new dojo.widget.Editor2Plugin.deleteTableCommand(editor, name);\n\t\t}"}},"dojo.widget.Editor2Plugin.TableOperation.getToolbarItem":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tvar name = name.toLowerCase();\n\t\tvar item;\n\t\tswitch(name){\n\t\t\tcase 'inserttable':\n\t\t\tcase 'toggletableborder':\n\t\t\t\titem = new dojo.widget.Editor2ToolbarButton(name);\n\t\t}\n\t\treturn item;"}},"dojo.widget.Editor2Plugin.TableOperation.getContextMenuGroup":{"meta":{"summary":"","parameters":{"name":{"type":""},"contextmenuplugin":{"type":""}},"src":" \treturn new dojo.widget.Editor2Plugin.TableContextMenuGroup(contextmenuplugin);"}},"dojo.widget.Editor2Plugin.TableOperation.showIETableBorder":{"meta":{"summary":"","parameters":{"dom":{"type":""}},"src":" \tvar tables = dom.getElementsByTagName('table');\n\t\tdojo.lang.forEach(tables, function(t){\n\t\t\tdojo.html.addClass(t, \"dojoShowIETableBorders\");\n\t\t});\n\t\treturn dom;"}},"dojo.widget.Editor2Plugin.TableOperation.removeIEFakeClass":{"meta":{"summary":"","parameters":{"dom":{"type":""}},"src":" \tvar tables = dom.getElementsByTagName('table');\n\t\tdojo.lang.forEach(tables, function(t){\n\t\t\tdojo.html.removeClass(t, \"dojoShowIETableBorders\");\n\t\t});\n\t\treturn dom;"}}}}},"dojo.widget.Editor2Plugin.ToolbarDndSupport":{"meta":{"requires":{"common":["dojo.dnd.*"]}}},"dojo.widget.Editor2Plugin._":{"meta":{"requires":{"common":["dojo.widget.Editor2","dojo.widget.Editor2Toolbar"]}}},"dojo.widget.Editor2Toolbar":{"meta":{"requires":{"common":["dojo.lang.*","dojo.widget.*","dojo.event.*","dojo.html.layout","dojo.html.display","dojo.widget.RichText","dojo.widget.PopupContainer","dojo.widget.ColorPalette","dojo.widget.ContentPane"]},"functions":{"dojo.widget.Editor2ToolbarButton.create":{"meta":{"summary":"create the item","parameters":{"node":{"type":"DomNode"},"toolbar":{"type":"dojo.widget.Editor2Toolbar"},"nohover":{"type":"Boolean"}},"src":" \tthis._domNode = node;\n\t\tvar cmd = toolbar.parent.getCommand(this._name); \/\/FIXME: maybe an issue if different instance has different language\n\t\tif(cmd){\n\t\t\tthis._domNode.title = cmd.getText();\n\t\t}\n\t\t\/\/make this unselectable: different browsers\n\t\t\/\/use different properties for this, so use\n\t\t\/\/js do it automatically\n\t\tthis.disableSelection(this._domNode);\n\t\tthis._parentToolbar = toolbar;\n\t\tdojo.event.connect(this._domNode, 'onclick', this, 'onClick');\n\t\tif(!nohover){\n\t\t\tdojo.event.connect(this._domNode, 'onmouseover', this, 'onMouseOver');\n\t\t\tdojo.event.connect(this._domNode, 'onmouseout', this, 'onMouseOut');\n\t\t}","prototype":"dojo.widget.Editor2ToolbarButton"},"extra":{"parameters":{"node":{"type":"the","summary":"dom node which is the root of this toolbar item"},"toolbar":{"type":"the","summary":"Editor2Toolbar widget this toolbar item belonging to"},"nohover":{"type":"whether","summary":"this item in charge of highlight this item"}}}},"dojo.widget.Editor2ToolbarButton":{"meta":{"instance_variables":["_domNode","_domNode.title","_parentToolbar","_lastState","_domNode.disabled","_name"],"summary":"","parameters":{"name":{"type":""}},"src":" \tthis._name = name;\n\/\/\t\tthis._command = editor.getCommand(name);"}},"dojo.widget.Editor2ToolbarButton.disableSelection":{"meta":{"summary":"disable selection on the passed node and all its children","parameters":{"rootnode":{"type":"DomNode"}},"src":" \tdojo.html.disableSelection(rootnode);\n\t\tvar nodes = rootnode.all || rootnode.getElementsByTagName(\"*\");\n\t\tfor(var x=0; x<nodes.length; x++){\n\t\t\tdojo.html.disableSelection(nodes[x]);\n\t\t}","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.onMouseOver":{"meta":{"summary":"","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tif(curInst){\n\t\t\tvar _command = curInst.getCommand(this._name);\n\t\t\tif(_command && _command.getState() != dojo.widget.Editor2Manager.commandState.Disabled){\n\t\t\t\tthis.highlightToolbarItem();\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.onMouseOut":{"meta":{"summary":"","src":" \tthis.unhighlightToolbarItem();","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.destroy":{"meta":{"summary":"destructor","src":" \tthis._domNode = null;\n\/\/\t\tdelete this._command;\n\t\tthis._parentToolbar = null;","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.onClick":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif(this._domNode && !this._domNode.disabled && this._parentToolbar.checkAvailability()){\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\t\tif(curInst){\n\t\t\t\tvar _command = curInst.getCommand(this._name);\n\t\t\t\tif(_command){\n\t\t\t\t\t_command.execute();\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.refreshState":{"meta":{"summary":"update the state of the toolbar item","src":" \tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\tvar em = dojo.widget.Editor2Manager;\n\t\tif(curInst){\n\t\t\tvar _command = curInst.getCommand(this._name);\n\t\t\tif(_command){\n\t\t\t\tvar state = _command.getState();\n\t\t\t\tif(state != this._lastState){\n\t\t\t\t\tswitch(state){\n\t\t\t\t\t\tcase em.commandState.Latched:\n\t\t\t\t\t\t\tthis.latchToolbarItem();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase em.commandState.Enabled:\n\t\t\t\t\t\t\tthis.enableToolbarItem();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase em.commandState.Disabled:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.disableToolbarItem();\n\t\t\t\t\t}\n\t\t\t\t\tthis._lastState = state;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn em.commandState.Enabled;","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.latchToolbarItem":{"meta":{"summary":"","src":" \tthis._domNode.disabled = false;\n\t\tthis.removeToolbarItemStyle(this._domNode);\n\t\tdojo.html.addClass(this._domNode, this._parentToolbar.ToolbarLatchedItemStyle);","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.enableToolbarItem":{"meta":{"summary":"","src":" \tthis._domNode.disabled = false;\n\t\tthis.removeToolbarItemStyle(this._domNode);\n\t\tdojo.html.addClass(this._domNode, this._parentToolbar.ToolbarEnabledItemStyle);","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.disableToolbarItem":{"meta":{"summary":"","src":" \tthis._domNode.disabled = true;\n\t\tthis.removeToolbarItemStyle(this._domNode);\n\t\tdojo.html.addClass(this._domNode, this._parentToolbar.ToolbarDisabledItemStyle);","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.highlightToolbarItem":{"meta":{"summary":"","src":" \tdojo.html.addClass(this._domNode, this._parentToolbar.ToolbarHighlightedItemStyle);","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.unhighlightToolbarItem":{"meta":{"summary":"","src":" \tdojo.html.removeClass(this._domNode, this._parentToolbar.ToolbarHighlightedItemStyle);","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarButton.removeToolbarItemStyle":{"meta":{"summary":"","src":" \tdojo.html.removeClass(this._domNode, this._parentToolbar.ToolbarEnabledItemStyle);\n\t\tdojo.html.removeClass(this._domNode, this._parentToolbar.ToolbarLatchedItemStyle);\n\t\tdojo.html.removeClass(this._domNode, this._parentToolbar.ToolbarDisabledItemStyle);\n\t\tthis.unhighlightToolbarItem();","prototype":"dojo.widget.Editor2ToolbarButton"}},"dojo.widget.Editor2ToolbarDropDownButton":{"meta":{"prototype_chain":["dojo.widget.Editor2ToolbarButton"],"call_chain":["dojo.widget.Editor2ToolbarButton"]}},"dojo.widget.Editor2ToolbarColorPaletteButton":{"meta":{"prototype_chain":["dojo.widget.Editor2ToolbarDropDownButton"],"call_chain":["dojo.widget.Editor2ToolbarDropDownButton"]}},"dojo.widget.Editor2ToolbarFormatBlockPlainSelect":{"meta":{"prototype_chain":["dojo.widget.Editor2ToolbarButton"],"call_chain":["dojo.widget.Editor2ToolbarButton"]}},"dojo.widget.Editor2ToolbarComboItem":{"meta":{"prototype_chain":["dojo.widget.Editor2ToolbarDropDownButton"],"call_chain":["dojo.widget.Editor2ToolbarDropDownButton"]}},"dojo.widget.Editor2ToolbarFormatBlockSelect":{"meta":{"prototype_chain":["dojo.widget.Editor2ToolbarComboItem"],"call_chain":["dojo.widget.Editor2ToolbarComboItem"]}},"dojo.widget.Editor2ToolbarFontSizeSelect":{"meta":{"prototype_chain":["dojo.widget.Editor2ToolbarComboItem"],"call_chain":["dojo.widget.Editor2ToolbarComboItem"]}},"dojo.widget.Editor2ToolbarFontNameSelect":{"meta":{"prototype_chain":["dojo.widget.Editor2ToolbarFontSizeSelect"],"call_chain":["dojo.widget.Editor2ToolbarFontSizeSelect"]}},"dojo.widget.Editor2Toolbar":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath","ToolbarLatchedItemStyle","ToolbarEnabledItemStyle","ToolbarDisabledItemStyle","ToolbarHighlightedItemStyle","ToolbarHighlightedSelectStyle","ToolbarHighlightedSelectItemStyle","shareGroup"],"variables":["templatePath","templateCssPath","ToolbarLatchedItemStyle","ToolbarEnabledItemStyle","ToolbarDisabledItemStyle","ToolbarHighlightedItemStyle","ToolbarHighlightedSelectStyle","ToolbarHighlightedSelectItemStyle","shareGroup"],"instance_variables":["items","shareGroup","domNode.style.zoom"],"summary":"","src":" \tdojo.event.connect(this, \"fillInTemplate\", dojo.lang.hitch(this, function(){\n\t\t\tif(dojo.render.html.ie){\n\t\t\t\tthis.domNode.style.zoom = 1.0;\n\t\t\t}\n\t\t}));"}},"dojo.widget.Editor2Toolbar.postCreate":{"meta":{"summary":"","src":" \t\tvar nodes = dojo.html.getElementsByClass(\"dojoEditorToolbarItem\", this.domNode\/*, this.itemNodeType*\/);\n\t\t\tthis.items = {};\n\t\t\tfor(var x=0; x<nodes.length; x++){\n\t\t\t\tvar node = nodes[x];\n\t\t\t\tvar itemname = node.getAttribute(\"dojoETItemName\");\n\t\t\t\tif(itemname){\n\t\t\t\t\tvar item = dojo.widget.Editor2ToolbarItemManager.getToolbarItem(itemname);\n\t\t\t\t\tif(item){\n\t\t\t\t\t\titem.create(node, this);\n\t\t\t\t\t\tthis.items[itemname.toLowerCase()] = item;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\/\/hide unsupported toolbar items\n\t\t\t\t\t\tnode.style.display = \"none\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.Editor2Toolbar"}},"dojo.widget.Editor2Toolbar.update":{"meta":{"summary":"update all the toolbar items","src":" \t\tfor(var cmd in this.items){\n\t\t\t\tthis.items[cmd].refreshState();\n\t\t\t}","prototype":"dojo.widget.Editor2Toolbar"}},"dojo.widget.Editor2Toolbar.checkAvailability":{"meta":{"summary":"returns whether items in this toolbar can be executed","src":" \t\tif(!this.shareGroup){\n\t\t\t\tthis.parent.focus();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar curInst = dojo.widget.Editor2Manager.getCurrentInstance();\n\t\t\tif(this.shareGroup == curInst.toolbarGroup){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;","description":"For unshared toolbar, when clicking on a toolbar, the corresponding editor will be focused, and this function always return true. For shared toolbar, if the current focued editor is not one of the instances sharing this toolbar, this function return false, otherwise true.","prototype":"dojo.widget.Editor2Toolbar"}},"dojo.widget.Editor2Toolbar.destroy":{"meta":{"summary":"","src":" \t\tfor(var it in this.items){\n\t\t\t\tthis.items[it].destroy();\n\t\t\t\tdelete this.items[it];\n\t\t\t}\n\t\t\tdojo.widget.Editor2Toolbar.superclass.destroy.call(this);","call_chain":["dojo.widget.Editor2Toolbar.superclass.destroy"],"prototype":"dojo.widget.Editor2Toolbar"}},"dojo.widget.Editor2ToolbarItemManager.getToolbarItem":{"meta":{"summary":"return a toobar item with the given name","parameters":{"name":{"type":"String"}},"src":" \tvar item;\n\t\tname = name.toLowerCase();\n\t\tfor(var i=0;i<this._registeredHandlers.length;i++){\n\t\t\titem = this._registeredHandlers[i](name);\n\t\t\tif(item){\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t\tswitch(name){\n\t\t\t\/\/button for builtin functions\n\t\t\tcase 'bold':\n\t\t\tcase 'copy':\n\t\t\tcase 'cut':\n\t\t\tcase 'delete':\n\t\t\tcase 'indent':\n\t\t\tcase 'inserthorizontalrule':\n\t\t\tcase 'insertorderedlist':\n\t\t\tcase 'insertunorderedlist':\n\t\t\tcase 'italic':\n\t\t\tcase 'justifycenter':\n\t\t\tcase 'justifyfull':\n\t\t\tcase 'justifyleft':\n\t\t\tcase 'justifyright':\n\t\t\tcase 'outdent':\n\t\t\tcase 'paste':\n\t\t\tcase 'redo':\n\t\t\tcase 'removeformat':\n\t\t\tcase 'selectall':\n\t\t\tcase 'strikethrough':\n\t\t\tcase 'subscript':\n\t\t\tcase 'superscript':\n\t\t\tcase 'underline':\n\t\t\tcase 'undo':\n\t\t\tcase 'unlink':\n\t\t\tcase 'createlink':\n\t\t\tcase 'insertimage':\n\t\t\t\/\/extra simple buttons\n\t\t\tcase 'htmltoggle':\n\t\t\t\titem = new dojo.widget.Editor2ToolbarButton(name);\n\t\t\t\tbreak;\n\t\t\tcase 'forecolor':\n\t\t\tcase 'hilitecolor':\n\t\t\t\titem = new dojo.widget.Editor2ToolbarColorPaletteButton(name);\n\t\t\t\tbreak;\n\t\t\tcase 'plainformatblock':\n\t\t\t\titem = new dojo.widget.Editor2ToolbarFormatBlockPlainSelect(\"formatblock\");\n\t\t\t\tbreak;\n\t\t\tcase 'formatblock':\n\t\t\t\titem = new dojo.widget.Editor2ToolbarFormatBlockSelect(\"formatblock\");\n\t\t\t\tbreak;\n\t\t\tcase 'fontsize':\n\t\t\t\titem = new dojo.widget.Editor2ToolbarFontSizeSelect(\"fontsize\");\n\t\t\t\tbreak;\n\t\t\tcase 'fontname':\n\t\t\t\titem = new dojo.widget.Editor2ToolbarFontNameSelect(\"fontname\");\n\t\t\t\tbreak;\n\t\t\tcase 'inserttable':\n\t\t\tcase 'insertcell':\n\t\t\tcase 'insertcol':\n\t\t\tcase 'insertrow':\n\t\t\tcase 'deletecells':\n\t\t\tcase 'deletecols':\n\t\t\tcase 'deleterows':\n\t\t\tcase 'mergecells':\n\t\t\tcase 'splitcell':\n\t\t\t\tdojo.debug(name + \" is implemented in dojo.widget.Editor2Plugin.TableOperation, please require it first.\");\n\t\t\t\tbreak;\n\t\t\t\/\/TODO:\n\t\t\tcase 'inserthtml':\n\t\t\tcase 'blockdirltr':\n\t\t\tcase 'blockdirrtl':\n\t\t\tcase 'dirltr':\n\t\t\tcase 'dirrtl':\n\t\t\tcase 'inlinedirltr':\n\t\t\tcase 'inlinedirrtl':\n\t\t\t\tdojo.debug(\"Not yet implemented toolbar item: \"+name);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdojo.debug(\"dojo.widget.Editor2ToolbarItemManager.getToolbarItem: Unknown toolbar item: \"+name);\n\t\t}\n\t\treturn item;"}}}}},"dojo.widget.FilteringTable":{"meta":{"requires":{"common":["dojo.date.format","dojo.collections.Store","dojo.html.*","dojo.html.util","dojo.html.style","dojo.html.selection","dojo.event.*","dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.FilteringTable":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","templatePath","templateCssPath","onReset","_meta","format","filterer","noSort","sortType","dataType","sortFunction","filterFunction","label","align","valign","getField","getType"],"variables":["isContainer","templatePath","templateCssPath","onReset","_meta","format","filterer","noSort","sortType","dataType","sortFunction","filterFunction","label","align","valign","getField","getType"],"instance_variables":["columns","sortInformation","isInitialized","store","valueField","multiple","maxSelect","maxSortable","minRows","defaultDateFormat","alternateRows","headClass","tbodyClass","headerClass","headerUpClass","headerDownClass","rowClass","rowAlternateClass","rowSelectedClass","columnSelected"],"summary":"A basic tabular data widget that supports sorting and filtering mechanisms.","src":" \tthis.store=new dojo.collections.Store();\n\t\t\/\/declare per instance changeable widget properties\n\t\tthis.valueField=\"Id\";\n\t\tthis.multiple=false;\n\t\tthis.maxSelect=0;\n\t\tthis.maxSortable=1;  \/\/ how many columns can be sorted at once.\n\t\tthis.minRows=0;\n\t\tthis.defaultDateFormat = \"%D\";\n\t\tthis.isInitialized=false;\n\t\tthis.alternateRows=false;\n\t\tthis.columns=[];\n\t\tthis.sortInformation=[{\n\t\t\tindex:0,\n\t\t\tdirection:0\n\t\t}];\n\t\t\/\/ CSS definitions\n\t\tthis.headClass=\"\";\n\t\tthis.tbodyClass=\"\";\n\t\tthis.headerClass=\"\";\n\t\tthis.headerUpClass=\"selectedUp\";\n\t\tthis.headerDownClass=\"selectedDown\";\n\t\tthis.rowClass=\"\";\n\t\tthis.rowAlternateClass=\"alt\";\n\t\tthis.rowSelectedClass=\"selected\";\n\t\tthis.columnSelected=\"sorted-column\";","description":"FilteringTable is a 2D data view that supports multiple column sorting and filtering functionality. It can get its data in one of two ways: via HTML (i.e. degradable data), or from an external JSON source through widget.store.setData. Records in a FilteringTable can be selected as if it were a select list. store: dojo.collections.Store The underlying Store for all data represented by the widget. valueField: String The name of the field used as a unique key for each row, defaults to \"Id\". multiple: boolean Allow multiple selections. maxSelect: Integer Maximum number of rows that can be selected at once. 0 == no limit. maxSortable: Integer Maximum number of columns allowed for sorting at one time. minRows: Integer The minimum number of rows to show. Default is 0. defaultDateFormat: String The default format for a date column, as used by dojo.date.format. alternateRows: Boolean Use alternate row CSS classes to show zebra striping. headClass: String CSS Class name for the head of the table. tbodyClass: String CSS Class name for the body of the table. headerClass: String CSS Class name for headers that are not sorted. headerUpClass: String CSS Class name for headers that are for ascending sorted columns. Default is \"selectedUp\". headerDownClass: String CSS Class name for headers that are for descending sorted columns. Default is \"selectedDown\". rowClass: String CSS Class name for body rows. rowAlternateClass: String CSS Class name for alternate rows. Default is \"alt\". rowSelectedClass: String CSS Class name for selected rows. Default is \"selected\". columnSelectedClass: String CSS Class name for any columns being sorted on. Unimplemented."}},"dojo.widget.FilteringTable.getTypeFromString":{"meta":{"summary":"Gets a function based on the passed string.","parameters":{"s":{"type":"string"}},"src":" \tvar parts = s.split(\".\"), i = 0, obj = dj_global; \n\t\tdo{ \n\t\t\tobj = obj[parts[i++]]; \n\t\t} while (i < parts.length && obj); \n\t\treturn (obj != dj_global) ? obj : null;\t\/\/\tfunction","returns":"function","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.getByRow":{"meta":{"summary":"Returns the data object based on the passed row.","parameters":{"row":{"type":"HTMLTableRow"}},"src":" \treturn this.store.getByKey(dojo.html.getAttribute(row, \"value\"));\t\/\/\tobject","returns":"object","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.getDataByRow":{"meta":{"summary":"Returns the source data object based on the passed row.","parameters":{"row":{"type":"HTMLTableRow"}},"src":" \treturn this.store.getDataByKey(dojo.html.getAttribute(row, \"value\")); \/\/ object","returns":"object","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.getRow":{"meta":{"summary":"Finds the row in the table based on the passed data object.","parameters":{"obj":{"type":"Object"}},"src":" \tvar rows = this.domNode.tBodies[0].rows;\n\t\tfor(var i=0; i<rows.length; i++){\n\t\t\tif(this.store.getDataByKey(dojo.html.getAttribute(rows[i], \"value\")) == obj){\n\t\t\t\treturn rows[i];\t\/\/\tHTMLTableRow\n\t\t\t}\n\t\t}\n\t\treturn null;\t\/\/\tHTMLTableRow","returns":"HTMLTableRow","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.getColumnIndex":{"meta":{"summary":"Returns index of the column that represents the passed field path.","parameters":{"fieldPath":{"type":"string"}},"src":" \tfor(var i=0; i<this.columns.length; i++){\n\t\t\tif(this.columns[i].getField() == fieldPath){\n\t\t\t\treturn i;\t\/\/\tinteger\n\t\t\t}\n\t\t}\n\t\treturn -1;\t\/\/\tinteger","returns":"integer","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.getSelectedData":{"meta":{"summary":"","src":" \tvar data=this.store.get();\n\t\tvar a=[];\n\t\tfor(var i=0; i<data.length; i++){\n\t\t\tif(data[i].isSelected){\n\t\t\t\ta.push(data[i].src);\n\t\t\t}\n\t\t}\n\t\tif(this.multiple){\n\t\t\treturn a;\t\t\/\/\tarray\n\t\t} else {\n\t\t\treturn a[0];\t\/\/\tobject\n\t\t}","returns":"mixed","prototype":"dojo.widget.FilteringTable"},"extra":{"returns":"all objects that are selected."}},"dojo.widget.FilteringTable.isSelected":{"meta":{"summary":"Returns whether the passed object is currently selected.","parameters":{"obj":{"type":"object"}},"src":" \tvar data = this.store.get();\n\t\tfor(var i=0; i<data.length; i++){\n\t\t\tif(data[i].src == obj){\n\t\t\t\treturn true;\t\/\/\tboolean\n\t\t\t}\n\t\t}\n\t\treturn false;\t\/\/\tboolean","returns":"boolean","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.isValueSelected":{"meta":{"summary":"Returns the object represented by key \"val\" is selected.","parameters":{"val":{"type":"string"}},"src":" \tvar v = this.store.getByKey(val);\n\t\tif(v){\n\t\t\treturn v.isSelected;\t\/\/\tboolean\n\t\t}\n\t\treturn false;\t\/\/\tboolean","returns":"boolean","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.isIndexSelected":{"meta":{"summary":"Returns the object represented by integer \"idx\" is selected.","parameters":{"idx":{"type":"number"}},"src":" \tvar v = this.store.getByIndex(idx);\n\t\tif(v){\n\t\t\treturn v.isSelected;\t\/\/\tboolean\n\t\t}\n\t\treturn false;\t\/\/\tboolean","returns":"boolean","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.isRowSelected":{"meta":{"summary":"Returns if the passed row is selected.","parameters":{"row":{"type":"HTMLTableRow"}},"src":" \tvar v = this.getByRow(row);\n\t\tif(v){\n\t\t\treturn v.isSelected;\t\/\/\tboolean\n\t\t}\n\t\treturn false;\t\/\/\tboolean","returns":"boolean","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.reset":{"meta":{"summary":"Resets the widget to its initial internal state.","src":" \tthis.store.clearData();\n\t\tthis.columns = [];\n\t\tthis.sortInformation = [ {index:0, direction:0} ];\n\t\tthis.resetSelections();\n\t\tthis.isInitialized = false;\n\t\tthis.onReset();","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.resetSelections":{"meta":{"summary":"Unselects all data objects.","src":" \tthis.store.forEach(function(element){\n\t\t\telement.isSelected = false;\n\t\t});","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.select":{"meta":{"summary":"selects the passed object.","parameters":{"obj":{"type":"object"}},"src":" \tvar data = this.store.get();\n\t\tfor(var i=0; i<data.length; i++){\n\t\t\tif(data[i].src == obj){\n\t\t\t\tdata[i].isSelected = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.onDataSelect(obj);","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.selectByValue":{"meta":{"summary":"selects the object represented by key \"val\".","parameters":{"val":{"type":"string"}},"src":" \tthis.select(this.store.getDataByKey(val));","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.selectByIndex":{"meta":{"summary":"selects the object represented at index \"idx\".","parameters":{"idx":{"type":"number"}},"src":" \tthis.select(this.store.getDataByIndex(idx));","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.selectByRow":{"meta":{"summary":"selects the object represented by HTMLTableRow row.","parameters":{"row":{"type":"HTMLTableRow"}},"src":" \tthis.select(this.getDataByRow(row));","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.selectAll":{"meta":{"summary":"selects all objects.","src":" \tthis.store.forEach(function(element){\n\t\t\telement.isSelected = true;\n\t\t});","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.onDataSelect":{"meta":{"summary":"Stub for onDataSelect event.","parameters":{"obj":{"type":"object"}},"src":"\t\t\/\/\tsummary\n\t\t\/\/\tStub for onDataSelect event.","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.toggleSelection":{"meta":{"summary":"Flips the selection state of passed obj.","parameters":{"obj":{"type":"object"}},"src":" \tvar data = this.store.get();\n\t\tfor(var i=0; i<data.length; i++){\n\t\t\tif(data[i].src == obj){\n\t\t\t\tdata[i].isSelected = !data[i].isSelected;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis.onDataToggle(obj);","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.toggleSelectionByValue":{"meta":{"summary":"Flips the selection state of object represented by val.","parameters":{"val":{"type":"string"}},"src":" \tthis.toggleSelection(this.store.getDataByKey(val));","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.toggleSelectionByIndex":{"meta":{"summary":"Flips the selection state of object at index idx.","parameters":{"idx":{"type":"number"}},"src":" \tthis.toggleSelection(this.store.getDataByIndex(idx));","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.toggleSelectionByRow":{"meta":{"summary":"Flips the selection state of object represented by row.","parameters":{"row":{"type":"HTMLTableRow"}},"src":" \tthis.toggleSelection(this.getDataByRow(row));","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.toggleAll":{"meta":{"summary":"Flips the selection state of all objects.","src":" \tthis.store.forEach(function(element){\n\t\t\telement.isSelected = !element.isSelected;\n\t\t});","prototype":"dojo.widget.FilteringTable"}},"dojo.widget.FilteringTable.onDataToggle":{"meta":{"summary":"Stub for onDataToggle event.","parameters":{"obj":{"type":"object"}},"src":"\t\t\/\/\tsummary\n\t\t\/\/\tStub for onDataToggle event.","prototype":"dojo.widget.FilteringTable"}}}}},"dojo.widget.FisheyeList":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.html.style","dojo.html.selection","dojo.html.util","dojo.event.*"]},"functions":{"dojo.widget.FisheyeList":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templateString","templateCssPath","isContainer","snarfChildDomOutput","itemWidth","itemHeight","itemMaxWidth","itemMaxHeight","orientation","conservativeTrigger","effectUnits","itemPadding","attachEdge","labelEdge","enableCrappySvgSupport"],"variables":["templateString","templateCssPath","isContainer","snarfChildDomOutput","itemWidth","itemHeight","itemMaxWidth","itemMaxHeight","orientation","conservativeTrigger","effectUnits","itemPadding","attachEdge","labelEdge","enableCrappySvgSupport"],"instance_variables":["isHorizontal","selectedNode","isOver","hitX1","hitY1","hitX2","hitY2","anchorEdge","labelEdge","proximityLeft","proximityRight","proximityTop","proximityBottom","itemCount","barWidth","barHeight","totalWidth","totalHeight","domNode.style.width","domNode.style.height","timerScale","pos","EDGE"],"summary":"","src":" this.pos = {x: -1, y: -1};\t\t\/\/ current cursor position, relative to the grid\n\tthis.EDGE = {\n\t\tCENTER: 0,\n\t\tLEFT: 1,\n\t\tRIGHT: 2,\n\t\tTOP: 3,\n\t\tBOTTOM: 4\n\t};\n\t\/\/ for conservative trigger mode, when triggered, timerScale is gradually increased from 0 to 1\n\tthis.timerScale = 1.0;"},"extra":{"variables":{"itemPadding":{"type":"Integer","summary":"padding (in pixels) betweeen each menu item"}}}},"dojo.widget.FisheyeList.fillInTemplate":{"meta":{"summary":"","src":" \tdojo.html.disableSelection(this.domNode);\n\t\tthis.isHorizontal = (this.orientation == 'horizontal');\n\t\tthis.selectedNode = -1;\n\t\tthis.isOver = false;\n\t\tthis.hitX1 = -1;\n\t\tthis.hitY1 = -1;\n\t\tthis.hitX2 = -1;\n\t\tthis.hitY2 = -1;\n\t\t\/\/\n\t\t\/\/ only some edges make sense...\n\t\t\/\/\n\t\tthis.anchorEdge = this._toEdge(this.attachEdge, this.EDGE.CENTER);\n\t\tthis.labelEdge  = this._toEdge(this.labelEdge,  this.EDGE.TOP);\n\t\tif ( this.isHorizontal && (this.anchorEdge == this.EDGE.LEFT  )){ this.anchorEdge = this.EDGE.CENTER; }\n\t\tif ( this.isHorizontal && (this.anchorEdge == this.EDGE.RIGHT )){ this.anchorEdge = this.EDGE.CENTER; }\n\t\tif (!this.isHorizontal && (this.anchorEdge == this.EDGE.TOP   )){ this.anchorEdge = this.EDGE.CENTER; }\n\t\tif (!this.isHorizontal && (this.anchorEdge == this.EDGE.BOTTOM)){ this.anchorEdge = this.EDGE.CENTER; }\n\t\tif (this.labelEdge == this.EDGE.CENTER){ this.labelEdge = this.EDGE.TOP; }\n\t\tif ( this.isHorizontal && (this.labelEdge == this.EDGE.LEFT  )){ this.labelEdge = this.EDGE.TOP; }\n\t\tif ( this.isHorizontal && (this.labelEdge == this.EDGE.RIGHT )){ this.labelEdge = this.EDGE.TOP; }\n\t\tif (!this.isHorizontal && (this.labelEdge == this.EDGE.TOP   )){ this.labelEdge = this.EDGE.LEFT; }\n\t\tif (!this.isHorizontal && (this.labelEdge == this.EDGE.BOTTOM)){ this.labelEdge = this.EDGE.LEFT; }\n\t\t\/\/\n\t\t\/\/ figure out the proximity size\n\t\t\/\/\n\t\tthis.proximityLeft   = this.itemWidth  * (this.effectUnits - 0.5);\n\t\tthis.proximityRight  = this.itemWidth  * (this.effectUnits - 0.5);\n\t\tthis.proximityTop    = this.itemHeight * (this.effectUnits - 0.5);\n\t\tthis.proximityBottom = this.itemHeight * (this.effectUnits - 0.5);\n\t\tif (this.anchorEdge == this.EDGE.LEFT){\n\t\t\tthis.proximityLeft = 0;\n\t\t}\n\t\tif (this.anchorEdge == this.EDGE.RIGHT){\n\t\t\tthis.proximityRight = 0;\n\t\t}\n\t\tif (this.anchorEdge == this.EDGE.TOP){\n\t\t\tthis.proximityTop = 0;\n\t\t}\n\t\tif (this.anchorEdge == this.EDGE.BOTTOM){\n\t\t\tthis.proximityBottom = 0;\n\t\t}\n\t\tif (this.anchorEdge == this.EDGE.CENTER){\n\t\t\tthis.proximityLeft   \/= 2;\n\t\t\tthis.proximityRight  \/= 2;\n\t\t\tthis.proximityTop    \/= 2;\n\t\t\tthis.proximityBottom \/= 2;\n\t\t}","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList.postCreate":{"meta":{"summary":"","src":" \tthis._initializePositioning();\n\t\t\/\/\n\t\t\/\/ in liberal trigger mode, activate menu whenever mouse is close\n\t\t\/\/\n\t\tif( !this.conservativeTrigger ){\n\t\t\tdojo.event.connect(document.documentElement, \"onmousemove\", this, \"_onMouseMove\");\n\t\t}\n\t\t\/\/ Deactivate the menu if mouse is moved off screen (doesn't work for FF?)\n\t\tdojo.event.connect(document.documentElement, \"onmouseout\", this, \"_onBodyOut\");\n\t\tdojo.event.connect(this, \"addChild\", this, \"_initializePositioning\");","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._initializePositioning":{"meta":{"summary":"","src":" \tthis.itemCount = this.children.length;\n\t\tthis.barWidth  = (this.isHorizontal ? this.itemCount : 1) * this.itemWidth;\n\t\tthis.barHeight = (this.isHorizontal ? 1 : this.itemCount) * this.itemHeight;\n\t\tthis.totalWidth  = this.proximityLeft + this.proximityRight  + this.barWidth;\n\t\tthis.totalHeight = this.proximityTop  + this.proximityBottom + this.barHeight;\n\t\t\/\/\n\t\t\/\/ calculate effect ranges for each item\n\t\t\/\/\n\t\tfor (var i=0; i<this.children.length; i++){\n\t\t\tthis.children[i].posX = this.itemWidth  * (this.isHorizontal ? i : 0);\n\t\t\tthis.children[i].posY = this.itemHeight * (this.isHorizontal ? 0 : i);\n\t\t\tthis.children[i].cenX = this.children[i].posX + (this.itemWidth  \/ 2);\n\t\t\tthis.children[i].cenY = this.children[i].posY + (this.itemHeight \/ 2);\n\t\t\tvar isz = this.isHorizontal ? this.itemWidth : this.itemHeight;\n\t\t\tvar r = this.effectUnits * isz;\n\t\t\tvar c = this.isHorizontal ? this.children[i].cenX : this.children[i].cenY;\n\t\t\tvar lhs = this.isHorizontal ? this.proximityLeft : this.proximityTop;\n\t\t\tvar rhs = this.isHorizontal ? this.proximityRight : this.proximityBottom;\n\t\t\tvar siz = this.isHorizontal ? this.barWidth : this.barHeight;\n\t\t\tvar range_lhs = r;\n\t\t\tvar range_rhs = r;\n\t\t\tif (range_lhs > c+lhs){ range_lhs = c+lhs; }\n\t\t\tif (range_rhs > (siz-c+rhs)){ range_rhs = siz-c+rhs; }\n\t\t\tthis.children[i].effectRangeLeft = range_lhs \/ isz;\n\t\t\tthis.children[i].effectRangeRght = range_rhs \/ isz;\n\t\t\t\/\/dojo.debug('effect range for '+i+' is '+range_lhs+'\/'+range_rhs);\n\t\t}\n\t\t\/\/\n\t\t\/\/ create the bar\n\t\t\/\/\n\t\tthis.domNode.style.width = this.barWidth + 'px';\n\t\tthis.domNode.style.height = this.barHeight + 'px';\n\t\t\/\/\n\t\t\/\/ position the items\n\t\t\/\/\n\t\tfor (var i=0; i<this.children.length; i++){\n\t\t\tvar itm = this.children[i];\n\t\t\tvar elm = itm.domNode;\n\t\t\telm.style.left   = itm.posX + 'px';\n\t\t\telm.style.top    = itm.posY + 'px';\n\t\t\telm.style.width  = this.itemWidth + 'px';\n\t\t\telm.style.height = this.itemHeight + 'px';\n\t\t\tif ( itm.svgNode ) {\n\t\t\t\titm.svgNode.style.position = 'absolute';\n\t\t\t\titm.svgNode.style.left = this.itemPadding+'%';\n\t\t\t\titm.svgNode.style.top = this.itemPadding+'%';\n\t\t\t\titm.svgNode.style.width = (100 - 2 * this.itemPadding) + '%';\n\t\t\t\titm.svgNode.style.height = (100 - 2 * this.itemPadding) + '%';\n\t\t\t\titm.svgNode.style.zIndex = 1;\n\t\t\t\titm.svgNode.setSize(this.itemWidth, this.itemHeight);\n\t\t\t} else {\n\t\t\t\titm.imgNode.style.left = this.itemPadding+'%';\n\t\t\t\titm.imgNode.style.top = this.itemPadding+'%';\n\t\t\t\titm.imgNode.style.width = (100 - 2 * this.itemPadding) + '%';\n\t\t\t\titm.imgNode.style.height = (100 - 2 * this.itemPadding) + '%';\n\t\t\t}\n\t\t}\n\t\t\/\/\n\t\t\/\/ calc the grid\n\t\t\/\/\n\t\tthis._calcHitGrid();","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._onBodyOut":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \tif( dojo.html.overElement(dojo.body(), e) ){\n\t\t\treturn;\n\t\t}\n\t\tthis._setDormant(e);","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._setDormant":{"meta":{"summary":"called when mouse moves out of menu's range","parameters":{"e":{"type":"Event"}},"src":"\t\tif( !this.isOver ){ return; }\t\/\/ already dormant?\n\t\tthis.isOver = false;\n\t\tif ( this.conservativeTrigger ) {\n\t\t\t\/\/ user can't re-trigger the menu expansion\n\t\t\t\/\/ until he mouses over a icon again\n\t\t\tdojo.event.disconnect(document.documentElement, \"onmousemove\", this, \"_onMouseMove\");\n\t\t}\n\t\tthis._onGridMouseMove(-1, -1);","returns":"already dormant?","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._setActive":{"meta":{"summary":"called when mouse is moved into menu's range","parameters":{"e":{"type":"Event"}},"src":"\t\tif( this.isOver ){ return; }\t\/\/ already activated?\n\t\tthis.isOver = true;\n\t\tif ( this.conservativeTrigger ) {\n\t\t\t\/\/ switch event handlers so that we handle mouse events from anywhere near\n\t\t\t\/\/ the menu\n\t\t\tdojo.event.connect(document.documentElement, \"onmousemove\", this, \"_onMouseMove\");\n\t\t\tthis.timerScale=0.0;\n\t\t\t\/\/ call mouse handler to do some initial necessary calculations\/positioning\n\t\t\tthis._onMouseMove(e);\n\t\t\t\/\/ slowly expand the icon size so it isn't jumpy\n\t\t\tthis._expandSlowly();\n\t\t}","returns":"already activated?","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._onMouseMove":{"meta":{"summary":"called when mouse is moved","parameters":{"e":{"type":"Event"}},"src":" \tif ((e.pageX >= this.hitX1) && (e.pageX <= this.hitX2) &&\n\t\t\t(e.pageY >= this.hitY1) && (e.pageY <= this.hitY2)){\n\t\t\tif( !this.isOver ){\n\t\t\t\tthis._setActive(e);\n\t\t\t}\n\t\t\tthis._onGridMouseMove(e.pageX-this.hitX1, e.pageY-this.hitY1);\n\t\t}else{\n\t\t\tif (this.isOver){\n\t\t\t\tthis._setDormant(e);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList.onResized":{"meta":{"summary":"","src":" \tthis._calcHitGrid();","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._onGridMouseMove":{"meta":{"summary":"called when mouse is moved in the vicinity of the menu","parameters":{"x":{"type":""},"y":{"type":""}},"src":" \tthis.pos = {x:x, y:y};\n\t\tthis._paint();","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._paint":{"meta":{"summary":"","src":" \tvar x=this.pos.x;\n\t\tvar y=this.pos.y;\n\t\tif( this.itemCount <= 0 ){ return; }\n\t\t\/\/\n\t\t\/\/ figure out our main index\n\t\t\/\/\n\t\tvar pos = this.isHorizontal ? x : y;\n\t\tvar prx = this.isHorizontal ? this.proximityLeft : this.proximityTop;\n\t\tvar siz = this.isHorizontal ? this.itemWidth : this.itemHeight;\n\t\tvar sim = this.isHorizontal ? \n\t\t\t(1.0-this.timerScale)*this.itemWidth + this.timerScale*this.itemMaxWidth :\n\t\t\t(1.0-this.timerScale)*this.itemHeight + this.timerScale*this.itemMaxHeight ;\n\t\tvar cen = ((pos - prx) \/ siz) - 0.5;\n\t\tvar max_off_cen = (sim \/ siz) - 0.5;\n\t\tif (max_off_cen > this.effectUnits){ max_off_cen = this.effectUnits; }\n\t\t\/\/\n\t\t\/\/ figure out our off-axis weighting\n\t\t\/\/\n\t\tvar off_weight = 0;\n\t\tif (this.anchorEdge == this.EDGE.BOTTOM){\n\t\t\tvar cen2 = (y - this.proximityTop) \/ this.itemHeight;\n\t\t\toff_weight = (cen2 > 0.5) ? 1 : y \/ (this.proximityTop + (this.itemHeight \/ 2));\n\t\t}\n\t\tif (this.anchorEdge == this.EDGE.TOP){\n\t\t\tvar cen2 = (y - this.proximityTop) \/ this.itemHeight;\n\t\t\toff_weight = (cen2 < 0.5) ? 1 : (this.totalHeight - y) \/ (this.proximityBottom + (this.itemHeight \/ 2));\n\t\t}\n\t\tif (this.anchorEdge == this.EDGE.RIGHT){\n\t\t\tvar cen2 = (x - this.proximityLeft) \/ this.itemWidth;\n\t\t\toff_weight = (cen2 > 0.5) ? 1 : x \/ (this.proximityLeft + (this.itemWidth \/ 2));\n\t\t}\n\t\tif (this.anchorEdge == this.EDGE.LEFT){\n\t\t\tvar cen2 = (x - this.proximityLeft) \/ this.itemWidth;\n\t\t\toff_weight = (cen2 < 0.5) ? 1 : (this.totalWidth - x) \/ (this.proximityRight + (this.itemWidth \/ 2));\n\t\t}\n\t\tif (this.anchorEdge == this.EDGE.CENTER){\n\t\t\tif (this.isHorizontal){\n\t\t\t\toff_weight = y \/ (this.totalHeight);\n\t\t\t}else{\n\t\t\t\toff_weight = x \/ (this.totalWidth);\n\t\t\t}\n\t\t\tif (off_weight > 0.5){\n\t\t\t\toff_weight = 1 - off_weight;\n\t\t\t}\n\t\t\toff_weight *= 2;\n\t\t}\n\t\t\/\/\n\t\t\/\/ set the sizes\n\t\t\/\/\n\t\tfor(var i=0; i<this.itemCount; i++){\n\t\t\tvar weight = this._weighAt(cen, i);\n\t\t\tif (weight < 0){weight = 0;}\n\t\t\tthis._setItemSize(i, weight * off_weight);\n\t\t}\n\t\t\/\/\n\t\t\/\/ set the positions\n\t\t\/\/\n\t\tvar main_p = Math.round(cen);\n\t\tvar offset = 0;\n\t\tif (cen < 0){\n\t\t\tmain_p = 0;\n\t\t}else if (cen > this.itemCount - 1){\n\t\t\tmain_p = this.itemCount -1;\n\t\t}else{\n\t\t\toffset = (cen - main_p) * ((this.isHorizontal ? this.itemWidth : this.itemHeight) - this.children[main_p].sizeMain);\n\t\t}\n\t\tthis._positionElementsFrom(main_p, offset);","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._weighAt":{"meta":{"summary":"","parameters":{"cen":{"type":"Integer"},"i":{"type":"Integer"}},"src":" \tvar dist = Math.abs(cen - i);\n\t\tvar limit = ((cen - i) > 0) ? this.children[i].effectRangeRght : this.children[i].effectRangeLeft;\n\t\treturn (dist > limit) ? 0 : (1 - dist \/ limit);\t\t\t\/\/ Integer","returns":"Integer","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._setItemSize":{"meta":{"summary":"","parameters":{"p":{"type":""},"scale":{"type":""}},"src":" \tscale *= this.timerScale;\n\t\tvar w = Math.round(this.itemWidth  + ((this.itemMaxWidth  - this.itemWidth ) * scale));\n\t\tvar h = Math.round(this.itemHeight + ((this.itemMaxHeight - this.itemHeight) * scale));\n\t\tif (this.isHorizontal){\n\t\t\tthis.children[p].sizeW = w;\n\t\t\tthis.children[p].sizeH = h;\n\t\t\tthis.children[p].sizeMain = w;\n\t\t\tthis.children[p].sizeOff  = h;\n\t\t\tvar y = 0;\n\t\t\tif (this.anchorEdge == this.EDGE.TOP){\n\t\t\t\ty = (this.children[p].cenY - (this.itemHeight \/ 2));\n\t\t\t}else if (this.anchorEdge == this.EDGE.BOTTOM){\n\t\t\t\ty = (this.children[p].cenY - (h - (this.itemHeight \/ 2)));\n\t\t\t}else{\n\t\t\t\ty = (this.children[p].cenY - (h \/ 2));\n\t\t\t}\n\t\t\tthis.children[p].usualX = Math.round(this.children[p].cenX - (w \/ 2));\n\t\t\tthis.children[p].domNode.style.top  = y + 'px';\n\t\t\tthis.children[p].domNode.style.left  = this.children[p].usualX + 'px';\n\t\t}else{\n\t\t\tthis.children[p].sizeW = w;\n\t\t\tthis.children[p].sizeH = h;\n\t\t\tthis.children[p].sizeOff  = w;\n\t\t\tthis.children[p].sizeMain = h;\n\t\t\tvar x = 0;\n\t\t\tif (this.anchorEdge == this.EDGE.LEFT){\n\t\t\t\tx = this.children[p].cenX - (this.itemWidth \/ 2);\n\t\t\t}else if (this.anchorEdge == this.EDGE.RIGHT){\n\t\t\t\tx = this.children[p].cenX - (w - (this.itemWidth \/ 2));\n\t\t\t}else{\n\t\t\t\tx = this.children[p].cenX - (w \/ 2);\n\t\t\t}\n\t\t\tthis.children[p].domNode.style.left = x + 'px';\n\t\t\tthis.children[p].usualY = Math.round(this.children[p].cenY - (h \/ 2));\n\t\t\tthis.children[p].domNode.style.top  = this.children[p].usualY + 'px';\n\t\t}\n\t\tthis.children[p].domNode.style.width  = w + 'px';\n\t\tthis.children[p].domNode.style.height = h + 'px';\n\t\tif (this.children[p].svgNode){\n\t\t\tthis.children[p].svgNode.setSize(w, h);\n\t\t}","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._positionElementsFrom":{"meta":{"summary":"","parameters":{"p":{"type":""},"offset":{"type":""}},"src":" \tvar pos = 0;\n\t\tif (this.isHorizontal){\n\t\t\tpos = Math.round(this.children[p].usualX + offset);\n\t\t\tthis.children[p].domNode.style.left = pos + 'px';\n\t\t}else{\n\t\t\tpos = Math.round(this.children[p].usualY + offset);\n\t\t\tthis.children[p].domNode.style.top = pos + 'px';\n\t\t}\n\t\tthis._positionLabel(this.children[p]);\n\t\t\/\/\n\t\t\/\/ position before\n\t\t\/\/\n\t\tvar bpos = pos;\n\t\tfor(var i=p-1; i>=0; i--){\n\t\t\tbpos -= this.children[i].sizeMain;\n\t\t\tif (this.isHorizontal){\n\t\t\t\tthis.children[i].domNode.style.left = bpos + 'px';\n\t\t\t}else{\n\t\t\t\tthis.children[i].domNode.style.top = bpos + 'px';\n\t\t\t}\n\t\t\tthis._positionLabel(this.children[i]);\n\t\t}\n\t\t\/\/\n\t\t\/\/ position after\n\t\t\/\/\n\t\tvar apos = pos;\n\t\tfor(var i=p+1; i<this.itemCount; i++){\n\t\t\tapos += this.children[i-1].sizeMain;\n\t\t\tif (this.isHorizontal){\n\t\t\t\tthis.children[i].domNode.style.left = apos + 'px';\n\t\t\t}else{\n\t\t\t\tthis.children[i].domNode.style.top = apos + 'px';\n\t\t\t}\n\t\t\tthis._positionLabel(this.children[i]);\n\t\t}","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._positionLabel":{"meta":{"summary":"","parameters":{"itm":{"type":""}},"src":" \tvar x = 0;\n\t\tvar y = 0;\n\t\tvar mb = dojo.html.getMarginBox(itm.lblNode);\n\t\tif (this.labelEdge == this.EDGE.TOP){\n\t\t\tx = Math.round((itm.sizeW \/ 2) - (mb.width \/ 2));\n\t\t\ty = -mb.height;\n\t\t}\n\t\tif (this.labelEdge == this.EDGE.BOTTOM){\n\t\t\tx = Math.round((itm.sizeW \/ 2) - (mb.width \/ 2));\n\t\t\ty = itm.sizeH;\n\t\t}\n\t\tif (this.labelEdge == this.EDGE.LEFT){\n\t\t\tx = -mb.width;\n\t\t\ty = Math.round((itm.sizeH \/ 2) - (mb.height \/ 2));\n\t\t}\n\t\tif (this.labelEdge == this.EDGE.RIGHT){\n\t\t\tx = itm.sizeW;\n\t\t\ty = Math.round((itm.sizeH \/ 2) - (mb.height \/ 2));\n\t\t}\n\t\titm.lblNode.style.left = x + 'px';\n\t\titm.lblNode.style.top  = y + 'px';","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._calcHitGrid":{"meta":{"summary":"","src":" \tvar pos = dojo.html.getAbsolutePosition(this.domNode, true);\n\t\tthis.hitX1 = pos.x - this.proximityLeft;\n\t\tthis.hitY1 = pos.y - this.proximityTop;\n\t\tthis.hitX2 = this.hitX1 + this.totalWidth;\n\t\tthis.hitY2 = this.hitY1 + this.totalHeight;\n\t\t\/\/dojo.debug(this.hitX1+','+this.hitY1+' \/\/ '+this.hitX2+','+this.hitY2);","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._toEdge":{"meta":{"summary":"","parameters":{"inp":{"type":""},"def":{"type":""}},"src":" \treturn this.EDGE[inp.toUpperCase()] || def;","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList._expandSlowly":{"meta":{"summary":"slowly expand the image to user specified max size","src":" \tif( !this.isOver ){ return; }\n\t\tthis.timerScale += 0.2;\n\t\tthis._paint();\n\t\tif ( this.timerScale<1.0 ) {\n\t\t\tdojo.lang.setTimeout(this, \"_expandSlowly\", 10);\n\t\t}","prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeList.destroy":{"meta":{"summary":"","src":" \tdojo.event.disconnect(document.documentElement, \"onmouseout\", this, \"_onBodyOut\");\n\t\tdojo.event.disconnect(document.documentElement, \"onmousemove\", this, \"_onMouseMove\");\n\t\tdojo.widget.FisheyeList.superclass.destroy.call(this);","call_chain":["dojo.widget.FisheyeList.superclass.destroy"],"prototype":"dojo.widget.FisheyeList"}},"dojo.widget.FisheyeListItem":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["iconSrc","svgSrc","caption","id","_blankImgPath","templateString"],"variables":["iconSrc","svgSrc","caption","id","_blankImgPath","templateString"],"instance_variables":["svgNode","imgNode.style.display","imgNode.style.filter","imgNode.src","svgRoot","svgDoc","zeroWidth","zeroHeight","loaded","setWidth","setHeight","setSizeOnLoad","style.width","style.height","svgRoot.width.baseVal.value","svgRoot.height.baseVal.value"]},"extra":{"variables":{"iconSrc":{"type":"String","summary":"pathname to image file (jpg, gif, png, etc.) of icon for this menu item"},"caption":{"type":"String","summary":"label to print next to the icon, when it is moused-over"}}}},"dojo.widget.FisheyeListItem.fillInTemplate":{"meta":{"summary":"","src":" \tif (this.svgSrc != \"\"){\n\t\t\tthis.svgNode = this._createSvgNode(this.svgSrc);\n\t\t\tthis.domNode.appendChild(this.svgNode);\n\t\t\tthis.imgNode.style.display = 'none';\n\t\t} else if((this.iconSrc.toLowerCase().substring(this.iconSrc.length-4)==\".png\")&&(dojo.render.html.ie)&&(!dojo.render.html.ie70)){\n\t\t\t\/* we set the id of the new fisheyeListItem to the id of the div defined in the HTML *\/\n\t\t\tif (dojo.dom.hasParent(this.imgNode) && this.id != \"\"){\n\t\t\t\tvar parent = this.imgNode.parentNode;\n\t\t\t\tparent.setAttribute(\"id\", this.id);\n\t\t\t}\n\t\t\tthis.imgNode.style.filter = \"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\"+this.iconSrc+\"', sizingMethod='scale')\";\n\t\t\tthis.imgNode.src = this._blankImgPath.toString();\n\t\t} else {\n\t\t\tif (dojo.dom.hasParent(this.imgNode) && this.id != \"\"){\n\t\t\t\tvar parent = this.imgNode.parentNode;\n\t\t\t\tparent.setAttribute(\"id\", this.id);\n\t\t\t}\n\t\t\tthis.imgNode.src = this.iconSrc;\n\t\t}\n\t\t\/\/\n\t\t\/\/ Label\n\t\t\/\/\n\t\tif ( this.lblNode ) {\n\t\t\tthis.lblNode.appendChild(document.createTextNode(this.caption));\n\t\t}\n\t\tdojo.html.disableSelection(this.domNode);","prototype":"dojo.widget.FisheyeListItem"}},"dojo.widget.FisheyeListItem._createSvgNode":{"meta":{"summary":"","parameters":{"src":{"type":""}},"src":" \tvar elm = document.createElement('embed');\n\t\telm.src = src;\n\t\telm.type = 'image\/svg+xml';\n\t\t\/\/elm.style.border = '1px solid black';\n\t\telm.style.width = '1px';\n\t\telm.style.height = '1px';\n\t\telm.loaded = 0;\n\t\telm.setSizeOnLoad = false;\n\t\telm.onload = function(){\n\t\t\tthis.svgRoot = this.getSVGDocument().rootElement;\n\t\t\tthis.svgDoc = this.getSVGDocument().documentElement;\n\t\t\tthis.zeroWidth = this.svgRoot.width.baseVal.value;\n\t\t\tthis.zeroHeight = this.svgRoot.height.baseVal.value;\n\t\t\tthis.loaded = true;\n\t\t\tif (this.setSizeOnLoad){\n\t\t\t\tthis.setSize(this.setWidth, this.setHeight);\n\t\t\t}\n\t\t}\n\t\telm.setSize = function(w, h){\n\t\t\tif (!this.loaded){\n\t\t\t\tthis.setWidth = w;\n\t\t\t\tthis.setHeight = h;\n\t\t\t\tthis.setSizeOnLoad = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.style.width = w+'px';\n\t\t\tthis.style.height = h+'px';\n\t\t\tthis.svgRoot.width.baseVal.value = w;\n\t\t\tthis.svgRoot.height.baseVal.value = h;\n\t\t\tvar scale_x = w \/ this.zeroWidth;\n\t\t\tvar scale_y = h \/ this.zeroHeight;\n\t\t\tfor(var i=0; i<this.svgDoc.childNodes.length; i++){\n\t\t\t\tif (this.svgDoc.childNodes[i].setAttribute){\n\t\t\t\t\tthis.svgDoc.childNodes[i].setAttribute( \"transform\", \"scale(\"+scale_x+\",\"+scale_y+\")\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn elm;","prototype":"dojo.widget.FisheyeListItem"}},"dojo.widget.FisheyeListItem.onMouseOver":{"meta":{"summary":"callback when user moves mouse over this menu item in conservative mode, don't activate the menu until user mouses over an icon","parameters":{"e":{"type":"Event"}},"src":" \tif( !this.parent.isOver ){\n\t\t\tthis.parent._setActive(e);\n\t\t}\n\t\tif ( this.caption != \"\" ) {\n\t\t\tdojo.html.addClass(this.lblNode, \"selected\");\n\t\t\tthis.parent._positionLabel(this);\n\t\t}","prototype":"dojo.widget.FisheyeListItem"}},"dojo.widget.FisheyeListItem.onMouseOut":{"meta":{"summary":"callback when user moves mouse off of this menu item","parameters":{"e":{"type":"Event"}},"src":" \tdojo.html.removeClass(this.lblNode, \"selected\");","prototype":"dojo.widget.FisheyeListItem"}},"dojo.widget.FisheyeListItem.onClick":{"meta":{"summary":"user overridable callback when user clicks this menu item","parameters":{"e":{"type":"Event"}},"src":"\t\t\/\/ summary: user overridable callback when user clicks this menu item","prototype":"dojo.widget.FisheyeListItem"}}}}},"dojo.widget.FloatingPane":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.Manager","dojo.html.*","dojo.html.layout","dojo.html.iframe","dojo.html.selection","dojo.lfx.shadow","dojo.widget.html.layout","dojo.widget.ContentPane","dojo.dnd.HtmlDragMove","dojo.widget.Dialog","dojo.widget.ResizeHandle"]},"functions":{"dojo.widget.FloatingPane.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tthis.fillInFloatingPaneTemplate(args, frag);\n\t\tdojo.widget.FloatingPane.superclass.fillInTemplate.call(this, args, frag);","call_chain":["dojo.widget.FloatingPane.superclass.fillInTemplate"],"prototype":"dojo.widget.FloatingPane"}},"dojo.widget.FloatingPane.postCreate":{"meta":{"summary":"","src":" \tdojo.widget.FloatingPaneBase.prototype.postCreate.apply(this, arguments);\n\t\tdojo.widget.FloatingPane.superclass.postCreate.apply(this, arguments);","call_chain":["dojo.widget.FloatingPaneBase.prototype.postCreate","dojo.widget.FloatingPane.superclass.postCreate"],"prototype":"dojo.widget.FloatingPane"}},"dojo.widget.FloatingPane.show":{"meta":{"summary":"","src":" \tdojo.widget.FloatingPane.superclass.show.apply(this, arguments);\n\t\tthis.showFloatingPane();","call_chain":["dojo.widget.FloatingPane.superclass.show"],"prototype":"dojo.widget.FloatingPane"}},"dojo.widget.FloatingPane.onShow":{"meta":{"summary":"","src":" \tdojo.widget.FloatingPane.superclass.onShow.call(this);\n\t\tthis.onFloatingPaneShow();","call_chain":["dojo.widget.FloatingPane.superclass.onShow"],"prototype":"dojo.widget.FloatingPane"}},"dojo.widget.FloatingPane.destroy":{"meta":{"summary":"","src":" \tthis.destroyFloatingPane();\n\t\tdojo.widget.FloatingPane.superclass.destroy.apply(this, arguments);","call_chain":["dojo.widget.FloatingPane.superclass.destroy"],"prototype":"dojo.widget.FloatingPane"}},"dojo.widget.FloatingPane":{"meta":{"summary":"A non-modal floating window. Attaches to a Taskbar which has an icon for each window. Must specify size (like style=\"width: 500px; height: 500px;\"),"}},"dojo.widget.ModalFloatingPane":{"meta":{"prototype_variables":["windowState","displayCloseAction"],"variables":["windowState","displayCloseAction"],"instance_variables":["bg.style.zIndex"],"summary":"A modal floating window. This widget is similar to the Dialog widget, but the window, unlike the Dialog, can be moved. Must specify size (like style=\"width: 500px; height: 500px;\"),"}},"dojo.widget.ModalFloatingPane.postCreate":{"meta":{"summary":"","src":" \t\tdojo.widget.ModalDialogBase.prototype.postCreate.call(this);\n\t\t\tdojo.widget.ModalFloatingPane.superclass.postCreate.call(this);","call_chain":["dojo.widget.ModalDialogBase.prototype.postCreate","dojo.widget.ModalFloatingPane.superclass.postCreate"],"prototype":"dojo.widget.ModalFloatingPane"}},"dojo.widget.ModalFloatingPane.show":{"meta":{"summary":"","src":" \t\tthis.showModalDialog();\n\t\t\tdojo.widget.ModalFloatingPane.superclass.show.apply(this, arguments);\n\t\t\t\/\/place the background div under this modal pane\n\t\t\tthis.bg.style.zIndex = this.domNode.style.zIndex-1;","call_chain":["dojo.widget.ModalFloatingPane.superclass.show"],"prototype":"dojo.widget.ModalFloatingPane"}},"dojo.widget.ModalFloatingPane.hide":{"meta":{"summary":"","src":" \t\tthis.hideModalDialog();\n\t\t\tdojo.widget.ModalFloatingPane.superclass.hide.apply(this, arguments);","call_chain":["dojo.widget.ModalFloatingPane.superclass.hide"],"prototype":"dojo.widget.ModalFloatingPane"}},"dojo.widget.ModalFloatingPane.closeWindow":{"meta":{"summary":"","src":" \t\tthis.hide();\n\t\t\tdojo.widget.ModalFloatingPane.superclass.closeWindow.apply(this, arguments);","call_chain":["dojo.widget.ModalFloatingPane.superclass.closeWindow"],"prototype":"dojo.widget.ModalFloatingPane"}}}}},"dojo.widget.Form":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.Form":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","templateString","formElements","ignoreNullValues"],"variables":["isContainer","templateString","formElements","ignoreNullValues"],"instance_variables":["formElements"]}},"dojo.widget.Form.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tfor (var key in args) {\n\t\t\t\tif (key == \"dojotype\") continue;\n\t\t\t\tvar attr= document.createAttribute(key);\n      \t\t\t\tattr.nodeValue=args[key];\n      \t\t\t\tthis.containerNode.setAttributeNode(attr);\n    \t\t\t}","prototype":"dojo.widget.Form"}},"dojo.widget.Form._createRepeaters":{"meta":{"summary":"","parameters":{"obj":{"type":"object"},"widget":{"type":"widget"}},"src":" \t\tfor(var i=0; i<widget.children.length; ++i) {\n\t\t\t\t  if (widget.children[i].widgetType == \"RepeaterContainer\") {\n\t\t\t\t\tvar rIndex=widget.children[i].index;\n\t\t\t\t\tvar rIndexPos=rIndex.indexOf(\"%{index}\");\n\t\t\t\t\trIndex=rIndex.substr(0,rIndexPos-1);\n\t\t\t\t\tvar myObj = this._getObject(obj, rIndex);\n\t\t\t\t\tif (typeof(myObj) == \"object\" && myObj.length == 0) {\n\t\t\t\t\t\tmyObj=new Array();\n\t\t\t\t\t}\n\t\t\t\t\tvar rowCount = widget.children[i].getRowCount();\n\t\t\t\t\tfor (var j=0,len=rowCount; j<len; ++j) {\n\t\t\t\t\t\twidget.children[i].deleteRow(0);\n\t\t\t\t\t}\n\t\t\t\t\tfor (var j=0; j<myObj.length; j++) {\n    \t\t\t\t\t \twidget.children[i].addRow(false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (widget.children[i].isContainer) {\n\t\t\t\t\tthis._createRepeaters(obj, widget.children[i]);\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.Form"}},"dojo.widget.Form._createFormElements":{"meta":{"summary":"","src":"   \t\t\tif(dojo.render.html.safari) {\n\t\t\t\t\/\/ bug in safari (not registering form-elements)\n\t\t\t\tthis.formElements=[];\n\t\t\t\tvar elems = [\"INPUT\", \"SELECT\", \"TEXTAREA\"];\n\t\t\t\tfor (var k=0; k < elems.length; k++) {\n\t\t\t\t\tvar list = this.containerNode.getElementsByTagName(elems[k]);\n\t\t\t\t\tfor (var j=0,len2=list.length; j<len2; j++) {\n\t\t\t\t\t\tthis.formElements.push(list[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\/\/ fixed in safari nightly\n\t\t\t} else {\n\t\t\t\tthis.formElements=this.containerNode.elements;\n\t\t\t}","prototype":"dojo.widget.Form"}},"dojo.widget.Form.onSubmit":{"meta":{"summary":"","parameters":{"e":{"type":"event"}},"src":"    \t\t\te.preventDefault();","prototype":"dojo.widget.Form"}},"dojo.widget.Form.submit":{"meta":{"summary":"","src":" \t\tthis.containerNode.submit();","prototype":"dojo.widget.Form"}},"dojo.widget.Form._getFormElement":{"meta":{"summary":"","parameters":{"name":{"type":"form elements name"}},"src":" \t\tif(dojo.render.html.ie) {\n\t\t\t\tfor(var i=0, len=this.formElements.length; i<len; i++) {\n\t\t\t\t\tvar element = this.formElements[i];\n\t\t\t\t\tif (element.name == name) {\n\t\t\t\t\t\treturn element;\n\t\t\t\t\t} \/\/ if\n\t\t\t\t} \/\/ for\n\t\t\t} else {\n\t\t\t\tvar elem = this.formElements[name];\n\t\t\t\tif (typeof(elem) != \"undefined\") {\n\t\t\t\t\treturn elem;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;","prototype":"dojo.widget.Form"}},"dojo.widget.Form._getObject":{"meta":{"summary":"","parameters":{"obj":{"type":"object"},"searchString":{"type":"string"}},"src":" \t\tvar namePath = [];\n\t\t\tnamePath=searchString.split(\".\");\n\t\t\tvar myObj=obj;\n\t\t\tvar name=namePath[namePath.length-1];\n\t\t\tfor(var j=0, len=namePath.length;j<len;++j) {\n\t\t\t\tvar p=namePath[j];\n\t\t\t\tif (typeof(myObj[p]) == \"undefined\") {\n\t\t\t\t\tmyObj[p]={};\n\t\t\t\t}\n\t\t\t\tmyObj=myObj[p];\n\t\t\t}\n\t\t\treturn myObj;","prototype":"dojo.widget.Form"}},"dojo.widget.Form._setToContainers":{"meta":{"summary":"","parameters":{"obj":{"type":"object"},"widget":{"type":"widget"}},"src":" \t\tfor(var i=0, len=widget.children.length; i<len; ++i) {\n\t\t\t\tvar currentWidget=widget.children[i];\n\t\t\t\tif (currentWidget.widgetType == \"Repeater\") {\n        \t\t\t\tfor(var j=0,len=currentWidget.getRowCount(); j<len; ++j) {\n          \t\t\t\t\tcurrentWidget._initRow(j);\n        \t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (currentWidget.isContainer) {\n\t\t\t\t\tthis._setToContainers (obj, currentWidget);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tswitch(currentWidget.widgetType) {\n\t\t\t\t\tcase \"Checkbox\":\n\t\t\t\t\t\tcurrentWidget.setValue(currentWidget.inputNode.checked);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"DropdownDatePicker\":\n\t\t\t\t\t\tcurrentWidget.setValue(currentWidget.getValue());\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Select\":\n\t\t\t\t\t\t\/\/widget.children[i].setValue(myObj[name]);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ComboBox\":\n\t\t\t\t\t\t\/\/widget.children[i].setSelectedValue(myObj[name]);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.Form"}},"dojo.widget.Form.setValues":{"meta":{"summary":"","parameters":{"obj":{"type":"object"}},"src":" \t\tthis._createFormElements();\n    \t\t\tthis._createRepeaters(obj,this);\n\t\t\tfor(var i=0, len=this.formElements.length; i<len; i++) {\n\t\t\t\tvar element = this.formElements[i];\n\t\t\t\tif (element.name == '') {continue};\n\t\t\t\tvar namePath = new Array();\n\t\t\t\tnamePath=element.name.split(\".\");\n\t\t\t\tvar myObj=obj;\n\t\t\t\tvar name=namePath[namePath.length-1];\n\t\t\t\tfor(var j=1,len2=namePath.length;j<len2;++j) {\n\t\t\t\t\tvar p=namePath[j - 1];\n\t\t\t\t\tif(typeof(myObj[p]) == \"undefined\") {\n\t\t\t\t\t\tmyObj=undefined;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t};\n\t\t\t\t\tmyObj=myObj[p];\n\t\t\t\t}\n\t\t\t\tif (typeof(myObj) == \"undefined\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (typeof(myObj[name]) == \"undefined\" && this.ignoreNullValues) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar type=element.type;\n\t\t\t\tif (type == \"hidden\" || type == \"text\" || type == \"textarea\" || type == \"password\") {\n\t\t\t\t\ttype = \"text\";\n\t\t\t\t}\n\t\t\t\tswitch(type) {\n\t\t\t\t\tcase \"checkbox\":\n\t\t\t\t\t\telement.checked=false;\n\t\t\t\t\t\tif (typeof(myObj[name]) == 'undefined') continue;\n\t\t\t\t\t\tfor (var j=0,len2=myObj[name].length; j<len2; ++j) {\n\t\t\t\t\t\t\tif(element.value == myObj[name][j]) {\n\t\t\t\t\t\t\t\telement.checked=true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"radio\":\n\t\t\t\t\t\telement.checked=false;\n\t\t\t\t\t\tif (typeof(myObj[name]) == 'undefined') {continue};\n\t\t\t\t\t\tif (myObj[name] == element.value) {\n\t\t\t\t\t\t\telement.checked=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"select-multiple\":\n\t\t\t\t\t\telement.selectedIndex=-1;\n\t\t\t\t\t\tfor (var j=0,len2=element.options.length; j<len2; ++j) {\n\t\t\t\t\t\t\tfor (var k=0,len3=myObj[name].length;k<len3;++k) {\n\t\t\t\t\t\t\t\tif (element.options[j].value == myObj[name][k]) {\n\t\t\t\t\t\t\t\t\telement.options[j].selected=true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"select-one\":\n\t\t\t\t\t\telement.selectedIndex=\"0\";\n\t\t\t\t\t\tfor (var j=0,len2=element.options.length; j<len2; ++j) {\n\t\t\t\t\t\t\tif (element.options[j].value == myObj[name]) {\n\t\t\t\t\t\t\t\telement.options[j].selected=true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\/\/\telement.options[j].selected=false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"text\":\n\t\t\t\t\t\tvar value=\"\";\n\t\t\t\t\t\tif (typeof(myObj[name]) != 'undefined') {\n\t\t\t\t\t\t\tvalue = myObj[name];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telement.value=value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tdojo.debug(\"Not supported type (\"+type+\")\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n      \t\t\t}\n\t\t\tthis._setToContainers(obj,this);","prototype":"dojo.widget.Form"}},"dojo.widget.Form.getValues":{"meta":{"summary":"","src":" \t\tthis._createFormElements();\n\t\t\tvar obj = { };\n\t\t\tfor(var i=0,len=this.formElements.length; i<len; i++) {\n\t\t\t\t\/\/ FIXME: would be better to give it an attachPoint:\n\t\t\t\tvar elm = this.formElements[i];\n\t\t\t\tvar namePath = [];\n\t\t\t\tif (elm.name == '') { continue;}\n\t\t\t\tnamePath=elm.name.split(\".\");\n\t\t\t\tvar myObj=obj;\n\t\t\t\tvar name=namePath[namePath.length-1];\n\t\t\t\tfor(var j=1,len2=namePath.length;j<len2;++j) {\n\t\t\t\t\tvar nameIndex = null;\n\t\t\t\t\tvar p=namePath[j - 1];\n\t\t\t\t\tvar nameA=p.split(\"[\");\n\t\t\t\t\tif (nameA.length > 1) {\n\t\t\t\t\t\tif(typeof(myObj[nameA[0]]) == \"undefined\") {\n\t\t\t\t\t\t\tmyObj[nameA[0]]=[ ];\n\t\t\t\t\t\t} \/\/ if\n\t\t\t\t\t\tnameIndex=parseInt(nameA[1]);\n\t\t\t\t\t\tif(typeof(myObj[nameA[0]][nameIndex]) == \"undefined\") {\n\t\t\t\t\t\t\tmyObj[nameA[0]][nameIndex]={};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if(typeof(myObj[nameA[0]]) == \"undefined\") {\n\t\t\t\t\t\tmyObj[nameA[0]]={}\n\t\t\t\t\t} \/\/ if\n\t\t\t\t\tif (nameA.length == 1) {\n\t\t\t\t\t\tmyObj=myObj[nameA[0]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmyObj=myObj[nameA[0]][nameIndex];\n\t\t\t\t\t} \/\/ if\n\t\t\t\t} \/\/ for\n\t\t\t\tif ((elm.type != \"select-multiple\" && elm.type != \"checkbox\" && elm.type != \"radio\") || (elm.type==\"radio\" && elm.checked)) {\n\t\t\t\t\tif(name == name.split(\"[\")[0]) {\n\t\t\t\t\t\tmyObj[name]=elm.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\/\/ can not set value when there is no name\n\t\t\t\t\t}\n\t\t\t\t} else if (elm.type == \"checkbox\" && elm.checked) {\n\t\t\t\t\tif(typeof(myObj[name]) == 'undefined') {\n\t\t\t\t\t\tmyObj[name]=[ ];\n\t\t\t\t\t}\n\t\t\t\t\tmyObj[name].push(elm.value);\n\t\t\t\t} else if (elm.type == \"select-multiple\") {\n\t\t\t\t\tif(typeof(myObj[name]) == 'undefined') {\n\t\t\t\t\t\tmyObj[name]=[ ];\n\t\t\t\t\t}\n\t\t\t\t\tfor (var jdx=0,len3=elm.options.length; jdx<len3; ++jdx) {\n\t\t\t\t\t\tif (elm.options[jdx].selected) {\n\t\t\t\t\t\t\tmyObj[name].push(elm.options[jdx].value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \/\/ if\n\t\t\t\tname=undefined;\n\t\t\t} \/\/ for\n\t\treturn obj;","prototype":"dojo.widget.Form"}}}}},"dojo.widget.GoogleMap":{"meta":{"requires":{"common":["dojo.event.*","dojo.math","dojo.widget.*","dojo.uri.Uri","dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.GoogleMap":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath","isContainer","_defaultPoint","lng"],"variables":["templatePath","templateCssPath","isContainer","_defaultPoint","lng"],"summary":"A widget that wraps the Google Map API.","src":" \tthis.map=null;\n\t\tthis.geocoder=null;\n\t\tthis.data=[];\n\t\tthis.datasrc=\"\";\n\t\tthis.controls=[\"largemap\",\"scale\",\"maptype\"];","instance_variables":["map","geocoder","data","datasrc","controls"],"description":"Implements and wraps the Google Map API so that you can easily create and include Google Maps in your Dojo application. Will parse an included table for point information, but also exposes the underlying map via the map property. map: GMap2 The actual Google Map object. geocoder: GClientGeocoder A reference to the Google Geocoder object, for getting points for addresses. data: Object[] Array of generated points plotted on the map datasrc: String Reference to external (to the widget) source for points to plot on the map. controls: String[] List of controls to plot on the map; shortened names correspond to Google Controls."}}}}},"dojo.widget.HslColorPicker":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.widget.HslColorPicker","dojo.math","dojo.svg","dojo.gfx.color","dojo.gfx.color.hsl","dojo.experimental"]},"functions":{"dojo.widget.svg.HslColorPicker":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["hue","saturation","light","storedColor","templatePath"],"variables":["hue","saturation","light","storedColor","templatePath"],"instance_variables":["height","svgDoc","leftGradientColorNode","rightGradientColorNode","hue","saturation","light","leftGradientStopColor","rightGradientStopColor","storedColor","rgb","filterObject"],"summary":"","src":" \tdojo.debug(\"warning: the HslColorPicker is not a finished widget, and is not yet ready for general use\");\n\t\tthis.filterObject = {};"}},"dojo.widget.svg.HslColorPicker.fillInTemplate":{"meta":{"summary":"","src":" \tthis.height = \"131px\";\n\t\tthis.svgDoc = this.hueNode.ownerDocument;\n\t\tthis.leftGradientColorNode = this.hueNode.ownerDocument.getElementById(\"leftGradientColor\");\n\t\tthis.rightGradientColorNode = this.hueNode.ownerDocument.getElementById(\"rightGradientColor\");\n\t\tthis.hueNode.setAttributeNS(dojo.dom.xmlns.xlink, \"href\", dojo.uri.dojoUri(\"src\/widget\/templates\/images\/hue.png\"));\n\t\tvar hsl = dojo.gfx.color.hex2hsl(this.storedColor);\n\t\tthis.hue = hsl[0];\n\t\tthis.saturation = hsl[1];\n\t\tthis.light = hsl[2];\n\t\tthis.setSaturationStopColors();\n\t\t\/\/this.setHueSlider();\n\t\t\/\/this.setSaturationLightSlider();","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.setSaturationStopColors":{"meta":{"summary":"","src":" \tthis.leftGradientStopColor = dojo.gfx.color.rgb2hex(this.hsl2rgb(this.hue, 0, 50));\n\t\tthis.rightGradientStopColor = dojo.gfx.color.rgb2hex(this.hsl2rgb(this.hue, 100, 50));\n\t\tthis.leftGradientColorNode.setAttributeNS(null,'stop-color',this.leftGradientStopColor);\n\t\tthis.rightGradientColorNode.setAttributeNS(null,'stop-color',this.rightGradientStopColor);","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.setHue":{"meta":{"summary":"","parameters":{"hue":{"type":""}},"src":" \tthis.hue = hue;","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.setHueSlider":{"meta":{"summary":"","src":" \tthis.hueSliderNode.setAttribute(\"y\", parseInt((this.hue\/360) * parseInt(this.height) - 2) + \"px\" );","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.setSaturationLight":{"meta":{"summary":"","parameters":{"saturation":{"type":""},"light":{"type":""}},"src":" \tthis.saturation = saturation;\n\t\tthis.light = light;","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.setSaturationLightSlider":{"meta":{"summary":"","src":"\t\t\/\/ TODO","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.onHueClick":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tvar yPosition = parseInt(evt.clientY) - parseInt(evt.target.getAttribute(\"y\"));\n\t\tthis.setHue( 360 - parseInt(yPosition*(360\/parseInt(this.height))) );\n\t\tthis.setSaturationStopColors();\n\t\tthis.setStoredColor(dojo.gfx.color.hsl2hex(this.hue, this.saturation, this.light));","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.onHueDrag":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":"\t\t\/\/ TODO","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.onSaturationLightClick":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tvar xPosition = parseInt(evt.clientX) - parseInt(evt.target.getAttribute(\"y\"));\n\t\tvar yPosition = parseInt(evt.clientY) - parseInt(evt.target.getAttribute(\"y\"));\n\t\tvar saturation = parseInt(parseInt(xPosition)*(101\/106));\n\t\tvar light = parseInt(parseInt(yPosition)*(101\/106));\n\t\tthis.setSaturationLight(saturation, light);\n\t\tthis.setStoredColor(dojo.gfx.color.hsl2hex(this.hue, this.saturation, this.light));","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.onSaturationLightDrag":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":"\t\t\/\/ TODO","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.getStoredColor":{"meta":{"summary":"","src":" \treturn this.storedColor;","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.setStoredColor":{"meta":{"summary":"","parameters":{"rgbHexColor":{"type":""}},"src":" \tthis.storedColor = rgbHexColor;\n\t\tdojo.event.topic.publish(\"\/\" + this.widgetId + \"\/setStoredColor\", this.filterObject);","prototype":"dojo.widget.svg.HslColorPicker"}},"dojo.widget.svg.HslColorPicker.hsl2rgb":{"meta":{"summary":"","parameters":{"hue":{"type":""},"saturation":{"type":""},"light":{"type":""}},"src":" \tfunction rgb(q1,q2,hue) {\n\t\t\tif (hue>360) hue=hue-360;\n\t\t\tif (hue<0) hue=hue+360;\n\t\t\tif (hue<60) return (q1+(q2-q1)*hue\/60);\n\t\t\telse if (hue<180) return(q2);\n\t\t\telse if (hue<240) return(q1+(q2-q1)*(240-hue)\/60);\n\t\t\telse return(q1);\n\t\t}\n\t\tthis.rgb = rgb\n\t\tif (saturation==0) {\n\t\t\treturn [Math.round(light*255\/100), Math.round(light*255\/100), Math.round(light*255\/100)];\n\t\t} else {\n\t\t\tlight = light\/100;\n\t\t\tsaturation = saturation\/100;\n\t\t\t\/\/ check to see if light > 0.5\n\t\t\tif ((light)<0.5) {\n\t\t\t\tvar temp2 = (light)*(1.0+saturation)\n\t\t\t} else {\n\t\t\t\tvar temp2 = (light+saturation-(light*saturation))\n\t\t\t}\n\t\t\tvar temp1 = 2.0*light - temp2;\n\t\t\tvar rgbcolor = [];\n\t\t\trgbcolor[0] = Math.round(rgb(temp1,temp2,parseInt(hue)+120)*255);\n\t\t\trgbcolor[1] = Math.round(rgb(temp1,temp2,hue)*255);\n\t\t\trgbcolor[2] = Math.round(rgb(temp1,temp2,parseInt(hue)-120)*255);\n\t\t\treturn rgbcolor;\n\t\t}","prototype":"dojo.widget.svg.HslColorPicker"}}}}},"dojo.widget.HtmlWidget":{"meta":{"requires":{"common":["dojo.widget.DomWidget","dojo.html.util","dojo.html.display","dojo.html.layout","dojo.lang.extras","dojo.lang.func","dojo.lfx.toggle"]},"functions":{"dojo.widget.HtmlWidget":{"meta":{"prototype_chain":["dojo.widget.DomWidget"],"call_chain":["dojo.widget.DomWidget"]}}}}},"dojo.widget.InlineEditBox":{"meta":{"requires":{"common":["dojo.widget.*","dojo.event.*","dojo.lfx.*","dojo.gfx.color","dojo.string","dojo.html.*","dojo.html.layout"]},"functions":{"dojo.widget.InlineEditBox":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath","mode","name","minWidth","minHeight","editing","value","textValue","defaultText"],"variables":["templatePath","templateCssPath","mode","name","minWidth","minHeight","editing","value","textValue","defaultText"],"instance_variables":["value","editable","editable.innerHTML","mode","editing","form.style.display","editable.style.display","submitButton.disabled","doFade","cancelButton.disabled","history"],"summary":"Given node is displayed as-is (for example, an <h1 dojoType=\"InlineEditBox\"> is displayed as an <h1>, but when you click on it, it turns into an <input> or <textarea>, and the user can edit the value.","src":"\t\t\/\/ mutable objects need to be in constructor to give each instance its own copy\n\t\tthis.history = [];"},"extra":{"variables":{"name":{"type":"String","summary":"This is passed as the third argument to onSave()."}}}},"dojo.widget.InlineEditBox.postMixInProperties":{"meta":{"summary":"","src":" \tif(this.textValue){\n\t\t\tdojo.deprecated(\"InlineEditBox: Use value parameter instead of textValue; will be removed in 0.5\");\n\t\t\tthis.value=this.textValue;\n\t\t}\n\t\tif(this.defaultText){\n\t\t\tdojo.deprecated(\"InlineEditBox: Use value parameter instead of defaultText; will be removed in 0.5\");\n\t\t\tthis.value=this.defaultText;\n\t\t}","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.onSave":{"meta":{"summary":"Callback for when value is changed.","parameters":{"newValue":{"type":""},"oldValue":{"type":""},"name":{"type":""}},"src":"\t\t\/\/ summary: Callback for when value is changed.","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.onUndo":{"meta":{"summary":"Callback for when editing is aborted (value reverts to pre-edit value).","parameters":{"value":{"type":""}},"src":"\t\t\/\/ summary: Callback for when editing is aborted (value reverts to pre-edit value).","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tthis.editable = this.getFragNodeRef(frag);\n\t\tdojo.html.insertAfter(this.editable, this.form);\n\t\tdojo.event.connect(this.editable, \"onmouseover\", this, \"onMouseOver\");\n\t\tdojo.event.connect(this.editable, \"onmouseout\", this, \"onMouseOut\");\n\t\tdojo.event.connect(this.editable, \"onclick\", this, \"_beginEdit\");\n\t\t\/\/ get value and display it\n\t\tif(this.value){\n\t\t\tthis.editable.innerHTML = this.value;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.value = dojo.string.trim(this.editable.innerHTML);\n\t\t\tthis.editable.innerHTML = this.value;\n\t\t}","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.onMouseOver":{"meta":{"summary":"","src":" \tif(!this.editing){\n\t\t\tif (this.disabled){\n\t\t\t\tdojo.html.addClass(this.editable, \"editableRegionDisabled\");\n\t\t\t} else {\n\t\t\t\tdojo.html.addClass(this.editable, \"editableRegion\");\n\t\t\t\tif(this.mode == \"textarea\"){\n\t\t\t\t\tdojo.html.addClass(this.editable, \"editableTextareaRegion\");\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.onMouseOut":{"meta":{"summary":"","src":" \tif(!this.editing){\n\t\t\tdojo.html.removeClass(this.editable, \"editableRegion\");\n\t\t\tdojo.html.removeClass(this.editable, \"editableTextareaRegion\");\n\t\t\tdojo.html.removeClass(this.editable, \"editableRegionDisabled\");\n\t\t}","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox._beginEdit":{"meta":{"summary":"When user clicks the text, then start editing. Hide the text and display the form instead.","parameters":{"e":{"type":""}},"src":"\t\tif(this.editing || this.disabled){ return; }\n\t\tthis.onMouseOut();\n\t\tthis.editing = true;\n\t\t\/\/ setup the form's <input> or <textarea> field, as specified by mode\n\t\tvar ee = this[this.mode.toLowerCase()];\n\t\tee.value = dojo.string.trim(this.value);\n\t\tee.style.fontSize = dojo.html.getStyle(this.editable, \"font-size\");\n\t\tee.style.fontWeight = dojo.html.getStyle(this.editable, \"font-weight\");\n\t\tee.style.fontStyle = dojo.html.getStyle(this.editable, \"font-style\");\n\t\tvar bb = dojo.html.getBorderBox(this.editable);\n\t\tee.style.width = Math.max(bb.width, this.minWidth) + \"px\";\n\t\tif(this.mode.toLowerCase()==\"textarea\"){\n\t\t\tee.style.display = \"block\";\n\t\t\tee.style.height = Math.max(bb.height, this.minHeight) + \"px\";\n\t\t} else {\n\t\t\tee.style.display = \"\";\n\t\t}\n\t\t\/\/ show the edit form and hide the read only version of the text\n\t\tthis.form.style.display = \"\";\n\t\tthis.editable.style.display = \"none\";\n\t\tee.focus();\n\t\tee.select();\n\t\tthis.submitButton.disabled = true;","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.saveEdit":{"meta":{"summary":"Callback when user presses \"Save\" button","parameters":{"e":{"type":""}},"src":" \te.preventDefault();\n\t\te.stopPropagation();\n\t\tvar ee = this[this.mode.toLowerCase()];\n\t\tif((this.value != ee.value)&&\n\t\t\t(dojo.string.trim(ee.value) != \"\")){\n\t\t\tthis.doFade = true;\n\t\t\tthis.history.push(this.value);\n\t\t\tthis.onSave(ee.value, this.value, this.name);\n\t\t\tthis.value = ee.value;\n\t\t\tthis.editable.innerHTML = \"\";\n\t\t\tvar textNode = document.createTextNode( this.value );\n\t\t\tthis.editable.appendChild( textNode );\n\t\t}else{\n\t\t\tthis.doFade = false;\n\t\t}\n\t\tthis._finishEdit(e);","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.cancelEdit":{"meta":{"summary":"Callback when user presses \"Cancel\" button","parameters":{"e":{"type":""}},"src":" \tif(!this.editing){ return false; }\n\t\tthis.editing = false;\n\t\tthis.form.style.display=\"none\";\n\t\tthis.editable.style.display = \"\";\n\t\treturn true;","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox._finishEdit":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif(!this.cancelEdit(e)){ return; }\n\t\tif(this.doFade) {\n\t\t\tdojo.lfx.highlight(this.editable, dojo.gfx.color.hex2rgb(\"#ffc\"), 700).play(300);\n\t\t}\n\t\tthis.doFade = false;","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.setText":{"meta":{"summary":"","parameters":{"txt":{"type":""}},"src":" \tdojo.deprecated(\"setText() is deprecated, call setValue() instead, will be removed in 0.5\");\n\t\tthis.setValue(txt);","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.setValue":{"meta":{"summary":"","parameters":{"txt":{"type":"String"}},"src":" \ttxt = \"\" + txt;\n\t\tvar tt = dojo.string.trim(txt);\n\t\tthis.value = tt\n\t\tthis.editable.innerHTML = tt;","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.undo":{"meta":{"summary":"Revert to previous value in history list.","src":" \tif(this.history.length > 0){\n\t\t\tvar curValue = this.value;\n\t\t\tvar value = this.history.pop();\n\t\t\tthis.editable.innerHTML = value;\n\t\t\tthis.value = value;\n\t\t\tthis.onUndo(value);\n\t\t\tthis.onSave(value, curValue, this.name);\n\t\t}","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.checkForValueChange":{"meta":{"summary":"Callback when user changes input value. Enable save button if the text value is different than the original value.","src":" \tvar ee = this[this.mode.toLowerCase()];\n\t\tif((this.value != ee.value)&&\n\t\t\t(dojo.string.trim(ee.value) != \"\")){\n\t\t\tthis.submitButton.disabled = false;\n\t\t}","prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.disable":{"meta":{"summary":"","src":" \tthis.submitButton.disabled = true;\n\t\tthis.cancelButton.disabled = true;\n\t\tvar ee = this[this.mode.toLowerCase()];\n\t\tee.disabled = true;\n\t\tdojo.widget.InlineEditBox.superclass.disable.apply(this, arguments);","call_chain":["dojo.widget.InlineEditBox.superclass.disable"],"prototype":"dojo.widget.InlineEditBox"}},"dojo.widget.InlineEditBox.enable":{"meta":{"summary":"","src":" \tthis.checkForValueChange();\n\t\tthis.cancelButton.disabled = false;\n\t\tvar ee = this[this.mode.toLowerCase()];\n\t\tee.disabled = false;\n\t\tdojo.widget.InlineEditBox.superclass.enable.apply(this, arguments);","call_chain":["dojo.widget.InlineEditBox.superclass.enable"],"prototype":"dojo.widget.InlineEditBox"}}}}},"dojo.widget.IntegerTextbox":{"meta":{"requires":{"common":["dojo.widget.ValidationTextbox","dojo.validate.common"]},"functions":{"dojo.widget.IntegerTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"prototype_variables":["signed","separator","min","max"],"variables":["signed","separator","min","max"],"instance_variables":["flags.signed","flags.min","flags.separator","flags.max"],"summary":"A subclass of ValidationTextbox. Over-rides isValid\/isInRange to test for integer input."},"extra":{"variables":{"signed":{"type":"String","summary":"The leading plus-or-minus sign. Can be true or false, default is either."},"separator":{"type":"The","summary":"character used as the thousands separator. Default is no separator."},"min":{"type":"Number","summary":"Minimum signed value. Default is -Infinity"},"max":{"type":"Number","summary":"Maximum signed value. Default is +Infinity"}}}},"dojo.widget.IntegerTextbox.mixInProperties":{"meta":{"summary":"","parameters":{"localProperties":{"type":""},"frag":{"type":""}},"src":" \t\tdojo.widget.IntegerTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif((localProperties.signed == \"true\")||\n\t\t\t\t(localProperties.signed == \"always\")){\n\t\t\t\tthis.flags.signed = true;\n\t\t\t}else if((localProperties.signed == \"false\")||\n\t\t\t\t\t(localProperties.signed == \"never\")){\n\t\t\t\tthis.flags.signed = false;\n\t\t\t\tthis.flags.min = 0;\n\t\t\t}else{\n\t\t\t\tthis.flags.signed = [ true, false ]; \/\/ optional\n\t\t\t}\n\t\t\tif(localProperties.separator){ \n\t\t\t\tthis.flags.separator = localProperties.separator;\n\t\t\t}\n\t\t\tif(localProperties.min){ \n\t\t\t\tthis.flags.min = parseInt(localProperties.min);\n\t\t\t}\n\t\t\tif(localProperties.max){ \n\t\t\t\tthis.flags.max = parseInt(localProperties.max);\n\t\t\t}","call_chain":["dojo.widget.IntegerTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.IntegerTextbox"}},"dojo.widget.IntegerTextbox.isValid":{"meta":{"summary":"Over-ride for integer validation","src":" \t\treturn dojo.validate.isInteger(this.textbox.value, this.flags);","prototype":"dojo.widget.IntegerTextbox"}},"dojo.widget.IntegerTextbox.isInRange":{"meta":{"summary":"Over-ride for integer validation","src":" \t\treturn dojo.validate.isInRange(this.textbox.value, this.flags);","prototype":"dojo.widget.IntegerTextbox"}}}}},"dojo.widget.InternetTextbox":{"meta":{"requires":{"common":["dojo.widget.ValidationTextbox","dojo.validate.web"]},"functions":{"dojo.widget.IpAddressTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"instance_variables":["flags.allowDottedDecimal","flags.allowDottedHex","flags.allowDottedOctal","flags.allowDecimal","flags.allowHex","flags.allowIPv6","flags.allowHybrid"],"summary":"A Textbox which tests for a valid IP address","description":"Can specify formats for ipv4 or ipv6 as attributes in the markup."}},"dojo.widget.IpAddressTextbox.mixInProperties":{"meta":{"summary":"see dojo.widget.Widget","parameters":{"localProperties":{"type":"Object"}},"src":"\t\t\t\/\/ First initialize properties in super-class.\n\t\t\tdojo.widget.IpAddressTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif(localProperties.allowdotteddecimal){ \n\t\t\t\tthis.flags.allowDottedDecimal = (localProperties.allowdotteddecimal == \"true\");\n\t\t\t}\n\t\t\tif(localProperties.allowdottedhex){ \n\t\t\t\tthis.flags.allowDottedHex = (localProperties.allowdottedhex == \"true\");\n\t\t\t}\n\t\t\tif(localProperties.allowdottedoctal){ \n\t\t\t\tthis.flags.allowDottedOctal = (localProperties.allowdottedoctal == \"true\");\n\t\t\t}\n\t\t\tif(localProperties.allowdecimal){ \n\t\t\t\tthis.flags.allowDecimal = (localProperties.allowdecimal == \"true\");\n\t\t\t}\n\t\t\tif(localProperties.allowhex){ \n\t\t\t\tthis.flags.allowHex = (localProperties.allowhex == \"true\");\n\t\t\t}\n\t\t\tif(localProperties.allowipv6){ \n\t\t\t\tthis.flags.allowIPv6 = (localProperties.allowipv6 == \"true\");\n\t\t\t}\n\t\t\tif(localProperties.allowhybrid){ \n\t\t\t\tthis.flags.allowHybrid = (localProperties.allowhybrid == \"true\");\n\t\t\t}","call_chain":["dojo.widget.IpAddressTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.IpAddressTextbox"}},"dojo.widget.IpAddressTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\treturn dojo.validate.isIpAddress(this.textbox.value, this.flags);","prototype":"dojo.widget.IpAddressTextbox"}},"dojo.widget.UrlTextbox":{"meta":{"prototype_chain":["dojo.widget.IpAddressTextbox"],"call_chain":["dojo.widget.IpAddressTextbox"],"instance_variables":["flags.scheme","flags.allowIP","flags.allowLocal","flags.allowCC","flags.allowGeneric"],"summary":"A Textbox which tests for a valid URL"}},"dojo.widget.UrlTextbox.mixInProperties":{"meta":{"summary":"see dojo.widget.Widget","parameters":{"localProperties":{"type":"Object"}},"src":"\t\t\t\/\/ First initialize properties in super-class.\n\t\t\tdojo.widget.UrlTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif ( localProperties.scheme ) { \n\t\t\t\tthis.flags.scheme = ( localProperties.scheme == \"true\" );\n\t\t\t}\n\t\t\tif ( localProperties.allowip ) { \n\t\t\t\tthis.flags.allowIP = ( localProperties.allowip == \"true\" );\n\t\t\t}\n\t\t\tif ( localProperties.allowlocal ) { \n\t\t\t\tthis.flags.allowLocal = ( localProperties.allowlocal == \"true\" );\n\t\t\t}\n\t\t\tif ( localProperties.allowcc ) { \n\t\t\t\tthis.flags.allowCC = ( localProperties.allowcc == \"true\" );\n\t\t\t}\n\t\t\tif ( localProperties.allowgeneric ) { \n\t\t\t\tthis.flags.allowGeneric = ( localProperties.allowgeneric == \"true\" );\n\t\t\t}","call_chain":["dojo.widget.UrlTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.UrlTextbox"}},"dojo.widget.UrlTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\treturn dojo.validate.isUrl(this.textbox.value, this.flags);","prototype":"dojo.widget.UrlTextbox"}},"dojo.widget.EmailTextbox":{"meta":{"prototype_chain":["dojo.widget.UrlTextbox"],"call_chain":["dojo.widget.UrlTextbox"],"instance_variables":["flags.allowCruft"],"summary":"A Textbox which tests for a valid email address","description":"Can use all markup attributes\/properties of UrlTextbox except scheme."}},"dojo.widget.EmailTextbox.mixInProperties":{"meta":{"summary":"see dojo.widget.Widget","parameters":{"localProperties":{"type":"Object"}},"src":"\t\t\t\/\/ First initialize properties in super-class.\n\t\t\tdojo.widget.EmailTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif(localProperties.allowcruft){ \n\t\t\t\tthis.flags.allowCruft = (localProperties.allowcruft == \"true\");\n\t\t\t}","call_chain":["dojo.widget.EmailTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.EmailTextbox"}},"dojo.widget.EmailTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\treturn dojo.validate.isEmailAddress(this.textbox.value, this.flags);","prototype":"dojo.widget.EmailTextbox"}},"dojo.widget.EmailListTextbox":{"meta":{"prototype_chain":["dojo.widget.EmailTextbox"],"call_chain":["dojo.widget.EmailTextbox"],"instance_variables":["flags.listSeparator"],"summary":"A Textbox which tests for a list of valid email addresses listSeparator: String The character used to separate email addresses. Default is \";\", \",\", \"\\n\" or \" \""}},"dojo.widget.EmailListTextbox.mixInProperties":{"meta":{"summary":"see dojo.widget.Widget","parameters":{"localProperties":{"type":"Object"}},"src":"\t\t\t\/\/ First initialize properties in super-class.\n\t\t\tdojo.widget.EmailListTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif(localProperties.listseparator){ \n\t\t\t\tthis.flags.listSeparator = localProperties.listseparator;\n\t\t\t}","call_chain":["dojo.widget.EmailListTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.EmailListTextbox"}},"dojo.widget.EmailListTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\treturn dojo.validate.isEmailAddressList(this.textbox.value, this.flags);","prototype":"dojo.widget.EmailListTextbox"}}}}},"dojo.widget.LayoutContainer":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.html.layout"]},"functions":{"dojo.widget.LayoutContainer":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","layoutChildPriority"],"variables":["isContainer","layoutChildPriority"],"instance_variables":["domNode.style.display","domNode.style.visibility"],"summary":"Provides Delphi-style panel layout semantics. details A LayoutContainer is a box with a specified size (like style=\"width: 500px; height: 500px;\"), that contains children widgets marked with \"layoutAlign\" of \"left\", \"right\", \"bottom\", \"top\", and \"client\". It takes it's children marked as left\/top\/bottom\/right, and lays them out along the edges of the box, and then it takes the child marked \"client\" and puts it into the remaining space in the middle. Left\/right positioning is similar to CSS's \"float: left\" and \"float: right\", and top\/bottom positioning would be similar to \"float: top\" and \"float: bottom\", if there were such CSS. Note that there can only be one client element, but there can be multiple left, right, top, or bottom elements. usage <style> html, body{ height: 100%; width: 100%; } <\/style> <div dojoType=\"LayoutContainer\" style=\"width: 100%; height: 100%\"> <div dojoType=\"ContentPane\" layoutAlign=\"top\">header text<\/div> <div dojoType=\"ContentPane\" layoutAlign=\"left\" style=\"width: 200px;\">table of contents<\/div> <div dojoType=\"ContentPane\" layoutAlign=\"client\">client area<\/div> <\/div>"}},"dojo.widget.LayoutContainer.postCreate":{"meta":{"summary":"","src":" \tdojo.widget.html.layout(this.domNode, this.children, this.layoutChildPriority);","prototype":"dojo.widget.LayoutContainer"}},"dojo.widget.LayoutContainer.addChild":{"meta":{"summary":"","parameters":{"child":{"type":""},"overrideContainerNode":{"type":""},"pos":{"type":""},"ref":{"type":""},"insertIndex":{"type":""}},"src":" \tdojo.widget.LayoutContainer.superclass.addChild.call(this, child, overrideContainerNode, pos, ref, insertIndex);\n\t\tdojo.widget.html.layout(this.domNode, this.children, this.layoutChildPriority);","call_chain":["dojo.widget.LayoutContainer.superclass.addChild"],"prototype":"dojo.widget.LayoutContainer"}},"dojo.widget.LayoutContainer.removeChild":{"meta":{"summary":"","parameters":{"pane":{"type":""}},"src":" \tdojo.widget.LayoutContainer.superclass.removeChild.call(this,pane);\n\t\tdojo.widget.html.layout(this.domNode, this.children, this.layoutChildPriority);","call_chain":["dojo.widget.LayoutContainer.superclass.removeChild"],"prototype":"dojo.widget.LayoutContainer"}},"dojo.widget.LayoutContainer.onResized":{"meta":{"summary":"","src":" \tdojo.widget.html.layout(this.domNode, this.children, this.layoutChildPriority);","prototype":"dojo.widget.LayoutContainer"}},"dojo.widget.LayoutContainer.show":{"meta":{"summary":"","src":" \tthis.domNode.style.display=\"\";\n\t\tthis.checkSize();\n\t\tthis.domNode.style.display=\"none\";\n\t\tthis.domNode.style.visibility=\"\";\n\t\tdojo.widget.LayoutContainer.superclass.show.call(this);","call_chain":["dojo.widget.LayoutContainer.superclass.show"],"prototype":"dojo.widget.LayoutContainer"}},"dojo.widget.Widget":{"meta":{"prototype_variables":["layoutAlign"]}}}}},"dojo.widget.LinkPane":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.ContentPane","dojo.html.style"]},"functions":{"dojo.widget.LinkPane":{"meta":{"prototype_chain":["dojo.widget.ContentPane"],"call_chain":["dojo.widget.ContentPane"],"prototype_variables":["templateString"],"variables":["templateString"],"summary":"LinkPane is just a ContentPane that loads data remotely (via the href attribute), and has markup similar to an anchor. The anchor's body (the words between <a> and <\/a>) become the label of the widget (used for TabContainer, AccordionContainer, etc.) usage <a href=\"foo.html\">my label<\/a>"}},"dojo.widget.LinkPane.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tvar source = this.getFragNodeRef(frag);\n\t\t\/\/ If user has specified node contents, they become the label\n\t\t\/\/ (the link must be plain text)\n\t\tthis.label += source.innerHTML;\n\t\tvar source = this.getFragNodeRef(frag);\n\t\tdojo.html.copyStyle(this.domNode, source);","prototype":"dojo.widget.LinkPane"}}}}},"dojo.widget.Manager":{"meta":{"requires":{"common":["dojo.lang.array","dojo.lang.func","dojo.event.*"]},"functions":{"dojo.widget.manager":{"meta":{"initialized":true,"summary":"","src":" this.widgets = [];\n\tthis.widgetIds = [];\n\t\/\/ map of widgetId-->widget for widgets without parents (top level widgets)\n\tthis.topWidgets = {};\n\tvar widgetTypeCtr = {};\n\tvar renderPrefixCache = [];\n\tthis.getUniqueId = function (widgetType) {\n\t\tvar widgetId;\n\t\tdo{\n\t\t\twidgetId = widgetType + \"_\" + (widgetTypeCtr[widgetType] != undefined ?\n\t\t\t++widgetTypeCtr[widgetType] : widgetTypeCtr[widgetType] = 0);\n\t\t}while(this.getWidgetById(widgetId));\n\t\treturn widgetId;\n\t}\n\tthis.add = function(widget){\n\t\t\/\/dojo.profile.start(\"dojo.widget.manager.add\");\n\t\tthis.widgets.push(widget);\n\t\t\/\/ Opera9 uses ID (caps)\n\t\tif(!widget.extraArgs[\"id\"]){\n\t\t\twidget.extraArgs[\"id\"] = widget.extraArgs[\"ID\"];\n\t\t}\n\t\t\/\/ FIXME: the rest of this method is very slow!\n\t\tif(widget.widgetId == \"\"){\n\t\t\tif(widget[\"id\"]){\n\t\t\t\twidget.widgetId = widget[\"id\"];\n\t\t\t}else if(widget.extraArgs[\"id\"]){\n\t\t\t\twidget.widgetId = widget.extraArgs[\"id\"];\n\t\t\t}else{\n\t\t\t\twidget.widgetId = this.getUniqueId(widget.ns+'_'+widget.widgetType);\n\t\t\t}\n\t\t}\n\t\tif(this.widgetIds[widget.widgetId]){\n\t\t\tdojo.debug(\"widget ID collision on ID: \"+widget.widgetId);\n\t\t}\n\t\tthis.widgetIds[widget.widgetId] = widget;\n\t\t\/\/ Widget.destroy already calls removeById(), so we don't need to\n\t\t\/\/ connect() it here\n\t\t\/\/dojo.profile.end(\"dojo.widget.manager.add\");\n\t}\n\tthis.destroyAll = function(){\n\t\tfor(var x=this.widgets.length-1; x>=0; x--){\n\t\t\ttry{\n\t\t\t\t\/\/ this.widgets[x].destroyChildren();\n\t\t\t\tthis.widgets[x].destroy(true);\n\t\t\t\tdelete this.widgets[x];\n\t\t\t}catch(e){ }\n\t\t}\n\t}\n\t\/\/ FIXME: we should never allow removal of the root widget until all others\n\t\/\/ are removed!\n\tthis.remove = function(widgetIndex){\n\t\tif(dojo.lang.isNumber(widgetIndex)){\n\t\t\tvar tw = this.widgets[widgetIndex].widgetId;\n\t\t\tdelete this.widgetIds[tw];\n\t\t\tthis.widgets.splice(widgetIndex, 1);\n\t\t}else{\n\t\t\tthis.removeById(widgetIndex);\n\t\t}\n\t}\n\t\/\/ FIXME: suboptimal performance\n\tthis.removeById = function(id) {\n\t\tif(!dojo.lang.isString(id)){\n\t\t\tid = id[\"widgetId\"];\n\t\t\tif(!id){ dojo.debug(\"invalid widget or id passed to removeById\"); return; }\n\t\t}\n\t\tfor (var i=0; i<this.widgets.length; i++){\n\t\t\tif(this.widgets[i].widgetId == id){\n\t\t\t\tthis.remove(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tthis.getWidgetById = function(id){\n\t\tif(dojo.lang.isString(id)){\n\t\t\treturn this.widgetIds[id];\n\t\t}\n\t\treturn id;\n\t}\n\tthis.getWidgetsByType = function(type){\n\t\tvar lt = type.toLowerCase();\n\t\tvar getType = (type.indexOf(\":\") < 0 ? \n\t\t\tfunction(x) { return x.widgetType.toLowerCase(); } :\n\t\t\tfunction(x) { return x.getNamespacedType(); }\n\t\t);\n\t\tvar ret = [];\n\t\tdojo.lang.forEach(this.widgets, function(x){\n\t\t\tif(getType(x) == lt){ret.push(x);}\n\t\t});\n\t\treturn ret;\n\t}\n\tthis.getWidgetsByFilter = function(unaryFunc, onlyOne){\n\t\tvar ret = [];\n\t\tdojo.lang.every(this.widgets, function(x){\n\t\t\tif(unaryFunc(x)){\n\t\t\t\tret.push(x);\n\t\t\t\tif(onlyOne){return false;}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn (onlyOne ? ret[0] : ret);\n\t}\n\tthis.getAllWidgets = function() {\n\t\treturn this.widgets.concat();\n\t}\n\t\/\/\tadded, trt 2006-01-20\n\tthis.getWidgetByNode = function(\/* DOMNode *\/ node){\n\t\tvar w=this.getAllWidgets();\n\t\tnode = dojo.byId(node);\n\t\tfor(var i=0; i<w.length; i++){\n\t\t\tif(w[i].domNode==node){\n\t\t\t\treturn w[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\/\/ shortcuts, baby\n\tthis.byId = this.getWidgetById;\n\tthis.byType = this.getWidgetsByType;\n\tthis.byFilter = this.getWidgetsByFilter;\n\tthis.byNode = this.getWidgetByNode;\n\t\/\/ map of previousally discovered implementation names to constructors\n\tvar knownWidgetImplementations = {};\n\t\/\/ support manually registered widget packages\n\tvar widgetPackages = [\"dojo.widget\"];\n\tfor (var i=0; i<widgetPackages.length; i++) {\n\t\t\/\/ convenience for checking if a package exists (reverse lookup)\n\t\twidgetPackages[widgetPackages[i]] = true;\n\t}\n\tthis.registerWidgetPackage = function(pname) {\n\t\tif(!widgetPackages[pname]){\n\t\t\twidgetPackages[pname] = true;\n\t\t\twidgetPackages.push(pname);\n\t\t}\n\t}\n\tthis.getWidgetPackageList = function() {\n\t\treturn dojo.lang.map(widgetPackages, function(elt) { return(elt!==true ? elt : undefined); });\n\t}\n\tthis.getImplementation = function(widgetName, ctorObject, mixins, ns){\n\t\t\/\/ try and find a name for the widget\n\t\tvar impl = this.getImplementationName(widgetName, ns);\n\t\tif(impl){ \n\t\t\t\/\/ var tic = new Date();\n\t\t\tvar ret = ctorObject ? new impl(ctorObject) : new impl();\n\t\t\t\/\/ dojo.debug(new Date() - tic);\n\t\t\treturn ret;\n\t\t}\n\t}\n\tfunction buildPrefixCache() {\n\t\tfor(var renderer in dojo.render){\n\t\t\tif(dojo.render[renderer][\"capable\"] === true){\n\t\t\t\tvar prefixes = dojo.render[renderer].prefixes;\n\t\t\t\tfor(var i=0; i<prefixes.length; i++){\n\t\t\t\t\trenderPrefixCache.push(prefixes[i].toLowerCase());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\/\/ make sure we don't HAVE to prefix widget implementation names\n\t\t\/\/ with anything to get them to render\n\t\t\/\/renderPrefixCache.push(\"\");\n\t\t\/\/ empty prefix is included automatically\n\t}\n\tvar findImplementationInModule = function(lowerCaseWidgetName, module){\n\t\tif(!module){return null;}\n\t\tfor(var i=0, l=renderPrefixCache.length, widgetModule; i<=l; i++){\n\t\t\twidgetModule = (i<l ? module[renderPrefixCache[i]] : module);\n\t\t\tif(!widgetModule){continue;}\n\t\t\tfor(var name in widgetModule){\n\t\t\t\tif(name.toLowerCase() == lowerCaseWidgetName){\n\t\t\t\t\treturn widgetModule[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tvar findImplementation = function(lowerCaseWidgetName, moduleName){\n\t\t\/\/ locate registered widget module\n\t\tvar module = dojo.evalObjPath(moduleName, false);\n\t\t\/\/ locate a widget implementation in the registered module for our current rendering environment\n\t\treturn (module ? findImplementationInModule(lowerCaseWidgetName, module) : null);\n\t}\n\tthis.getImplementationName = function(widgetName, ns){\n\t\t\/*\n\t\t * Locate an implementation (constructor) for 'widgetName' in namespace 'ns' \n\t\t * widgetNames are case INSENSITIVE\n\t\t * \n\t\t * 1. Return value from implementation cache, if available, for quick turnaround.\n\t\t * 2. Locate a namespace registration for 'ns'\n\t\t * 3. If no namespace found, register the conventional one (ns.widget)\n\t\t * 4. Allow the namespace resolver (if any) to load a module for this widget.\n\t\t * 5. Permute the widget name and capable rendering prefixes to locate, cache, and return \n\t\t *    an appropriate widget implementation.\n\t\t * 6. If no implementation is found, attempt to load the namespace manifest,\n\t\t *    and then look again for an implementation to cache and return.\n\t\t * 7. Use the deprecated widgetPackages registration system to attempt to locate the widget\n\t\t * 8. Fail\n\t\t *\/\n\t\tvar lowerCaseWidgetName = widgetName.toLowerCase();\n\t\t\/\/ default to dojo namespace\n\t\tns=ns||\"dojo\";\n\t\t\/\/ use cache if available\n\t\tvar imps = knownWidgetImplementations[ns] || (knownWidgetImplementations[ns]={});\n\t\t\/\/if(!knownWidgetImplementations[ns]){knownWidgetImplementations[ns]={};}\n\t\tvar impl = imps[lowerCaseWidgetName];\n\t\tif(impl){\n\t\t\treturn impl;\n\t\t}\n\t\t\/\/ (one time) store a list of the render prefixes we are capable of rendering\n\t\tif(!renderPrefixCache.length){\n\t\t\tbuildPrefixCache();\n\t\t}\n\t\t\/\/ lookup namespace\n\t\tvar nsObj = dojo.ns.get(ns);\n\t\tif(!nsObj){\n\t\t\t\/\/ default to <ns>.widget by convention\n\t\t\tdojo.ns.register(ns, ns + '.widget');\n\t\t\tnsObj = dojo.ns.get(ns);\n\t\t}\n\t\t\/\/ allow the namespace to resolve the widget module\n\t\tif(nsObj){nsObj.resolve(widgetName);}\n\t\t\/\/ locate a widget implementation in the registered module for our current rendering environment\n\t\timpl = findImplementation(lowerCaseWidgetName, nsObj.module);\n\t\tif(impl){return(imps[lowerCaseWidgetName] = impl)};\n\t\t\/\/ try to load a manifest to resolve this implemenation\n\t\tnsObj = dojo.ns.require(ns);\n\t\tif((nsObj)&&(nsObj.resolver)){\n\t\t\tnsObj.resolve(widgetName);\n\t\t\timpl = findImplementation(lowerCaseWidgetName, nsObj.module);\n\t\t\tif(impl){return(imps[lowerCaseWidgetName] = impl)};\n\t\t}\n\t\t\/\/ this is an error condition under new rules\n\t\tdojo.deprecated('dojo.widget.Manager.getImplementationName', \n\t\t\t'Could not locate widget implementation for \"' + widgetName + '\" in \"' + nsObj.module + '\" registered to namespace \"' + nsObj.name + '\". '\t\t\t\t\t\t\t\t\t\t\n\t\t\t+ \"Developers must specify correct namespaces for all non-Dojo widgets\", \"0.5\");\n\t\t\/\/ backward compat: if the user has not specified any namespace and their widget is not in dojo.widget.*\n\t\t\/\/ search registered widget packages [sic]\n\t\t\/\/ note: registerWidgetPackage itself is now deprecated \n\t\tfor(var i=0; i<widgetPackages.length; i++){\n\t\t\timpl = findImplementation(lowerCaseWidgetName, widgetPackages[i]);\n\t\t\tif(impl){return(imps[lowerCaseWidgetName] = impl)};\n\t\t}\n\t\tthrow new Error('Could not locate widget implementation for \"' + widgetName + '\" in \"' + nsObj.module + '\" registered to namespace \"' + nsObj.name + '\"');\n\t}\n\t\/\/ FIXME: does it even belong in this module?\n\t\/\/ NOTE: this method is implemented by DomWidget.js since not all\n\t\/\/ hostenv's would have an implementation.\n\t\/*this.getWidgetFromPrimitive = function(baseRenderType){\n\t\tdojo.unimplemented(\"dojo.widget.manager.getWidgetFromPrimitive\");\n\t}\n\tthis.getWidgetFromEvent = function(nativeEvt){\n\t\tdojo.unimplemented(\"dojo.widget.manager.getWidgetFromEvent\");\n\t}*\/\n\t\/\/ Catch window resize events and notify top level widgets\n\tthis.resizing=false;\n\tthis.onWindowResized = function(){\n\t\tif(this.resizing){\n\t\t\treturn;\t\/\/ duplicate event\n\t\t}\n\t\ttry{\n\t\t\tthis.resizing=true;\n\t\t\tfor(var id in this.topWidgets){\n\t\t\t\tvar child = this.topWidgets[id];\n\t\t\t\tif(child.checkSize ){\n\t\t\t\t\tchild.checkSize();\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t}finally{\n\t\t\tthis.resizing=false;\n\t\t}\n\t}\n\tif(typeof window != \"undefined\") {\n\t\tdojo.addOnLoad(this, 'onWindowResized');\t\t\t\t\t\t\t\/\/ initial sizing\n\t\tdojo.event.connect(window, 'onresize', this, 'onWindowResized');\t\/\/ window resize\n\t}\n\t\/\/ FIXME: what else?","instance_variables":["widgets","widgetIds","topWidgets","getUniqueId","add","destroyAll","remove","removeById","getWidgetById","getWidgetsByType","getWidgetsByFilter","getAllWidgets","getWidgetByNode","byId","byType","byFilter","byNode","registerWidgetPackage","getWidgetPackageList","getImplementation","getImplementationName","resizing","onWindowResized"],"returns":"duplicate event"}},"dojo.widget.manager.getUniqueId":{"meta":{"summary":"","parameters":{"widgetType":{"type":""}},"src":" \tvar widgetId;\n\t\tdo{\n\t\t\twidgetId = widgetType + \"_\" + (widgetTypeCtr[widgetType] != undefined ?\n\t\t\t++widgetTypeCtr[widgetType] : widgetTypeCtr[widgetType] = 0);\n\t\t}while(this.getWidgetById(widgetId));\n\t\treturn widgetId;","instance":"dojo.widget.manager"}},"dojo.widget.manager.add":{"meta":{"summary":"","parameters":{"widget":{"type":""}},"src":" \tthis.widgets.push(widget);\n\t\t\/\/ Opera9 uses ID (caps)\n\t\tif(!widget.extraArgs[\"id\"]){\n\t\t\twidget.extraArgs[\"id\"] = widget.extraArgs[\"ID\"];\n\t\t}\n\t\t\/\/ FIXME: the rest of this method is very slow!\n\t\tif(widget.widgetId == \"\"){\n\t\t\tif(widget[\"id\"]){\n\t\t\t\twidget.widgetId = widget[\"id\"];\n\t\t\t}else if(widget.extraArgs[\"id\"]){\n\t\t\t\twidget.widgetId = widget.extraArgs[\"id\"];\n\t\t\t}else{\n\t\t\t\twidget.widgetId = this.getUniqueId(widget.ns+'_'+widget.widgetType);\n\t\t\t}\n\t\t}\n\t\tif(this.widgetIds[widget.widgetId]){\n\t\t\tdojo.debug(\"widget ID collision on ID: \"+widget.widgetId);\n\t\t}\n\t\tthis.widgetIds[widget.widgetId] = widget;\n\t\t\/\/ Widget.destroy already calls removeById(), so we don't need to\n\t\t\/\/ connect() it here\n\t\t\/\/dojo.profile.end(\"dojo.widget.manager.add\");","instance":"dojo.widget.manager"}},"dojo.widget.manager.destroyAll":{"meta":{"summary":"","src":" \tfor(var x=this.widgets.length-1; x>=0; x--){\n\t\t\ttry{\n\t\t\t\t\/\/ this.widgets[x].destroyChildren();\n\t\t\t\tthis.widgets[x].destroy(true);\n\t\t\t\tdelete this.widgets[x];\n\t\t\t}catch(e){ }\n\t\t}","instance":"dojo.widget.manager"}},"dojo.widget.manager.remove":{"meta":{"summary":"","parameters":{"widgetIndex":{"type":""}},"src":" \tif(dojo.lang.isNumber(widgetIndex)){\n\t\t\tvar tw = this.widgets[widgetIndex].widgetId;\n\t\t\tdelete this.widgetIds[tw];\n\t\t\tthis.widgets.splice(widgetIndex, 1);\n\t\t}else{\n\t\t\tthis.removeById(widgetIndex);\n\t\t}","instance":"dojo.widget.manager"}},"dojo.widget.manager.removeById":{"meta":{"summary":"","parameters":{"id":{"type":""}},"src":" \tif(!dojo.lang.isString(id)){\n\t\t\tid = id[\"widgetId\"];\n\t\t\tif(!id){ dojo.debug(\"invalid widget or id passed to removeById\"); return; }\n\t\t}\n\t\tfor (var i=0; i<this.widgets.length; i++){\n\t\t\tif(this.widgets[i].widgetId == id){\n\t\t\t\tthis.remove(i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}","instance":"dojo.widget.manager"}},"dojo.widget.manager.getWidgetById":{"meta":{"summary":"","parameters":{"id":{"type":""}},"src":" \tif(dojo.lang.isString(id)){\n\t\t\treturn this.widgetIds[id];\n\t\t}\n\t\treturn id;","instance":"dojo.widget.manager"}},"dojo.widget.manager.getWidgetsByType":{"meta":{"summary":"","parameters":{"type":{"type":""}},"src":" \tvar lt = type.toLowerCase();\n\t\tvar getType = (type.indexOf(\":\") < 0 ? \n\t\t\tfunction(x) { return x.widgetType.toLowerCase(); } :\n\t\t\tfunction(x) { return x.getNamespacedType(); }\n\t\t);\n\t\tvar ret = [];\n\t\tdojo.lang.forEach(this.widgets, function(x){\n\t\t\tif(getType(x) == lt){ret.push(x);}\n\t\t});\n\t\treturn ret;","instance":"dojo.widget.manager"}},"dojo.widget.manager.getWidgetsByFilter":{"meta":{"summary":"","parameters":{"unaryFunc":{"type":""},"onlyOne":{"type":""}},"src":" \tvar ret = [];\n\t\tdojo.lang.every(this.widgets, function(x){\n\t\t\tif(unaryFunc(x)){\n\t\t\t\tret.push(x);\n\t\t\t\tif(onlyOne){return false;}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn (onlyOne ? ret[0] : ret);","instance":"dojo.widget.manager"}},"dojo.widget.manager.getAllWidgets":{"meta":{"summary":"","src":" \treturn this.widgets.concat();","instance":"dojo.widget.manager"}},"dojo.widget.manager.getWidgetByNode":{"meta":{"summary":"","parameters":{"node":{"type":"DOMNode"}},"src":" \tvar w=this.getAllWidgets();\n\t\tnode = dojo.byId(node);\n\t\tfor(var i=0; i<w.length; i++){\n\t\t\tif(w[i].domNode==node){\n\t\t\t\treturn w[i];\n\t\t\t}\n\t\t}\n\t\treturn null;","instance":"dojo.widget.manager"}},"dojo.widget.manager.registerWidgetPackage":{"meta":{"summary":"","parameters":{"pname":{"type":""}},"src":" \tif(!widgetPackages[pname]){\n\t\t\twidgetPackages[pname] = true;\n\t\t\twidgetPackages.push(pname);\n\t\t}","instance":"dojo.widget.manager"}},"dojo.widget.manager.getWidgetPackageList":{"meta":{"summary":"","src":" \treturn dojo.lang.map(widgetPackages, function(elt) { return(elt!==true ? elt : undefined); });","instance":"dojo.widget.manager"}},"dojo.widget.manager.getImplementation":{"meta":{"summary":"","parameters":{"widgetName":{"type":""},"ctorObject":{"type":""},"mixins":{"type":""},"ns":{"type":""}},"src":" \tvar impl = this.getImplementationName(widgetName, ns);\n\t\tif(impl){ \n\t\t\t\/\/ var tic = new Date();\n\t\t\tvar ret = ctorObject ? new impl(ctorObject) : new impl();\n\t\t\t\/\/ dojo.debug(new Date() - tic);\n\t\t\treturn ret;\n\t\t}","instance":"dojo.widget.manager"}},"dojo.widget.manager.getImplementationName":{"meta":{"summary":"","parameters":{"widgetName":{"type":""},"ns":{"type":""}},"src":" \tvar lowerCaseWidgetName = widgetName.toLowerCase();\n\t\t\/\/ default to dojo namespace\n\t\tns=ns||\"dojo\";\n\t\t\/\/ use cache if available\n\t\tvar imps = knownWidgetImplementations[ns] || (knownWidgetImplementations[ns]={});\n\t\t\/\/if(!knownWidgetImplementations[ns]){knownWidgetImplementations[ns]={};}\n\t\tvar impl = imps[lowerCaseWidgetName];\n\t\tif(impl){\n\t\t\treturn impl;\n\t\t}\n\t\t\/\/ (one time) store a list of the render prefixes we are capable of rendering\n\t\tif(!renderPrefixCache.length){\n\t\t\tbuildPrefixCache();\n\t\t}\n\t\t\/\/ lookup namespace\n\t\tvar nsObj = dojo.ns.get(ns);\n\t\tif(!nsObj){\n\t\t\t\/\/ default to <ns>.widget by convention\n\t\t\tdojo.ns.register(ns, ns + '.widget');\n\t\t\tnsObj = dojo.ns.get(ns);\n\t\t}\n\t\t\/\/ allow the namespace to resolve the widget module\n\t\tif(nsObj){nsObj.resolve(widgetName);}\n\t\t\/\/ locate a widget implementation in the registered module for our current rendering environment\n\t\timpl = findImplementation(lowerCaseWidgetName, nsObj.module);\n\t\tif(impl){return(imps[lowerCaseWidgetName] = impl)};\n\t\t\/\/ try to load a manifest to resolve this implemenation\n\t\tnsObj = dojo.ns.require(ns);\n\t\tif((nsObj)&&(nsObj.resolver)){\n\t\t\tnsObj.resolve(widgetName);\n\t\t\timpl = findImplementation(lowerCaseWidgetName, nsObj.module);\n\t\t\tif(impl){return(imps[lowerCaseWidgetName] = impl)};\n\t\t}\n\t\t\/\/ this is an error condition under new rules\n\t\tdojo.deprecated('dojo.widget.Manager.getImplementationName', \n\t\t\t'Could not locate widget implementation for \"' + widgetName + '\" in \"' + nsObj.module + '\" registered to namespace \"' + nsObj.name + '\". '\t\t\t\t\t\t\t\t\t\t\n\t\t\t+ \"Developers must specify correct namespaces for all non-Dojo widgets\", \"0.5\");\n\t\t\/\/ backward compat: if the user has not specified any namespace and their widget is not in dojo.widget.*\n\t\t\/\/ search registered widget packages [sic]\n\t\t\/\/ note: registerWidgetPackage itself is now deprecated \n\t\tfor(var i=0; i<widgetPackages.length; i++){\n\t\t\timpl = findImplementation(lowerCaseWidgetName, widgetPackages[i]);\n\t\t\tif(impl){return(imps[lowerCaseWidgetName] = impl)};\n\t\t}\n\t\tthrow new Error('Could not locate widget implementation for \"' + widgetName + '\" in \"' + nsObj.module + '\" registered to namespace \"' + nsObj.name + '\"');","instance":"dojo.widget.manager"}},"dojo.widget.manager.onWindowResized":{"meta":{"summary":"","src":" \tif(this.resizing){\n\t\t\treturn;\t\/\/ duplicate event\n\t\t}\n\t\ttry{\n\t\t\tthis.resizing=true;\n\t\t\tfor(var id in this.topWidgets){\n\t\t\t\tvar child = this.topWidgets[id];\n\t\t\t\tif(child.checkSize ){\n\t\t\t\t\tchild.checkSize();\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t}finally{\n\t\t\tthis.resizing=false;\n\t\t}","returns":"duplicate event","instance":"dojo.widget.manager"}},"g":{"meta":{"summary":"","parameters":{"oldName":{"type":""},"newName":{"type":""}},"src":" \tdw[(newName||oldName)] = h(oldName);"}},"dw.all":{"meta":{"summary":"","parameters":{"n":{"type":""}},"src":" \tvar widgets = dwm.getAllWidgets.apply(dwm, arguments);\n\t\tif(arguments.length > 0) {\n\t\t\treturn widgets[n];\n\t\t}\n\t\treturn widgets;","call_chain":["dwm.getAllWidgets"]}}}}},"dojo.widget.Menu2":{"meta":{"requires":{"common":["dojo.widget.PopupContainer"]},"functions":{"dojo.widget.PopupMenu2":{"meta":{"prototype_chain":["dojo.widget.PopupContainer"],"call_chain":["dojo.widget.PopupContainer"],"prototype_variables":["snarfChildDomOutput","eventNaming","templateString","templateCssPath","templateCssString","submenuDelay","submenuOverlap","contextMenuForWindow"],"variables":["snarfChildDomOutput","eventNaming","templateString","templateCssPath","templateCssString","submenuDelay","submenuOverlap","contextMenuForWindow"],"instance_variables":["eventNaming","currentSubpopup","currentSubmenuTrigger.is_open","currentSubmenuTrigger","openEvent","openedForWindow","targetNodeIds","eventNames"],"summary":"provides a menu that can be used as a context menu (typically shown by right-click), or as the drop down on a DropDownButton, ComboButton, etc.","src":"\t\t\/\/ targetNodeIds: String[]\n\t\t\/\/\tArray of dom node ids of nodes to attach to.\n\t\t\/\/\tFill this with nodeIds upon widget creation and it becomes context menu for those nodes.\n\t\tthis.targetNodeIds = [];\n\t\tthis.eventNames =  {\n\t\t\topen: \"\"\n\t\t};"},"extra":{"variables":{"submenuOverlap":{"type":"Integer","summary":"a submenu usually appears to the right, but slightly overlapping, it's parent menu; this controls the number of pixels the two menus overlap."},"contextMenuForWindow":{"type":"Boolean","summary":"if true, right clicking anywhere on the window will cause this context menu to open; if false, must specify targetNodeIds"}}}},"dojo.widget.PopupMenu2.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tif (this.eventNaming == \"default\") {\n\t\t\tfor (var eventName in this.eventNames) {\n\t\t\t\tthis.eventNames[eventName] = this.widgetId+\"\/\"+eventName;\n\t\t\t}\n\t\t}","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.postCreate":{"meta":{"summary":"","src":" \tif (this.contextMenuForWindow){\n\t\t\tvar doc = dojo.body();\n\t\t\tthis.bindDomNode(doc);\n\t\t} else if ( this.targetNodeIds.length > 0 ){\n\t\t\tdojo.lang.forEach(this.targetNodeIds, this.bindDomNode, this);\n\t\t}\n\t\tthis._subscribeSubitemsOnOpen();","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._subscribeSubitemsOnOpen":{"meta":{"summary":"","src":" \tvar subItems = this.getChildrenOfType(dojo.widget.MenuItem2);\n\t\tfor(var i=0; i<subItems.length; i++) {\n\t\t\tdojo.event.topic.subscribe(this.eventNames.open, subItems[i], \"menuOpen\")\n\t\t}","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.getTopOpenEvent":{"meta":{"summary":"get event that initially caused current chain of menus to open","src":" \tvar menu = this;\n\t\twhile (menu.parentPopup){ menu = menu.parentPopup; }\n\t\treturn menu.openEvent;\t\/\/ Event","returns":"Event","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.bindDomNode":{"meta":{"summary":"attach menu to given node","parameters":{"node":{"type":"String|DomNode"}},"src":" \tnode = dojo.byId(node);\n\t\tvar win = dojo.html.getElementWindow(node);\n\t\tif(dojo.html.isTag(node,'iframe') == 'iframe'){\n\t\t\twin = dojo.html.iframeContentWindow(node);\n\t\t\tnode = dojo.withGlobal(win, dojo.body);\n\t\t}\n\t\t\/\/ fixes node so that it supports oncontextmenu if not natively supported, Konqueror, Opera more?\n\t\tdojo.widget.Menu2.OperaAndKonqFixer.fixNode(node);\n\t\tdojo.event.kwConnect({\n\t\t\tsrcObj:     node,\n\t\t\tsrcFunc:    \"oncontextmenu\",\n\t\t\ttargetObj:  this,\n\t\t\ttargetFunc: \"onOpen\",\n\t\t\tonce:       true\n\t\t});\n\t\t\/\/normal connect does not work if document.designMode is on in FF, use addListener instead\n\t\tif(dojo.render.html.moz && win.document.designMode.toLowerCase() == 'on'){\n\t\t\tdojo.event.browser.addListener(node, \"contextmenu\", dojo.lang.hitch(this, \"onOpen\"));\n\t\t}\n\t\tdojo.widget.PopupManager.registerWin(win);","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.unBindDomNode":{"meta":{"summary":"detach menu from given node","parameters":{"nodeName":{"type":"String|DomNode"}},"src":" \tvar node = dojo.byId(nodeName);\n\t\tdojo.event.kwDisconnect({\n\t\t\tsrcObj:     node,\n\t\t\tsrcFunc:    \"oncontextmenu\",\n\t\t\ttargetObj:  this,\n\t\t\ttargetFunc: \"onOpen\",\n\t\t\tonce:       true\n\t\t});\n\t\t\/\/ cleans a fixed node, konqueror and opera\n\t\tdojo.widget.Menu2.OperaAndKonqFixer.cleanNode(node);","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._moveToNext":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \tthis._highlightOption(1);\n\t\treturn true; \/\/do not pass to parent menu","returns":"do not pass to parent menu","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._moveToPrevious":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \tthis._highlightOption(-1);\n\t\treturn true; \/\/do not pass to parent menu","returns":"do not pass to parent menu","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._moveToParentMenu":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \tif(this._highlighted_option && this.parentPopup){\n\t\t\t\/\/only process event in the focused menu\n\t\t\t\/\/and its immediate parentPopup to support\n\t\t\t\/\/MenuBar2\n\t\t\tif(evt._menu2UpKeyProcessed){\n\t\t\t\treturn true; \/\/do not pass to parent menu\n\t\t\t}else{\n\t\t\t\tthis._highlighted_option.onUnhover();\n\t\t\t\tthis.closeSubpopup();\n\t\t\t\tevt._menu2UpKeyProcessed = true;\n\t\t\t}\n\t\t}\n\t\treturn false;","returns":"do not pass to parent menu","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._moveToChildMenu":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \tif(this._highlighted_option && this._highlighted_option.submenuId){\n\t\t\tthis._highlighted_option._onClick(true);\n\t\t\treturn true; \/\/do not pass to parent menu\n\t\t}\n\t\treturn false;","returns":"do not pass to parent menu","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._selectCurrentItem":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \tif(this._highlighted_option){\n\t\t\tthis._highlighted_option._onClick();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.processKey":{"meta":{"summary":"callback to process key strokes return true to stop the event being processed by the parent popupmenu","parameters":{"evt":{"type":"Event"}},"src":"\t\tif(evt.ctrlKey || evt.altKey || !evt.key){ return false; }\n\t\tvar rval = false;\n\t\tswitch(evt.key){\n \t\t\tcase evt.KEY_DOWN_ARROW:\n\t\t\t\trval = this._moveToNext(evt);\n\t\t\t\tbreak;\n\t\t\tcase evt.KEY_UP_ARROW:\n\t\t\t\trval = this._moveToPrevious(evt);\n\t\t\t\tbreak;\n\t\t\tcase evt.KEY_RIGHT_ARROW:\n\t\t\t\trval = this._moveToChildMenu(evt);\n\t\t\t\tbreak;\n\t\t\tcase evt.KEY_LEFT_ARROW:\n\t\t\t\trval = this._moveToParentMenu(evt);\n\t\t\t\tbreak;\n\t\t\tcase \" \": \/\/fall through\n\t\t\tcase evt.KEY_ENTER: \n\t\t\t\tif(rval = this._selectCurrentItem(evt)){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\/\/fall through\n\t\t\tcase evt.KEY_ESCAPE:\n\t\t\t\tdojo.widget.PopupManager.currentMenu.close();\n\t\t\t\trval = true;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn rval;","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._findValidItem":{"meta":{"summary":"","parameters":{"dir":{"type":""},"curItem":{"type":""}},"src":" \tif(curItem){\n\t\t\tcurItem = dir>0 ? curItem.getNextSibling() : curItem.getPreviousSibling();\n\t\t}\n\t\tfor(var i=0; i < this.children.length; ++i){\n\t\t\tif(!curItem){\n\t\t\t\tcurItem = dir>0 ? this.children[0] : this.children[this.children.length-1];\n\t\t\t}\n\t\t\t\/\/find next\/previous visible menu item, not including separators\n\t\t\tif(curItem.onHover && curItem.isShowing()){\n\t\t\t\treturn curItem;\n\t\t\t}\n\t\t\tcurItem = dir>0 ? curItem.getNextSibling() : curItem.getPreviousSibling();\n\t\t}","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._highlightOption":{"meta":{"summary":"","parameters":{"dir":{"type":""}},"src":" \tvar item;\n\t\t\/\/ || !this._highlighted_option.parentNode\n\t\tif((!this._highlighted_option)){\n\t\t\titem = this._findValidItem(dir);\n\t\t}else{\n\t\t\titem = this._findValidItem(dir, this._highlighted_option);\n\t\t}\n\t\tif(item){\n\t\t\tif(this._highlighted_option) {\n\t\t\t\tthis._highlighted_option.onUnhover();\n\t\t\t}\n\t\t\titem.onHover();\n\t\t\tdojo.html.scrollIntoView(item.domNode);\n\t\t\t\/\/ navigate into the item table and select the first caption tag\n\t\t\ttry {\n\t\t\t\tvar node = dojo.html.getElementsByClass(\"dojoMenuItem2Label\", item.domNode)[0];\n\t\t\t\tnode.focus();\n\t\t\t} catch(e) { }\n\t\t}","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.onItemClick":{"meta":{"summary":"user defined function to handle clicks on an item","parameters":{"item":{"type":"Widget"}},"src":"\t\t\/\/ summary: user defined function to handle clicks on an item","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.close":{"meta":{"summary":"close the menu","parameters":{"force":{"type":"Boolean"}},"src":" \tif(this.animationInProgress){\n\t\t\tdojo.widget.PopupMenu2.superclass.close.apply(this, arguments);\n\t\t\treturn;\n\t\t}\n\t\tif(this._highlighted_option){\n\t\t\tthis._highlighted_option.onUnhover();\n\t\t}\n\t\tdojo.widget.PopupMenu2.superclass.close.apply(this, arguments);","call_chain":["dojo.widget.PopupMenu2.superclass.close"],"prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.closeSubpopup":{"meta":{"summary":"close the currently displayed submenu","parameters":{"force":{"type":""}},"src":" \tif (this.currentSubpopup == null){ return; }\n\t\tthis.currentSubpopup.close(force);\n\t\tthis.currentSubpopup = null;\n\t\tthis.currentSubmenuTrigger.is_open = false;\n\t\tthis.currentSubmenuTrigger._closedSubmenu(force);\n\t\tthis.currentSubmenuTrigger = null;","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2._openSubmenu":{"meta":{"summary":"open the menu to the right of the current menu item","parameters":{"submenu":{"type":""},"from_item":{"type":""}},"src":" \tvar fromPos = dojo.html.getAbsolutePosition(from_item.domNode, true);\n\t\tvar our_w = dojo.html.getMarginBox(this.domNode).width;\n\t\tvar x = fromPos.x + our_w - this.submenuOverlap;\n\t\tvar y = fromPos.y;\n\t\t\/\/the following is set in open, so we do not need it\n\t\t\/\/this.currentSubpopup = submenu;\n\t\tsubmenu.open(x, y, this, from_item.domNode);\n\t\tthis.currentSubmenuTrigger = from_item;\n\t\tthis.currentSubmenuTrigger.is_open = true;","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.PopupMenu2.onOpen":{"meta":{"summary":"callback when menu is opened","parameters":{"e":{"type":"Event"}},"src":" \tthis.openEvent = e;\n\t\tif(e[\"target\"]){\n\t\t\tthis.openedForWindow = dojo.html.getElementWindow(e.target);\n\t\t}else{\n\t\t\tthis.openedForWindow = null;\n\t\t}\n\t\tvar x = e.pageX, y = e.pageY;\n\t\tvar win = dojo.html.getElementWindow(e.target);\n\t\tvar iframe = win._frameElement || win.frameElement;\n\t\tif(iframe){\n\t\t\tvar cood = dojo.html.abs(iframe, true);\n\t\t\tx += cood.x - dojo.withGlobal(win, dojo.html.getScroll).left;\n\t\t\ty += cood.y - dojo.withGlobal(win, dojo.html.getScroll).top;\n\t\t}\n\t\tthis.open(x, y, null, [x, y]);\n\t\te.preventDefault();\n\t\te.stopPropagation();","prototype":"dojo.widget.PopupMenu2"}},"dojo.widget.MenuItem2":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templateString","is_hovering","hover_timer","is_open","topPosition","caption","accelKey","iconSrc","disabledClass","iconClass","submenuId","eventNaming","highlightClass"],"variables":["templateString","is_hovering","hover_timer","is_open","topPosition","caption","accelKey","iconSrc","disabledClass","iconClass","submenuId","eventNaming","highlightClass"],"instance_variables":["iconStyle","arrowDisplay","eventNaming","parent._highlighted_option","is_hovering","hover_timer","disabled","eventNames"],"summary":"","src":" \tthis.eventNames = {\n\t\t\tengage: \"\"\n\t\t};"},"extra":{"variables":{"accelKey":{"type":"Make","summary":"4 columns icon, label, accelerator-key, and right-arrow indicating sub-menu String accelerator key (not supported yet!)"},"iconSrc":{"type":"String","summary":"path to icon to display to the left of the menu text"},"disabledClass":{"type":"String","summary":"CSS class for disabled nodes"},"iconClass":{"type":"String","summary":"CSS class name to use for menu item (if CSS class specifies a background image then iconSrc is not necessary)"},"submenuId":{"type":"String","summary":"widget ID of Menu2 widget to open when this menu item is clicked"},"eventNaming":{"type":"String","summary":"event names for announcing when menu item is clicked. if \"default\", then use the default name, based on the widget ID"},"highlightClass":{"type":"String","summary":"CSS class for menu item when it's hovered over"}}}},"dojo.widget.MenuItem2.postMixInProperties":{"meta":{"summary":"","src":" \tthis.iconStyle=\"\";\n\t\tif (this.iconSrc){\n\t\t\tif ((this.iconSrc.toLowerCase().substring(this.iconSrc.length-4) == \".png\") && (dojo.render.html.ie55 || dojo.render.html.ie60)){\n\t\t\t\tthis.iconStyle=\"filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\"+this.iconSrc+\"', sizingMethod='image')\";\n\t\t\t}else{\n\t\t\t\tthis.iconStyle=\"background-image: url(\"+this.iconSrc+\")\";\n\t\t\t}\n\t\t}\n\t\tthis.arrowDisplay = this.submenuId ? 'block' : 'none';\n\t\tdojo.widget.MenuItem2.superclass.postMixInProperties.apply(this, arguments);","call_chain":["dojo.widget.MenuItem2.superclass.postMixInProperties"],"prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2.fillInTemplate":{"meta":{"summary":"","src":" \tdojo.html.disableSelection(this.domNode);\n\t\tif (this.disabled){\n\t\t\tthis.setDisabled(true);\n\t\t}\n\t\tif (this.eventNaming == \"default\") {\n\t\t\tfor (var eventName in this.eventNames) {\n\t\t\t\tthis.eventNames[eventName] = this.widgetId+\"\/\"+eventName;\n\t\t\t}\n\t\t}","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2.onHover":{"meta":{"summary":"callback when mouse is moved onto menu item","src":"\t\t\/\/this is to prevent some annoying behavior when both mouse and keyboard are used\n\t\tthis.onUnhover();\n\t\tif (this.is_hovering){ return; }\n\t\tif (this.is_open){ return; }\n\t\tif(this.parent._highlighted_option){\n\t\t\tthis.parent._highlighted_option.onUnhover();\n\t\t}\n\t\tthis.parent.closeSubpopup();\n\t\tthis.parent._highlighted_option = this;\n\t\tdojo.widget.PopupManager.setFocusedMenu(this.parent);\n\t\tthis._highlightItem();\n\t\tif (this.is_hovering){ this._stopSubmenuTimer(); }\n\t\tthis.is_hovering = true;\n\t\tthis._startSubmenuTimer();","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2.onUnhover":{"meta":{"summary":"callback when mouse is moved off of menu item","src":" \tif(!this.is_open){ this._unhighlightItem(); }\n\t\tthis.is_hovering = false;\n\t\tthis.parent._highlighted_option = null;\n\t\tif(this.parent.parentPopup){\n\t\t\tdojo.widget.PopupManager.setFocusedMenu(this.parent.parentPopup);\n\t\t}\n\t\tthis._stopSubmenuTimer();","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2._onClick":{"meta":{"summary":"internal function for clicks","parameters":{"focus":{"type":""}},"src":" \tvar displayingSubMenu = false;\n\t\tif (this.disabled){ return false; }\n\t\tif (this.submenuId){\n\t\t\tif (!this.is_open){\n\t\t\t\tthis._stopSubmenuTimer();\n\t\t\t\tthis._openSubmenu();\n\t\t\t}\n\t\t\tdisplayingSubMenu = true;\n\t\t}else{\n\t\t\t\/\/ for some browsers the onMouseOut doesn't get called (?), so call it manually\n\t\t\tthis.onUnhover(); \/\/only onUnhover when no submenu is available\n\t\t\tthis.parent.closeAll(true);\n\t\t}\n\t\t\/\/ user defined handler for click\n\t\tthis.onClick();\n\t\tdojo.event.topic.publish(this.eventNames.engage, this);\n\t\tif(displayingSubMenu && focus){\n\t\t\tdojo.widget.getWidgetById(this.submenuId)._highlightOption(1);\n\t\t}\n\t\treturn;","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2.onClick":{"meta":{"summary":"User defined function to handle clicks this default function call the parent menu's onItemClick","src":" \tthis.parent.onItemClick(this);","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2._highlightItem":{"meta":{"summary":"","src":" \tdojo.html.addClass(this.domNode, this.highlightClass);","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2._unhighlightItem":{"meta":{"summary":"","src":" \tdojo.html.removeClass(this.domNode, this.highlightClass);","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2._startSubmenuTimer":{"meta":{"summary":"","src":" \tthis._stopSubmenuTimer();\n\t\tif (this.disabled){ return; }\n\t\tvar self = this;\n\t\tvar closure = function(){ return function(){ self._openSubmenu(); } }();\n\t\tthis.hover_timer = dojo.lang.setTimeout(closure, this.parent.submenuDelay);","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2._stopSubmenuTimer":{"meta":{"summary":"","src":" \tif (this.hover_timer){\n\t\t\tdojo.lang.clearTimeout(this.hover_timer);\n\t\t\tthis.hover_timer = null;\n\t\t}","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2._openSubmenu":{"meta":{"summary":"","src":" \tif (this.disabled){ return; }\n\t\t\/\/ first close any other open submenu\n\t\tthis.parent.closeSubpopup();\n\t\tvar submenu = dojo.widget.getWidgetById(this.submenuId);\n\t\tif (submenu){\n\t\t\tthis.parent._openSubmenu(submenu, this);\n\t\t}","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2._closedSubmenu":{"meta":{"summary":"","src":" \tthis.onUnhover();","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2.setDisabled":{"meta":{"summary":"enable or disable this menu item","parameters":{"value":{"type":"Boolean"}},"src":" \tthis.disabled = value;\n\t\tif (this.disabled){\n\t\t\tdojo.html.addClass(this.domNode, this.disabledClass);\n\t\t}else{\n\t\t\tdojo.html.removeClass(this.domNode, this.disabledClass);\n\t\t}","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2.enable":{"meta":{"summary":"enable this menu item so user can click it","src":" \tthis.setDisabled(false);","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2.disable":{"meta":{"summary":"disable this menu item so user can't click it","src":" \tthis.setDisabled(true);","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuItem2.menuOpen":{"meta":{"summary":"callback when menu is opened TODO: I don't see anyone calling this menu item","parameters":{"message":{"type":""}},"src":"\t\t\/\/ summary: callback when menu is opened\n\t\t\/\/ TODO: I don't see anyone calling this menu item","prototype":"dojo.widget.MenuItem2"}},"dojo.widget.MenuSeparator2":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templateString"],"variables":["templateString"]}},"dojo.widget.MenuSeparator2.postCreate":{"meta":{"summary":"","src":" \tdojo.html.disableSelection(this.domNode);","prototype":"dojo.widget.MenuSeparator2"}},"dojo.widget.MenuBar2":{"meta":{"prototype_chain":["dojo.widget.PopupMenu2"],"call_chain":["dojo.widget.PopupMenu2"],"prototype_variables":["menuOverlap","templateString"],"variables":["menuOverlap","templateString"],"instance_variables":["isShowingNow","currentSubmenuTrigger","currentSubmenuTrigger.is_open"]}},"dojo.widget.MenuBar2.close":{"meta":{"summary":"","parameters":{"force":{"type":""}},"src":" \tif(this._highlighted_option){\n\t\t\tthis._highlighted_option.onUnhover();\n\t\t}\n\t\tthis.closeSubpopup(force);","prototype":"dojo.widget.MenuBar2"}},"dojo.widget.MenuBar2.processKey":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \tif(evt.ctrlKey || evt.altKey){ return false; }\n\t\tif (!dojo.html.hasClass(evt.target,\"dojoMenuBar2\")) { return false; }\n\t\tvar rval = false;\n\t\tswitch(evt.key){\n \t\t\tcase evt.KEY_DOWN_ARROW:\n\t\t\t\trval = this._moveToChildMenu(evt);\n\t\t\t\tbreak;\n\t\t\tcase evt.KEY_UP_ARROW:\n\t\t\t\trval = this._moveToParentMenu(evt);\n\t\t\t\tbreak;\n\t\t\tcase evt.KEY_RIGHT_ARROW:\n\t\t\t\trval = this._moveToNext(evt);\n\t\t\t\tbreak;\n\t\t\tcase evt.KEY_LEFT_ARROW:\n\t\t\t\trval = this._moveToPrevious(evt);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\trval = \tdojo.widget.MenuBar2.superclass.processKey.apply(this, arguments);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn rval;","call_chain":["dojo.widget.MenuBar2.superclass.processKey"],"prototype":"dojo.widget.MenuBar2"}},"dojo.widget.MenuBar2.postCreate":{"meta":{"summary":"","src":" \tdojo.widget.MenuBar2.superclass.postCreate.apply(this, arguments);\n\t\tdojo.widget.PopupManager.opened(this);\n\t\tthis.isShowingNow = true;","call_chain":["dojo.widget.MenuBar2.superclass.postCreate"],"prototype":"dojo.widget.MenuBar2"}},"dojo.widget.MenuBar2._openSubmenu":{"meta":{"summary":"","parameters":{"submenu":{"type":""},"from_item":{"type":""}},"src":" \tvar fromPos = dojo.html.getAbsolutePosition(from_item.domNode, true);\n\t\tvar ourPos = dojo.html.getAbsolutePosition(this.domNode, true);\n\t\tvar our_h = dojo.html.getBorderBox(this.domNode).height;\n\t\tvar x = fromPos.x;\n\t\tvar y = ourPos.y + our_h - this.menuOverlap;\n\t\tsubmenu.open(x, y, this, from_item.domNode);\n\t\tthis.currentSubmenuTrigger = from_item;\n\t\tthis.currentSubmenuTrigger.is_open = true;","prototype":"dojo.widget.MenuBar2"}},"dojo.widget.MenuBarItem2":{"meta":{"prototype_chain":["dojo.widget.MenuItem2"],"call_chain":["dojo.widget.MenuItem2"],"prototype_variables":["templateString","highlightClass"],"variables":["templateString","highlightClass"],"instance_variables":["disabled"]}},"dojo.widget.MenuBarItem2.setDisabled":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" \tthis.disabled = value;\n\t\tif (this.disabled){\n\t\t\tdojo.html.addClass(this.domNode, 'dojoMenuBarItem2Disabled');\n\t\t}else{\n\t\t\tdojo.html.removeClass(this.domNode, 'dojoMenuBarItem2Disabled');\n\t\t}","prototype":"dojo.widget.MenuBarItem2"}},"dojo.widget.Menu2.OperaAndKonqFixer":{"meta":{"initialized":true,"summary":"","src":" \tvar implement = true;\n \tvar delfunc = false;\n \t\/** \tdom event check\n \t*\n \t*\tmake a event and dispatch it and se if it calls function below,\n \t*\tif it indeed is supported and we dont need to implement our own\n \t*\/\n \t\/\/ gets called if we have support for oncontextmenu\n \tif (!dojo.lang.isFunction(dojo.doc().oncontextmenu)){\n \t\tdojo.doc().oncontextmenu = function(){\n \t\t\timplement = false;\n \t\t\tdelfunc = true;\n \t\t}\n \t}\n \tif (dojo.doc().createEvent){ \/\/ moz, safari has contextmenu event, need to do livecheck on this env.\n \t\ttry {\n \t\t\tvar e = dojo.doc().createEvent(\"MouseEvents\");\n \t\t\te.initMouseEvent(\"contextmenu\", 1, 1, dojo.global(), 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, null);\n \t\t\tdojo.doc().dispatchEvent(e);\n \t\t} catch (e) {\/* assume not supported *\/}\n \t} else {\n \t\t\/\/ IE no need to implement custom contextmenu\n \t\timplement = false;\n \t}\n \t\/\/ clear this one if it wasn't there before\n \tif (delfunc){\n \t\tdelete dojo.doc().oncontextmenu;\n \t}\n \t\/***** end dom event check *****\/\n \t\/**\n \t*\tthis fixes a dom node by attaching a custom oncontextmenu function that gets called when apropriate\n \t*\t@param\tnode\ta dom node\n \t*\n \t*\tno returns\n \t*\/\n \tthis.fixNode = function(node){\n \t\tif (implement){\n \t\t\t\/\/ attach stub oncontextmenu function\n \t\t\tif (!dojo.lang.isFunction(node.oncontextmenu)){\n \t\t\t\tnode.oncontextmenu = function(e){\/*stub*\/}\n \t\t\t}\n \t\t\t\/\/ attach control function for oncontextmenu\n \t\t\tif (dojo.render.html.opera){\n \t\t\t\t\/\/ opera\n \t\t\t\t\/\/ listen to ctrl-click events\n \t\t\t\tnode._menufixer_opera = function(e){\n \t\t\t\t\tif (e.ctrlKey){\n \t\t\t\t\t\tthis.oncontextmenu(e);\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tdojo.event.connect(node, \"onclick\", node, \"_menufixer_opera\");\n \t\t\t} else {\n \t\t\t\t\/\/ konqueror\n \t\t\t\t\/\/ rightclick, listen to mousedown events\n \t\t\t\tnode._menufixer_konq = function(e){\n \t\t\t\t\tif (e.button==2 ){\n \t\t\t\t\t\te.preventDefault(); \/\/ need to prevent browsers menu\n \t\t\t\t\t\tthis.oncontextmenu(e);\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tdojo.event.connect(node, \"onmousedown\", node, \"_menufixer_konq\");\n \t\t\t}\n \t\t}\n \t}\n \t\/**\n \t*\tthis cleans up a fixed node, prevent memoryleak?\n \t*\t@param node\tnode to clean\n \t*\n \t*\tno returns\n \t*\/\n \tthis.cleanNode = function(node){\n \t\tif (implement){\n \t\t\t\/\/ checks needed if we gets a non fixed node\n \t\t\tif (node._menufixer_opera){\n \t\t\t\tdojo.event.disconnect(node, \"onclick\", node, \"_menufixer_opera\");\n \t\t\t\tdelete node._menufixer_opera;\n \t\t\t} else if(node._menufixer_konq){\n \t\t\t\tdojo.event.disconnect(node, \"onmousedown\", node, \"_menufixer_konq\");\n \t\t\t\tdelete node._menufixer_konq;\n \t\t\t}\n \t\t\tif (node.oncontextmenu){\n \t\t\t\tdelete node.oncontextmenu;\n \t\t\t}\n \t\t}\n \t}","instance_variables":["fixNode","cleanNode"]}},"dojo.widget.Menu2.OperaAndKonqFixer.fixNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \t\tif (implement){\n \t\t\t\/\/ attach stub oncontextmenu function\n \t\t\tif (!dojo.lang.isFunction(node.oncontextmenu)){\n \t\t\t\tnode.oncontextmenu = function(e){\/*stub*\/}\n \t\t\t}\n \t\t\t\/\/ attach control function for oncontextmenu\n \t\t\tif (dojo.render.html.opera){\n \t\t\t\t\/\/ opera\n \t\t\t\t\/\/ listen to ctrl-click events\n \t\t\t\tnode._menufixer_opera = function(e){\n \t\t\t\t\tif (e.ctrlKey){\n \t\t\t\t\t\tthis.oncontextmenu(e);\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tdojo.event.connect(node, \"onclick\", node, \"_menufixer_opera\");\n \t\t\t} else {\n \t\t\t\t\/\/ konqueror\n \t\t\t\t\/\/ rightclick, listen to mousedown events\n \t\t\t\tnode._menufixer_konq = function(e){\n \t\t\t\t\tif (e.button==2 ){\n \t\t\t\t\t\te.preventDefault(); \/\/ need to prevent browsers menu\n \t\t\t\t\t\tthis.oncontextmenu(e);\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tdojo.event.connect(node, \"onmousedown\", node, \"_menufixer_konq\");\n \t\t\t}\n \t\t}","instance":"dojo.widget.Menu2.OperaAndKonqFixer"}},"dojo.widget.Menu2.OperaAndKonqFixer.cleanNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \t\tif (implement){\n \t\t\t\/\/ checks needed if we gets a non fixed node\n \t\t\tif (node._menufixer_opera){\n \t\t\t\tdojo.event.disconnect(node, \"onclick\", node, \"_menufixer_opera\");\n \t\t\t\tdelete node._menufixer_opera;\n \t\t\t} else if(node._menufixer_konq){\n \t\t\t\tdojo.event.disconnect(node, \"onmousedown\", node, \"_menufixer_konq\");\n \t\t\t\tdelete node._menufixer_konq;\n \t\t\t}\n \t\t\tif (node.oncontextmenu){\n \t\t\t\tdelete node.oncontextmenu;\n \t\t\t}\n \t\t}","instance":"dojo.widget.Menu2.OperaAndKonqFixer"}}}}},"dojo.widget.MonthlyCalendar":{"meta":{"requires":{"common":["dojo.date.common","dojo.date.format","dojo.widget.*","dojo.widget.DatePicker","dojo.event.*","dojo.html.*","dojo.experimental"]},"functions":{"dojo.widget.MonthlyCalendar":{"meta":{"prototype_chain":["dojo.widget.DatePicker"],"call_chain":["dojo.widget.DatePicker"],"prototype_variables":["dayWidth","templatePath","templateCssPath"],"variables":["dayWidth","templatePath","templateCssPath"],"instance_variables":["selectedIsUsed","currentIsUsed","iCalendars"],"summary":"","src":" \t\tthis.iCalendars = [];"}},"dojo.widget.MonthlyCalendar.addCalendar":{"meta":{"summary":"","parameters":{"cal":{"type":"dojo.iCalendar"}},"src":" \t\tdojo.debug(\"Adding Calendar\");\n\t\t\tthis.iCalendars.push(cal);\n\t\t\tdojo.debug(\"Starting init\");\n\t\t\tthis.initUI();\n\t\t\tdojo.debug(\"done init\");","prototype":"dojo.widget.MonthlyCalendar"}},"dojo.widget.MonthlyCalendar.createDayContents":{"meta":{"summary":"","parameters":{"node":{"type":""},"mydate":{"type":""}},"src":" \t\tdojo.html.removeChildren(node);\n\t\t\tnode.appendChild(document.createTextNode(mydate.getDate()));\t\n\t\t\t\tfor(var x=0; x<this.iCalendars.length; x++) {\n\t\t\t\t\tvar evts = this.iCalendars[x].getEvents(mydate);\n\t\t\t\t\tif ((dojo.lang.isArray(evts)) && (evts.length>0)) {\n\t\t\t\t\tfor(var y=0;y<evts.length;y++) {\n\t\t\t\t\t\tvar el = document.createElement(\"div\");\n\t\t\t\t\t\tdojo.html.addClass(el, \"dojoMonthlyCalendarEvent\");          \n\t\t\t\t\t\tel.appendChild(document.createTextNode(evts[y].summary.value));\n\t\t\t\t\t\tel.width = dojo.html.getContentBox(node).width;\n\t\t\t\t\t\tnode.appendChild(el);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.MonthlyCalendar"}},"dojo.widget.MonthlyCalendar.initUI":{"meta":{"summary":"","src":" \t\tvar dayLabels = dojo.date.getNames('days', this.dayWidth, 'standAlone', this.lang);\n\t\t\tvar dayLabelNodes = this.dayLabelsRow.getElementsByTagName(\"td\");\n\t\t\tfor(var i=0; i<7; i++) {\n\t\t\t\tdayLabelNodes.item(i).innerHTML = dayLabels[i];\n\t\t\t}\n\t\t\tthis.selectedIsUsed = false;\n\t\t\tthis.currentIsUsed = false;\n\t\t\tvar currentClassName = \"\";\n\t\t\tvar previousDate = new Date();\n\t\t\tvar calendarNodes = this.calendarDatesContainerNode.getElementsByTagName(\"td\");\n\t\t\tvar currentCalendarNode;\n\t\t\t\/\/ set hours of date such that there is no chance of rounding error due to \n\t\t\t\/\/ time change in local time zones\n\t\t\tpreviousDate.setHours(8);\n\t\t\tvar nextDate = new Date(this.firstSaturday.year, this.firstSaturday.month, this.firstSaturday.date, 8);\n\t\t\tvar lastDay = new Date(this.firstSaturday.year, this.firstSaturday.month, this.firstSaturday.date + 42, 8);\n\t\t\tif (this.iCalendars.length > 0) {\n\t\t\t\tfor (var x=0; x<this.iCalendars.length;x++) {\n\t\t\t\t\tthis.iCalendars[x].preComputeRecurringEvents(lastDay);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(this.firstSaturday.date < 7) {\n\t\t\t\t\/\/ this means there are days to show from the previous month\n\t\t\t\tvar dayInWeek = 6;\n\t\t\t\tfor (var i=this.firstSaturday.date; i>0; i--) {\n\t\t\t\t\tcurrentCalendarNode = calendarNodes.item(dayInWeek);\n\t\t\t\t\tthis.createDayContents(currentCalendarNode, nextDate);\n\t\t\t\t\tdojo.html.setClass(currentCalendarNode, this.getDateClassName(nextDate, \"current\"));\n\t\t\t\t\tdayInWeek--;\n\t\t\t\t\tpreviousDate = nextDate;\n\t\t\t\t\tnextDate = this.incrementDate(nextDate, false);\n\t\t\t\t}\n\t\t\t\tfor(var i=dayInWeek; i>-1; i--) {\n\t\t\t\t\tcurrentCalendarNode = calendarNodes.item(i);\n\t\t\t\t\tthis.createDayContents(currentCalendarNode, nextDate);\n\t\t\t\t\tdojo.html.setClass(currentCalendarNode, this.getDateClassName(nextDate, \"previous\"));\n\t\t\t\t\tpreviousDate = nextDate;\n\t\t\t\t\tnextDate = this.incrementDate(nextDate, false);\t\t\t\t\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnextDate.setDate(1);\n\t\t\t\tfor(var i=0; i<7; i++) {\n\t\t\t\t\tcurrentCalendarNode = calendarNodes.item(i);\n\t\t\t\t\tthis.createDayContents(currentCalendarNode, nextDate);\n\t\t\t\t\tdojo.html.setClass(currentCalendarNode, this.getDateClassName(nextDate, \"current\"));\n\t\t\t\t\tpreviousDate = nextDate;\n\t\t\t\t\tnextDate = this.incrementDate(nextDate, true);\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreviousDate.setDate(this.firstSaturday.date);\n\t\t\tpreviousDate.setMonth(this.firstSaturday.month);\n\t\t\tpreviousDate.setFullYear(this.firstSaturday.year);\n\t\t\tnextDate = this.incrementDate(previousDate, true);\n\t\t\tvar count = 7;\n\t\t\tcurrentCalendarNode = calendarNodes.item(count);\n\t\t\twhile((nextDate.getMonth() == previousDate.getMonth()) && (count<42)) {\n\t\t\t\tthis.createDayContents(currentCalendarNode, nextDate);\n\t\t\t\tdojo.html.setClass(currentCalendarNode, this.getDateClassName(nextDate, \"current\"));\n\t\t\t\tcurrentCalendarNode = calendarNodes.item(++count);\n\t\t\t\tpreviousDate = nextDate;\n\t\t\t\tnextDate = this.incrementDate(nextDate, true);\n\t\t\t}\n\t\t\twhile(count < 42) {\n\t\t\t\tthis.createDayContents(currentCalendarNode, nextDate);\n\t\t\t\tdojo.html.setClass(currentCalendarNode, this.getDateClassName(nextDate, \"next\"));\n\t\t\t\tcurrentCalendarNode = calendarNodes.item(++count);\n\t\t\t\tpreviousDate = nextDate;\n\t\t\t\tnextDate = this.incrementDate(nextDate, true);\n\t\t\t}\n\t\t\tthis.setMonthLabel(this.firstSaturday.month);\n\t\t\tthis.setYearLabels(this.firstSaturday.year);","prototype":"dojo.widget.MonthlyCalendar"}},"dojo.widget.MonthlyCalendar.util":{"meta":{"initialized":true,"summary":"","src":" this.toRfcDate = function(jsDate) {\n\t\tif(!jsDate) {\n\t\t\tjsDate = this.today;\n\t\t}\n\t\tvar year = jsDate.getFullYear();\n\t\tvar month = jsDate.getMonth() + 1;\n\t\tif (month < 10) {\n\t\t\tmonth = \"0\" + month.toString();\n\t\t}\n\t\tvar date = jsDate.getDate();\n\t\tif (date < 10) {\n\t\t\tdate = \"0\" + date.toString();\n\t\t}\n\t\t\/\/ because this is a date picker and not a time picker, we treat time \n\t\t\/\/ as zero\n\t\treturn year + \"-\" + month + \"-\" + date + \"T00:00:00+00:00\";\n\t}\n\tthis.fromRfcDate = function(rfcDate) {\n\t\tvar tempDate = rfcDate.split(\"-\");\n\t\tif(tempDate.length < 3) {\n\t\t\treturn new Date();\n\t\t}\n\t\t\/\/ fullYear, month, date\n\t\treturn new Date(parseInt(tempDate[0]), (parseInt(tempDate[1], 10) - 1), parseInt(tempDate[2].substr(0,2), 10));\n\t}\n\/\/Note: redundant with dojo.widget.DatePicker.util\t\n\tthis.initFirstSaturday = function(month, year) {\n\t\tif(!month) {\n\t\t\tmonth = this.date.getMonth();\n\t\t}\n\t\tif(!year) {\n\t\t\tyear = this.date.getFullYear();\n\t\t}\n\t\tvar firstOfMonth = new Date(year, month, 1);\n\t\treturn {year: year, month: month, date: 7 - firstOfMonth.getDay()};\n\t}","instance_variables":["toRfcDate","fromRfcDate","initFirstSaturday"]}},"dojo.widget.MonthlyCalendar.util.toRfcDate":{"meta":{"summary":"","parameters":{"jsDate":{"type":""}},"src":" \tif(!jsDate) {\n\t\t\tjsDate = this.today;\n\t\t}\n\t\tvar year = jsDate.getFullYear();\n\t\tvar month = jsDate.getMonth() + 1;\n\t\tif (month < 10) {\n\t\t\tmonth = \"0\" + month.toString();\n\t\t}\n\t\tvar date = jsDate.getDate();\n\t\tif (date < 10) {\n\t\t\tdate = \"0\" + date.toString();\n\t\t}\n\t\t\/\/ because this is a date picker and not a time picker, we treat time \n\t\t\/\/ as zero\n\t\treturn year + \"-\" + month + \"-\" + date + \"T00:00:00+00:00\";","instance":"dojo.widget.MonthlyCalendar.util"}},"dojo.widget.MonthlyCalendar.util.fromRfcDate":{"meta":{"summary":"","parameters":{"rfcDate":{"type":""}},"src":" \tvar tempDate = rfcDate.split(\"-\");\n\t\tif(tempDate.length < 3) {\n\t\t\treturn new Date();\n\t\t}\n\t\t\/\/ fullYear, month, date\n\t\treturn new Date(parseInt(tempDate[0]), (parseInt(tempDate[1], 10) - 1), parseInt(tempDate[2].substr(0,2), 10));","instance":"dojo.widget.MonthlyCalendar.util"}},"dojo.widget.MonthlyCalendar.util.initFirstSaturday":{"meta":{"summary":"","parameters":{"month":{"type":""},"year":{"type":""}},"src":" \tif(!month) {\n\t\t\tmonth = this.date.getMonth();\n\t\t}\n\t\tif(!year) {\n\t\t\tyear = this.date.getFullYear();\n\t\t}\n\t\tvar firstOfMonth = new Date(year, month, 1);\n\t\treturn {year: year, month: month, date: 7 - firstOfMonth.getDay()};","instance":"dojo.widget.MonthlyCalendar.util"}}}}},"dojo.widget.PageContainer":{"meta":{"requires":{"common":["dojo.lang.func","dojo.widget.*","dojo.event.*","dojo.html.selection"]},"functions":{"dojo.widget.PageContainer":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","doLayout","templateString","selectedChild"],"variables":["isContainer","doLayout","templateString","selectedChild"],"instance_variables":["selectedChildWidget","correspondingPageButton","selectedChild","_beingDestroyed"],"summary":"A container that has multiple children, but shows only one child at a time (like looking at the pages in a book one by one). Publishes topics <widgetId>-addChild, <widgetId>-removeChild, and <widgetId>-selectChild Can be base class for container, Wizard, Show, etc."}},"dojo.widget.PageContainer.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tvar source = this.getFragNodeRef(frag);\n\t\tdojo.html.copyStyle(this.domNode, source);\n\t\tdojo.widget.PageContainer.superclass.fillInTemplate.apply(this, arguments);","call_chain":["dojo.widget.PageContainer.superclass.fillInTemplate"],"prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tif(this.children.length){\n\t\t\t\/\/ Setup each page panel\n\t\t\tdojo.lang.forEach(this.children, this._setupChild, this);\n\t\t\t\/\/ Figure out which child to initially display\n\t\t\tvar initialChild;\n\t\t\tif(this.selectedChild){\n\t\t\t\tthis.selectChild(this.selectedChild);\n\t\t\t}else{\n\t\t\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\t\t\tif(this.children[i].selected){\n\t\t\t\t\t\tthis.selectChild(this.children[i]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!this.selectedChildWidget){\n\t\t\t\t\tthis.selectChild(this.children[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.addChild":{"meta":{"summary":"","parameters":{"child":{"type":""}},"src":" \tdojo.widget.PageContainer.superclass.addChild.apply(this, arguments);\n\t\tthis._setupChild(child);\n\t\t\/\/ in case the tab labels have overflowed from one line to two lines\n\t\tthis.onResized();\n\t\t\/\/ if this is the first child, then select it\n\t\tif(!this.selectedChildWidget){\n\t\t\tthis.selectChild(child);\n\t\t}","call_chain":["dojo.widget.PageContainer.superclass.addChild"],"prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer._setupChild":{"meta":{"summary":"","parameters":{"page":{"type":"Widget"}},"src":"\t\tpage.hide();\n\t\t\/\/ since we are setting the width\/height of the child elements, they need\n\t\t\/\/ to be position:relative, or IE has problems (See bug #2033)\n\t\tpage.domNode.style.position=\"relative\";\n\t\t\/\/ publish the addChild event for panes added via addChild(), and the original panes too\n\t\tdojo.event.topic.publish(this.widgetId+\"-addChild\", page);","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.removeChild":{"meta":{"summary":"","parameters":{"page":{"type":"Widget"}},"src":" \tdojo.widget.PageContainer.superclass.removeChild.apply(this, arguments);\n\t\t\/\/ If we are being destroyed than don't run the code below (to select another page), because we are deleting\n\t\t\/\/ every page one by one\n\t\tif(this._beingDestroyed){ return; }\n\t\t\/\/ this will notify any tablists to remove a button; do this first because it may affect sizing\n\t\tdojo.event.topic.publish(this.widgetId+\"-removeChild\", page);\n\t\t\/\/ in case the tab labels now take up one line instead of two lines\n\t\tthis.onResized();\n\t\tif (this.selectedChildWidget === page) {\n\t\t\tthis.selectedChildWidget = undefined;\n\t\t\tif (this.children.length > 0) {\n\t\t\t\tthis.selectChild(this.children[0], true);\n\t\t\t}\n\t\t}","call_chain":["dojo.widget.PageContainer.superclass.removeChild"],"prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.selectChild":{"meta":{"summary":"Show the given widget (which must be one of my children)","parameters":{"page":{"type":"Widget"},"callingWidget":{"type":"Widget"}},"src":" \tpage = dojo.widget.byId(page);\n\t\tthis.correspondingPageButton = callingWidget;\n\t\t\/\/ Deselect old page and select new one\n\t\tif(this.selectedChildWidget){\n\t\t\tthis._hideChild(this.selectedChildWidget);\n\t\t}\n\t\tthis.selectedChildWidget = page;\n\t\tthis.selectedChild = page.widgetId;\n\t\tthis._showChild(page);\n\t\tpage.isFirstChild = (page == this.children[0]);\n\t\tpage.isLastChild = (page == this.children[this.children.length-1]);\n\t\tdojo.event.topic.publish(this.widgetId+\"-selectChild\", page);","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.forward":{"meta":{"summary":"","src":" \tvar index = dojo.lang.find(this.children, this.selectedChildWidget);\n\t\tthis.selectChild(this.children[index+1]);","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.back":{"meta":{"summary":"","src":" \tvar index = dojo.lang.find(this.children, this.selectedChildWidget);\n\t\tthis.selectChild(this.children[index-1]);","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.onResized":{"meta":{"summary":"","src":" \tif(this.doLayout && this.selectedChildWidget){\n\t\t\twith(this.selectedChildWidget.domNode.style){\n\t\t\t\ttop = dojo.html.getPixelValue(this.containerNode, \"padding-top\", true);\n\t\t\t\tleft = dojo.html.getPixelValue(this.containerNode, \"padding-left\", true);\n\t\t\t}\n\t\t\tvar content = dojo.html.getContentBox(this.containerNode);\n\t\t\tthis.selectedChildWidget.resizeTo(content.width, content.height);\n\t\t}","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer._showChild":{"meta":{"summary":"","parameters":{"page":{"type":"Widget"}},"src":" \tif(this.doLayout){\n\t\t\tvar content = dojo.html.getContentBox(this.containerNode);\n\t\t\tpage.resizeTo(content.width, content.height);\n\t\t}\n\t\tpage.selected=true;\n\t\tpage.show();","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer._hideChild":{"meta":{"summary":"","parameters":{"page":{"type":"Widget"}},"src":" \tpage.selected=false;\n\t\tpage.hide();","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.closeChild":{"meta":{"summary":"callback when user clicks the [X] to remove a page if onClose() returns true then remove and destroy the childd","parameters":{"page":{"type":"Widget"}},"src":" \tvar remove = page.onClose(this, page);\n\t\tif(remove) {\n\t\t\tthis.removeChild(page);\n\t\t\t\/\/ makes sure we can clean up executeScripts in ContentPane onUnLoad\n\t\t\tpage.destroy();\n\t\t}","prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageContainer.destroy":{"meta":{"summary":"","src":" \tthis._beingDestroyed = true;\n\t\tdojo.event.topic.destroy(this.widgetId+\"-addChild\");\n\t\tdojo.event.topic.destroy(this.widgetId+\"-removeChild\");\n\t\tdojo.event.topic.destroy(this.widgetId+\"-selectChild\");\n\t\tdojo.widget.PageContainer.superclass.destroy.apply(this, arguments);","call_chain":["dojo.widget.PageContainer.superclass.destroy"],"prototype":"dojo.widget.PageContainer"}},"dojo.widget.PageController":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templateString","isContainer","containerId","buttonWidget","class"],"variables":["templateString","isContainer","containerId","buttonWidget","class"],"instance_variables":["pane2button","_currentChild"],"summary":"Set of buttons to select a page in a page list. Monitors the specified PageContaine, and whenever a page is added, deleted, or selected, updates itself accordingly."}},"dojo.widget.PageController.fillInTemplate":{"meta":{"summary":"","src":" \t\tdojo.html.addClass(this.domNode, this[\"class\"]);  \/\/ \"class\" is a reserved word in JS\n\t\t\tdojo.widget.wai.setAttr(this.domNode, \"waiRole\", \"role\", \"tablist\");","prototype":"dojo.widget.PageController"}},"dojo.widget.PageController.postCreate":{"meta":{"summary":"","src":" \t\tthis.pane2button = {};\t\t\/\/ mapping from panes to buttons\n\t\t\t\/\/ If children have already been added to the page container then create buttons for them\n\t\t\tvar container = dojo.widget.byId(this.containerId);\n\t\t\tif(container){\n\t\t\t\tdojo.lang.forEach(container.children, this.onAddChild, this);\n\t\t\t}\n\t\t\tdojo.event.topic.subscribe(this.containerId+\"-addChild\", this, \"onAddChild\");\n\t\t\tdojo.event.topic.subscribe(this.containerId+\"-removeChild\", this, \"onRemoveChild\");\n\t\t\tdojo.event.topic.subscribe(this.containerId+\"-selectChild\", this, \"onSelectChild\");","prototype":"dojo.widget.PageController"}},"dojo.widget.PageController.destroy":{"meta":{"summary":"","src":" \t\tdojo.event.topic.unsubscribe(this.containerId+\"-addChild\", this, \"onAddChild\");\n\t\t\tdojo.event.topic.unsubscribe(this.containerId+\"-removeChild\", this, \"onRemoveChild\");\n\t\t\tdojo.event.topic.unsubscribe(this.containerId+\"-selectChild\", this, \"onSelectChild\");\n\t\t\tdojo.widget.PageController.superclass.destroy.apply(this, arguments);","call_chain":["dojo.widget.PageController.superclass.destroy"],"prototype":"dojo.widget.PageController"}},"dojo.widget.PageController.onAddChild":{"meta":{"summary":"Called whenever a page is added to the container. Create button corresponding to the page.","parameters":{"page":{"type":"Widget"}},"src":" \t\tvar button = dojo.widget.createWidget(this.buttonWidget,\n\t\t\t\t{\n\t\t\t\t\tlabel: page.label,\n\t\t\t\t\tcloseButton: page.closable\n\t\t\t\t});\n\t\t\tthis.addChild(button);\n\t\t\tthis.domNode.appendChild(button.domNode);\n\t\t\tthis.pane2button[page]=button;\n\t\t\tpage.controlButton = button;\t\/\/ this value might be overwritten if two tabs point to same container\n\t\t\tvar _this = this;\n\t\t\tdojo.event.connect(button, \"onClick\", function(){ _this.onButtonClick(page); });\n\t\t\tdojo.event.connect(button, \"onCloseButtonClick\", function(){ _this.onCloseButtonClick(page); });","prototype":"dojo.widget.PageController"}},"dojo.widget.PageController.onRemoveChild":{"meta":{"summary":"Called whenever a page is removed from the container. Remove the button corresponding to the page.","parameters":{"page":{"type":"Widget"}},"src":" \t\tif(this._currentChild == page){ this._currentChild = null; }\n\t\t\tvar button = this.pane2button[page];\n\t\t\tif(button){\n\t\t\t\tbutton.destroy();\n\t\t\t}\n\t\t\tthis.pane2button[page] = null;","prototype":"dojo.widget.PageController"}},"dojo.widget.PageController.onSelectChild":{"meta":{"summary":"","parameters":{"page":{"type":"Widget"}},"src":" \t\tif(this._currentChild){\n\t\t\t\tvar oldButton=this.pane2button[this._currentChild];\n\t\t\t\toldButton.clearSelected();\n\t\t\t}\n\t\t\tvar newButton=this.pane2button[page];\n\t\t\tnewButton.setSelected();\n\t\t\tthis._currentChild=page;","prototype":"dojo.widget.PageController"}},"dojo.widget.PageController.onButtonClick":{"meta":{"summary":"Called whenever one of my child buttons is pressed in an attempt to select a page","parameters":{"page":{"type":"Widget"}},"src":" \t\tvar container = dojo.widget.byId(this.containerId);\t\/\/ TODO: do this via topics?\n\t\t\tcontainer.selectChild(page, false, this);","prototype":"dojo.widget.PageController"}},"dojo.widget.PageController.onCloseButtonClick":{"meta":{"summary":"Called whenever one of my child buttons [X] is pressed in an attempt to close a page","parameters":{"page":{"type":"Widget"}},"src":" \t\tvar container = dojo.widget.byId(this.containerId);\n\t\t\tcontainer.closeChild(page);","prototype":"dojo.widget.PageController"}},"dojo.widget.PageController.onKey":{"meta":{"summary":"Handle keystrokes on the page list, for advancing to next\/previous button","parameters":{"evt":{"type":"Event"}},"src":"\t\t\tif( (evt.keyCode == evt.KEY_RIGHT_ARROW)||\n\t\t\t\t(evt.keyCode == evt.KEY_LEFT_ARROW) ){\n\t\t\t\tvar current = 0;\n\t\t\t\tvar next = null;\t\/\/ the next button to focus on\n\t\t\t\t\/\/ find currently focused button in children array\n\t\t\t\tvar current = dojo.lang.find(this.children, this.pane2button[this._currentChild]);\n\t\t\t\t\/\/ pick next button to focus on\n\t\t\t\tif(evt.keyCode == evt.KEY_RIGHT_ARROW){\n\t\t\t\t\tnext = this.children[ (current+1) % this.children.length ]; \n\t\t\t\t}else{ \/\/ is LEFT_ARROW\n\t\t\t\t\tnext = this.children[ (current+ (this.children.length-1)) % this.children.length ];\n\t\t\t\t}\n\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\tnext.onClick();\n\t\t\t}","prototype":"dojo.widget.PageController"}},"dojo.widget.PageButton":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templateString","label","closeButton"],"variables":["templateString","label","closeButton"],"summary":"Internal widget used by PageList. The button-like or tab-like object you click to select or delete a page"},"extra":{"variables":{"closeButton":{"type":"Boolean","summary":"true iff we should also print a close icon to destroy corresponding page"}}}},"dojo.widget.PageButton.onClick":{"meta":{"summary":"Basically this is the attach point PageController listens to, to select the page","src":" \tthis.focus();","prototype":"dojo.widget.PageButton"}},"dojo.widget.PageButton.onCloseButtonMouseOver":{"meta":{"summary":"The close button changes color a bit when you mouse over","src":" \tdojo.html.addClass(this.closeButtonNode, \"closeHover\");","prototype":"dojo.widget.PageButton"}},"dojo.widget.PageButton.onCloseButtonMouseOut":{"meta":{"summary":"Revert close button to normal color on mouse out","src":" \tdojo.html.removeClass(this.closeButtonNode, \"closeHover\");","prototype":"dojo.widget.PageButton"}},"dojo.widget.PageButton.onCloseButtonClick":{"meta":{"summary":"Handle clicking the close button for this tab","parameters":{"evt":{"type":"Event"}},"src":"\t\t\/\/ summary\n\t\t\/\/\tHandle clicking the close button for this tab","prototype":"dojo.widget.PageButton"}},"dojo.widget.PageButton.setSelected":{"meta":{"summary":"This is run whenever the page corresponding to this button has been selected","src":" \tdojo.html.addClass(this.domNode, \"current\");\n\t\tthis.titleNode.setAttribute(\"tabIndex\",\"0\");","prototype":"dojo.widget.PageButton"}},"dojo.widget.PageButton.clearSelected":{"meta":{"summary":"This function is run whenever the page corresponding to this button has been deselected (and another page has been shown)","src":" \tdojo.html.removeClass(this.domNode, \"current\");\n\t\tthis.titleNode.setAttribute(\"tabIndex\",\"-1\");","prototype":"dojo.widget.PageButton"}},"dojo.widget.PageButton.focus":{"meta":{"summary":"This will focus on the this button (for accessibility you need to do this when the button is selected)","src":" \tif(this.titleNode.focus){\t\/\/ mozilla 1.7 doesn't have focus() func\n\t\t\tthis.titleNode.focus();\n\t\t}","prototype":"dojo.widget.PageButton"}},"dojo.widget.Widget":{"meta":{"prototype_variables":["label","selected","closable"]}},"dojo.widget.Widget.onClose":{"meta":{"summary":"Callback if someone tries to close the child, child will be closed if func returns true","src":" \treturn true;","prototype":"dojo.widget.Widget"}}}}},"dojo.widget.Parse":{"meta":{"requires":{"common":["dojo.widget.Manager","dojo.dom"]},"functions":{"dojo.widget.Parse":{"meta":{"summary":"","parameters":{"fragment":{"type":"Object"}},"src":" this.propertySetsList = [];\n\tthis.fragment = fragment;\n\tthis.createComponents = function(\/*Object*\/frag, \/*Object*\/parentComp){\n\t\tvar comps = [];\n\t\tvar built = false;\n\t\t\/\/ if we have items to parse\/create at this level, do it!\n\t\ttry{\n\t\t\tif(frag && frag.tagName && (frag != frag.nodeRef)){\n\t\t\t\t\/\/ these are in fact, not ever for widgets per-se anymore, \n\t\t\t\t\/\/ but for other markup elements (aka components)\n\t\t\t\tvar djTags = dojo.widget.tags;\n\t\t\t\t\/\/ we split so that you can declare multiple \n\t\t\t\t\/\/ non-destructive components from the same ctor node\n\t\t\t\tvar tna = String(frag.tagName).split(\";\");\n\t\t\t\tfor(var x=0; x<tna.length; x++){\n\t\t\t\t\tvar ltn = tna[x].replace(\/^\\s+|\\s+$\/g, \"\").toLowerCase();\n\t\t\t\t\t\/\/ FIXME: unsure what this does\n\t\t\t\t\tfrag.tagName = ltn;\n\t\t\t\t\tvar ret;\n\t\t\t\t\tif(djTags[ltn]){\n\t\t\t\t\t\tbuilt = true;\n\t\t\t\t\t\tret = djTags[ltn](frag, this, parentComp, frag.index);\n\t\t\t\t\t\tcomps.push(ret);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\/\/ we require a namespace prefix, default to dojo:\n\t\t\t\t\t\tif(ltn.indexOf(\":\") == -1){\n\t\t\t\t\t\t\tltn = \"dojo:\"+ltn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\/\/ FIXME: handling failure condition correctly?\n\t\t\t\t\t\t\/\/ ret = djTags[ltn](frag, this, parentComp, frag.index);\n\t\t\t\t\t\tret = dojo.widget.buildWidgetFromParseTree(ltn, frag, this, parentComp, frag.index);\n\t\t\t\t\t\tif(ret){\n\t\t\t\t\t\t\tbuilt = true;\n\t\t\t\t\t\t\tcomps.push(ret);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tdojo.debug(\"dojo.widget.Parse: error:\", e);\n\t\t\t\/\/ note, commenting out the next line is breaking several widgets for me\n\t\t\t\/\/ throw e;\n\t\t\t\/\/ IE is such a pain sometimes\n\t\t}\n\t\t\/\/ if there's a sub-frag, build widgets from that too\n\t\tif(!built){\n\t\t\tcomps = comps.concat(this.createSubComponents(frag, parentComp));\n\t\t}\n\t\treturn comps; \/\/ Array\n\t}\n\tthis.createSubComponents = function(\/*Object*\/fragment, \/*Object*\/parentComp){\n\t\t\/\/ summary: recurses over a raw JavaScript object structure,\n\t\t\/\/ and calls the corresponding handler for its normalized tagName if it exists\n\t\tvar frag, comps = [];\n\t\tfor(var item in fragment){\n\t\t\tfrag = fragment[item];\n\t\t\tif(frag && typeof frag == \"object\"\n\t\t\t\t&&(frag!=fragment.nodeRef)\n\t\t\t\t&&(frag!=fragment.tagName)\n\t\t\t\t&&(!dojo.dom.isNode(frag))){\/\/ needed in IE when we have event.connected to the domNode\n\t\t\t\tcomps = comps.concat(this.createComponents(frag, parentComp));\n\t\t\t}\n\t\t}\n\t\treturn comps; \/\/ Array\n\t}\n\tthis.parsePropertySets = function(\/*Object*\/fragment){\n\t\t\/\/ summary: checks the top level of a raw JavaScript object\n\t\t\/\/\tstructure for any propertySets.  It stores an array of references to \n\t\t\/\/\tpropertySets that it finds.\n\t\treturn [];\n\t\t\/*\n\t\tvar propertySets = [];\n\t\tfor(var item in fragment){\n\t\t\tif((fragment[item][\"tagName\"] == \"dojo:propertyset\")){\n\t\t\t\tpropertySets.push(fragment[item]);\n\t\t\t}\n\t\t}\n\t\t\/\/ FIXME: should we store these propertySets somewhere for later retrieval\n\t\tthis.propertySetsList.push(propertySets);\n\t\treturn propertySets;\n\t\t*\/\n\t}\n\tthis.parseProperties = function(\/*Object*\/fragment){\n\t\t\/\/ summary: parseProperties checks a raw JavaScript object structure for\n\t\t\/\/\tproperties, and returns a hash of properties that it finds.\n\t\tvar properties = {};\n\t\tfor(var item in fragment){\n\t\t\t\/\/ FIXME: need to check for undefined?\n\t\t\t\/\/ case: its a tagName or nodeRef\n\t\t\tif((fragment[item] == fragment.tagName)||(fragment[item] == fragment.nodeRef)){\n\t\t\t\t\/\/ do nothing\n\t\t\t}else{\n\t\t\t\tvar frag = fragment[item];\n\t\t\t\tif(frag.tagName && dojo.widget.tags[frag.tagName.toLowerCase()]){\n\t\t\t\t\t\/\/ TODO: it isn't a property or property set, it's a fragment, \n\t\t\t\t\t\/\/ so do something else\n\t\t\t\t\t\/\/ FIXME: needs to be a better\/stricter check\n\t\t\t\t\t\/\/ TODO: handle xlink:href for external property sets\n\t\t\t\t}else if(frag[0] && frag[0].value!=\"\" && frag[0].value!=null){\n\t\t\t\t\ttry{\n\t\t\t\t\t\t\/\/ FIXME: need to allow more than one provider\n\t\t\t\t\t\tif(item.toLowerCase() == \"dataprovider\"){\n\t\t\t\t\t\t\tvar _this = this;\n\t\t\t\t\t\t\tthis.getDataProvider(_this, frag[0].value);\n\t\t\t\t\t\t\tproperties.dataProvider = this.dataProvider;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tproperties[item] = frag[0].value;\n\t\t\t\t\t\tvar nestedProperties = this.parseProperties(frag);\n\t\t\t\t\t\t\/\/ FIXME: this kind of copying is expensive and inefficient!\n\t\t\t\t\t\tfor(var property in nestedProperties){\n\t\t\t\t\t\t\tproperties[property] = nestedProperties[property];\n\t\t\t\t\t\t}\n\t\t\t\t\t}catch(e){ dojo.debug(e); }\n\t\t\t\t}\n\t\t\t\tswitch(item.toLowerCase()){\n\t\t\t\tcase \"checked\":\n\t\t\t\tcase \"disabled\":\n\t\t\t\t\tif (typeof properties[item] != \"boolean\"){ \n\t\t\t\t\t\tproperties[item] = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t\treturn properties; \/\/ Object\n\t}\n\tthis.getDataProvider = function(\/*Object*\/objRef, \/*String*\/dataUrl){\n\t\t\/\/ FIXME: this is currently sync.  To make this async, we made need to move \n\t\t\/\/this step into the widget ctor, so that it is loaded when it is needed \n\t\t\/\/ to populate the widget\n\t\tdojo.io.bind({\n\t\t\turl: dataUrl,\n\t\t\tload: function(type, evaldObj){\n\t\t\t\tif(type==\"load\"){\n\t\t\t\t\tobjRef.dataProvider = evaldObj;\n\t\t\t\t}\n\t\t\t},\n\t\t\tmimetype: \"text\/javascript\",\n\t\t\tsync: true\n\t\t});\n\t}\n\tthis.getPropertySetById = function(propertySetId){\n\t\t\/\/ summary: returns the propertySet that matches the provided id\n\t\tfor(var x = 0; x < this.propertySetsList.length; x++){\n\t\t\tif(propertySetId == this.propertySetsList[x][\"id\"][0].value){\n\t\t\t\treturn this.propertySetsList[x];\n\t\t\t}\n\t\t}\n\t\treturn \"\"; \/\/ String\n\t}\n\t\/\/FIXME: doesn't use the componentType param?\n\tthis.getPropertySetsByType = function(componentType){\n\t\t\/\/ summary: returns the propertySet(s) that match(es) the\n\t \t\/\/ provided componentClass\n\t\tvar propertySets = [];\n\t\tfor(var x=0; x < this.propertySetsList.length; x++){\n\t\t\tvar cpl = this.propertySetsList[x];\n\t\t\tvar cpcc = cpl.componentClass || cpl.componentType || null; \/\/FIXME: is componentType supposed to be an indirect reference?\n\t\t\tvar propertySetId = this.propertySetsList[x][\"id\"][0].value;\n\t\t\tif(cpcc && (propertySetId == cpcc[0].value)){\n\t\t\t\tpropertySets.push(cpl);\n\t\t\t}\n\t\t}\n\t\treturn propertySets; \/\/ Array\n\t}\n\tthis.getPropertySets = function(\/*Object*\/fragment){\n\t\t\/\/ summary: returns the propertySet for a given component fragment\n\t\tvar ppl = \"dojo:propertyproviderlist\";\n\t\tvar propertySets = [];\n\t\tvar tagname = fragment.tagName;\n\t\tif(fragment[ppl]){ \n\t\t\tvar propertyProviderIds = fragment[ppl].value.split(\" \");\n\t\t\t\/\/ FIXME: should the propertyProviderList attribute contain #\n\t\t\t\/\/ \t\t  syntax for reference to ids or not?\n\t\t\t\/\/ FIXME: need a better test to see if this is local or external\n\t\t\t\/\/ FIXME: doesn't handle nested propertySets, or propertySets that\n\t\t\t\/\/ \t\t  just contain information about css documents, etc.\n\t\t\tfor(var propertySetId in propertyProviderIds){\n\t\t\t\tif((propertySetId.indexOf(\"..\")==-1)&&(propertySetId.indexOf(\":\/\/\")==-1)){\n\t\t\t\t\t\/\/ get a reference to a propertySet within the current parsed structure\n\t\t\t\t\tvar propertySet = this.getPropertySetById(propertySetId);\n\t\t\t\t\tif(propertySet != \"\"){\n\t\t\t\t\t\tpropertySets.push(propertySet);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t\/\/ FIXME: add code to parse and return a propertySet from\n\t\t\t\t\t\/\/ another document\n\t\t\t\t\t\/\/ alex: is this even necessaray? Do we care? If so, why?\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\/\/ we put the typed ones first so that the parsed ones override when\n\t\t\/\/ iteration happens.\n\t\treturn this.getPropertySetsByType(tagname).concat(propertySets); \/\/ Array\n\t}\n\tthis.createComponentFromScript = function(\/*Node*\/nodeRef, \/*String*\/componentName, \/*Object*\/properties, \/*String?*\/ns){\n\t\t\/\/ summary:\n\t\t\/\/ nodeRef: the node to be replaced... in the future, we might want to add \n\t\t\/\/ an alternative way to specify an insertion point\n\t\t\/\/ componentName: the expected dojo widget name, i.e. Button of ContextMenu\n\t\t\/\/ properties: an object of name value pairs\n\t\t\/\/ ns: the namespace of the widget.  Defaults to \"dojo\"\n\t\tproperties.fastMixIn = true;\t\t\t\n\t\t\/\/ FIXME: we pulled it apart and now we put it back together ... \n\t\tvar ltn = (ns || \"dojo\") + \":\" + componentName.toLowerCase();\n\t\tif(dojo.widget.tags[ltn]){\n\t\t\treturn [dojo.widget.tags[ltn](properties, this, null, null, properties)]; \/\/ Array\n\t\t}\n\t\treturn [dojo.widget.buildWidgetFromParseTree(ltn, properties, this, null, null, properties)]; \/\/ Array\n\t}","instance_variables":["propertySetsList","fragment","createComponents","createSubComponents","parsePropertySets","parseProperties","getDataProvider","getPropertySetById","getPropertySetsByType","getPropertySets","createComponentFromScript"],"returns":"mixed"}},"dojo.widget.Parse.createComponents":{"meta":{"summary":"","parameters":{"frag":{"type":"Object"},"parentComp":{"type":"Object"}},"src":" \tvar comps = [];\n\t\tvar built = false;\n\t\t\/\/ if we have items to parse\/create at this level, do it!\n\t\ttry{\n\t\t\tif(frag && frag.tagName && (frag != frag.nodeRef)){\n\t\t\t\t\/\/ these are in fact, not ever for widgets per-se anymore, \n\t\t\t\t\/\/ but for other markup elements (aka components)\n\t\t\t\tvar djTags = dojo.widget.tags;\n\t\t\t\t\/\/ we split so that you can declare multiple \n\t\t\t\t\/\/ non-destructive components from the same ctor node\n\t\t\t\tvar tna = String(frag.tagName).split(\";\");\n\t\t\t\tfor(var x=0; x<tna.length; x++){\n\t\t\t\t\tvar ltn = tna[x].replace(\/^\\s+|\\s+$\/g, \"\").toLowerCase();\n\t\t\t\t\t\/\/ FIXME: unsure what this does\n\t\t\t\t\tfrag.tagName = ltn;\n\t\t\t\t\tvar ret;\n\t\t\t\t\tif(djTags[ltn]){\n\t\t\t\t\t\tbuilt = true;\n\t\t\t\t\t\tret = djTags[ltn](frag, this, parentComp, frag.index);\n\t\t\t\t\t\tcomps.push(ret);\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\/\/ we require a namespace prefix, default to dojo:\n\t\t\t\t\t\tif(ltn.indexOf(\":\") == -1){\n\t\t\t\t\t\t\tltn = \"dojo:\"+ltn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\/\/ FIXME: handling failure condition correctly?\n\t\t\t\t\t\t\/\/ ret = djTags[ltn](frag, this, parentComp, frag.index);\n\t\t\t\t\t\tret = dojo.widget.buildWidgetFromParseTree(ltn, frag, this, parentComp, frag.index);\n\t\t\t\t\t\tif(ret){\n\t\t\t\t\t\t\tbuilt = true;\n\t\t\t\t\t\t\tcomps.push(ret);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tdojo.debug(\"dojo.widget.Parse: error:\", e);\n\t\t\t\/\/ note, commenting out the next line is breaking several widgets for me\n\t\t\t\/\/ throw e;\n\t\t\t\/\/ IE is such a pain sometimes\n\t\t}\n\t\t\/\/ if there's a sub-frag, build widgets from that too\n\t\tif(!built){\n\t\t\tcomps = comps.concat(this.createSubComponents(frag, parentComp));\n\t\t}\n\t\treturn comps; \/\/ Array","returns":"Array","instance":"dojo.widget.Parse"}},"dojo.widget.Parse.createSubComponents":{"meta":{"summary":"recurses over a raw JavaScript object structure, and calls the corresponding handler for its normalized tagName if it exists","parameters":{"fragment":{"type":"Object"},"parentComp":{"type":"Object"}},"src":"\t\tvar frag, comps = [];\n\t\tfor(var item in fragment){\n\t\t\tfrag = fragment[item];\n\t\t\tif(frag && typeof frag == \"object\"\n\t\t\t\t&&(frag!=fragment.nodeRef)\n\t\t\t\t&&(frag!=fragment.tagName)\n\t\t\t\t&&(!dojo.dom.isNode(frag))){\/\/ needed in IE when we have event.connected to the domNode\n\t\t\t\tcomps = comps.concat(this.createComponents(frag, parentComp));\n\t\t\t}\n\t\t}\n\t\treturn comps; \/\/ Array","returns":"Array","instance":"dojo.widget.Parse"}},"dojo.widget.Parse.parsePropertySets":{"meta":{"summary":"checks the top level of a raw JavaScript object structure for any propertySets. It stores an array of references to propertySets that it finds.","parameters":{"fragment":{"type":"Object"}},"src":" \treturn [];\n\t\t\/*\n\t\tvar propertySets = [];\n\t\tfor(var item in fragment){\n\t\t\tif((fragment[item][\"tagName\"] == \"dojo:propertyset\")){\n\t\t\t\tpropertySets.push(fragment[item]);\n\t\t\t}\n\t\t}\n\t\t\/\/ FIXME: should we store these propertySets somewhere for later retrieval\n\t\tthis.propertySetsList.push(propertySets);\n\t\treturn propertySets;\n\t\t*\/","instance":"dojo.widget.Parse"}},"dojo.widget.Parse.parseProperties":{"meta":{"summary":"parseProperties checks a raw JavaScript object structure for properties, and returns a hash of properties that it finds.","parameters":{"fragment":{"type":"Object"}},"src":" \tvar properties = {};\n\t\tfor(var item in fragment){\n\t\t\t\/\/ FIXME: need to check for undefined?\n\t\t\t\/\/ case: its a tagName or nodeRef\n\t\t\tif((fragment[item] == fragment.tagName)||(fragment[item] == fragment.nodeRef)){\n\t\t\t\t\/\/ do nothing\n\t\t\t}else{\n\t\t\t\tvar frag = fragment[item];\n\t\t\t\tif(frag.tagName && dojo.widget.tags[frag.tagName.toLowerCase()]){\n\t\t\t\t\t\/\/ TODO: it isn't a property or property set, it's a fragment, \n\t\t\t\t\t\/\/ so do something else\n\t\t\t\t\t\/\/ FIXME: needs to be a better\/stricter check\n\t\t\t\t\t\/\/ TODO: handle xlink:href for external property sets\n\t\t\t\t}else if(frag[0] && frag[0].value!=\"\" && frag[0].value!=null){\n\t\t\t\t\ttry{\n\t\t\t\t\t\t\/\/ FIXME: need to allow more than one provider\n\t\t\t\t\t\tif(item.toLowerCase() == \"dataprovider\"){\n\t\t\t\t\t\t\tvar _this = this;\n\t\t\t\t\t\t\tthis.getDataProvider(_this, frag[0].value);\n\t\t\t\t\t\t\tproperties.dataProvider = this.dataProvider;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tproperties[item] = frag[0].value;\n\t\t\t\t\t\tvar nestedProperties = this.parseProperties(frag);\n\t\t\t\t\t\t\/\/ FIXME: this kind of copying is expensive and inefficient!\n\t\t\t\t\t\tfor(var property in nestedProperties){\n\t\t\t\t\t\t\tproperties[property] = nestedProperties[property];\n\t\t\t\t\t\t}\n\t\t\t\t\t}catch(e){ dojo.debug(e); }\n\t\t\t\t}\n\t\t\t\tswitch(item.toLowerCase()){\n\t\t\t\tcase \"checked\":\n\t\t\t\tcase \"disabled\":\n\t\t\t\t\tif (typeof properties[item] != \"boolean\"){ \n\t\t\t\t\t\tproperties[item] = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t\treturn properties; \/\/ Object","returns":"Object","instance":"dojo.widget.Parse"}},"dojo.widget.Parse.getDataProvider":{"meta":{"summary":"","parameters":{"objRef":{"type":"Object"},"dataUrl":{"type":"String"}},"src":" \tdojo.io.bind({\n\t\t\turl: dataUrl,\n\t\t\tload: function(type, evaldObj){\n\t\t\t\tif(type==\"load\"){\n\t\t\t\t\tobjRef.dataProvider = evaldObj;\n\t\t\t\t}\n\t\t\t},\n\t\t\tmimetype: \"text\/javascript\",\n\t\t\tsync: true\n\t\t});","instance":"dojo.widget.Parse"}},"dojo.widget.Parse.getPropertySetById":{"meta":{"summary":"returns the propertySet that matches the provided id","parameters":{"propertySetId":{"type":""}},"src":" \tfor(var x = 0; x < this.propertySetsList.length; x++){\n\t\t\tif(propertySetId == this.propertySetsList[x][\"id\"][0].value){\n\t\t\t\treturn this.propertySetsList[x];\n\t\t\t}\n\t\t}\n\t\treturn \"\"; \/\/ String","returns":"String","instance":"dojo.widget.Parse"}},"dojo.widget.Parse.getPropertySetsByType":{"meta":{"summary":"returns the propertySet(s) that match(es) the provided componentClass","parameters":{"componentType":{"type":""}},"src":"\t\tvar propertySets = [];\n\t\tfor(var x=0; x < this.propertySetsList.length; x++){\n\t\t\tvar cpl = this.propertySetsList[x];\n\t\t\tvar cpcc = cpl.componentClass || cpl.componentType || null; \/\/FIXME: is componentType supposed to be an indirect reference?\n\t\t\tvar propertySetId = this.propertySetsList[x][\"id\"][0].value;\n\t\t\tif(cpcc && (propertySetId == cpcc[0].value)){\n\t\t\t\tpropertySets.push(cpl);\n\t\t\t}\n\t\t}\n\t\treturn propertySets; \/\/ Array","returns":"Array","instance":"dojo.widget.Parse"}},"dojo.widget.Parse.getPropertySets":{"meta":{"summary":"returns the propertySet for a given component fragment","parameters":{"fragment":{"type":"Object"}},"src":"\t\tvar ppl = \"dojo:propertyproviderlist\";\n\t\tvar propertySets = [];\n\t\tvar tagname = fragment.tagName;\n\t\tif(fragment[ppl]){ \n\t\t\tvar propertyProviderIds = fragment[ppl].value.split(\" \");\n\t\t\t\/\/ FIXME: should the propertyProviderList attribute contain #\n\t\t\t\/\/ \t\t  syntax for reference to ids or not?\n\t\t\t\/\/ FIXME: need a better test to see if this is local or external\n\t\t\t\/\/ FIXME: doesn't handle nested propertySets, or propertySets that\n\t\t\t\/\/ \t\t  just contain information about css documents, etc.\n\t\t\tfor(var propertySetId in propertyProviderIds){\n\t\t\t\tif((propertySetId.indexOf(\"..\")==-1)&&(propertySetId.indexOf(\":\/\/\")==-1)){\n\t\t\t\t\t\/\/ get a reference to a propertySet within the current parsed structure\n\t\t\t\t\tvar propertySet = this.getPropertySetById(propertySetId);\n\t\t\t\t\tif(propertySet != \"\"){\n\t\t\t\t\t\tpropertySets.push(propertySet);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t\/\/ FIXME: add code to parse and return a propertySet from\n\t\t\t\t\t\/\/ another document\n\t\t\t\t\t\/\/ alex: is this even necessaray? Do we care? If so, why?\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\/\/ we put the typed ones first so that the parsed ones override when\n\t\t\/\/ iteration happens.\n\t\treturn this.getPropertySetsByType(tagname).concat(propertySets); \/\/ Array","returns":"Array","instance":"dojo.widget.Parse"}},"dojo.widget.Parse.createComponentFromScript":{"meta":{"summary":"","parameters":{"nodeRef":{"type":"Node"},"componentName":{"type":"String"},"properties":{"type":"Object"},"ns":{"type":"String?"}},"src":"\t\tproperties.fastMixIn = true;\t\t\t\n\t\t\/\/ FIXME: we pulled it apart and now we put it back together ... \n\t\tvar ltn = (ns || \"dojo\") + \":\" + componentName.toLowerCase();\n\t\tif(dojo.widget.tags[ltn]){\n\t\t\treturn [dojo.widget.tags[ltn](properties, this, null, null, properties)]; \/\/ Array\n\t\t}\n\t\treturn [dojo.widget.buildWidgetFromParseTree(ltn, properties, this, null, null, properties)]; \/\/ Array","returns":"Array","instance":"dojo.widget.Parse"},"extra":{"parameters":{"nodeRef":{"type":"the","summary":"node to be replaced... in the future, we might want to add an alternative way to specify an insertion point"},"componentName":{"type":"the","summary":"expected dojo widget name, i.e. Button of ContextMenu"},"properties":{"type":"an","summary":"object of name value pairs"},"ns":{"type":"the","summary":"namespace of the widget. Defaults to \"dojo\""}}}},"dojo.widget.getParser":{"meta":{"summary":"","parameters":{"name":{"type":"String?"}},"src":" if(!name){ name = \"dojo\"; }\n\tif(!this._parser_collection[name]){\n\t\tthis._parser_collection[name] = new dojo.widget.Parse();\n\t}\n\treturn this._parser_collection[name];"}},"dojo.widget.createWidget":{"meta":{"summary":"Creates widget","parameters":{"name":{"type":"String"},"props":{"type":"String"},"refNode":{"type":"Node"},"position":{"type":"String"}},"src":"\tvar isNode = false;\n\tvar isNameStr = (typeof name == \"string\");\n\tif(isNameStr){\n\t\tvar pos = name.indexOf(\":\");\n\t\tvar ns = (pos > -1) ? name.substring(0,pos) : \"dojo\";\n\t\tif(pos > -1){ name = name.substring(pos+1); }\n\t\tvar lowerCaseName = name.toLowerCase();\n\t\tvar namespacedName = ns + \":\" + lowerCaseName;\n\t\tisNode = (dojo.byId(name) && !dojo.widget.tags[namespacedName]); \n\t}\n\tif((arguments.length == 1) && (isNode || !isNameStr)){\n\t\t\/\/ we got a DOM node \n\t\tvar xp = new dojo.xml.Parse(); \n\t\t\/\/ FIXME: we should try to find the parent! \n\t\tvar tn = isNode ? dojo.byId(name) : name; \n\t\treturn dojo.widget.getParser().createComponents(xp.parseElement(tn, null, true))[0]; \n\t}\n\tfunction fromScript(placeKeeperNode, name, props, ns){\n\t\tprops[namespacedName] = { \n\t\t\tdojotype: [{value: lowerCaseName}],\n\t\t\tnodeRef: placeKeeperNode,\n\t\t\tfastMixIn: true\n\t\t};\n\t\tprops.ns = ns;\n\t\treturn dojo.widget.getParser().createComponentFromScript(placeKeeperNode, name, props, ns);\n\t}\n\tprops = props||{};\n\tvar notRef = false;\n\tvar tn = null;\n\tvar h = dojo.render.html.capable;\n\tif(h){\n\t\ttn = document.createElement(\"span\");\n\t}\n\tif(!refNode){\n\t\tnotRef = true;\n\t\trefNode = tn;\n\t\tif(h){\n\t\t\tdojo.body().appendChild(refNode);\n\t\t}\n\t}else if(position){\n\t\tdojo.dom.insertAtPosition(tn, refNode, position);\n\t}else{ \/\/ otherwise don't replace, but build in-place\n\t\ttn = refNode;\n\t}\n\tvar widgetArray = fromScript(tn, name.toLowerCase(), props, ns);\n\tif(\t(!widgetArray)||(!widgetArray[0])||\n\t\t(typeof widgetArray[0].widgetType == \"undefined\") ){\n\t\tthrow new Error(\"createWidget: Creation of \\\"\" + name + \"\\\" widget failed.\");\n\t}\n\ttry{\n\t\tif(notRef && widgetArray[0].domNode.parentNode){\n\t\t\twidgetArray[0].domNode.parentNode.removeChild(widgetArray[0].domNode);\n\t\t}\n\t}catch(e){\n\t\t\/* squelch for Safari *\/\n\t\tdojo.debug(e);\n\t}\n\treturn widgetArray[0]; \/\/ Widget","returns":"Widget"},"extra":{"parameters":{"name":{"type":"The","summary":"name of the widget to create with optional namespace prefix, e.g.\"ns:widget\", namespace defaults to \"dojo\"."},"props":{"type":"Key-Value","summary":"pairs of properties of the widget"},"refNode":{"type":"argument","summary":null},"position":{"type":"The","summary":"position to insert this widget's node relative to the"}}}}},"objects":{"dojo.widget._parser_collection":{"meta":{"variables":["dojo"]}}}}},"dojo.widget.PopupContainer":{"meta":{"requires":{"common":["dojo.html.style","dojo.html.layout","dojo.html.selection","dojo.html.iframe","dojo.event.*","dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.PopupContainerBase":{"meta":{"prototype_variables":["isContainer","templateString","isShowingNow","currentSubpopup","beginZIndex","parentPopup","parent","popupIndex","aroundBox","openedForWindow"],"variables":["isContainer","templateString","isShowingNow","currentSubpopup","beginZIndex","parentPopup","parent","popupIndex","aroundBox","openedForWindow"],"instance_variables":["parent","isTopLevel","parentPopup","popupIndex","_bookmark","domNode.style.display","explodeSrc","isShowingNow","currentSubpopup","openedSize","bgIframe","queueOnAnimationFinish"],"summary":"","description":"This class can not be used standalone: it should be mixed-in to a dojo.widget.HtmlWidget. Use PopupContainer instead if you want a a standalone popup widget","src":" \tthis.queueOnAnimationFinish = [];"}},"dojo.widget.PopupContainerBase.processKey":{"meta":{"summary":"key event handler","parameters":{"evt":{"type":"Event"}},"src":" \treturn false;","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.applyPopupBasicStyle":{"meta":{"summary":"apply necessary css rules to the top domNode","src":" \twith(this.domNode.style){\n\t\t\tdisplay = 'none';\n\t\t\tposition = 'absolute';\n\t\t}","description":"this function should be called in sub class where a custom templateString\/templateStringPath is used (see Tooltip widget)","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.aboutToShow":{"meta":{"summary":"connect to this stub to modify the content of the popup","src":"\t\t\/\/ summary: connect to this stub to modify the content of the popup","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.open":{"meta":{"summary":"Open the popup at position (x,y), relative to dojo.body() Or open(node, parent, explodeSrc, aroundOrient) to open around node","parameters":{"x":{"type":"Integer"},"y":{"type":"Integer"},"parent":{"type":"DomNode"},"explodeSrc":{"type":"Object"},"orient":{"type":"String?"},"padding":{"type":"Array?"}},"src":" \tif (this.isShowingNow){ return; }\n\t\t\/\/ if I click right button and menu is opened, then it gets 2 commands: close -> open\n\t\t\/\/ so close enables animation and next \"open\" is put to queue to occur at new location\n\t\tif(this.animationInProgress){\n\t\t\tthis.queueOnAnimationFinish.push(this.open, arguments);\n\t\t\treturn;\n\t\t}\n\t\tthis.aboutToShow();\n\t\tvar around = false, node, aroundOrient;\n\t\tif(typeof x == 'object'){\n\t\t\tnode = x;\n\t\t\taroundOrient = explodeSrc;\n\t\t\texplodeSrc = parent;\n\t\t\tparent = y;\n\t\t\taround = true;\n\t\t}\n\t\t\/\/ save this so that the focus can be returned\n\t\tthis.parent = parent;\n\t\t\/\/ for unknown reasons even if the domNode is attached to the body in postCreate(),\n\t\t\/\/ it's not attached here, so have to attach it here.\n\t\tdojo.body().appendChild(this.domNode);\n\t\t\/\/ if explodeSrc isn't specified then explode from my parent widget\n\t\texplodeSrc = explodeSrc || parent[\"domNode\"] || [];\n\t\t\/\/keep track of parent popup to decided whether this is a top level popup\n\t\tvar parentPopup = null;\n\t\tthis.isTopLevel = true;\n\t\twhile(parent){\n\t\t\tif(parent !== this && (parent.setOpenedSubpopup != undefined && parent.applyPopupBasicStyle != undefined)){\n\t\t\t\tparentPopup = parent;\n\t\t\t\tthis.isTopLevel = false;\n\t\t\t\tparentPopup.setOpenedSubpopup(this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tparent = parent.parent;\n\t\t}\n\t\tthis.parentPopup = parentPopup;\n\t\tthis.popupIndex = parentPopup ? parentPopup.popupIndex + 1 : 1;\n\t\tif(this.isTopLevel){\n\t\t\tvar button = dojo.html.isNode(explodeSrc) ? explodeSrc : null;\n\t\t\tdojo.widget.PopupManager.opened(this, button);\n\t\t}\n\t\t\/\/Store the current selection and restore it before the action for a menu item\n\t\t\/\/is executed. This is required as clicking on an menu item deselects current selection\n\t\tif(this.isTopLevel && !dojo.withGlobal(this.openedForWindow||dojo.global(), dojo.html.selection.isCollapsed)){\n\t\t\tthis._bookmark = dojo.withGlobal(this.openedForWindow||dojo.global(), dojo.html.selection.getBookmark);\n\t\t}else{\n\t\t\tthis._bookmark = null;\n\t\t}\n\t\t\/\/convert explodeSrc from format [x, y] to\n\t\t\/\/{left: x, top: y, width: 0, height: 0} which is the new\n\t\t\/\/format required by dojo.html.toCoordinateObject\n\t\tif(explodeSrc instanceof Array){\n\t\t\texplodeSrc = {left: explodeSrc[0], top: explodeSrc[1], width: 0, height: 0};\n\t\t}\n\t\t\/\/ display temporarily, and move into position, then hide again\n\t\twith(this.domNode.style){\n\t\t\tdisplay=\"\";\n\t\t\tzIndex = this.beginZIndex + this.popupIndex;\n\t\t}\n\t\tif(around){\n\t\t\tthis.move(node, padding, aroundOrient);\n\t\t}else{\n\t\t\tthis.move(x, y, padding, orient);\n\t\t}\n\t\tthis.domNode.style.display=\"none\";\n\t\tthis.explodeSrc = explodeSrc;\n\t\t\/\/ then use the user defined method to display it\n\t\tthis.show();\n\t\tthis.isShowingNow = true;","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.move":{"meta":{"summary":"calculate where to place the popup","parameters":{"x":{"type":"Int"},"y":{"type":"Int"},"padding":{"type":"Integer?"},"orient":{"type":"String?"}},"src":"\t\tvar around = (typeof x == \"object\");\n\t\tif(around){\n\t\t\tvar aroundOrient=padding;\n\t\t\tvar node=x;\n\t\t\tpadding=y;\n\t\t\tif(!aroundOrient){ \/\/By default, attempt to open above the aroundNode, or below\n\t\t\t\taroundOrient = {'BL': 'TL', 'TL': 'BL'};\n\t\t\t}\n\t\t\tdojo.html.placeOnScreenAroundElement(this.domNode, node, padding, this.aroundBox, aroundOrient);\n\t\t}else{\n\t\t\tif(!orient){ orient = 'TL,TR,BL,BR';}\n\t\t\tdojo.html.placeOnScreen(this.domNode, x, y, padding, true, orient);\n\t\t}","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.close":{"meta":{"summary":"hide the popup","parameters":{"force":{"type":"Boolean?"}},"src":" \tif(force){\n\t\t\tthis.domNode.style.display=\"none\";\n\t\t}\n\t\t\/\/ If we are in the process of opening the menu and we are asked to close it\n\t\tif(this.animationInProgress){\n\t\t\tthis.queueOnAnimationFinish.push(this.close, []);\n\t\t\treturn;\n\t\t}\n\t\tthis.closeSubpopup(force);\n\t\tthis.hide();\n\t\tif(this.bgIframe){\n\t\t\tthis.bgIframe.hide();\n\t\t\tthis.bgIframe.size({left: 0, top: 0, width: 0, height: 0});\n\t\t}\n\t\tif(this.isTopLevel){\n\t\t\tdojo.widget.PopupManager.closed(this);\n\t\t}\n\t\tthis.isShowingNow = false;\n\t\t\/\/ return focus to the widget that opened the menu\n\t\tif(this.parent){\n\t\t\tsetTimeout(\n\t\t\t\tdojo.lang.hitch(this, \n\t\t\t\t\tfunction(){\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\tif(this.parent['focus']){\n\t\t\t\t\t\t\t\tthis.parent.focus();\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.parent.domNode.focus(); \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}catch(e){dojo.debug(\"No idea how to focus to parent\", e);}\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\t10\n\t\t\t);\n\t\t}\n\t\t\/\/do not need to restore if current selection is not empty\n\t\t\/\/(use keyboard to select a menu item)\n\t\tif(this._bookmark && dojo.withGlobal(this.openedForWindow||dojo.global(), dojo.html.selection.isCollapsed)){\n\t\t\tif(this.openedForWindow){\n\t\t\t\tthis.openedForWindow.focus()\n\t\t\t}\n\t\t\ttry{\n\t\t\t\tdojo.withGlobal(this.openedForWindow||dojo.global(), \"moveToBookmark\", dojo.html.selection, [this._bookmark]);\n\t\t\t}catch(e){\n\t\t\t\t\/*squelch IE internal error, see http:\/\/trac.dojotoolkit.org\/ticket\/1984 *\/\n\t\t\t}\n\t\t}\n\t\tthis._bookmark = null;","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.closeAll":{"meta":{"summary":"hide all popups including sub ones","parameters":{"force":{"type":"Boolean?"}},"src":" \tif (this.parentPopup){\n\t\t\tthis.parentPopup.closeAll(force);\n\t\t}else{\n\t\t\tthis.close(force);\n\t\t}","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.setOpenedSubpopup":{"meta":{"summary":"used by sub popup to set currentSubpopup in the parent popup","parameters":{"popup":{"type":"Widget"}},"src":" \tthis.currentSubpopup = popup;","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.closeSubpopup":{"meta":{"summary":"close opened sub popup","parameters":{"force":{"type":"Boolean?"}},"src":" \tif(this.currentSubpopup == null){ return; }\n\t\tthis.currentSubpopup.close(force);\n\t\tthis.currentSubpopup = null;","prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.onShow":{"meta":{"summary":"","src":" \tdojo.widget.PopupContainer.superclass.onShow.apply(this, arguments);\n\t\t\/\/ With some animation (wipe), after close, the size of the domnode is 0\n\t\t\/\/ and next time when shown, the open() function can not determine\n\t\t\/\/ the correct place to popup, so we store the opened size here and\n\t\t\/\/ set it after close (in function onHide())\n\t\tthis.openedSize={w: this.domNode.style.width, h: this.domNode.style.height};\n\t\t\/\/ prevent IE bleed through\n\t\tif(dojo.render.html.ie){\n\t\t\tif(!this.bgIframe){\n\t\t\t\tthis.bgIframe = new dojo.html.BackgroundIframe();\n\t\t\t\tthis.bgIframe.setZIndex(this.domNode);\n\t\t\t}\n\t\t\tthis.bgIframe.size(this.domNode);\n\t\t\tthis.bgIframe.show();\n\t\t}\n\t\tthis.processQueue();","call_chain":["dojo.widget.PopupContainer.superclass.onShow"],"prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.processQueue":{"meta":{"summary":"do events from queue","src":" \tif (!this.queueOnAnimationFinish.length) return;\n\t\tvar func = this.queueOnAnimationFinish.shift();\n\t\tvar args = this.queueOnAnimationFinish.shift();\n\t\tfunc.apply(this, args);","call_chain":["func"],"prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainerBase.onHide":{"meta":{"summary":"","src":" \tdojo.widget.HtmlWidget.prototype.onHide.call(this);\n\t\t\/\/restore size of the domnode, see comment in\n\t\t\/\/function onShow()\n\t\tif(this.openedSize){\n\t\t\twith(this.domNode.style){\n\t\t\t\twidth=this.openedSize.w;\n\t\t\t\theight=this.openedSize.h;\n\t\t\t}\n\t\t}\n\t\tthis.processQueue();","call_chain":["dojo.widget.HtmlWidget.prototype.onHide"],"prototype":"dojo.widget.PopupContainerBase"}},"dojo.widget.PopupContainer":{"meta":{"summary":"dojo.widget.PopupContainer is the widget version of dojo.widget.PopupContainerBase"}},"dojo.widget.PopupManager":{"meta":{"initialized":true,"summary":"the popup manager makes sure we don't have several popups open at once. the root popup in an opening sequence calls opened(). when a root menu closes it calls closed(). then everything works. lovely.","src":"\tthis.currentMenu = null;\n\tthis.currentButton = null;\t\t\/\/ button that opened current menu (if any)\n\tthis.currentFocusMenu = null;\t\/\/ the (sub)menu which receives key events\n\tthis.focusNode = null;\n\tthis.registeredWindows = [];\n\tthis.registerWin = function(\/*Window*\/win){\n\t\t\/\/ summary: register a window so that when clicks\/scroll in it, the popup can be closed automatically\n\t\tif(!win.__PopupManagerRegistered)\n\t\t{\n\t\t\tdojo.event.connect(win.document, 'onmousedown', this, 'onClick');\n\t\t\tdojo.event.connect(win, \"onscroll\", this, \"onClick\");\n\t\t\tdojo.event.connect(win.document, \"onkey\", this, 'onKey');\n\t\t\twin.__PopupManagerRegistered = true;\n\t\t\tthis.registeredWindows.push(win);\n\t\t}\n\t};\n\t\/*\n\t*\/\n\tthis.registerAllWindows = function(\/*Window*\/targetWindow){\n\t\t\/\/ summary:\n\t\t\/\/\t\tThis function register all the iframes and the top window,\n\t\t\/\/\t\tso that whereever the user clicks in the page, the popup\n\t\t\/\/\t\tmenu will be closed\n\t\t\/\/\t\tIn case you add an iframe after onload event, please call\n\t\t\/\/\t\tdojo.widget.PopupManager.registerWin manually\n\t\t\/\/starting from window.top, clicking everywhere in this page\n\t\t\/\/should close popup menus\n\t\tif(!targetWindow) { \/\/see comment below\n\t\t\ttargetWindow = dojo.html.getDocumentWindow(window.top && window.top.document || window.document);\n\t\t}\n\t\tthis.registerWin(targetWindow);\n\t\tfor (var i = 0; i < targetWindow.frames.length; i++){\n\t\t\ttry{\n\t\t\t\t\/\/do not remove  dojo.html.getDocumentWindow, see comment in it\n\t\t\t\tvar win = dojo.html.getDocumentWindow(targetWindow.frames[i].document);\n\t\t\t\tif(win){\n\t\t\t\t\tthis.registerAllWindows(win);\n\t\t\t\t}\n\t\t\t}catch(e){ \/* squelch error for cross domain iframes *\/ }\n\t\t}\n\t};\n\tthis.unRegisterWin = function(\/*Window*\/win){\n\t\t\/\/ summary: remove listeners on the registered window\n\t\tif(win.__PopupManagerRegistered)\n\t\t{\n\t\t\tdojo.event.disconnect(win.document, 'onmousedown', this, 'onClick');\n\t\t\tdojo.event.disconnect(win, \"onscroll\", this, \"onClick\");\n\t\t\tdojo.event.disconnect(win.document, \"onkey\", this, 'onKey');\n\t\t\twin.__PopupManagerRegistered = false;\n\t\t}\n\t};\n\tthis.unRegisterAllWindows = function(){\n\t\t\/\/ summary: remove listeners on all the registered windows\n\t\tfor(var i=0;i<this.registeredWindows.length;++i){\n\t\t\tthis.unRegisterWin(this.registeredWindows[i]);\n\t\t}\n\t\tthis.registeredWindows = [];\n\t};\n\tdojo.addOnLoad(this, \"registerAllWindows\");\n\tdojo.addOnUnload(this, \"unRegisterAllWindows\");\n\tthis.closed = function(\/*Widget*\/menu){\n\t\t\/\/ summary: notify the manager that menu is closed\n\t\tif (this.currentMenu == menu){\n\t\t\tthis.currentMenu = null;\n\t\t\tthis.currentButton = null;\n\t\t\tthis.currentFocusMenu = null;\n\t\t}\n\t};\n\tthis.opened = function(\/*Widget*\/menu, \/*DomNode*\/button){\n\t\t\/\/ summary: sets the current opened popup\n\t\tif (menu == this.currentMenu){ return; }\n\t\tif (this.currentMenu){\n\t\t\tthis.currentMenu.close();\n\t\t}\n\t\tthis.currentMenu = menu;\n\t\tthis.currentFocusMenu = menu;\n\t\tthis.currentButton = button;\n\t};\n\tthis.setFocusedMenu = function(\/*Widget*\/menu){\n\t\t\/\/ summary:\n\t\t\/\/ \t\tSet the current focused popup, This is used by popups which supports keyboard navigation\n\t\tthis.currentFocusMenu = menu;\n\t};\n\tthis.onKey = function(\/*Event*\/e){\n\t\tif (!e.key) { return; }\n\t\tif(!this.currentMenu || !this.currentMenu.isShowingNow){ return; }\n\t\tvar m = this.currentFocusMenu;\n\t\twhile (m){\n\t\t\tif(m.processKey(e)){\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tm = m.parentPopup;\n\t\t}\n\t},\n\tthis.onClick = function(\/*Event*\/e){\n\t\tif (!this.currentMenu){ return; }\n\t\tvar scrolloffset = dojo.html.getScroll().offset;\n\t\t\/\/ starting from the base menu, perform a hit test\n\t\t\/\/ and exit when one succeeds\n\t\tvar m = this.currentMenu;\n\t\twhile (m){\n\t\t\tif(dojo.html.overElement(m.domNode, e) || dojo.html.isDescendantOf(e.target, m.domNode)){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tm = m.currentSubpopup;\n\t\t}\n\t\t\/\/ Also, if user clicked the button that opened this menu, then\n\t\t\/\/ that button will send the menu a close() command, so this code\n\t\t\/\/ shouldn't try to close the menu.  Closing twice messes up animation.\n\t\tif (this.currentButton && dojo.html.overElement(this.currentButton, e)){\n\t\t\treturn;\n\t\t}\n\t\t\/\/ the click didn't fall within the open menu tree\n\t\t\/\/ so close it\n\t\tthis.currentMenu.close();\n\t};","instance_variables":["currentMenu","currentButton","currentFocusMenu","focusNode","registeredWindows","registerWin","registerAllWindows","unRegisterWin","unRegisterAllWindows","closed","opened","setFocusedMenu","onKey","onClick"]}},"dojo.widget.PopupManager.registerWin":{"meta":{"summary":"register a window so that when clicks\/scroll in it, the popup can be closed automatically","parameters":{"win":{"type":"Window"}},"src":" \tif(!win.__PopupManagerRegistered)\n\t\t{\n\t\t\tdojo.event.connect(win.document, 'onmousedown', this, 'onClick');\n\t\t\tdojo.event.connect(win, \"onscroll\", this, \"onClick\");\n\t\t\tdojo.event.connect(win.document, \"onkey\", this, 'onKey');\n\t\t\twin.__PopupManagerRegistered = true;\n\t\t\tthis.registeredWindows.push(win);\n\t\t}","instance":"dojo.widget.PopupManager"}},"dojo.widget.PopupManager.registerAllWindows":{"meta":{"summary":"This function register all the iframes and the top window, so that whereever the user clicks in the page, the popup menu will be closed In case you add an iframe after onload event, please call dojo.widget.PopupManager.registerWin manually","parameters":{"targetWindow":{"type":"Window"}},"src":"\t\t\/\/starting from window.top, clicking everywhere in this page\n\t\t\/\/should close popup menus\n\t\tif(!targetWindow) { \/\/see comment below\n\t\t\ttargetWindow = dojo.html.getDocumentWindow(window.top && window.top.document || window.document);\n\t\t}\n\t\tthis.registerWin(targetWindow);\n\t\tfor (var i = 0; i < targetWindow.frames.length; i++){\n\t\t\ttry{\n\t\t\t\t\/\/do not remove  dojo.html.getDocumentWindow, see comment in it\n\t\t\t\tvar win = dojo.html.getDocumentWindow(targetWindow.frames[i].document);\n\t\t\t\tif(win){\n\t\t\t\t\tthis.registerAllWindows(win);\n\t\t\t\t}\n\t\t\t}catch(e){ \/* squelch error for cross domain iframes *\/ }\n\t\t}","instance":"dojo.widget.PopupManager"}},"dojo.widget.PopupManager.unRegisterWin":{"meta":{"summary":"remove listeners on the registered window","parameters":{"win":{"type":"Window"}},"src":" \tif(win.__PopupManagerRegistered)\n\t\t{\n\t\t\tdojo.event.disconnect(win.document, 'onmousedown', this, 'onClick');\n\t\t\tdojo.event.disconnect(win, \"onscroll\", this, \"onClick\");\n\t\t\tdojo.event.disconnect(win.document, \"onkey\", this, 'onKey');\n\t\t\twin.__PopupManagerRegistered = false;\n\t\t}","instance":"dojo.widget.PopupManager"}},"dojo.widget.PopupManager.unRegisterAllWindows":{"meta":{"summary":"remove listeners on all the registered windows","src":" \tfor(var i=0;i<this.registeredWindows.length;++i){\n\t\t\tthis.unRegisterWin(this.registeredWindows[i]);\n\t\t}\n\t\tthis.registeredWindows = [];","instance":"dojo.widget.PopupManager"}},"dojo.widget.PopupManager.closed":{"meta":{"summary":"notify the manager that menu is closed","parameters":{"menu":{"type":"Widget"}},"src":" \tif (this.currentMenu == menu){\n\t\t\tthis.currentMenu = null;\n\t\t\tthis.currentButton = null;\n\t\t\tthis.currentFocusMenu = null;\n\t\t}","instance":"dojo.widget.PopupManager"}},"dojo.widget.PopupManager.opened":{"meta":{"summary":"sets the current opened popup","parameters":{"menu":{"type":"Widget"},"button":{"type":"DomNode"}},"src":" \tif (menu == this.currentMenu){ return; }\n\t\tif (this.currentMenu){\n\t\t\tthis.currentMenu.close();\n\t\t}\n\t\tthis.currentMenu = menu;\n\t\tthis.currentFocusMenu = menu;\n\t\tthis.currentButton = button;","instance":"dojo.widget.PopupManager"}},"dojo.widget.PopupManager.setFocusedMenu":{"meta":{"summary":"Set the current focused popup, This is used by popups which supports keyboard navigation","parameters":{"menu":{"type":"Widget"}},"src":" \tthis.currentFocusMenu = menu;","instance":"dojo.widget.PopupManager"}},"dojo.widget.PopupManager.onKey":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \tif (!e.key) { return; }\n\t\tif(!this.currentMenu || !this.currentMenu.isShowingNow){ return; }\n\t\tvar m = this.currentFocusMenu;\n\t\twhile (m){\n\t\t\tif(m.processKey(e)){\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tm = m.parentPopup;\n\t\t}","instance":"dojo.widget.PopupManager"}},"dojo.widget.PopupManager.onClick":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \tif (!this.currentMenu){ return; }\n\t\tvar scrolloffset = dojo.html.getScroll().offset;\n\t\t\/\/ starting from the base menu, perform a hit test\n\t\t\/\/ and exit when one succeeds\n\t\tvar m = this.currentMenu;\n\t\twhile (m){\n\t\t\tif(dojo.html.overElement(m.domNode, e) || dojo.html.isDescendantOf(e.target, m.domNode)){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tm = m.currentSubpopup;\n\t\t}\n\t\t\/\/ Also, if user clicked the button that opened this menu, then\n\t\t\/\/ that button will send the menu a close() command, so this code\n\t\t\/\/ shouldn't try to close the menu.  Closing twice messes up animation.\n\t\tif (this.currentButton && dojo.html.overElement(this.currentButton, e)){\n\t\t\treturn;\n\t\t}\n\t\t\/\/ the click didn't fall within the open menu tree\n\t\t\/\/ so close it\n\t\tthis.currentMenu.close();","instance":"dojo.widget.PopupManager"}}}}},"dojo.widget.ProgressBar":{"meta":{"requires":{"common":["dojo.widget.*","dojo.event","dojo.dom","dojo.html.style","dojo.string.*","dojo.lfx.*"]},"functions":{"dojo.widget.ProgressBar":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["progressValue","maxProgressValue","width","height","frontPercentClass","backPercentClass","frontBarClass","backBarClass","hasText","isVertical","showOnlyIntegers","dataSource","pollInterval","duration","templatePath","templateCssPath","containerNode","internalProgress","_pixelUnitRatio","_pixelPercentRatio","_unitPercentRatio","_unitPixelRatio","_floatDimension","_intDimension","_progressPercentValue","_floatMaxProgressValue","_dimension","_pixelValue","_oInterval","_animation","_animationStopped","_progressValueBak","_hasTextBak"],"variables":["progressValue","maxProgressValue","width","height","frontPercentClass","backPercentClass","frontBarClass","backBarClass","hasText","isVertical","showOnlyIntegers","dataSource","pollInterval","duration","templatePath","templateCssPath","containerNode","internalProgress","_pixelUnitRatio","_pixelPercentRatio","_unitPercentRatio","_unitPixelRatio","_floatDimension","_intDimension","_progressPercentValue","_floatMaxProgressValue","_dimension","_pixelValue","_oInterval","_animation","_animationStopped","_progressValueBak","_hasTextBak"],"instance_variables":["internalProgress.className","containerNode.className","internalProgress.style.bottom","internalProgress.style.left","_dimension","internalProgress.style.top","frontPercentLabel.className","backPercentLabel.className","progressValue","domNode.style.height","domNode.style.width","_intDimension","_floatDimension","_pixelPercentRatio","backPercentLabel.style.display","frontPercentLabel.style.display","hasText","_progressValueBak","_hasTextBak","_animation","maxProgressValue","_floatMaxProgressValue","_pixelUnitRatio","_unitPercentRatio","_unitPixelRatio","_progressPercentValue","_pixelValue","dataSource","pollInterval","_oInterval","_animationStopped","internalProgress.style.height","frontPercentLabel.style.left","backPercentLabel.style.left","frontPercentLabel.style.bottom","backPercentLabel.style.bottom","showOnlyIntegers"],"summary":"a progress widget, with some calculation and server polling capabilities","description":"(implementation) four overlapped divs: (1) lower z-index (4) higher z-index back and front percent label have the same content: when the vertical line (*) partially hides the backPercentLabel, the frontPercentLabel becomes visible ________________________(1)_containerNode_________________________________ |__(3)_internalProgress____________ | | | <--- (*) | | (4) frontPercentLabel | (2) backPercentLabel | |__________________________________| | |__________________________________________________________________________| usage: <div dojoType=\"ProgressBar\" frontBarClass=\"...\" backBarClass=\"...\""},"extra":{"variables":{"progressValue":{"type":"String","summary":"initial progress value. with \"%\": percentual value, 0% <= progressValue <= 100% or without \"%\": absolute value, 0 <= progressValue <= maxProgressValue"},"maxProgressValue":{"type":"Float","summary":"max sample number"},"frontPercentClass":{"type":"String","summary":"css class for frontPercentLabel (4)"},"backBarClass":{"type":"frontBarClass=\"...","summary":"duration=\"...\""},"hasText":{"type":"true|false","summary":"isVertical=\"true|false\""},"showOnlyIntegers":{"type":"Boolean","summary":"if true, the percent label shows only integer values"},"dataSource":{"type":"uri","summary":"for server polling"},"pollInterval":{"type":"Integer","summary":"server poll interval"},"duration":{"type":"of","summary":"the animation attach points private members"}}}},"dojo.widget.ProgressBar.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tthis.internalProgress.className = this.frontBarClass;\n\t\t\tthis.containerNode.className = this.backBarClass;\n\t\t\tif (this.isVertical){\n\t\t\t\tthis.internalProgress.style.bottom=\"0px\";\n\t\t\t\tthis.internalProgress.style.left=\"0px\";\n\t\t\t\tthis._dimension = \"height\";\n\t\t\t} else {\n\t\t\t\tthis.internalProgress.style.top=\"0px\";\n\t\t\t\tthis.internalProgress.style.left=\"0px\";\n\t\t\t\tthis._dimension = \"width\";\n\t\t\t}\n\t\t\tthis.frontPercentLabel.className = this.frontPercentClass;\n\t\t\tthis.backPercentLabel.className = this.backPercentClass;\n\t\t\tthis.progressValue = \"\" + this.progressValue; \n\t\t\tthis.domNode.style.height = this.height + \"px\"; \n\t\t\tthis.domNode.style.width = this.width + \"px\";\n\t\t\tthis._intDimension = parseInt(\"0\" + eval(\"this.\" + this._dimension));\n\t\t\tthis._floatDimension = parseFloat(\"0\" + eval(\"this.\"+this._dimension));\n\t\t\tthis._pixelPercentRatio = this._floatDimension\/100;\n\t\t\tthis.setMaxProgressValue(this.maxProgressValue, true);\n\t\t\tthis.setProgressValue(dojo.string.trim(this.progressValue), true);\n\t\t\tdojo.debug(\"float dimension: \" + this._floatDimension);\n\t\t\tdojo.debug(\"this._unitPixelRatio: \" + this._unitPixelRatio);\n\t\t\tthis.showText(this.hasText);","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.showText":{"meta":{"summary":"shows or hides the labels","parameters":{"visible":{"type":""}},"src":" \t\tif (visible){\n\t\t\t\tthis.backPercentLabel.style.display=\"block\";\n\t\t\t\tthis.frontPercentLabel.style.display=\"block\";\n\t\t\t} else {\n\t\t\t\tthis.backPercentLabel.style.display=\"none\";\n\t\t\t\tthis.frontPercentLabel.style.display=\"none\";\n\t\t\t}\n\t\t\tthis.hasText = visible;","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tthis.render();","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar._backupValues":{"meta":{"summary":"","src":" \t\tthis._progressValueBak = this.progressValue;\n\t\t\tthis._hasTextBak = this.hasText;","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar._restoreValues":{"meta":{"summary":"","src":" \t\t\tthis.setProgressValue(this._progressValueBak);\n\t\t\t\tthis.showText(this._hasTextBak);","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar._setupAnimation":{"meta":{"summary":"","src":" \t\tvar _self = this;\n\t\t\tdojo.debug(\"internalProgress width: \" + this.internalProgress.style.width);\n\t\t\tthis._animation = dojo.lfx.html.slideTo(this.internalProgress, \n\t\t\t\t{top: 0, left: parseInt(this.width)-parseInt(this.internalProgress.style.width)}, parseInt(this.duration), null, \n\t\t\t\t\tfunction(){\n\t\t\t\t\t\tvar _backAnim = dojo.lfx.html.slideTo(_self.internalProgress, \n\t\t\t\t\t\t{ top: 0, left: 0 }, parseInt(_self.duration));\n\t\t\t\t\t\tdojo.event.connect(_backAnim, \"onEnd\", function(){\n\t\t\t\t\t\t\tif (!_self._animationStopped){\n\t\t\t\t\t\t\t\t_self._animation.play();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!_self._animationStopped){\n\t\t\t\t\t\t\t_backAnim.play();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_backAnim = null; \/\/ <-- to avoid memory leaks in IE\n\t\t\t\t\t}\n\t\t\t\t);","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.getMaxProgressValue":{"meta":{"summary":"returns the maxProgressValue","src":" \t\treturn this.maxProgressValue;","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.setMaxProgressValue":{"meta":{"summary":"sets the maxProgressValue if noRender is true, only sets the internal max progress value","parameters":{"maxValue":{"type":""},"noRender":{"type":""}},"src":" \t\tif (!this._animationStopped){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.maxProgressValue = maxValue;\n\t\t\tthis._floatMaxProgressValue = parseFloat(\"0\" + this.maxProgressValue);\n\t\t\tthis._pixelUnitRatio = this._floatDimension\/this.maxProgressValue;\n\t\t\tthis._unitPercentRatio = this._floatMaxProgressValue\/100;\n\t\t\tthis._unitPixelRatio = this._floatMaxProgressValue\/this._floatDimension;\n\t\t\tthis.setProgressValue(this.progressValue, true);\n\t\t\tif (!noRender){\n\t\t\t\tthis.render();\n\t\t\t}","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.setProgressValue":{"meta":{"summary":"sets the progressValue if value ends width \"%\", does a normalization if noRender is true, only sets the internal value: useful if there is a setMaxProgressValue call","parameters":{"value":{"type":""},"noRender":{"type":""}},"src":" \t\tif (!this._animationStopped){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\/\/ transformations here\n\t\t\tthis._progressPercentValue = \"0%\";\n\t\t\tvar _value=dojo.string.trim(\"\" + value);\n\t\t\tvar _floatValue = parseFloat(\"0\" + _value);\n\t\t\tvar _intValue = parseInt(\"0\" + _value);\n\t\t\tvar _pixelValue = 0;\n\t\t\tif (dojo.string.endsWith(_value, \"%\", false)){\n\t\t\t\tthis._progressPercentValue = Math.min(_floatValue.toFixed(1), 100) + \"%\";\n\t\t\t\t_value = Math.min((_floatValue)*this._unitPercentRatio, this.maxProgressValue);\n\t\t\t\t_pixelValue = Math.min((_floatValue)*this._pixelPercentRatio, eval(\"this.\"+this._dimension));\n\t\t\t} else {\n\t\t\t\tthis.progressValue = Math.min(_floatValue, this.maxProgressValue);\n\t\t\t\tthis._progressPercentValue = Math.min((_floatValue\/this._unitPercentRatio).toFixed(1), 100) + \"%\";\n\t\t\t\t_pixelValue = Math.min(_floatValue\/this._unitPixelRatio, eval(\"this.\"+this._dimension));\n\t\t\t}\n\t\t\tthis.progressValue = dojo.string.trim(_value);\n\t\t\tthis._pixelValue = _pixelValue;\n\t\t\tif (!noRender){\n\t\t\t\tthis.render();\n\t\t\t}","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.getProgressValue":{"meta":{"summary":"returns the progressValue","src":" \t\treturn this.progressValue;","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.getProgressPercentValue":{"meta":{"summary":"returns the percentual progressValue","src":" \t\treturn this._progressPercentValue;","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.setDataSource":{"meta":{"summary":"sets the dataSource","parameters":{"dataSource":{"type":""}},"src":" \t\tthis.dataSource = dataSource;","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.setPollInterval":{"meta":{"summary":"sets the pollInterval","parameters":{"pollInterval":{"type":""}},"src":" \t\tthis.pollInterval = pollInterval;","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.start":{"meta":{"summary":"starts the server polling","src":" \t\tvar _showFunction = dojo.lang.hitch(this, this._showRemoteProgress);\n\t\t\tthis._oInterval = setInterval(_showFunction, this.pollInterval);","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.startAnimation":{"meta":{"summary":"starts the left-right animation, useful when the user doesn't know how much time the operation will last","src":" \t\tif (this._animationStopped) {\n\t\t\t\tthis._backupValues();\n\t\t\t\tthis.setProgressValue(\"10%\");\n\t\t\t\tthis._animationStopped = false;\n\t\t\t\tthis._setupAnimation();\n\t\t\t\tthis.showText(false);\n\t\t\t\tthis.internalProgress.style.height=\"105%\";\n\t\t\t\tthis._animation.play();\n\t\t\t}","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.stopAnimation":{"meta":{"summary":"stops the left-right animation","src":" \t\tif (this._animation) {\n\t\t\t\tthis._animationStopped = true;\n\t\t\t\tthis._animation.stop();\n\t\t\t\tthis.internalProgress.style.height=\"100%\";\n\t\t\t\tthis.internalProgress.style.left = \"0px\";\n\t\t\t\tthis._restoreValues();\n\t\t\t\tthis._setLabelPosition();\n\t\t\t}","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar._showRemoteProgress":{"meta":{"summary":"","src":" \t\tvar _self = this;\n\t\t\tif ( (this.getMaxProgressValue() == this.getProgressValue()) &&\n\t\t\t\tthis._oInterval){\n\t\t\t\tclearInterval(this._oInterval);\n\t\t\t\tthis._oInterval = null;\n\t\t\t\tthis.setProgressValue(\"100%\");\n\t\t\t\treturn;\t\n\t\t\t}\n\t\t\tvar bArgs = {\n\t\t\t\turl: _self.dataSource,\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tmimetype: \"text\/json\",\n\t\t\t\terror: function(type, errorObj){\n\t\t\t\t\tdojo.debug(\"[ProgressBar] showRemoteProgress error\");\n\t\t\t\t},\n\t\t\t\tload: function(type, data, evt){\n\t\t\t\t\t_self.setProgressValue(\n\t\t\t\t\t\t(_self._oInterval ? data[\"progress\"] : \"100%\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t\tdojo.io.bind(bArgs);","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.render":{"meta":{"summary":"renders the ProgressBar, based on current values","src":" \t\tthis._setPercentLabel(dojo.string.trim(this._progressPercentValue));\n\t\t\tthis._setPixelValue(this._pixelValue);\n\t\t\tthis._setLabelPosition();","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar._setLabelPosition":{"meta":{"summary":"","src":" \t\tvar _widthFront = \n\t\t\t\tdojo.html.getContentBox(this.frontPercentLabel).width;\n\t\t\tvar _heightFront = \n\t\t\t\tdojo.html.getContentBox(this.frontPercentLabel).height;\n\t\t\tvar _widthBack = \n\t\t\t\tdojo.html.getContentBox(this.backPercentLabel).width;\n\t\t\tvar _heightBack = \n\t\t\t\tdojo.html.getContentBox(this.backPercentLabel).height;\n\t\t\tvar _leftFront = (parseInt(this.width) - _widthFront)\/2 + \"px\";\n\t\t\tvar _bottomFront = (parseInt(this.height) - parseInt(_heightFront))\/2 + \"px\";\n\t\t\tvar _leftBack = (parseInt(this.width) - _widthBack)\/2 + \"px\";\n\t\t\tvar _bottomBack = (parseInt(this.height) - parseInt(_heightBack))\/2 + \"px\";\n\t\t\tthis.frontPercentLabel.style.left = _leftFront;\n\t\t\tthis.backPercentLabel.style.left = _leftBack; \n\t\t\tthis.frontPercentLabel.style.bottom = _bottomFront;\n\t\t\tthis.backPercentLabel.style.bottom = _bottomBack; ","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar._setPercentLabel":{"meta":{"summary":"","parameters":{"percentValue":{"type":""}},"src":" \t\tdojo.dom.removeChildren(this.frontPercentLabel);\n\t\t\tdojo.dom.removeChildren(this.backPercentLabel);\n\t\t\tvar _percentValue = this.showOnlyIntegers == false ? \n\t\t\t\tpercentValue : parseInt(percentValue) + \"%\";\n\t\t\tthis.frontPercentLabel.\n\t\t\t\tappendChild(document.createTextNode(_percentValue));\n\t\t\tthis.backPercentLabel.\n\t\t\t\tappendChild(document.createTextNode(_percentValue));","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar._setPixelValue":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" \t\teval(\"this.internalProgress.style.\" + this._dimension + \" = \" + value + \" + 'px'\");\n\t\t\tthis.onChange();","prototype":"dojo.widget.ProgressBar"}},"dojo.widget.ProgressBar.onChange":{"meta":{"summary":"","src":"","prototype":"dojo.widget.ProgressBar"}}}}},"dojo.widget.RadioGroup":{"meta":{"requires":{"common":["dojo.lang.common","dojo.event.browser","dojo.html.selection","dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.RadioGroup":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","templatePath","templateCssPath","postCreate","add","remove","clear","clearSelections","_setup","_setupChildren","_selectItem","getValue","onSelect","onItemSelect"],"variables":["isContainer","templatePath","templateCssPath","postCreate","add","remove","clear","clearSelections","_setup","_setupChildren","_selectItem","getValue","onSelect","onItemSelect"],"instance_variables":["items","selectedItem","selected","groupCssClass","selectedCssClass","itemContentCssClass"],"summary":"Widget that provides useful\/common functionality that may be desirable when interacting with ul\/ol html lists. The core behaviour of the lists this widget manages is expected to be determined by the css class names defined: \"radioGroup\" - Applied to main ol or ul \"selected\" - Applied to the currently selected li, if any. \"itemContent\" - Applied to the content contained in a li, this widget embeds a span within each <li><\/li> to contain the contents of the li. This widget was mostly developed under supervision\/guidance from Tom Trenka. selectedItem: DomNode: Currently selected li, if any","src":" \tthis.selectedItem=null;\n\t\t\/\/ items: DomNode[]: Array of li nodes being managed by widget\n\t\tthis.items=[];\n\t\t\/\/ selected: String[]: List of optional ids specifying which li's should be selected by default\n\t\tthis.selected=[];\n\t\t\/\/ groupCssClass: String: Css class applied to main ol or ul, value is \"radioGroup\"\n\t\tthis.groupCssClass=\"radioGroup\";\n\t\t\/\/ selectedCssClass: String: Css class applied to the currently selected li, if any. value of \"selected\"\n\t\tthis.selectedCssClass=\"selected\";\n\t\t\/\/ itemContentCssClass: String: Css class Applied to the content contained in a li, this widget embeds a span \n\t\t\/\/ within each <li><\/li> to contain the contents of the li. value is \"itemContent\"\n\t\tthis.itemContentCssClass=\"itemContent\";"}},"dojo.widget.RadioGroup._parseStructure":{"meta":{"summary":"Sets local radioGroup and items properties, also validates that domNode contains an expected list. Exception raised if a ul or ol node can't be found in this widgets domNode.","src":" \t\tif(this.domNode.tagName.toLowerCase() != \"ul\" \n\t\t\t\t&& this.domNode.tagName.toLowerCase() != \"ol\") {\n\t\t\t\tdojo.raise(\"RadioGroup: Expected ul or ol content.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.items=[];\t\/\/\treset the items.\n\t\t\tvar nl=this.domNode.getElementsByTagName(\"li\");\n\t\t\tfor (var i=0; i<nl.length; i++){\n\t\t\t\tif(nl[i].parentNode==this.domNode){\n\t\t\t\t\tthis.items.push(nl[i]);\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.RadioGroup"}}}}},"dojo.widget.RealNumberTextbox":{"meta":{"requires":{"common":["dojo.widget.IntegerTextbox","dojo.validate.common"]},"functions":{"dojo.widget.RealNumberTextbox":{"meta":{"prototype_chain":["dojo.widget.IntegerTextbox"],"call_chain":["dojo.widget.IntegerTextbox"],"instance_variables":["flags.places","flags.exponent","flags.eSigned","flags.min","flags.max"]}},"dojo.widget.RealNumberTextbox.mixInProperties":{"meta":{"summary":"","parameters":{"localProperties":{"type":""},"frag":{"type":""}},"src":" \t\tdojo.widget.RealNumberTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif (localProperties.places){ \n\t\t\t\tthis.flags.places = Number(localProperties.places);\n\t\t\t}\n\t\t\tif((localProperties.exponent == \"true\")||\n\t\t\t\t(localProperties.exponent == \"always\")){\n\t\t\t\tthis.flags.exponent = true;\n\t\t\t}else if((localProperties.exponent == \"false\")||(localProperties.exponent == \"never\")){\n\t\t\t\tthis.flags.exponent = false;\n\t\t\t}else{\n\t\t\t\tthis.flags.exponent = [ true, false ]; \/\/ optional\n\t\t\t}\n\t\t\tif((localProperties.esigned == \"true\")||(localProperties.esigned == \"always\")){\n\t\t\t\tthis.flags.eSigned = true;\n\t\t\t}else if((localProperties.esigned == \"false\")||(localProperties.esigned == \"never\")){\n\t\t\t\tthis.flags.eSigned = false;\n\t\t\t}else{\n\t\t\t\tthis.flags.eSigned = [ true, false ]; \/\/ optional\n\t\t\t}\n\t\t\tif(localProperties.min){ \n\t\t\t\tthis.flags.min = parseFloat(localProperties.min);\n\t\t\t}\n\t\t\tif(localProperties.max){ \n\t\t\t\tthis.flags.max = parseFloat(localProperties.max);\n\t\t\t}","call_chain":["dojo.widget.RealNumberTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.RealNumberTextbox"}},"dojo.widget.RealNumberTextbox.isValid":{"meta":{"summary":"","src":" \t\treturn dojo.validate.isRealNumber(this.textbox.value, this.flags);","prototype":"dojo.widget.RealNumberTextbox"}},"dojo.widget.RealNumberTextbox.isInRange":{"meta":{"summary":"","src":" \t\treturn dojo.validate.isInRange(this.textbox.value, this.flags);","prototype":"dojo.widget.RealNumberTextbox"}}}}},"dojo.widget.RegexpTextbox":{"meta":{"requires":{"common":["dojo.widget.ValidationTextbox"]},"functions":{"dojo.widget.RegexpTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"instance_variables":["flags.regexp","flags.flags"]}},"dojo.widget.RegexpTextbox.mixInProperties":{"meta":{"summary":"","parameters":{"localProperties":{"type":""},"frag":{"type":""}},"src":"         dojo.widget.RegexpTextbox.superclass.mixInProperties.apply(this, arguments);\n\t        \/\/ Get properties from markup attibutes, and assign to flags object.\n\t        if(localProperties.regexp){\n\t            this.flags.regexp = localProperties.regexp;\n\t        }\n\t        if(localProperties.flags){\n\t            this.flags.flags = localProperties.flags;\n\t        }","call_chain":["dojo.widget.RegexpTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.RegexpTextbox"}},"dojo.widget.RegexpTextbox.isValid":{"meta":{"summary":"","src":"         var regexp = new RegExp(this.flags.regexp, this.flags.flags);\n\t        return regexp.test(this.textbox.value);","prototype":"dojo.widget.RegexpTextbox"}}}}},"dojo.widget.RemoteTabController":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.TabContainer","dojo.event.*"]},"functions":{"dojo.widget.RemoteTabController":{"meta":{"prototype_chain":["dojo.widget.TabController"],"call_chain":["dojo.widget.TabController"],"prototype_variables":["templateCssPath","templateString","class","tabContainer"],"variables":["templateCssPath","templateString","class","tabContainer"],"instance_variables":["containerId"]}},"dojo.widget.RemoteTabController.postMixInProperties":{"meta":{"summary":"","src":" \t\tthis.containerId = this.tabContainer;\n\t\t\tdojo.widget.RemoteTabController.superclass.postMixInProperties.apply(this, arguments);","call_chain":["dojo.widget.RemoteTabController.superclass.postMixInProperties"],"prototype":"dojo.widget.RemoteTabController"}},"dojo.widget.RemoteTabController.fillInTemplate":{"meta":{"summary":"","src":" \t\tdojo.html.addClass(this.domNode, this[\"class\"]);  \/\/ \"class\" is a reserved word in JS\n\t\t\tif (this.tabContainer) {\n\t\t\t\tdojo.addOnLoad(dojo.lang.hitch(this, \"setupTabs\"));\n\t\t\t}\n\t\t\tdojo.widget.RemoteTabController.superclass.fillInTemplate.apply(this, arguments);","call_chain":["dojo.widget.RemoteTabController.superclass.fillInTemplate"],"prototype":"dojo.widget.RemoteTabController"}}}}},"dojo.widget.Repeater":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.string","dojo.event.*","dojo.experimental","dojo.dnd.*"]},"functions":{"dojo.widget.Repeater":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["name","rowTemplate","myObject","pattern","useDnd","isContainer"],"variables":["name","rowTemplate","myObject","pattern","useDnd","isContainer"],"instance_variables":["rowTemplate","myObject"]},"extra":{"variables":{"myObject":{"type":"defines","summary":"pattern of the names"},"useDnd":{"type":"if","summary":"true, you can change position of rows by DnD you can also remove rows by dragging row away"}}}},"dojo.widget.Repeater.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tvar node = this.getFragNodeRef(frag);\n\t\t\tnode.removeAttribute(\"dojotype\");\n\t\t\tthis.setRow(dojo.string.trim(node.innerHTML), {});\n\t\t\tnode.innerHTML=\"\";\n\t\t\tfrag=null;","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tif (this.useDnd) {\n\t\t\t\tdojo.require(\"dojo.dnd.*\");\n\t\t\t\tvar dnd = new dojo.dnd.HtmlDropTarget(this.domNode, [this.widgetId]);\n\t\t\t}","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater._reIndexRows":{"meta":{"summary":"","src":" \t\tfor(var i=0,len=this.domNode.childNodes.length; i<len;i++) {\n\t\t\t\tvar elems = [\"INPUT\", \"SELECT\", \"TEXTAREA\"];\n\t\t\t\tfor (var k=0; k < elems.length; k++) {\n\t\t\t\t\tvar list = this.domNode.childNodes[i].getElementsByTagName(elems[k]);\n\t\t\t\t\tfor (var j=0,len2=list.length; j<len2; j++) {\n\t\t\t\t\t\tvar name = list[j].name;\n\t\t\t\t\t\tvar index=dojo.string.escape(\"regexp\", this.pattern);\n\t\t\t\t\t\tindex = index.replace(\/(%\\\\\\{index\\\\\\})\/g,\"%{index}\");\n\t\t\t\t\t\tvar nameRegexp = dojo.string.substituteParams(index, {\"index\": \"[0-9]*\"});\n\t\t\t\t\t\tvar newName= dojo.string.substituteParams(this.pattern, {\"index\": \"\" + i});\n\t\t\t\t\t\tvar re=new RegExp(nameRegexp,\"g\");\n\t\t\t\t\t\tlist[j].name = name.replace(re,newName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater.onDeleteRow":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \t\tvar index=dojo.string.escape(\"regexp\", this.pattern);\n\t\t\tindex = index.replace(\/%\\\\\\{index\\\\\\}\/g,\"\\%{index}\");\n\t\t\tvar nameRegexp = dojo.string.substituteParams(index, {\"index\": \"([0-9]*)\"});\n\t\t\tvar re=new RegExp(nameRegexp,\"g\");\n\t\t\tthis.deleteRow(re.exec(e.target.name)[1]);","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater.hasRows":{"meta":{"summary":"","src":" \t\tif (this.domNode.childNodes.length > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater.getRowCount":{"meta":{"summary":"","src":" \t\treturn this.domNode.childNodes.length;","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater.deleteRow":{"meta":{"summary":"","parameters":{"idx":{"type":"integer"}},"src":" \t\tthis.domNode.removeChild(this.domNode.childNodes[idx]);\n\t\t\tthis._reIndexRows();","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater._changeRowPosition":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \t\tif (e.dragStatus == \"dropFailure\") {\n\t\t\t\tthis.domNode.removeChild(e[\"dragSource\"].domNode);\n\t\t\t} else if (e.dragStatus == \"dropSuccess\") {\n\t\t\t\t\/\/  nothing to do\n\t\t\t} \/\/ else-if\n\t\t\tthis._reIndexRows();","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater.setRow":{"meta":{"summary":"","parameters":{"template":{"type":"string"},"myObject":{"type":"object"}},"src":" \t\ttemplate= template.replace(\/\\%\\{(index)\\}\/g, \"0\");\n\t\t\tthis.rowTemplate=template;\n\t\t\tthis.myObject = myObject;","prototype":"dojo.widget.Repeater"},"extra":{"parameters":{"template":{"type":"dojo.string.substituteParams(template","summary":"{\"index\": \"0\"});"}}}},"dojo.widget.Repeater.getRow":{"meta":{"summary":"","src":" \t\treturn this.rowTemplate;","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater._initRow":{"meta":{"summary":"","parameters":{"node":{"type":"integer or dom node"}},"src":" \t\tif (typeof(node) == \"number\") {\n                           node=this.domNode.childNodes[node];\n\t\t\t} \/\/ if\n\t\t\tvar elems = [\"INPUT\", \"SELECT\", \"IMG\"];\n\t\t\tfor (var k=0; k < elems.length; k++) {\n\t\t\t\tvar list = node.getElementsByTagName(elems[k]);\n\t\t\t\tfor(var i=0, len=list.length; i<len; i++) {\n\t\t\t\t\tvar child = list[i];\n\t\t\t\t\tif(child.nodeType != 1) {continue};\n\t\t\t\t\tif (child.getAttribute(\"rowFunction\") != null) {\n\t\t\t\t\t\tif(typeof(this.myObject[child.getAttribute(\"rowFunction\")]) == \"undefined\") {\n\t\t\t\t\t\t\tdojo.debug(\"Function \" + child.getAttribute(\"rowFunction\") + \" not found\");\n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tthis.myObject[child.getAttribute(\"rowFunction\")](child);\n\t\t\t\t\t\t} \/\/ ifelse\n\t\t\t\t\t} else if (child.getAttribute(\"rowAction\") != null) {\n\t\t\t\t\t\tif(child.getAttribute(\"rowAction\") == \"delete\") {\n\t\t\t\t\t\t\tchild.name=dojo.string.substituteParams(this.pattern, {\"index\": \"\" + (this.getRowCount() - 1)});\n\t\t\t\t\t\t\tdojo.event.connect(child, \"onclick\", this, \"onDeleteRow\");\n\t\t\t\t\t\t} \/\/ if\n\t\t\t\t\t} \/\/ else-if\n\t\t\t\t} \/\/ for\n\t\t\t} \/\/ for","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater.onAddRow":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":"","prototype":"dojo.widget.Repeater"}},"dojo.widget.Repeater.addRow":{"meta":{"summary":"","parameters":{"doInit":{"type":"boolean"}},"src":"                        if (typeof(doInit) == \"undefined\") {\n\t\t\t\tdoInit=true;\n                        }\n\t\t\tvar node = document.createElement('span');\n\t\t\tnode.innerHTML=this.getRow();\n\t\t\tif (node.childNodes.length == 1) {\n\t\t\t\tnode=node.childNodes[0];\n\t\t\t}\n\t\t\tthis.domNode.appendChild(node);\n\t\t\tvar parser = new dojo.xml.Parse();\n\t\t\tvar frag = parser.parseElement(node, null, true);\n\t\t\tdojo.widget.getParser().createSubComponents(frag, this);\n\t\t\tthis._reIndexRows();\n\t\t\tif (doInit) {\n\t\t\t\tthis._initRow(node);\n\t\t\t}\n\t\t\tif (this.useDnd) { \/\/ bind to DND\n\t\t\t\tnode=new dojo.dnd.HtmlDragSource(node, this.widgetId);\n\t\t\t\tdojo.event.connect(node, \"onDragEnd\", this, \"_changeRowPosition\");\n\t\t\t}\n\t\t\tthis.onAddRow(node);","prototype":"dojo.widget.Repeater"}}}}},"dojo.widget.ResizableTextarea":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.LayoutContainer","dojo.widget.ResizeHandle"]},"functions":{"dojo.widget.ResizableTextarea":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath"],"variables":["templatePath","templateCssPath"],"instance_variables":["textAreaNode","rootLayout","textAreaContainer","statusBar","statusLabel","resizeHandle"],"summary":"A resizable textarea. Takes all the parameters (name, value, etc.) that a vanilla textarea takes. usage <textarea dojoType=\"ResizableTextArea\">...<\/textarea>"}},"dojo.widget.ResizableTextarea.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tthis.textAreaNode = this.getFragNodeRef(frag).cloneNode(true);\n\t\t\/\/ FIXME: Safari apparently needs this!\n\t\tdojo.body().appendChild(this.domNode);\n\t\tthis.rootLayout = dojo.widget.createWidget(\n\t\t\t\"LayoutContainer\",\n\t\t\t{\n\t\t\t\tminHeight: 50,\n\t\t\t\tminWidth: 100\n\t\t\t},\n\t\t\tthis.rootLayoutNode\n\t\t);\n\t\t\/\/ TODO: all this code should be replaced with a template\n\t\t\/\/ (especially now that templates can contain subwidgets)\n\t\tthis.textAreaContainer = dojo.widget.createWidget(\n\t\t\t\"LayoutContainer\",\n\t\t\t{ layoutAlign: \"client\" },\n\t\t\tthis.textAreaContainerNode\n\t\t);\n\t\tthis.rootLayout.addChild(this.textAreaContainer);\n\t\tthis.textAreaContainer.domNode.appendChild(this.textAreaNode);\n\t\twith(this.textAreaNode.style){\n\t\t\twidth=\"100%\";\n\t\t\theight=\"100%\";\n\t\t}\n\t\tthis.statusBar = dojo.widget.createWidget(\n\t\t\t\"LayoutContainer\",\n\t\t\t{ \n\t\t\t\tlayoutAlign: \"bottom\", \n\t\t\t\tminHeight: 28\n\t\t\t},\n\t\t\tthis.statusBarContainerNode\n\t\t);\n\t\tthis.rootLayout.addChild(this.statusBar);\n\t\tthis.statusLabel = dojo.widget.createWidget(\n\t\t\t\"LayoutContainer\",\n\t\t\t{ \n\t\t\t\tlayoutAlign: \"client\", \n\t\t\t\tminWidth: 50\n\t\t\t},\n\t\t\tthis.statusLabelNode\n\t\t);\n\t\tthis.statusBar.addChild(this.statusLabel);\n\t\tthis.resizeHandle = dojo.widget.createWidget(\n\t\t\t\"ResizeHandle\", \n\t\t\t{ targetElmId: this.rootLayout.widgetId },\n\t\t\tthis.resizeHandleNode\n\t\t);\n\t\tthis.statusBar.addChild(this.resizeHandle);","prototype":"dojo.widget.ResizableTextarea"}}}}},"dojo.widget.ResizeHandle":{"meta":{"requires":{"common":["dojo.widget.*","dojo.html.layout","dojo.event.*"]},"functions":{"dojo.widget.ResizeHandle":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["targetElmId","templateCssPath","templateString"],"variables":["targetElmId","templateCssPath","templateString"],"instance_variables":["targetWidget","targetDomNode","_isSizing","startPoint","startSize"],"summary":"The handle on the bottom-right corner of FloatingPane or other widgets that allows the widget to be resized. Typically not used directly."}},"dojo.widget.ResizeHandle.postCreate":{"meta":{"summary":"","src":" \tdojo.event.connect(this.domNode, \"onmousedown\", this, \"_beginSizing\");","prototype":"dojo.widget.ResizeHandle"}},"dojo.widget.ResizeHandle._beginSizing":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \tif (this._isSizing){ return false; }\n\t\t\/\/ get the target dom node to adjust.  targetElmId can refer to either a widget or a simple node\n\t\tthis.targetWidget = dojo.widget.byId(this.targetElmId);\n\t\tthis.targetDomNode = this.targetWidget ? this.targetWidget.domNode : dojo.byId(this.targetElmId);\n\t\tif (!this.targetDomNode){ return; }\n\t\tthis._isSizing = true;\n\t\tthis.startPoint  = {'x':e.clientX, 'y':e.clientY};\n\t\tvar mb = dojo.html.getMarginBox(this.targetDomNode);\n\t\tthis.startSize  = {'w':mb.width, 'h':mb.height};\n\t\tdojo.event.kwConnect({\n\t\t\tsrcObj: dojo.body(), \n\t\t\tsrcFunc: \"onmousemove\",\n\t\t\ttargetObj: this,\n\t\t\ttargetFunc: \"_changeSizing\",\n\t\t\trate: 25\n\t\t});\n\t\tdojo.event.connect(dojo.body(), \"onmouseup\", this, \"_endSizing\");\n\t\te.preventDefault();","prototype":"dojo.widget.ResizeHandle"}},"dojo.widget.ResizeHandle._changeSizing":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \ttry{\n\t\t\tif(!e.clientX  || !e.clientY){ return; }\n\t\t}catch(e){\n\t\t\t\/\/ sometimes you get an exception accessing above fields...\n\t\t\treturn;\n\t\t}\n\t\tvar dx = this.startPoint.x - e.clientX;\n\t\tvar dy = this.startPoint.y - e.clientY;\n\t\tvar newW = this.startSize.w - dx;\n\t\tvar newH = this.startSize.h - dy;\n\t\t\/\/ minimum size check\n\t\tif (this.minSize) {\n\t\t\tvar mb = dojo.html.getMarginBox(this.targetDomNode);\n\t\t\tif (newW < this.minSize.w) {\n\t\t\t\tnewW = mb.width;\n\t\t\t}\n\t\t\tif (newH < this.minSize.h) {\n\t\t\t\tnewH = mb.height;\n\t\t\t}\n\t\t}\n\t\tif(this.targetWidget){\n\t\t\tthis.targetWidget.resizeTo(newW, newH);\n\t\t}else{\n\t\t\tdojo.html.setMarginBox(this.targetDomNode, { width: newW, height: newH});\n\t\t}\n\t\te.preventDefault();","prototype":"dojo.widget.ResizeHandle"}},"dojo.widget.ResizeHandle._endSizing":{"meta":{"summary":"","parameters":{"e":{"type":"Event"}},"src":" \tdojo.event.disconnect(dojo.body(), \"onmousemove\", this, \"_changeSizing\");\n\t\tdojo.event.disconnect(dojo.body(), \"onmouseup\", this, \"_endSizing\");\n\t\tthis._isSizing = false;","prototype":"dojo.widget.ResizeHandle"}}}}},"dojo.widget.Rounded":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.ContentPane","dojo.html.style","dojo.html.display","dojo.gfx.color"]},"functions":{"dojo.widget.Rounded":{"meta":{"prototype_chain":["dojo.widget.ContentPane"],"call_chain":["dojo.widget.ContentPane"],"prototype_variables":["isSafari","boxMargin","radius","domNode","corners","antiAlias"],"variables":["isSafari","boxMargin","radius","domNode","corners","antiAlias"],"instance_variables":["domNode.style.height","domNode.style.width","settings","domNode.style.margin","box","topContainer","bottomContainer","masterCorners","antiAlias","boxHeight","boxWidth","borderWidth","boxColour","borderColour","borderString","backgroundImage","box.style.position","applyCorners","box.style.borderTopWidth","box.style.borderBottomWidth","drawPixel"]},"extra":{"variables":{"radius":{"type":"margin","summary":"outside rounded corner box of corners corner string to render false to disable anti-aliasing gets the hex bits of a number"}}}},"dojo.widget.Rounded.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tdojo.widget.Rounded.superclass.fillInTemplate.call(this, args, frag);\n\t\tdojo.html.insertCssFile(this.templateCssPath);\n\t\t\/\/ Magic to automatically calculate the box height\/width if not supplied\n\t\tif (this.domNode.style.height<=0) {\n\t\t\tvar minHeight = (this.radius*1)+this.domNode.clientHeight;\n\t\t\tthis.domNode.style.height = minHeight+\"px\";\n\t\t}\n\t\tif (this.domNode.style.width<=0) {\n\t\t\tvar minWidth = (this.radius*1)+this.domNode.clientWidth;\n\t\t\tthis.domNode.style.width = minWidth+\"px\";\n\t\t}\n\t\tvar cornersAvailable = [\"TR\", \"TL\", \"BR\", \"BL\"];\n\t\tvar cornersPassed = this.corners.split(\",\");\n\t\tthis.settings = {\n\t\t\tantiAlias: this.antiAlias\n\t\t};\n\t\tvar setCorner = function(currentCorner) {\n\t\t\tvar val = currentCorner.toLowerCase();\n\t\t\tif(dojo.lang.inArray(cornersPassed, currentCorner)) {\n\t\t\t\tthis.settings[val] = { radius: this.radius, enabled: true };\n\t\t\t} else {\n\t\t\t\tthis.settings[val] = { radius: 0 }\n\t\t\t}\n\t\t}\n\t\tdojo.lang.forEach(cornersAvailable, setCorner, this);\n\t\tthis.domNode.style.margin = this.boxMargin;\n\t\tthis.curvyCorners(this.settings);\n\t\tthis.applyCorners();","call_chain":["dojo.widget.Rounded.superclass.fillInTemplate"],"prototype":"dojo.widget.Rounded"}},"dojo.widget.Rounded.curvyCorners":{"meta":{"summary":"","parameters":{"settings":{"type":""}},"src":" \tthis.box             = this.domNode;\n\t\tthis.topContainer    = null;\n\t\tthis.bottomContainer = null;\n\t\tthis.masterCorners   = [];\n\t\t\/\/ Get box formatting details\n\t\tvar boxHeight       = dojo.html.getStyle(this.box, \"height\");\n\t\tif(boxHeight==\"\") boxHeight=\"0px\";\n\t\tvar boxWidth        = dojo.html.getStyle(this.box, \"width\");\n\t\tvar borderWidth     = dojo.html.getStyle(this.box, \"borderTopWidth\");\n\t\tif(borderWidth==\"\") borderWidth=\"0px\";\n\t\t\/\/alert(borderWidth);\n\t\tvar borderColour    = dojo.html.getStyle(this.box, \"borderTopColor\");\n\t\t\/\/ Set to true if we have a border\n\t\tif(borderWidth>0) this.antiAlias=true;\n\t\tvar boxColour       = dojo.html.getStyle(this.box, \"backgroundColor\");\n\t\tvar backgroundImage = dojo.html.getStyle(this.box, \"backgroundImage\");\n\t\tvar boxPosition     = dojo.html.getStyle(this.box, \"position\");\n\t\t\/\/ Set formatting propertes\n\t\tthis.boxHeight       = parseInt(((boxHeight != \"\" && boxHeight != \"auto\" && boxHeight.indexOf(\"%\") == -1)? boxHeight.substring(0, boxHeight.indexOf(\"px\")) : this.box.scrollHeight));\n\t\tthis.boxWidth        = parseInt(((boxWidth != \"\" && boxWidth != \"auto\" && boxWidth.indexOf(\"%\") == -1)? boxWidth.substring(0, boxWidth.indexOf(\"px\")) : this.box.scrollWidth));\n\t\tthis.borderWidth     = parseInt(((borderWidth != \"\" && borderWidth.indexOf(\"px\") !== -1)? borderWidth.slice(0, borderWidth.indexOf(\"px\")) : 0));\n\t\t\/\/ DEBUG ME?\n\t\t\/\/dojo.debug(this.rgb2Hex(boxColour));\n\t\tvar test  = new dojo.gfx.color.Color(boxColour);\n\t\t\/\/dojo.debug(test.toHex()); \n\t\tthis.boxColour       = ((boxColour != \"\" && boxColour != \"transparent\")? ((boxColour.substr(0, 3) == \"rgb\")? this.rgb2Hex(boxColour) : boxColour) : \"#ffffff\");\n\t\tthis.borderColour    = ((borderColour != \"\" && borderColour != \"transparent\" && this.borderWidth > 0)? ((borderColour.substr(0, 3) == \"rgb\")? this.rgb2Hex(borderColour)  : borderColour) : this.boxColour);\n\t\tthis.borderString    = this.borderWidth + \"px\" + \" solid \" + this.borderColour;\n\t\tthis.backgroundImage = ((backgroundImage != \"none\")? backgroundImage : \"\");\n\t\t\/\/ Make box relative if not already absolute\n\t\tif(boxPosition != \"absolute\") this.box.style.position = \"relative\";\n\t\t\/\/This method creates the corners and\n\t\t\/\/applies them to the div element.\n\t\tthis.applyCorners = function() {\n\t\t\t\/\/ Create top and bottom containers.\n\t\t\t\/\/ These will be used as a parent for the corners and bars.\n\t\t\tfor(var t = 0; t < 2; t++) {\n\t\t\t    switch(t) {\n\t\t\t        \/\/ Top\n\t\t\t        case 0:\n\t\t\t\t\t\t\/\/ Only build top bar if a top corner is to be draw\n\t\t\t\t\t\tif(this.settings.tl.enabled || this.settings.tr.enabled ) {\n\t\t\t\t\t\t\tvar newMainContainer = document.createElement(\"DIV\");\n\t\t\t\t\t\t\twith(newMainContainer.style){\n\t\t\t\t\t\t\t\twidth    = \"100%\";\n\t\t\t\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\t\t\t\/\/backgroundColor = \"#FFFFC4\";\n\t\t\t\t\t\t\t\tpaddingLeft  = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tpaddingRight = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tvar topMaxRadius = Math.max(this.settings.tl ? this.settings.tl.radius : 0, this.settings.tr ? this.settings.tr.radius : 0);\n\t\t\t\t\t\t\t\theight = topMaxRadius + \"px\";\n\t\t\t\t\t\t\t\ttop    = 0 - topMaxRadius + \"px\";\n\t\t\t\t\t\t\t\tleft   = 0 - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.topContainer = this.box.appendChild(newMainContainer);\n\t\t\t\t\t\t}\n\t\t\t            break;\n\t\t\t        \/\/ Bottom\n\t\t\t        case 1:      \n\t\t\t            \/\/ Only build bottom bar if a top corner is to be draw\n\t\t\t            if(this.settings.bl.enabled || this.settings.br.enabled) {\n\t\t\t\t\t\t\tvar newMainContainer = document.createElement(\"DIV\");\n\t\t\t\t\t\t\twith(newMainContainer.style){\n\t\t\t\t\t\t\t\twidth    = \"100%\";\n\t\t\t\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\t\t\t\/\/backgroundColor = \"#FFFFC4\";\n\t\t\t\t\t\t\t\tpaddingLeft  = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tpaddingRight = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tvar botMaxRadius = Math.max(this.settings.bl ? this.settings.bl.radius : 0, this.settings.br ? this.settings.br.radius : 0);\n\t\t\t\t\t\t\t\theight  = botMaxRadius + \"px\";\n\t\t\t\t\t\t\t\tbottom  =  0 - botMaxRadius + \"px\";\n\t\t\t\t\t\t\t\tleft    =  0 - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.bottomContainer = this.box.appendChild(newMainContainer);\n\t\t\t            }\n\t\t            break;\n\t\t\t    }\n\t\t\t}\n\t\t\t\/\/ Turn off current borders\n\t\t\tif(this.topContainer) this.box.style.borderTopWidth = \"0px\";\n\t\t\tif(this.bottomContainer) this.box.style.borderBottomWidth = \"0px\";\n\t\t\t\/\/ Create array of available corners\n\t\t\tvar corners = [\"tr\", \"tl\", \"br\", \"bl\"];\n\t\t\t\/\/Loop for each corner\n\t\t\tfor(var i in corners) {\n\t\t\t    \/\/ Get current corner type from array\n\t\t\t    var cc = corners[i];\n\t\t\t    \/\/ Has the user requested the currentCorner be round?\n\t\t\t    if(!this.settings[cc]) {\n\t\t\t        \/\/ No\n\t\t\t        if(((cc == \"tr\" || cc == \"tl\") && this.topContainer != null) || ((cc == \"br\" || cc == \"bl\") && this.bottomContainer != null)) {\n\t\t\t\t\t\t\/\/ We need to create a filler div to fill the space upto the next horzontal corner.\n\t\t\t\t\t\tvar newCorner = document.createElement(\"DIV\");\n\t\t\t\t\t\t\/\/ Setup corners properties\n\t\t\t\t\t\tnewCorner.style.position = \"relative\";\n\t\t\t\t\t\tnewCorner.style.fontSize = \"1px\";\n\t\t\t\t\t\tnewCorner.style.overflow = \"hidden\";\n\t\t\t\t\t\t\/\/ Add background image?\n\t\t\t\t\t\tif(this.backgroundImage == \"\") {\n\t\t\t\t\t\t\tnewCorner.style.backgroundColor = this.boxColour;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewCorner.style.backgroundImage = this.backgroundImage;\n\t\t\t\t\t\t}\n\t\t\t            switch(cc) {\n\t\t\t\t\t\t\tcase \"tl\":\n\t\t\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\t\t\theight      = topMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t\tmarginRight = this.settings.tr.radius - (this.borderWidth*2) + \"px\";\n\t\t\t\t\t\t\t\t\tborderLeft  = this.borderString;\n\t\t\t\t\t\t\t\t\tborderTop   = this.borderString;\n\t\t\t\t\t\t\t\t\tleft         = -this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\t\t\theight      = topMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t\tmarginLeft  = this.settings.tl.radius - (this.borderWidth*2) + \"px\";\n\t\t\t\t\t\t\t\t\tborderRight = this.borderString;\n\t\t\t\t\t\t\t\t\tborderTop   = this.borderString;\n\t\t\t\t\t\t\t\t\tbackgroundPosition  = \"-\" + this.boxWidth + \"px 0px\";\n\t\t\t\t\t\t\t\t\tleft         = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"bl\":\n\t\t\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\t\t\theight       = botMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t\tmarginRight  = this.settings.br.radius - (this.borderWidth*2) + \"px\";\n\t\t\t\t\t\t\t\t\tborderLeft   = this.borderString;\n\t\t\t\t\t\t\t\t\tborderBottom = this.borderString;\n\t\t\t\t\t\t\t\t\tleft         = -this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"br\":\n\t\t\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\t\t\theight       = botMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t\tmarginLeft   = this.settings.bl.radius - (this.borderWidth*2) + \"px\";\n\t\t\t\t\t\t\t\t\tborderRight  = this.borderString;\n\t\t\t\t\t\t\t\t\tborderBottom = this.borderString;\n\t\t\t\t\t\t\t\t\tleft         = this.borderWidth + \"px\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    } else {\n\t\t\t        \/*\n\t\t\t        PERFORMANCE NOTE:\n\t\t\t        If more than one corner is requested and a corner has been already\n\t\t\t        created for the same radius then that corner will be used as a master and cloned.\n\t\t\t        The pixel bars will then be repositioned to form the new corner type.\n\t\t\t        All new corners start as a bottom right corner.\n\t\t\t        *\/\n\t\t\t        if(this.masterCorners[this.settings[cc].radius]) {\n\t\t\t            \/\/ Create clone of the master corner\n\t\t\t            var newCorner = this.masterCorners[this.settings[cc].radius].cloneNode(true);\n\t\t\t        } else {\n\t\t\t            \/\/ Yes, we need to create a new corner\n\t\t\t            var newCorner = document.createElement(\"DIV\");\n\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\theight = this.settings[cc].radius + \"px\";\n\t\t\t\t\t\t\twidth  = this.settings[cc].radius + \"px\";\n\t\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\/\/ THE FOLLOWING BLOCK OF CODE CREATES A ROUNDED CORNER\n\t\t\t\t\t\t\/\/ ---------------------------------------------------- TOP\n\t\t\t\t\t\t\/\/ Get border radius\n\t\t\t\t\t\tvar borderRadius = parseInt(this.settings[cc].radius - this.borderWidth);\n\t\t\t\t\t\t\/\/ Cycle the x-axis\n\t\t\t\t\t\tfor(var intx = 0, j = this.settings[cc].radius; intx < j; intx++) {\n\t\t\t\t\t\t\t\/\/ Calculate the value of y1 which identifies the pixels inside the border\n\t\t\t\t\t\t\tif((intx +1) >= borderRadius) {\n\t\t\t\t\t\t\t\tvar y1 = -1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar y1 = (Math.floor(Math.sqrt(Math.pow(borderRadius, 2) - Math.pow((intx+1), 2))) - 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\/\/ Only calculate y2 and y3 if there is a border defined\n\t\t\t\t\t\t\tif(borderRadius != j) {\n\t\t\t\t\t\t\t\tif((intx) >= borderRadius) {\n\t\t\t\t\t\t\t\t\tvar y2 = -1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar y2 = Math.ceil(Math.sqrt(Math.pow(borderRadius,2) - Math.pow(intx, 2)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif((intx+1) >= j) {\n\t\t\t\t\t\t\t\t\tvar y3 = -1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar y3 = (Math.floor(Math.sqrt(Math.pow(j ,2) - Math.pow((intx+1), 2))) - 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\/\/ Calculate y4\n\t\t\t\t\t\t\tif((intx) >= j) {\n\t\t\t\t\t\t\t\tvar y4 = -1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar y4 = Math.ceil(Math.sqrt(Math.pow(j ,2) - Math.pow(intx, 2)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\/\/ Draw bar on inside of the border with foreground colour\n\t\t\t\t\t\t\tif(y1 > -1) this.drawPixel(intx, 0, this.boxColour, 100, (y1+1), newCorner, -1, this.settings[cc].radius);\n\t\t\t\t\t\t\t\/\/ Only draw border\/foreground antialiased pixels and border if there is a border defined\n\t\t\t\t\t\t\tif(borderRadius != j) {\n\t\t\t\t\t\t\t\t\/\/ Draw aa pixels?\n\t\t\t\t\t\t\t\tif(this.antiAlias) {\n\t\t\t\t\t\t\t\t\t\/\/ Cycle the y-axis\n\t\t\t\t\t\t\t\t\tfor(var inty = (y1 + 1); inty < y2; inty++) {\n\t\t\t\t\t\t\t\t\t\t\/\/ For each of the pixels that need anti aliasing between the foreground and border colour draw single pixel divs\n\t\t\t\t\t\t\t\t\t\tif(this.backgroundImage != \"\") {\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tvar borderFract = (this.pixelFraction(intx, inty, borderRadius) * 100);\n\t\t\t\t\t\t\t\t\t\t\tif (borderFract < 30) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, inty, this.borderColour, 100, 1, newCorner, 0, this.settings[cc].radius);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, inty, this.borderColour, 100, 1, newCorner, -1, this.settings[cc].radius);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar pixelcolour = dojo.gfx.color.blend(this.boxColour, this.borderColour, this.pixelFraction(intx, inty, borderRadius));\n\t\t\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, inty, pixelcolour, 100, 1, newCorner, 0, this.settings[cc].radius);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\/\/ Draw bar for the border\n\t\t\t\t\t\t\t\tif(y3 >= y2) {\n\t\t\t\t\t\t\t\t\tif (y1 == -1) {\n\t\t\t\t\t\t\t\t\t\ty1 = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, y2, this.borderColour, 100, (y3 - y2 + 1), newCorner, 0, this.settings[cc].radius);\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\/\/ Set the colour for the outside curve\n\t\t\t\t\t\t\t\tvar outsideColour = this.borderColour;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\/\/ Set the coour for the outside curve\n\t\t\t\t\t\t\t\tvar outsideColour = this.boxColour;\n\t\t\t\t\t\t\t\tvar y3 = y1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\/\/ Draw aa pixels?\n\t\t\t\t\t\t\tif(this.antiAlias) {\t\t\n\t\t\t\t\t\t\t\t\/\/ Cycle the y-axis and draw the anti aliased pixels on the\n\t\t\t\t\t\t\t\t\/\/ outside of the curve\n\t\t\t\t\t\t\t\tfor(var inty = (y3 + 1); inty < y4; inty++) {\n\t\t\t\t\t\t\t\t\t\/\/ For each of the pixels that need anti aliasing between \n\t\t\t\t\t\t\t\t\t\/\/the foreground\/border colour & background draw single pixel divs\n\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, inty, outsideColour, (this.pixelFraction(intx, inty , j) * 100), 1, newCorner, ((this.borderWidth > 0)? 0 : -1), this.settings[cc].radius);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t            }\n\t\t\t            \/\/ END OF CORNER CREATION\n\t\t\t            \/\/ ---------------------------------------------------- END\n\t\t\t            \/\/ We now need to store the current corner in the masterConers array\n\t\t\t            this.masterCorners[this.settings[cc].radius] = newCorner.cloneNode(true);\n\t\t\t        }\n\t\t\t\t\t\/\/Now we have a new corner we need to reposition all the pixels unless\n\t\t\t\t\t\/\/the current corner is the bottom right.\n\t\t\t        if(cc != \"br\") {\t\n\t\t\t\t\t\t\/\/ Loop through all children (pixel bars)\n\t\t\t\t\t\tfor(var t = 0, k = newCorner.childNodes.length; t < k; t++) {\n\t\t\t\t\t\t\t\/\/ Get current pixel bar\n\t\t\t\t\t\t\tvar pixelBar = newCorner.childNodes[t];\n\t\t\t\t\t\t\t\/\/ Get current top and left properties\n\t\t\t\t\t\t\tvar pixelBarTop    = parseInt(pixelBar.style.top.substring(0, pixelBar.style.top.indexOf(\"px\")));\n\t\t\t\t\t\t\tvar pixelBarLeft   = parseInt(pixelBar.style.left.substring(0, pixelBar.style.left.indexOf(\"px\")));\n\t\t\t\t\t\t\tvar pixelBarHeight = parseInt(pixelBar.style.height.substring(0, pixelBar.style.height.indexOf(\"px\")));\n\t\t\t\t\t\t\t\/\/ Reposition pixels\n\t\t\t\t\t\t\tif(cc == \"tl\" || cc == \"bl\") {\n\t\t\t\t\t\t\t\tpixelBar.style.left = this.settings[cc].radius -pixelBarLeft -1 + \"px\"; \/\/ Left\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(cc == \"tr\" || cc == \"tl\") {\n\t\t\t\t\t\t\t\tpixelBar.style.top =  this.settings[cc].radius -pixelBarHeight -pixelBarTop + \"px\"; \/\/ Top\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar value;\n\t\t\t\t\t\t\tswitch(cc) {\n\t\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\t\t\tvalue = (-1 *( Math.abs((this.boxWidth - this.settings[cc].radius + this.borderWidth) + pixelBarLeft) - (Math.abs(this.settings[cc].radius -pixelBarHeight -pixelBarTop - this.borderWidth))));\n\t\t\t\t\t\t\t\t\tpixelBar.style.backgroundPosition  = value + \"px\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"tl\":\n\t\t\t\t\t\t\t\t\tvalue = (-1 *( Math.abs((this.settings[cc].radius -pixelBarLeft -1)  - this.borderWidth) - (Math.abs(this.settings[cc].radius -pixelBarHeight -pixelBarTop - this.borderWidth))));\n\t\t\t\t\t\t\t\t\tpixelBar.style.backgroundPosition  = value + \"px\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"bl\":\n\t\t\t\t\t\t\t\t\tvalue = (-1 *( Math.abs((this.settings[cc].radius -pixelBarLeft -1) - this.borderWidth) - (Math.abs((this.boxHeight + this.settings[cc].radius + pixelBarTop) -this.borderWidth))));\n\t\t\t\t\t\t\t\t\tpixelBar.style.backgroundPosition  = value + \"px\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(newCorner) {\n\t\t\t\t\t\/\/ Position the container\n\t\t\t\t\tswitch(cc) {\n\t\t\t\t\t\tcase \"tl\":\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.top  = \"0px\";\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.left = \"0px\";\n\t\t\t\t\t\t\tif(this.topContainer) this.topContainer.appendChild(newCorner);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.top  = \"0px\";\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.right = \"0px\";\n\t\t\t\t\t\t\tif(this.topContainer) this.topContainer.appendChild(newCorner);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"bl\":\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.bottom  = \"0px\";\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.left = \"0px\";\n\t\t\t\t\t\t\tif(this.bottomContainer) this.bottomContainer.appendChild(newCorner);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"br\":\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.bottom = \"0px\";\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.right = \"0px\";\n\t\t\t\t\t\t\tif(this.bottomContainer) this.bottomContainer.appendChild(newCorner);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/The last thing to do is draw the rest of the filler DIVs.\n\t\t\t\/\/We only need to create a filler DIVs when two corners have\n\t\t\t\/\/diffrent radiuses in either the top or bottom container.\n\t\t\t\/\/ Find out which corner has the biiger radius and get the difference amount\n\t\t\tvar radiusDiff = [];\n\t\t\tradiusDiff[\"t\"] = this.settings.tl.enabled && this.settings.tr.enabled ? Math.abs(this.settings.tl.radius - this.settings.tr.radius) : 0;\n\t\t\tradiusDiff[\"b\"] = this.settings.bl.enabled && this.settings.br.enabled ? Math.abs(this.settings.bl.radius - this.settings.br.radius) : 0;\n\t\t\tfor(var z in radiusDiff) {\n\t\t\t\tif(radiusDiff[z]) {\n\t\t\t\t\t\/\/ Get the type of corner that is the smaller one\n\t\t\t\t\tvar smallerCornerType = ((this.settings[z + \"l\"].radius < this.settings[z + \"r\"].radius)? z +\"l\" : z +\"r\");\n\t\t\t\t\t\/\/ First we need to create a DIV for the space under the smaller corner\n\t\t\t\t\tvar newFiller = document.createElement(\"DIV\");\n\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\theight = radiusDiff[z] + \"px\";\n\t\t\t\t\t\twidth  =  this.settings[smallerCornerType].radius+ \"px\"\n\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t\tbackgroundColor = this.boxColour;\n\t\t\t\t\t}\n\t\t\t\t\t\/\/ Position filler\n\t\t\t\t\tswitch(smallerCornerType) {\n\t\t\t\t\t\tcase \"tl\":\n\t\t\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\t\t\tbottom = \"0px\";\n\t\t\t\t\t\t\t\tleft   = \"0px\";\n\t\t\t\t\t\t\t\tborderLeft = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.topContainer.appendChild(newFiller);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\t\t\tbottom = \"0px\";\n\t\t\t\t\t\t\t\tright  = \"0px\";\n\t\t\t\t\t\t\t\tborderRight = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.topContainer.appendChild(newFiller);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"bl\":\n\t\t\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\t\t\ttop    = \"0px\";\n\t\t\t\t\t\t\t\tleft   = \"0px\";\n\t\t\t\t\t\t\t\tborderLeft = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.bottomContainer.appendChild(newFiller);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"br\":\n\t\t\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\t\t\ttop    = \"0px\";\n\t\t\t\t\t\t\t\tright  = \"0px\";\n\t\t\t\t\t\t\t\tborderRight = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.bottomContainer.appendChild(newFiller);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t    }\n\t\t\t\t\/\/ Create the bar to fill the gap between each corner horizontally\n\t\t\t\tvar newFillerBar = document.createElement(\"DIV\");\n\t\t\t\twith(newFillerBar.style) {\n\t\t\t\t\tposition = \"relative\";\n\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\tbackgroundColor = this.boxColour;\n\t\t\t\t}\n\t\t\t\tswitch(z) {\n\t\t\t\t\tcase \"t\":\n\t\t\t\t\t\t\/\/ Top Bar\n\t\t\t\t\t\tif(this.topContainer) {\n\t\t\t\t\t\t\twith(newFillerBar.style) {\n\t\t\t\t\t\t\t\theight      = topMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tmarginLeft  = this.settings.tl.radius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tmarginRight = this.settings.tr.radius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tborderTop   = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.topContainer.appendChild(newFillerBar);\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"b\":\n\t\t\t\t\t\tif(this.bottomContainer) {\n\t\t\t\t\t\t\/\/ Bottom Bar\n\t\t\t\t\t\twith(newFillerBar.style) {\n\t\t\t\t\t\t\theight       = botMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\tmarginLeft   = this.settings.bl.radius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\tmarginRight  = this.settings.br.radius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\tborderBottom = this.borderString;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.bottomContainer.appendChild(newFillerBar);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\/\/ This function draws the pixles\n\t\tthis.drawPixel = function(intx, inty, colour, transAmount, height, newCorner, image, cornerRadius) {\n\t\t\t\/\/ Create pixel\n\t\t\tvar pixel = document.createElement(\"DIV\");\n\t\t\t\/\/ Section doesn't like with (pixel.style) { DEBUG?\n\t\t\tpixel.style.height   = height + \"px\";\n\t\t\tpixel.style.width    = \"1px\";\n\t\t\tpixel.style.position = \"absolute\";\n\t\t\tpixel.style.fontSize = \"1px\";\n\t\t\tpixel.style.overflow = \"hidden\";\n\t\t\t\/\/ Dont apply background image to border pixels\n\t\t\tif(image == -1 && this.backgroundImage != \"\") {\n\t\t\t\tpixel.style.backgroundImage = this.backgroundImage;\n\t\t\t\tpixel.style.backgroundPosition  = \"-\" + (this.boxWidth - (cornerRadius - intx) + this.borderWidth) + \"px -\" + ((this.boxHeight + cornerRadius + inty) -this.borderWidth) + \"px\";\n\t\t\t} else {\n\t\t\t\tpixel.style.backgroundColor = colour;\n\t\t\t}\n\t\t\t\/\/ Set opacity if the transparency is anything other than 100\n\t\t\tif (transAmount != 100) {\n\t\t\t\tdojo.html.setOpacity(pixel, transAmount);\n\t\t\t}\n\t\t\t\/\/ Set the pixels position\n\t\t\tpixel.style.top = inty + \"px\";\n\t\t\tpixel.style.left = intx + \"px\";\n\t\t\tnewCorner.appendChild(pixel);\n\t\t}","instance_variables":["topContainer","bottomContainer","box.style.borderTopWidth","box.style.borderBottomWidth","backgroundImage"],"prototype":"dojo.widget.Rounded"}},"dojo.widget.Rounded.curvyCorners.applyCorners":{"meta":{"summary":"","src":" \t\tfor(var t = 0; t < 2; t++) {\n\t\t\t    switch(t) {\n\t\t\t        \/\/ Top\n\t\t\t        case 0:\n\t\t\t\t\t\t\/\/ Only build top bar if a top corner is to be draw\n\t\t\t\t\t\tif(this.settings.tl.enabled || this.settings.tr.enabled ) {\n\t\t\t\t\t\t\tvar newMainContainer = document.createElement(\"DIV\");\n\t\t\t\t\t\t\twith(newMainContainer.style){\n\t\t\t\t\t\t\t\twidth    = \"100%\";\n\t\t\t\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\t\t\t\/\/backgroundColor = \"#FFFFC4\";\n\t\t\t\t\t\t\t\tpaddingLeft  = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tpaddingRight = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tvar topMaxRadius = Math.max(this.settings.tl ? this.settings.tl.radius : 0, this.settings.tr ? this.settings.tr.radius : 0);\n\t\t\t\t\t\t\t\theight = topMaxRadius + \"px\";\n\t\t\t\t\t\t\t\ttop    = 0 - topMaxRadius + \"px\";\n\t\t\t\t\t\t\t\tleft   = 0 - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.topContainer = this.box.appendChild(newMainContainer);\n\t\t\t\t\t\t}\n\t\t\t            break;\n\t\t\t        \/\/ Bottom\n\t\t\t        case 1:      \n\t\t\t            \/\/ Only build bottom bar if a top corner is to be draw\n\t\t\t            if(this.settings.bl.enabled || this.settings.br.enabled) {\n\t\t\t\t\t\t\tvar newMainContainer = document.createElement(\"DIV\");\n\t\t\t\t\t\t\twith(newMainContainer.style){\n\t\t\t\t\t\t\t\twidth    = \"100%\";\n\t\t\t\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\t\t\t\/\/backgroundColor = \"#FFFFC4\";\n\t\t\t\t\t\t\t\tpaddingLeft  = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tpaddingRight = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tvar botMaxRadius = Math.max(this.settings.bl ? this.settings.bl.radius : 0, this.settings.br ? this.settings.br.radius : 0);\n\t\t\t\t\t\t\t\theight  = botMaxRadius + \"px\";\n\t\t\t\t\t\t\t\tbottom  =  0 - botMaxRadius + \"px\";\n\t\t\t\t\t\t\t\tleft    =  0 - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.bottomContainer = this.box.appendChild(newMainContainer);\n\t\t\t            }\n\t\t            break;\n\t\t\t    }\n\t\t\t}\n\t\t\t\/\/ Turn off current borders\n\t\t\tif(this.topContainer) this.box.style.borderTopWidth = \"0px\";\n\t\t\tif(this.bottomContainer) this.box.style.borderBottomWidth = \"0px\";\n\t\t\t\/\/ Create array of available corners\n\t\t\tvar corners = [\"tr\", \"tl\", \"br\", \"bl\"];\n\t\t\t\/\/Loop for each corner\n\t\t\tfor(var i in corners) {\n\t\t\t    \/\/ Get current corner type from array\n\t\t\t    var cc = corners[i];\n\t\t\t    \/\/ Has the user requested the currentCorner be round?\n\t\t\t    if(!this.settings[cc]) {\n\t\t\t        \/\/ No\n\t\t\t        if(((cc == \"tr\" || cc == \"tl\") && this.topContainer != null) || ((cc == \"br\" || cc == \"bl\") && this.bottomContainer != null)) {\n\t\t\t\t\t\t\/\/ We need to create a filler div to fill the space upto the next horzontal corner.\n\t\t\t\t\t\tvar newCorner = document.createElement(\"DIV\");\n\t\t\t\t\t\t\/\/ Setup corners properties\n\t\t\t\t\t\tnewCorner.style.position = \"relative\";\n\t\t\t\t\t\tnewCorner.style.fontSize = \"1px\";\n\t\t\t\t\t\tnewCorner.style.overflow = \"hidden\";\n\t\t\t\t\t\t\/\/ Add background image?\n\t\t\t\t\t\tif(this.backgroundImage == \"\") {\n\t\t\t\t\t\t\tnewCorner.style.backgroundColor = this.boxColour;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewCorner.style.backgroundImage = this.backgroundImage;\n\t\t\t\t\t\t}\n\t\t\t            switch(cc) {\n\t\t\t\t\t\t\tcase \"tl\":\n\t\t\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\t\t\theight      = topMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t\tmarginRight = this.settings.tr.radius - (this.borderWidth*2) + \"px\";\n\t\t\t\t\t\t\t\t\tborderLeft  = this.borderString;\n\t\t\t\t\t\t\t\t\tborderTop   = this.borderString;\n\t\t\t\t\t\t\t\t\tleft         = -this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\t\t\theight      = topMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t\tmarginLeft  = this.settings.tl.radius - (this.borderWidth*2) + \"px\";\n\t\t\t\t\t\t\t\t\tborderRight = this.borderString;\n\t\t\t\t\t\t\t\t\tborderTop   = this.borderString;\n\t\t\t\t\t\t\t\t\tbackgroundPosition  = \"-\" + this.boxWidth + \"px 0px\";\n\t\t\t\t\t\t\t\t\tleft         = this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"bl\":\n\t\t\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\t\t\theight       = botMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t\tmarginRight  = this.settings.br.radius - (this.borderWidth*2) + \"px\";\n\t\t\t\t\t\t\t\t\tborderLeft   = this.borderString;\n\t\t\t\t\t\t\t\t\tborderBottom = this.borderString;\n\t\t\t\t\t\t\t\t\tleft         = -this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"br\":\n\t\t\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\t\t\theight       = botMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\t\tmarginLeft   = this.settings.bl.radius - (this.borderWidth*2) + \"px\";\n\t\t\t\t\t\t\t\t\tborderRight  = this.borderString;\n\t\t\t\t\t\t\t\t\tborderBottom = this.borderString;\n\t\t\t\t\t\t\t\t\tleft         = this.borderWidth + \"px\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t            }\n\t\t\t        }\n\t\t\t    } else {\n\t\t\t        \/*\n\t\t\t        PERFORMANCE NOTE:\n\t\t\t        If more than one corner is requested and a corner has been already\n\t\t\t        created for the same radius then that corner will be used as a master and cloned.\n\t\t\t        The pixel bars will then be repositioned to form the new corner type.\n\t\t\t        All new corners start as a bottom right corner.\n\t\t\t        *\/\n\t\t\t        if(this.masterCorners[this.settings[cc].radius]) {\n\t\t\t            \/\/ Create clone of the master corner\n\t\t\t            var newCorner = this.masterCorners[this.settings[cc].radius].cloneNode(true);\n\t\t\t        } else {\n\t\t\t            \/\/ Yes, we need to create a new corner\n\t\t\t            var newCorner = document.createElement(\"DIV\");\n\t\t\t\t\t\twith(newCorner.style){\n\t\t\t\t\t\t\theight = this.settings[cc].radius + \"px\";\n\t\t\t\t\t\t\twidth  = this.settings[cc].radius + \"px\";\n\t\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\/\/ THE FOLLOWING BLOCK OF CODE CREATES A ROUNDED CORNER\n\t\t\t\t\t\t\/\/ ---------------------------------------------------- TOP\n\t\t\t\t\t\t\/\/ Get border radius\n\t\t\t\t\t\tvar borderRadius = parseInt(this.settings[cc].radius - this.borderWidth);\n\t\t\t\t\t\t\/\/ Cycle the x-axis\n\t\t\t\t\t\tfor(var intx = 0, j = this.settings[cc].radius; intx < j; intx++) {\n\t\t\t\t\t\t\t\/\/ Calculate the value of y1 which identifies the pixels inside the border\n\t\t\t\t\t\t\tif((intx +1) >= borderRadius) {\n\t\t\t\t\t\t\t\tvar y1 = -1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar y1 = (Math.floor(Math.sqrt(Math.pow(borderRadius, 2) - Math.pow((intx+1), 2))) - 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\/\/ Only calculate y2 and y3 if there is a border defined\n\t\t\t\t\t\t\tif(borderRadius != j) {\n\t\t\t\t\t\t\t\tif((intx) >= borderRadius) {\n\t\t\t\t\t\t\t\t\tvar y2 = -1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar y2 = Math.ceil(Math.sqrt(Math.pow(borderRadius,2) - Math.pow(intx, 2)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif((intx+1) >= j) {\n\t\t\t\t\t\t\t\t\tvar y3 = -1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar y3 = (Math.floor(Math.sqrt(Math.pow(j ,2) - Math.pow((intx+1), 2))) - 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\/\/ Calculate y4\n\t\t\t\t\t\t\tif((intx) >= j) {\n\t\t\t\t\t\t\t\tvar y4 = -1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar y4 = Math.ceil(Math.sqrt(Math.pow(j ,2) - Math.pow(intx, 2)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\/\/ Draw bar on inside of the border with foreground colour\n\t\t\t\t\t\t\tif(y1 > -1) this.drawPixel(intx, 0, this.boxColour, 100, (y1+1), newCorner, -1, this.settings[cc].radius);\n\t\t\t\t\t\t\t\/\/ Only draw border\/foreground antialiased pixels and border if there is a border defined\n\t\t\t\t\t\t\tif(borderRadius != j) {\n\t\t\t\t\t\t\t\t\/\/ Draw aa pixels?\n\t\t\t\t\t\t\t\tif(this.antiAlias) {\n\t\t\t\t\t\t\t\t\t\/\/ Cycle the y-axis\n\t\t\t\t\t\t\t\t\tfor(var inty = (y1 + 1); inty < y2; inty++) {\n\t\t\t\t\t\t\t\t\t\t\/\/ For each of the pixels that need anti aliasing between the foreground and border colour draw single pixel divs\n\t\t\t\t\t\t\t\t\t\tif(this.backgroundImage != \"\") {\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tvar borderFract = (this.pixelFraction(intx, inty, borderRadius) * 100);\n\t\t\t\t\t\t\t\t\t\t\tif (borderFract < 30) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, inty, this.borderColour, 100, 1, newCorner, 0, this.settings[cc].radius);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, inty, this.borderColour, 100, 1, newCorner, -1, this.settings[cc].radius);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar pixelcolour = dojo.gfx.color.blend(this.boxColour, this.borderColour, this.pixelFraction(intx, inty, borderRadius));\n\t\t\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, inty, pixelcolour, 100, 1, newCorner, 0, this.settings[cc].radius);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\/\/ Draw bar for the border\n\t\t\t\t\t\t\t\tif(y3 >= y2) {\n\t\t\t\t\t\t\t\t\tif (y1 == -1) {\n\t\t\t\t\t\t\t\t\t\ty1 = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, y2, this.borderColour, 100, (y3 - y2 + 1), newCorner, 0, this.settings[cc].radius);\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\t\t\/\/ Set the colour for the outside curve\n\t\t\t\t\t\t\t\tvar outsideColour = this.borderColour;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\/\/ Set the coour for the outside curve\n\t\t\t\t\t\t\t\tvar outsideColour = this.boxColour;\n\t\t\t\t\t\t\t\tvar y3 = y1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\/\/ Draw aa pixels?\n\t\t\t\t\t\t\tif(this.antiAlias) {\t\t\n\t\t\t\t\t\t\t\t\/\/ Cycle the y-axis and draw the anti aliased pixels on the\n\t\t\t\t\t\t\t\t\/\/ outside of the curve\n\t\t\t\t\t\t\t\tfor(var inty = (y3 + 1); inty < y4; inty++) {\n\t\t\t\t\t\t\t\t\t\/\/ For each of the pixels that need anti aliasing between \n\t\t\t\t\t\t\t\t\t\/\/the foreground\/border colour & background draw single pixel divs\n\t\t\t\t\t\t\t\t\tthis.drawPixel(intx, inty, outsideColour, (this.pixelFraction(intx, inty , j) * 100), 1, newCorner, ((this.borderWidth > 0)? 0 : -1), this.settings[cc].radius);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t            }\n\t\t\t            \/\/ END OF CORNER CREATION\n\t\t\t            \/\/ ---------------------------------------------------- END\n\t\t\t            \/\/ We now need to store the current corner in the masterConers array\n\t\t\t            this.masterCorners[this.settings[cc].radius] = newCorner.cloneNode(true);\n\t\t\t        }\n\t\t\t\t\t\/\/Now we have a new corner we need to reposition all the pixels unless\n\t\t\t\t\t\/\/the current corner is the bottom right.\n\t\t\t        if(cc != \"br\") {\t\n\t\t\t\t\t\t\/\/ Loop through all children (pixel bars)\n\t\t\t\t\t\tfor(var t = 0, k = newCorner.childNodes.length; t < k; t++) {\n\t\t\t\t\t\t\t\/\/ Get current pixel bar\n\t\t\t\t\t\t\tvar pixelBar = newCorner.childNodes[t];\n\t\t\t\t\t\t\t\/\/ Get current top and left properties\n\t\t\t\t\t\t\tvar pixelBarTop    = parseInt(pixelBar.style.top.substring(0, pixelBar.style.top.indexOf(\"px\")));\n\t\t\t\t\t\t\tvar pixelBarLeft   = parseInt(pixelBar.style.left.substring(0, pixelBar.style.left.indexOf(\"px\")));\n\t\t\t\t\t\t\tvar pixelBarHeight = parseInt(pixelBar.style.height.substring(0, pixelBar.style.height.indexOf(\"px\")));\n\t\t\t\t\t\t\t\/\/ Reposition pixels\n\t\t\t\t\t\t\tif(cc == \"tl\" || cc == \"bl\") {\n\t\t\t\t\t\t\t\tpixelBar.style.left = this.settings[cc].radius -pixelBarLeft -1 + \"px\"; \/\/ Left\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(cc == \"tr\" || cc == \"tl\") {\n\t\t\t\t\t\t\t\tpixelBar.style.top =  this.settings[cc].radius -pixelBarHeight -pixelBarTop + \"px\"; \/\/ Top\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar value;\n\t\t\t\t\t\t\tswitch(cc) {\n\t\t\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\t\t\tvalue = (-1 *( Math.abs((this.boxWidth - this.settings[cc].radius + this.borderWidth) + pixelBarLeft) - (Math.abs(this.settings[cc].radius -pixelBarHeight -pixelBarTop - this.borderWidth))));\n\t\t\t\t\t\t\t\t\tpixelBar.style.backgroundPosition  = value + \"px\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"tl\":\n\t\t\t\t\t\t\t\t\tvalue = (-1 *( Math.abs((this.settings[cc].radius -pixelBarLeft -1)  - this.borderWidth) - (Math.abs(this.settings[cc].radius -pixelBarHeight -pixelBarTop - this.borderWidth))));\n\t\t\t\t\t\t\t\t\tpixelBar.style.backgroundPosition  = value + \"px\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"bl\":\n\t\t\t\t\t\t\t\t\tvalue = (-1 *( Math.abs((this.settings[cc].radius -pixelBarLeft -1) - this.borderWidth) - (Math.abs((this.boxHeight + this.settings[cc].radius + pixelBarTop) -this.borderWidth))));\n\t\t\t\t\t\t\t\t\tpixelBar.style.backgroundPosition  = value + \"px\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(newCorner) {\n\t\t\t\t\t\/\/ Position the container\n\t\t\t\t\tswitch(cc) {\n\t\t\t\t\t\tcase \"tl\":\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.top  = \"0px\";\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.left = \"0px\";\n\t\t\t\t\t\t\tif(this.topContainer) this.topContainer.appendChild(newCorner);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.top  = \"0px\";\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.right = \"0px\";\n\t\t\t\t\t\t\tif(this.topContainer) this.topContainer.appendChild(newCorner);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"bl\":\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.bottom  = \"0px\";\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.left = \"0px\";\n\t\t\t\t\t\t\tif(this.bottomContainer) this.bottomContainer.appendChild(newCorner);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"br\":\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.bottom = \"0px\";\n\t\t\t\t\t\t\tif(newCorner.style.position == \"absolute\") newCorner.style.right = \"0px\";\n\t\t\t\t\t\t\tif(this.bottomContainer) this.bottomContainer.appendChild(newCorner);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/The last thing to do is draw the rest of the filler DIVs.\n\t\t\t\/\/We only need to create a filler DIVs when two corners have\n\t\t\t\/\/diffrent radiuses in either the top or bottom container.\n\t\t\t\/\/ Find out which corner has the biiger radius and get the difference amount\n\t\t\tvar radiusDiff = [];\n\t\t\tradiusDiff[\"t\"] = this.settings.tl.enabled && this.settings.tr.enabled ? Math.abs(this.settings.tl.radius - this.settings.tr.radius) : 0;\n\t\t\tradiusDiff[\"b\"] = this.settings.bl.enabled && this.settings.br.enabled ? Math.abs(this.settings.bl.radius - this.settings.br.radius) : 0;\n\t\t\tfor(var z in radiusDiff) {\n\t\t\t\tif(radiusDiff[z]) {\n\t\t\t\t\t\/\/ Get the type of corner that is the smaller one\n\t\t\t\t\tvar smallerCornerType = ((this.settings[z + \"l\"].radius < this.settings[z + \"r\"].radius)? z +\"l\" : z +\"r\");\n\t\t\t\t\t\/\/ First we need to create a DIV for the space under the smaller corner\n\t\t\t\t\tvar newFiller = document.createElement(\"DIV\");\n\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\theight = radiusDiff[z] + \"px\";\n\t\t\t\t\t\twidth  =  this.settings[smallerCornerType].radius+ \"px\"\n\t\t\t\t\t\tposition = \"absolute\";\n\t\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\t\tbackgroundColor = this.boxColour;\n\t\t\t\t\t}\n\t\t\t\t\t\/\/ Position filler\n\t\t\t\t\tswitch(smallerCornerType) {\n\t\t\t\t\t\tcase \"tl\":\n\t\t\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\t\t\tbottom = \"0px\";\n\t\t\t\t\t\t\t\tleft   = \"0px\";\n\t\t\t\t\t\t\t\tborderLeft = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.topContainer.appendChild(newFiller);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"tr\":\n\t\t\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\t\t\tbottom = \"0px\";\n\t\t\t\t\t\t\t\tright  = \"0px\";\n\t\t\t\t\t\t\t\tborderRight = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.topContainer.appendChild(newFiller);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"bl\":\n\t\t\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\t\t\ttop    = \"0px\";\n\t\t\t\t\t\t\t\tleft   = \"0px\";\n\t\t\t\t\t\t\t\tborderLeft = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.bottomContainer.appendChild(newFiller);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"br\":\n\t\t\t\t\t\t\twith(newFiller.style) {\n\t\t\t\t\t\t\t\ttop    = \"0px\";\n\t\t\t\t\t\t\t\tright  = \"0px\";\n\t\t\t\t\t\t\t\tborderRight = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.bottomContainer.appendChild(newFiller);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t    }\n\t\t\t\t\/\/ Create the bar to fill the gap between each corner horizontally\n\t\t\t\tvar newFillerBar = document.createElement(\"DIV\");\n\t\t\t\twith(newFillerBar.style) {\n\t\t\t\t\tposition = \"relative\";\n\t\t\t\t\tfontSize = \"1px\";\n\t\t\t\t\toverflow = \"hidden\";\n\t\t\t\t\tbackgroundColor = this.boxColour;\n\t\t\t\t}\n\t\t\t\tswitch(z) {\n\t\t\t\t\tcase \"t\":\n\t\t\t\t\t\t\/\/ Top Bar\n\t\t\t\t\t\tif(this.topContainer) {\n\t\t\t\t\t\t\twith(newFillerBar.style) {\n\t\t\t\t\t\t\t\theight      = topMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tmarginLeft  = this.settings.tl.radius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tmarginRight = this.settings.tr.radius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\t\tborderTop   = this.borderString;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.topContainer.appendChild(newFillerBar);\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"b\":\n\t\t\t\t\t\tif(this.bottomContainer) {\n\t\t\t\t\t\t\/\/ Bottom Bar\n\t\t\t\t\t\twith(newFillerBar.style) {\n\t\t\t\t\t\t\theight       = botMaxRadius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\tmarginLeft   = this.settings.bl.radius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\tmarginRight  = this.settings.br.radius - this.borderWidth + \"px\";\n\t\t\t\t\t\t\tborderBottom = this.borderString;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.bottomContainer.appendChild(newFillerBar);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}","instance":"dojo.widget.Rounded.curvyCorners"}},"dojo.widget.Rounded.curvyCorners.drawPixel":{"meta":{"summary":"","parameters":{"intx":{"type":""},"inty":{"type":""},"colour":{"type":""},"transAmount":{"type":""},"height":{"type":""},"newCorner":{"type":""},"image":{"type":""},"cornerRadius":{"type":""}},"src":" \t\tvar pixel = document.createElement(\"DIV\");\n\t\t\t\/\/ Section doesn't like with (pixel.style) { DEBUG?\n\t\t\tpixel.style.height   = height + \"px\";\n\t\t\tpixel.style.width    = \"1px\";\n\t\t\tpixel.style.position = \"absolute\";\n\t\t\tpixel.style.fontSize = \"1px\";\n\t\t\tpixel.style.overflow = \"hidden\";\n\t\t\t\/\/ Dont apply background image to border pixels\n\t\t\tif(image == -1 && this.backgroundImage != \"\") {\n\t\t\t\tpixel.style.backgroundImage = this.backgroundImage;\n\t\t\t\tpixel.style.backgroundPosition  = \"-\" + (this.boxWidth - (cornerRadius - intx) + this.borderWidth) + \"px -\" + ((this.boxHeight + cornerRadius + inty) -this.borderWidth) + \"px\";\n\t\t\t} else {\n\t\t\t\tpixel.style.backgroundColor = colour;\n\t\t\t}\n\t\t\t\/\/ Set opacity if the transparency is anything other than 100\n\t\t\tif (transAmount != 100) {\n\t\t\t\tdojo.html.setOpacity(pixel, transAmount);\n\t\t\t}\n\t\t\t\/\/ Set the pixels position\n\t\t\tpixel.style.top = inty + \"px\";\n\t\t\tpixel.style.left = intx + \"px\";\n\t\t\tnewCorner.appendChild(pixel);","instance":"dojo.widget.Rounded.curvyCorners"}},"dojo.widget.Rounded.pixelFraction":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"r":{"type":""}},"src":" \tvar pixelfraction = 0;\n\t\t\/\/determine the co-ordinates of the two points on the perimeter of the pixel that the\n\t\t\/\/circle crosses\n\t\tvar xvalues = [];\n\t\tvar yvalues = [];\n\t\tvar point = 0;\n\t\tvar whatsides = \"\";\n\t\t\/\/ x + 0 = Left\n\t\tvar intersect = Math.sqrt((Math.pow(r,2) - Math.pow(x,2)));\n\t\tif ((intersect >= y) && (intersect < (y+1))) {\n\t\t\twhatsides = \"Left\";\n\t\t\txvalues[point] = 0;\n\t\t\tyvalues[point] = intersect - y;\n\t\t\tpoint =  point + 1;\n\t\t}\n\t\t\/\/ y + 1 = Top\n\t\tvar intersect = Math.sqrt((Math.pow(r,2) - Math.pow(y+1,2)));\n\t\tif ((intersect >= x) && (intersect < (x+1))) {\n\t\t\twhatsides = whatsides + \"Top\";\n\t\t\txvalues[point] = intersect - x;\n\t\t\tyvalues[point] = 1;\n\t\t\tpoint = point + 1;\n\t\t}\n\t\t\/\/ x + 1 = Right\n\t\tvar intersect = Math.sqrt((Math.pow(r,2) - Math.pow(x+1,2)));\n\t\tif ((intersect >= y) && (intersect < (y+1))) {\n\t\t\twhatsides = whatsides + \"Right\";\n\t\t\txvalues[point] = 1;\n\t\t\tyvalues[point] = intersect - y;\n\t\t\tpoint =  point + 1;\n\t\t}\n\t\t\/\/ y + 0 = Bottom\n\t\tvar intersect = Math.sqrt((Math.pow(r,2) - Math.pow(y,2)));\n\t\tif ((intersect >= x) && (intersect < (x+1))) {\n\t\t\twhatsides = whatsides + \"Bottom\";\n\t\t\txvalues[point] = intersect - x;\n\t\t\tyvalues[point] = 0;\n\t\t}\n\t    \/\/depending on which sides of the perimeter of the pixel the circle crosses calculate the\n\t    \/\/fraction of the pixel inside the circle\n\t\tswitch (whatsides) {\n\t\t\tcase \"LeftRight\":\n\t\t\t\tpixelfraction = Math.min(yvalues[0],yvalues[1]) + ((Math.max(yvalues[0],yvalues[1]) - Math.min(yvalues[0],yvalues[1]))\/2);\n\t\t\tbreak;\n\t\t\tcase \"TopRight\":\n\t\t\t\tpixelfraction = 1-(((1-xvalues[0])*(1-yvalues[1]))\/2);\n\t\t\tbreak;\n\t\t\tcase \"TopBottom\":\n\t\t\t\tpixelfraction = Math.min(xvalues[0],xvalues[1]) + ((Math.max(xvalues[0],xvalues[1]) - Math.min(xvalues[0],xvalues[1]))\/2);\n\t\t\tbreak;\n\t\t\tcase \"LeftBottom\":\n\t\t\t\tpixelfraction = (yvalues[0]*xvalues[1])\/2;\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tpixelfraction = 1;\n\t    }\n\t    return pixelfraction;","prototype":"dojo.widget.Rounded"}},"dojo.widget.Rounded.rgb2Hex":{"meta":{"summary":"","parameters":{"rgbColour":{"type":""}},"src":" \ttry{\t\n\t\t\t\/\/ Get array of RGB values\n\t\t\tvar rgbArray = this.rgb2Array(rgbColour);\n\t\t\t\/\/ Get RGB values\n\t\t\tvar red   = parseInt(rgbArray[0]);\n\t\t\tvar green = parseInt(rgbArray[1]);\n\t\t\tvar blue  = parseInt(rgbArray[2]);\n\t\t\t\/\/ Build hex colour code\n\t\t\tvar hexColour = \"#\" + this.intToHex(red) + this.intToHex(green) + this.intToHex(blue);\n\t\t}\n\t\tcatch(e){ alert(\"There was an error converting the RGB value to Hexadecimal in function rgb2Hex\");\n\t\t}\n\t\treturn hexColour;","prototype":"dojo.widget.Rounded"}},"dojo.widget.Rounded.intToHex":{"meta":{"summary":"","parameters":{"strNum":{"type":""}},"src":" \tvar base = strNum \/ 16;\n\t\tvar rem = strNum % 16;\n\t\tvar base = base - (rem \/ 16);\n\t\tvar baseS = this.makeHex(base);\n\t\tvar remS = this.makeHex(rem);\n\t\treturn baseS + '' + remS;","prototype":"dojo.widget.Rounded"}},"dojo.widget.Rounded.makeHex":{"meta":{"summary":"","parameters":{"x":{"type":""}},"src":" \tif((x >= 0) && (x <= 9)) {\n\t\t\treturn x;\n\t\t} else {\n\t\t\tswitch(x) {\n\t\t\t\tcase 10: return \"A\";\n\t\t\t\tcase 11: return \"B\";\n\t\t\t\tcase 12: return \"C\";\n\t\t\t\tcase 13: return \"D\";\n\t\t\t\tcase 14: return \"E\";\n\t\t\t\tcase 15: return \"F\";\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Rounded"}},"dojo.widget.Rounded.rgb2Array":{"meta":{"summary":"","parameters":{"rgbColour":{"type":""}},"src":" \tvar rgbValues = rgbColour.substring(4, rgbColour.indexOf(\")\"));\n\t\t\/\/ Split RGB into array\n\t\tvar rgbArray = rgbValues.split(\", \");\n\t\treturn rgbArray;","prototype":"dojo.widget.Rounded"}}}}},"dojo.widget.Select":{"meta":{"requires":{"common":["dojo.widget.ComboBox","dojo.widget.*","dojo.widget.html.stabile"]},"functions":{"dojo.widget.Select":{"meta":{"prototype_chain":["dojo.widget.ComboBox"],"call_chain":["dojo.widget.ComboBox"],"prototype_variables":["forceValidOption"],"variables":["forceValidOption"],"instance_variables":["comboBoxValue.value","comboBoxSelectionValue.value","textInputNode.value"]}},"dojo.widget.Select.setValue":{"meta":{"summary":"Sets the value of the combobox. TODO: this doesn't work correctly when a URL is specified, because we can't set the label automatically (based on the specified value)","parameters":{"value":{"type":""}},"src":" \t\tthis.comboBoxValue.value = value;\n\t\t\tdojo.widget.html.stabile.setState(this.widgetId, this.getState(), true);\n\t\t\tthis.onValueChanged(value);","prototype":"dojo.widget.Select"}},"dojo.widget.Select.setLabel":{"meta":{"summary":"FIXME, not sure what to do here! Users shouldn't call this function; they should be calling setValue() instead","parameters":{"value":{"type":""}},"src":" \t\tthis.comboBoxSelectionValue.value = value;\n\t\t\tif (this.textInputNode.value != value) { \/\/ prevent mucking up of selection\n\t\t\t\tthis.textInputNode.value = value;\n\t\t\t}","prototype":"dojo.widget.Select"}},"dojo.widget.Select.getLabel":{"meta":{"summary":"returns current label","src":" \t\treturn this.comboBoxSelectionValue.value;\t\/\/ String","returns":"String","prototype":"dojo.widget.Select"}},"dojo.widget.Select.getState":{"meta":{"summary":"returns current value and label","src":" \t\treturn {\n\t\t\t\tvalue: this.getValue(),\n\t\t\t\tlabel: this.getLabel()\n\t\t\t};\t\/\/ Object","prototype":"dojo.widget.Select"}},"dojo.widget.Select.onKeyUp":{"meta":{"summary":"internal function","parameters":{"evt":{"type":"Event"}},"src":" \t\tthis.setLabel(this.textInputNode.value);","prototype":"dojo.widget.Select"}},"dojo.widget.Select.setState":{"meta":{"summary":"internal function to set both value and label","parameters":{"state":{"type":"Object"}},"src":" \t\tthis.setValue(state.value);\n\t\t\tthis.setLabel(state.label);","prototype":"dojo.widget.Select"}},"dojo.widget.Select.setAllValues":{"meta":{"summary":"internal function to set both value and label","parameters":{"value1":{"type":"String"},"value2":{"type":"String"}},"src":" \t\tthis.setLabel(value1);\n\t\t\tthis.setValue(value2);","prototype":"dojo.widget.Select"}}}}},"dojo.widget.Show":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.uri.Uri","dojo.event.*","dojo.lfx.*","dojo.math.curves","dojo.lang.common","dojo.lang.func"]},"functions":{"dojo.widget.Show":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","_slide","body","nav","hider","select","option","inNav","debugPane","noClick","templatePath","templateCssPath"],"variables":["isContainer","_slide","body","nav","hider","select","option","inNav","debugPane","noClick","templatePath","templateCssPath"],"instance_variables":["debugPane","sourceNode","sourceNode.className","sourceNode.style.display","_slides","option.text","domNode.style.display","_slide","select.selectedIndex","inNav"],"summary":"","src":" \tthis._slides=[];"}},"dojo.widget.Show.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tif(args.debugPane){\n\t\t\tvar dp = this.debugPane = dojo.widget.byId(args.debugPane);\n\t\t\tdp.hide();\n\t\t\tdojo.event.connect(dp, \"closeWindow\", dojo.lang.hitch(this, function(){ this.debugPane = false; }));\n\t\t}\n\t\tvar source = this.getFragNodeRef(frag);\n\t\tthis.sourceNode = dojo.body().appendChild(source.cloneNode(true));\n\t\tfor(var i = 0, child; child = this.sourceNode.childNodes[i]; i++){\n\t\t\tif(child.tagName && child.getAttribute(\"dojotype\").toLowerCase() == \"showslide\"){\n\t\t\t\tchild.className = \"dojoShowPrintSlide\";\n\t\t\t\tchild.innerHTML = \"<h1>\" + child.title + \"<\/h1>\" + child.innerHTML;\n\t\t\t}\n\t\t}\n\t\tthis.sourceNode.className = \"dojoShowPrint\";\n\t\tthis.sourceNode.style.display = \"none\";\n\t\tdojo.event.connect(document, \"onclick\", this, \"gotoSlideByEvent\");\n\t\tif(dojo.render.html.ie) {\n\t\t\tdojo.event.connect(document,\"onkeydown\",this, \"gotoSlideByEvent\");\n\t\t} else {\n\t\t\t\/\/ while keydown works, keypress allows rapid successive key presses\n\t\t\t\/\/ to be handled correctly\n\t\t\tdojo.event.connect(document,\"onkeypress\",this, \"gotoSlideByEvent\");\n\t\t}\n\t\tdojo.event.connect(window, \"onresize\", this, \"resizeWindow\");\n\t\tdojo.event.connect(this.nav, \"onmousemove\", this, \"popUpNav\");","prototype":"dojo.widget.Show"}},"dojo.widget.Show.postCreate":{"meta":{"summary":"","src":" \tthis._slides = [];\n\t\tfor(var i = 0, child; child = this.children[i]; i++){\n\t\t\tif(child.widgetType == \"ShowSlide\"){\n\t\t\t\tthis._slides.push(child);\n\t\t\t\tthis.option.text = child.title+\" (\"+(i+1)+\")\";\n\t\t\t\tthis.option.parentNode.insertBefore(this.option.cloneNode(true), this.option);\n\t\t\t}\n\t\t}\n\t\tthis.option.parentNode.removeChild(this.option);\n\t\tthis.domNode.style.display = \"block\";\n\t\tthis.resizeWindow();\n\t\tthis.gotoSlide(0, true);\n\t\t\/\/ check to see if we're initialized from a particular slide\n\t\tdojo.addOnLoad(dojo.lang.hitch(this, \n\t\t\tfunction(){\n\t\t\t\tvar th = window.location.hash;\n\t\t\t\tif(th.length){\n\t\t\t\t\tvar parts = (\"\"+window.location).split(this.widgetId+\"_SlideNo_\");\n\t\t\t\t\tif(parts.length > 1){\n\t\t\t\t\t\tsetTimeout(dojo.lang.hitch(this, function(){\n\t\t\t\t\t\t\tthis.gotoSlide(parseInt(parts[1]), true);\n\t\t\t\t\t\t}), 300);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);","prototype":"dojo.widget.Show"}},"dojo.widget.Show.gotoSlide":{"meta":{"summary":"","parameters":{"slide":{"type":"int"},"preventSetHash":{"type":"Boolean"}},"src":" \tif(slide == this._slide){\n\t\t\treturn;\n\t\t}\n\t\tif(!this._slides[slide]){\n\t\t\t\/\/ slide: string\n\t\t\tfor(var i = 0, child; child = this._slides[i]; i++){\n\t\t\t\tif(child.title == slide){\n\t\t\t\t\tslide = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!this._slides[slide]){\n\t\t\treturn;\n\t\t}\n\t\tif(this.debugPane){\n\t\t\tif(this._slides[slide].debug){\n\t\t\t\tthis.debugPane.show();\n\t\t\t}else{\n\t\t\t\tthis.debugPane.hide();\n\t\t\t}\n\t\t}\n\t\tif(this._slide != -1){\n\t\t\twhile(this._slides[this._slide].previousAction()){}\n\t\t}\n\t\tif(!preventSetHash){\n\t\t\twindow.location.href = \"#\"+this.widgetId+\"_SlideNo_\"+slide;\n\t\t}\n\t\tif(this._slides[this._slide]){\n\t\t\tthis._slides[this._slide].hide();\n\t\t}\n\t\tthis._slide = slide;\n\t\tthis.select.selectedIndex = slide;\n\t\tvar cn = this.contentNode;\n\t\twhile(cn.firstChild){ cn.removeChild(cn.firstChild); }\n\t\tcn.appendChild(this._slides[slide].domNode);\n\t\tthis._slides[slide].show();","prototype":"dojo.widget.Show"}},"dojo.widget.Show.gotoSlideByEvent":{"meta":{"summary":"","parameters":{"event":{"type":"Event"}},"src":" \tvar node = event.target;\n\t\tvar type = event.type;\n\t\tif(type == \"click\"){\n\t\t\tif(node.tagName == \"OPTION\" && node.parentNode == this.select){\n\t\t\t\tthis.gotoSlide(node.index);\n\t\t\t}else if(node == this.select){\n\t\t\t\tthis.gotoSlide(node.selectedIndex);\n\t\t\t}else{\n\t\t\t\tthis.nextSlide(event);\n\t\t\t}\n\t\t}else if (type==\"keydown\" || type==\"keypress\") {\n\t\t\tvar key = event.keyCode;\n\t\t\tvar ch = event.charCode;\n\t\t\tif(key == 63234 || key == 37){\n\t\t\t\tthis.previousSlide(event);\n\t\t\t}else if(key == 63235 || key == 39 || ch == 32){\n\t\t\t\tthis.nextSlide(event);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Show"}},"dojo.widget.Show.nextSlide":{"meta":{"summary":"","parameters":{"event":{"type":"Event?"}},"src":" \tif(!this.stopEvent(event)){\n\t\t\treturn false;\n\t\t}\n\t\tif(!this._slides[this._slide].nextAction(event)){\n\t\t\tif((this._slide + 1) != this._slides.length){\n\t\t\t\tthis.gotoSlide(this._slide + 1);\n\t\t\t\treturn true; \/\/ boolean\n\t\t\t}\n\t\t\treturn false; \/\/ boolean\n\t\t}","returns":"boolean","prototype":"dojo.widget.Show"}},"dojo.widget.Show.previousSlide":{"meta":{"summary":"","parameters":{"event":{"type":"Event?"}},"src":" \tif(!this.stopEvent(event)){\n\t\t\treturn false;\n\t\t}\n\t\tif(!this._slides[this._slide].previousAction(event)){\n\t\t\tif((this._slide - 1) != -1){\n\t\t\t\tthis.gotoSlide(this._slide - 1);\n\t\t\t\treturn true; \/\/ boolean\n\t\t\t}\n\t\t\treturn false; \/\/ boolean\n\t\t}","returns":"boolean","prototype":"dojo.widget.Show"}},"dojo.widget.Show.stopEvent":{"meta":{"summary":"","parameters":{"ev":{"type":"Event"}},"src":" \tif(!ev){\n\t\t\treturn true;\n\t\t}\n\t\tif (ev.type == \"click\" && (this._slides[this._slide].noClick || this.noClick)) {\n\t\t\treturn false;\n\t\t}\t\n\t\tvar target = ev.target;\n\t\t\/\/ Check to see if the target is below the show domNode\n\t\twhile(target != null){\n\t\t\tif(target == this.domNode){\n\t\t\t\ttarget = ev.target;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttarget = target.parentNode;\n\t\t}\n\t\t\/\/ Now that we know it's below this widget's domNode, we bubble up until we get to our domNode\n\t\tif(!dojo.dom.isDescendantOf(target, this.nav)){\n\t\t\twhile(target && target != this.domNode){\n\t\t\t\tif(target.tagName == \"A\" || target.tagName == \"INPUT\" || target.tagName == \"TEXTAREA\" || target.tagName == \"SELECT\"){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif(typeof target.onclick == \"function\" || typeof target.onkeypress == \"function\"){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ttarget = target.parentNode;\n\t\t\t}\n\t\t}\n\t\tif(window.event){\n\t\t\tev.returnValue = false;\n\t\t\tev.cancelBubble = true;\n\t\t}else{\n\t\t\tev.preventDefault();\n\t\t\tev.stopPropagation();\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.Show"}},"dojo.widget.Show.popUpNav":{"meta":{"summary":"","src":" \tif(!this.inNav){\n\t\t\t\/\/ dojo.widget.Show.node = this.nav;\n\t\t\tdojo.lfx.propertyAnimation(this.nav, {\n\t\t\t\t\"height\": { start: 5, end: 30 }\n\t\t\t}, 250).play();\n\t\t}\n\t\tclearTimeout(this.inNav);\n\t\tthis.inNav = setTimeout(dojo.lang.hitch(this, \"hideNav\"), 2000);","prototype":"dojo.widget.Show"}},"dojo.widget.Show.hideNav":{"meta":{"summary":"","src":" \tclearTimeout(this.inNav);\n\t\tthis.inNav = false;\n\t\t\/\/ dojo.widget.Show.node = this.nav;\n\t\tdojo.lfx.propertyAnimation(this.nav, {\n\t\t\t\"height\": { start: 30, end: 5 }\n\t\t}, 250).play();","prototype":"dojo.widget.Show"}},"dojo.widget.Show.resizeWindow":{"meta":{"summary":"","parameters":{"ev":{"type":"Event"}},"src":" \tdojo.body().style.height = \"auto\";\n\t\tvar h = Math.max(\n\t\t\tdocument.documentElement.scrollHeight || dojo.body().scrollHeight,\n\t\t\tdojo.html.getViewport().height);\n\t\tdojo.body().style.height = h + \"px\";","prototype":"dojo.widget.Show"}}}}},"dojo.widget.ShowAction":{"meta":{"requires":{"common":["dojo.widget.*"]},"functions":{"dojo.widget.ShowAction":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["on","action","duration","from","to","auto"],"variables":["on","action","duration","from","to","auto"],"instance_variables":["action"]}},"dojo.widget.ShowAction.postMixInProperties":{"meta":{"summary":"","src":" \tif(dojo.render.html.opera){\n\t\t\tthis.action = this.action.split(\"\/\").pop();\n\t\t}","prototype":"dojo.widget.ShowAction"}}}}},"dojo.widget.ShowSlide":{"meta":{"requires":{"common":["dojo.widget.*","dojo.lang.common","dojo.widget.HtmlWidget","dojo.lfx.html","dojo.html.display","dojo.html.layout","dojo.animation.Animation","dojo.gfx.color"]},"functions":{"dojo.widget.ShowSlide":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["title","_action","isContainer","_actions","htmlTitle","debug","noClick","templatePath","templateCssPath"],"variables":["title","_action","isContainer","_actions","htmlTitle","debug","noClick","templatePath","templateCssPath"],"instance_variables":["_action","htmlTitle.innerHTML","_components","_actions"]}},"dojo.widget.ShowSlide.gotoAction":{"meta":{"summary":"","parameters":{"action":{"type":"int"}},"src":" \tthis._action = action;","prototype":"dojo.widget.ShowSlide"}},"dojo.widget.ShowSlide._nextAction":{"meta":{"summary":"","parameters":{"event":{"type":"Event?"}},"src":" \tif((this._action + 1) != this._actions.length){\n\t\t\t++this._action;\n\t\t\treturn true; \/\/ boolean\n\t\t}\n\t\treturn false; \/\/ boolean","returns":"boolean","prototype":"dojo.widget.ShowSlide"}},"dojo.widget.ShowSlide._previousAction":{"meta":{"summary":"","parameters":{"event":{"type":"Event?"}},"src":" \tif((this._action - 1) != -1){\n\t\t\t--this._action;\n\t\t\treturn true; \/\/ boolean\n\t\t}\n\t\treturn false; \/\/ boolean","returns":"boolean","prototype":"dojo.widget.ShowSlide"}},"dojo.widget.ShowSlide.postCreate":{"meta":{"summary":"","src":" \tthis.htmlTitle.innerHTML = this.title;\n\t\tvar actions = this.getChildrenOfType(\"ShowAction\", false);\n\t\tvar atypes = {};\n\t\tdojo.lang.forEach(actions, function(act){ atypes[act.on] = true; });\n\t\tthis._components = {};\n\t\tvar cn = this.containerNode;\n\t\tvar nodes = dojo.render.html.ie ? cn.all : cn.getElementsByTagName('*');\n\t\tdojo.lang.forEach(nodes, function(node){\n\t\t\tvar as = node.getAttribute(\"as\");\n\t\t\tif(as){\n\t\t\t\tif(!this._components[as]){\n\t\t\t\t\tthis._components[as] = [];\n\t\t\t\t}\n\t\t\t\tthis._components[as].push(node);\n\t\t\t\tif(!atypes[as]){\n\t\t\t\t\tvar tmpAction = dojo.widget.createWidget(\"ShowAction\", { on: as });\n\t\t\t\t\tthis.addChild(tmpAction);\n\t\t\t\t\tatypes[as] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}, this);\n\t\tthis._actions = [];\n\t\tactions = this.getChildrenOfType(\"ShowAction\", false);\n\t\tdojo.lang.forEach(actions, function(child){\n\t\t\tthis._actions.push(child);\n\t\t\tvar components = this._components[child.on];\n\t\t\tfor(var j = 0, component; component = components[j]; j++){\n\t\t\t\tif(child[\"action\"] && (\n\t\t\t\t\t(child.action != \"remove\")&&\n\t\t\t\t\t(child.action != \"fadeout\")&&\n\t\t\t\t\t(child.action != \"wipeout\")\n\t\t\t\t) ){\n\t\t\t\t\tthis.hideComponent(component);\n\t\t\t\t}\n\t\t\t}\n\t\t}, this);","prototype":"dojo.widget.ShowSlide"}},"dojo.widget.ShowSlide.previousAction":{"meta":{"summary":"","parameters":{"event":{"type":"Event?"}},"src":" \tif(!this.parent.stopEvent(event)){\n\t\t\treturn false;\n\t\t}\n\t\tvar action = this._actions[this._action];\n\t\tif(!action){\n\t\t\treturn false;\n\t\t}\n\t\tvar on = action.on;\n\t\twhile(action.on == on){\n\t\t\tvar components = this._components[on];\n\t\t\tfor(var i = 0, component; component = components[i]; i++){\n\t\t\t\tif(\n\t\t\t\t\t(action.action == \"remove\")||\n\t\t\t\t\t(action.action == \"fadeout\")||\n\t\t\t\t\t(action.action == \"wipeout\")\n\t\t\t\t){\n\t\t\t\t\tif(component.style.display == \"none\"){\n\t\t\t\t\t\tcomponent.style.display = \"\";\n\t\t\t\t\t\tcomponent.style.visibility = \"visible\";\n\t\t\t\t\t\tvar exits = true;\n\t\t\t\t\t}\n\t\t\t\t\tdojo.html.setOpacity(component, 1);\n\t\t\t\t}else if(action.action){\n\t\t\t\t\tthis.hideComponent(component);\n\t\t\t\t}\n\t\t\t}\n\t\t\t--this._action;\n\t\t\tif(exits){\n\t\t\t\treturn true;\n\t\t\t}\t\n\t\t\tif(action.auto == \"true\"){\n\t\t\t\ton = this._actions[this._action].on;\n\t\t\t}\n\t\t\taction = this._actions[this._action];\n\t\t\tif(!action){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.ShowSlide"}},"dojo.widget.ShowSlide.hideComponent":{"meta":{"summary":"","parameters":{"component":{"type":"Node"}},"src":" \tcomponent.style.visibility = \"hidden\";\n\t\tcomponent.style.backgroundColor = \"transparent\";\n\t\tvar parent = component.parentNode;\n\t\tif((parent)&&(parent.tagName.toLowerCase() == \"li\")){\n\t\t\tparent.oldType = parent.style.listStyleType;\n\t\t\tparent.style.listStyleType = \"none\";\n\t\t}","prototype":"dojo.widget.ShowSlide"}},"dojo.widget.ShowSlide.nextAction":{"meta":{"summary":"","parameters":{"event":{"type":"Event?"}},"src":" \tif(!this.parent.stopEvent(event)){\n\t\t\treturn false;\n\t\t}\n\t\tif(!this._nextAction(this)){\n\t\t\treturn false;\n\t\t}\n\t\tvar action = this._actions[this._action];\n\t\tif(!action){\n\t\t\treturn false;\n\t\t}\n\t\tvar tmpAction = action[\"action\"];\n\t\tvar components = this._components[action.on];\n\t\tfor(var i = 0, component; component = components[i]; i++){\n\t\t\tif(tmpAction){\n\t\t\t\tvar duration = action.duration || 1000;\n\t\t\t\tif((tmpAction == \"fade\")||(tmpAction == \"fadeIn\")){\n\t\t\t\t\tdojo.html.setOpacity(component, 0);\n\t\t\t\t\tdojo.lfx.html.fadeShow(component, duration).play(true);\n\t\t\t\t}else if(tmpAction == \"fadeout\"){\n\t\t\t\t\tdojo.lfx.html.fadeHide(component, duration).play(true);\n\t\t\t\t}else if(tmpAction == \"fly\"){\n\t\t\t\t\tvar width = dojo.html.getMarginBox(component).width;\n\t\t\t\t\tvar position = dojo.html.getAbsolutePosition(component);\n\t\t\t\t\t\/\/ alert(position);\n\t\t\t\t\tcomponent.style.position = \"relative\";\n\t\t\t\t\tcomponent.style.left = -(width + position.x) + \"px\";\n\t\t\t\t\tdojo.lfx.html.slideBy(component, { top: 0, left: (width + position.x)}, duration, -1, this.callWith).play(true);\n\t\t\t\t}else if((tmpAction == \"wipe\")||(tmpAction == \"wipein\")){\n\t\t\t\t\tdojo.lfx.html.wipeIn(component, duration).play();\n\t\t\t\t}else if(tmpAction == \"wipeout\"){\n\t\t\t\t\tdojo.lfx.html.wipeOut(component, duration).play();\n\t\t\t\t}else if(tmpAction == \"color\"){\n\t\t\t\t\tvar from = new dojo.gfx.color.Color(action.from).toRgb();\n\t\t\t\t\tvar to = new dojo.gfx.color.Color(action.to).toRgb();\n\t\t\t\t\tvar anim = new dojo.animation.Animation(new dojo.math.curves.Line(from, to), duration, 0);\n\t\t\t\t\tvar node = component;\n\t\t\t\t\tdojo.event.connect(anim, \"onAnimate\", function(e) {\n\t\t\t\t\t\tnode.style.color = \"rgb(\" + e.coordsAsInts().join(\",\") + \")\";\n\t\t\t\t\t});\n\t\t\t\t\tanim.play(true);\n\t\t\t\t}else if(tmpAction == \"bgcolor\"){\n\t\t\t\t\tdojo.lfx.html.unhighlight(component, action.to, duration).play();\n\t\t\t\t}else if(tmpAction == \"remove\"){\n\t\t\t\t\tcomponent.style.display = \"none\";\n\t\t\t\t}\n\t\t\t\tif(tmpAction == \"hide\"){\n\t\t\t\t\tcomponent.style.visibility = \"hidden\";\n\t\t\t\t}else{\n\t\t\t\t\tcomponent.style.visibility = \"visible\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\taction = this._actions[this._action + 1];\n\t\tif(action && action.auto == \"true\"){\n\t\t\tthis.nextAction();\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.ShowSlide"}},"dojo.widget.ShowSlide.callWith":{"meta":{"summary":"","parameters":{"node":{"type":"Node"}},"src":" \tif(!node){ return; }\n\t\tif(dojo.lang.isArray(node)){\n\t\t\tdojo.lang.forEach(node, arguments.callee);\n\t\t\treturn;\n\t\t}\n\t\tvar parent = node.parentNode;\n\t\tif((parent)&&(parent.tagName.toLowerCase() == \"li\")){\n\t\t\tparent.style.listStyleType = parent.oldType;\n\t\t}","prototype":"dojo.widget.ShowSlide"}}}}},"dojo.widget.SlideShow":{"meta":{"requires":{"common":["dojo.event.*","dojo.widget.*","dojo.lfx.*","dojo.html.display"]},"functions":{"dojo.widget.SlideShow":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath","imgUrls","imgUrlBase","delay","transitionInterval","imgWidth","imgHeight","preventCache","stopped","_urlsIdx","_background","_foreground","fadeAnim","startStopButton","img1","img2"],"variables":["templatePath","templateCssPath","imgUrls","imgUrlBase","delay","transitionInterval","imgWidth","imgHeight","preventCache","stopped","_urlsIdx","_background","_foreground","fadeAnim","startStopButton","img1","img2"],"instance_variables":["width","height","imgUrls.length","preventCache","img2.src","img1.src","stopped","startStopButton.value","fadeAnim","_foreground","_background","_urlsIdx"]},"extra":{"variables":{"imgUrlBase":{"type":"String","summary":"Path prefix to prepend to each file specified in imgUrls Ex: \"\/foo\/bar\/images\/\""},"imgWidth":{"type":"Integer","summary":"Width of image in pixels"},"imgHeight":{"type":"Integer","summary":"Height of image in pixels"},"stopped":{"type":"Boolean","summary":"is Animation paused? where in the images we are what's in the bg what's in the fg references our animation"}}}},"dojo.widget.SlideShow.postMixInProperties":{"meta":{"summary":"","src":" \t\tthis.width = this.imgWidth + \"px\";\n\t\t\tthis.height = this.imgHeight + \"px\";","prototype":"dojo.widget.SlideShow"}},"dojo.widget.SlideShow.fillInTemplate":{"meta":{"summary":"","src":" \t\tif(dojo.render.html.safari && this.imgUrls.length == 2) {\n\t\t\t\tthis.preventCache = true;\n\t\t\t}\n\t\t\tdojo.html.setOpacity(this.img1, 0.9999);\n\t\t\tdojo.html.setOpacity(this.img2, 0.9999);\n\t\t\tif(this.imgUrls.length>1){\n\t\t\t\tthis.img2.src = this.imgUrlBase+this.imgUrls[this._urlsIdx++] + this._getUrlSuffix();\n\t\t\t\tthis._endTransition();\n\t\t\t}else{\n\t\t\t\tthis.img1.src = this.imgUrlBase+this.imgUrls[this._urlsIdx++] + this._getUrlSuffix();\n\t\t\t}","prototype":"dojo.widget.SlideShow"}},"dojo.widget.SlideShow._getUrlSuffix":{"meta":{"summary":"","src":" \t\tif(this.preventCache) {\n\t\t\t\treturn \"?ts=\" + (new Date()).getTime();\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t}","prototype":"dojo.widget.SlideShow"}},"dojo.widget.SlideShow.togglePaused":{"meta":{"summary":"pauses or restarts the slideshow","src":" \t\tif(this.stopped){\n\t\t\t\tthis.stopped = false;\n\t\t\t\tthis._backgroundImageLoaded();\n\t\t\t\tthis.startStopButton.value= \"pause\";\n\t\t\t}else{\n\t\t\t\tthis.stopped = true;\n\t\t\t\tthis.startStopButton.value= \"play\";\n\t\t\t}","prototype":"dojo.widget.SlideShow"}},"dojo.widget.SlideShow._backgroundImageLoaded":{"meta":{"summary":"","src":" \t\tif(this.stopped){ return; }\n\t\t\t\/\/ actually start the fadeOut effect\n\t\t\t\/\/ NOTE: if we wanted to use other transition types, we'd set them up\n\t\t\t\/\/ \t\t here as well\n\t\t\tif(this.fadeAnim) {\n\t\t\t\tthis.fadeAnim.stop();\n\t\t\t}\n\t\t\tthis.fadeAnim = dojo.lfx.fadeOut(this[this._foreground], \n\t\t\t\tthis.transitionInterval, null);\n\t\t\tdojo.event.connect(this.fadeAnim,\"onEnd\",this,\"_endTransition\");\n\t\t\tthis.fadeAnim.play();","prototype":"dojo.widget.SlideShow"}},"dojo.widget.SlideShow._endTransition":{"meta":{"summary":"","src":" \t\twith(this[this._background].style){ zIndex = parseInt(zIndex)+1; }\n\t\t\twith(this[this._foreground].style){ zIndex = parseInt(zIndex)-1; }\n\t\t\t\/\/ fg\/bg book-keeping\n\t\t\tvar tmp = this._foreground;\n\t\t\tthis._foreground = this._background;\n\t\t\tthis._background = tmp;\n\t\t\t\/\/ keep on truckin\n\t\t\tthis._loadNextImage();","prototype":"dojo.widget.SlideShow"}},"dojo.widget.SlideShow._loadNextImage":{"meta":{"summary":"after specified delay, load a new image in that container, and call _backgroundImageLoaded() when it finishes loading","src":" \t\tdojo.event.kwConnect({\n\t\t\t\tsrcObj: this[this._background],\n\t\t\t\tsrcFunc: \"onload\",\n\t\t\t\tadviceObj: this,\n\t\t\t\tadviceFunc: \"_backgroundImageLoaded\",\n\t\t\t\tonce: true, \/\/ kill old connections\n\t\t\t\tdelay: this.delay\n\t\t\t});\n\t\t\tdojo.html.setOpacity(this[this._background], 1.0);\n\t\t\tthis[this._background].src = this.imgUrlBase+this.imgUrls[this._urlsIdx++];\n\t\t\tif(this._urlsIdx>(this.imgUrls.length-1)){\n\t\t\t\tthis._urlsIdx = 0;\n\t\t\t}","prototype":"dojo.widget.SlideShow"}}}}},"dojo.widget.Slider":{"meta":{"requires":{"common":["dojo.event.*","dojo.dnd.*","dojo.dnd.HtmlDragMove","dojo.widget.*","dojo.html.layout"]},"functions":{"dojo.widget._SliderDragMoveSource":{"meta":{"prototype_chain":["dojo.dnd.HtmlDragMoveSource"],"call_chain":["dojo.dnd.HtmlDragMoveSource"]}},"dojo.widget._SliderDragMoveObject":{"meta":{"prototype_chain":["dojo.dnd.HtmlDragMoveObject"],"call_chain":["dojo.dnd.HtmlDragMoveObject"]}},"dojo.widget.Slider":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["minimumX","minimumY","maximumX","maximumY","snapValuesX","snapValuesY","_snapToGrid","isEnableX","isEnableY","_valueSizeX","_valueSizeY","_minX","_minY","_constraintWidth","_constraintHeight","_clipLeft","_clipRight","_clipTop","_clipBottom","_clipXdelta","_clipYdelta","initialValueX","initialValueY","flipX","flipY","clickSelect","activeDrag","templateCssPath","templatePath","_isDragInProgress","bottomButtonSrc","topButtonSrc","leftButtonSrc","rightButtonSrc","backgroundSrc","progressBackgroundSrc","backgroundSize","backgroundStyle","buttonStyleX","buttonStyleY","handleStyle","handleSrc","showButtons","_eventCount","_typamaticTimer","_typamaticFunction","defaultTimeout","timeoutChangeRate","_currentTimeout"],"variables":["minimumX","minimumY","maximumX","maximumY","snapValuesX","snapValuesY","_snapToGrid","isEnableX","isEnableY","_valueSizeX","_valueSizeY","_minX","_minY","_constraintWidth","_constraintHeight","_clipLeft","_clipRight","_clipTop","_clipBottom","_clipXdelta","_clipYdelta","initialValueX","initialValueY","flipX","flipY","clickSelect","activeDrag","templateCssPath","templatePath","_isDragInProgress","bottomButtonSrc","topButtonSrc","leftButtonSrc","rightButtonSrc","backgroundSrc","progressBackgroundSrc","backgroundSize","backgroundStyle","buttonStyleX","buttonStyleY","handleStyle","handleSrc","showButtons","_eventCount","_typamaticTimer","_typamaticFunction","defaultTimeout","timeoutChangeRate","_currentTimeout"],"instance_variables":["_typamaticNode","_typamaticTimer","_currentTimeout","topBorderNode.style.padding","bottomBorderNode.style.padding","topBorderNode.style.paddingBottom","bottomBorderNode.style.paddingTop","rightBorderNode.style.paddingRight","leftBorderNode.style.paddingLeft","domNode.style.padding","topBorderNode.style.borderStyle","rightBorderNode.style.borderStyle","bottomBorderNode.style.borderStyle","leftBorderNode.style.borderStyle","topBorderNode.style.borderColor","rightBorderNode.style.borderColor","bottomBorderNode.style.borderColor","leftBorderNode.style.borderColor","topBorderNode.style.borderWidth","bottomBorderNode.style.borderWidth","topBorderNode.style.borderBottomWidth","bottomBorderNode.style.borderTopWidth","rightBorderNode.style.borderRightWidth","leftBorderNode.style.borderLeftWidth","domNode.style.borderWidth","_handleMove","rightButtonNode.style.width","rightButtonNode.style.visibility","leftButtonNode.style.width","leftButtonNode.style.visibility","bottomButtonNode.style.width","bottomButtonNode.style.visibility","topButtonNode.style.width","topButtonNode.style.visibility","sliderHandleNode.style.left","_clipLeft","_clipRight","progressBackgroundNode.style.clip","_constraintWidth","_clipXdelta","_clipTop","_clipBottom","snapValuesX","_valueSizeX","sliderHandleNode.style.top","_constraintHeight","_clipYdelta","snapValuesY","_valueSizeY"],"summary":"Slider Widget. The slider widget comes in three forms: 1. Base Slider widget which supports movement in x and y dimensions 2. Vertical Slider (SliderVertical) widget which supports movement only in the y dimension. 3. Horizontal Slider (SliderHorizontal) widget which supports movement only in the x dimension. The key objects in the widget are: - a container div which displays a bar in the background (Slider object) - a handle inside the container div, which represents the value (sliderHandle DOM node) - the object which moves the handle (_handleMove is of type SliderDragMoveSource) The values for the slider are calculated by grouping pixels together, based on the number of values to be represented by the slider. The number of pixels in a group is called the _valueSize e.g. if slider is 150 pixels long, and is representing the values 0,1,...10 then pixels are grouped into lots of 15 (_valueSize), where: value 0 maps to pixels 0 - 7 1 8 - 22 2 23 - 37 etc. The accuracy of the slider is limited to the number of pixels (i.e tiles > pixels will result in the slider not being able to represent some values). value size (pixels) in the y dimension left most edge of constraining container (pixels) in the X dimension top most edge of constraining container (pixels) in the Y dimension constrained slider size (pixels) in the x dimension constrained slider size (pixels) in the y dimension progress image right clip value (pixels) in the X dimension progress image left clip value (pixels) in the X dimension progress image top clip value (pixels) in the Y dimension progress image bottom clip value (pixels) in the Y dimension half the size of the slider handle (pixels) in the X dimension half the size of the slider handle (pixels) in the Y dimension compute _valueSizeY & _constraintHeight & default snapValuesY"}},"dojo.widget.Slider._handleKeyEvents":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tif(!evt.key){ return; }\n\t\t\tif(!evt.ctrlKey && !evt.altKey){\n\t\t\t\tswitch(evt.key){\n\t\t\t\t\tcase evt.KEY_LEFT_ARROW:\n\t\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\t\tthis._leftButtonPressed(evt);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase evt.KEY_RIGHT_ARROW:\n\t\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\t\tthis._rightButtonPressed(evt);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase evt.KEY_DOWN_ARROW:\n\t\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\t\tthis._bottomButtonPressed(evt);\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase evt.KEY_UP_ARROW:\n\t\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\t\tthis._topButtonPressed(evt);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._eventCount++;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._pressButton":{"meta":{"summary":"","parameters":{"buttonNode":{"type":"DomNode"}},"src":" \t\tbuttonNode.className = buttonNode.className.replace(\"Outset\",\"Inset\");","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._releaseButton":{"meta":{"summary":"","parameters":{"buttonNode":{"type":"DomNode"}},"src":" \t\tbuttonNode.className = buttonNode.className.replace(\"Inset\",\"Outset\");","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._buttonPressed":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"},"buttonNode":{"type":"DomNode"}},"src":" \t\tthis._setFocus();\n\t\t\tif(typeof evt == \"object\"){\n\t\t\t\tif(this._typamaticTimer != null){\n\t\t\t\t\tif(this._typamaticNode == buttonNode){\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclearTimeout(this._typamaticTimer);\n\t\t\t\t}\n\t\t\t\tthis._buttonReleased(null);\n\t\t\t\tthis._eventCount++;\n\t\t\t\tthis._typamaticTimer = null;\n\t\t\t\tthis._currentTimeout = this.defaultTimeout;\n\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t}else if (evt != this._eventCount){\n\t\t\t\tthis._buttonReleased(null);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (buttonNode == this.leftButtonNode && this.isEnableX){\n\t\t\t\tthis._snapX(dojo.html.getPixelValue (this.sliderHandleNode,\"left\") - this._valueSizeX);\n\t\t\t}\n\t\t\telse if (buttonNode == this.rightButtonNode && this.isEnableX){\n\t\t\t\tthis._snapX(dojo.html.getPixelValue (this.sliderHandleNode,\"left\") + this._valueSizeX);\n\t\t\t}\n\t\t\telse if (buttonNode == this.topButtonNode && this.isEnableY){\n\t\t\t\tthis._snapY(dojo.html.getPixelValue (this.sliderHandleNode,\"top\") - this._valueSizeY);\n\t\t\t}\n\t\t\telse if (buttonNode == this.bottomButtonNode && this.isEnableY){\n\t\t\t\tthis._snapY(dojo.html.getPixelValue (this.sliderHandleNode,\"top\") + this._valueSizeY);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._pressButton(buttonNode);\n\t\t\tthis.notifyListeners();\n\t\t\tthis._typamaticNode = buttonNode;\n\t\t\tthis._typamaticTimer = dojo.lang.setTimeout(this, \"_buttonPressed\", this._currentTimeout, this._eventCount, buttonNode);\n\t\t\tthis._currentTimeout = Math.round(this._currentTimeout * this.timeoutChangeRate);\n\t\t\treturn false;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._bottomButtonPressed":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\treturn this._buttonPressed(evt,this.bottomButtonNode);","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._bottomButtonDoubleClicked":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tvar rc = this._bottomButtonPressed(evt);\n\t\t\tdojo.lang.setTimeout( this, \"_buttonReleased\", 50, null);\n\t\t\treturn rc;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._topButtonPressed":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\treturn this._buttonPressed(evt,this.topButtonNode);","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._topButtonDoubleClicked":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tvar rc = this._topButtonPressed(evt);\n\t\t\tdojo.lang.setTimeout( this, \"_buttonReleased\", 50, null);\n\t\t\treturn rc;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._leftButtonPressed":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\treturn this._buttonPressed(evt,this.leftButtonNode);","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._leftButtonDoubleClicked":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tvar rc = this._leftButtonPressed(evt);\n\t\t\tdojo.lang.setTimeout( this, \"_buttonReleased\", 50, null);\n\t\t\treturn rc;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._rightButtonPressed":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\treturn this._buttonPressed(evt,this.rightButtonNode);","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._rightButtonDoubleClicked":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tvar rc = this._rightButtonPressed(evt);\n\t\t\tdojo.lang.setTimeout( this, \"_buttonReleased\", 50, null);\n\t\t\treturn rc;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._buttonReleased":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tif(typeof evt == \"object\" && evt != null && typeof evt.keyCode != \"undefined\" && evt.keyCode != null){\n\t\t\t\tvar keyCode = evt.keyCode;\n\t\t\t\tswitch(keyCode){\n\t\t\t\t\tcase evt.KEY_LEFT_ARROW:\n\t\t\t\t\tcase evt.KEY_RIGHT_ARROW:\n\t\t\t\t\tcase evt.KEY_DOWN_ARROW:\n\t\t\t\t\tcase evt.KEY_UP_ARROW:\n\t\t\t\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._releaseButton(this.topButtonNode);\n\t\t\tthis._releaseButton(this.bottomButtonNode);\n\t\t\tthis._releaseButton(this.leftButtonNode);\n\t\t\tthis._releaseButton(this.rightButtonNode);\n\t\t\tthis._eventCount++;\n\t\t\tif(this._typamaticTimer != null){\n\t\t\t\tclearTimeout(this._typamaticTimer);\n\t\t\t}\n\t\t\tthis._typamaticTimer = null;\n\t\t\tthis._currentTimeout = this.defaultTimeout;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._mouseWheeled":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tvar scrollAmount = 0;\n\t\t\tif(typeof evt.wheelDelta == 'number'){ \/\/ IE\n\t\t\t\tscrollAmount = evt.wheelDelta;\n\t\t\t}else if (typeof evt.detail == 'number'){ \/\/ Mozilla+Firefox\n\t\t\t\tscrollAmount = -evt.detail;\n\t\t\t}\n\t\t\tif (this.isEnableY){\n\t\t\t\tif(scrollAmount > 0){\n\t\t\t\t\tthis._topButtonPressed(evt);\n\t\t\t\t\tthis._buttonReleased(evt);\n\t\t\t\t}else if (scrollAmount < 0){\n\t\t\t\t\tthis._bottomButtonPressed(evt);\n\t\t\t\t\tthis._buttonReleased(evt);\n\t\t\t\t}\n\t\t\t} else if (this.isEnableX){\n\t\t\t\tif(scrollAmount > 0){\n\t\t\t\t\tthis._rightButtonPressed(evt);\n\t\t\t\t\tthis._buttonReleased(evt);\n\t\t\t\t}else if (scrollAmount < 0){\n\t\t\t\t\tthis._leftButtonPressed(evt);\n\t\t\t\t\tthis._buttonReleased(evt);\n\t\t\t\t}\n\t\t\t}","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._discardEvent":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tdojo.event.browser.stopEvent(evt);","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._setFocus":{"meta":{"summary":"","src":" \t\tif (this.focusNode.focus){\n\t\t\t\tthis.focusNode.focus();\n\t\t\t}","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":" \t\tvar source = this.getFragNodeRef(frag);\n\t\t\tdojo.html.copyStyle(this.domNode, source);\n\t\t\t\/\/ the user's style for the widget might include border and padding\n\t\t\t\/\/ unfortunately, border isn't supported for inline elements\n\t\t\t\/\/ so I get to fake everyone out by setting the border and padding\n\t\t\t\/\/ of the outer table cells\n\t\t\tvar padding = this.domNode.style.padding;\n\t\t\tif (dojo.lang.isString(padding) && padding != \"\" && padding != \"0px\" && padding != \"0px 0px 0px 0px\"){\n\t\t\t\tthis.topBorderNode.style.padding = \n\t\t\t\t\tthis.bottomBorderNode.style.padding = padding;\n\t\t\t\tthis.topBorderNode.style.paddingBottom = \"0px\";\n\t\t\t\tthis.bottomBorderNode.style.paddingTop = \"0px\";\n\t\t\t\tthis.rightBorderNode.style.paddingRight = this.domNode.style.paddingRight;\n\t\t\t\tthis.leftBorderNode.style.paddingLeft= this.domNode.style.paddingLeft;\n\t\t\t\tthis.domNode.style.padding = \"0px 0px 0px 0px\";\n\t\t\t}\n\t\t\tvar borderWidth = this.domNode.style.borderWidth;\n\t\t\tif (dojo.lang.isString(borderWidth) && borderWidth != \"\" && borderWidth != \"0px\" && borderWidth != \"0px 0px 0px 0px\"){\n\t\t\t\tthis.topBorderNode.style.borderStyle = \n\t\t\t\t\tthis.rightBorderNode.style.borderStyle = \n\t\t\t\t\tthis.bottomBorderNode.style.borderStyle = \n\t\t\t\t\tthis.leftBorderNode.style.borderStyle = \n\t\t\t\t\t\tthis.domNode.style.borderStyle;\n\t\t\t\tthis.topBorderNode.style.borderColor = \n\t\t\t\t\tthis.rightBorderNode.style.borderColor = \n\t\t\t\t\tthis.bottomBorderNode.style.borderColor = \n\t\t\t\t\tthis.leftBorderNode.style.borderColor = \n\t\t\t\t\t\tthis.domNode.style.borderColor;\n\t\t\t\tthis.topBorderNode.style.borderWidth = \n\t\t\t\t\tthis.bottomBorderNode.style.borderWidth = borderWidth;\n\t\t\t\tthis.topBorderNode.style.borderBottomWidth = \"0px\";\n\t\t\t\tthis.bottomBorderNode.style.borderTopWidth = \"0px\";\n\t\t\t\tthis.rightBorderNode.style.borderRightWidth = this.domNode.style.borderRightWidth;\n\t\t\t\tthis.leftBorderNode.style.borderLeftWidth = this.domNode.style.borderLeftWidth;\n\t\t\t\tthis.domNode.style.borderWidth = \"0px 0px 0px 0px\";\n\t\t\t}\n\t\t\t\/\/ dojo.debug (\"fillInTemplate - className = \" + this.domNode.className);\n\t\t\t\/\/ setup drag-n-drop for the sliderHandle\n\t\t\tthis._handleMove = new dojo.widget._SliderDragMoveSource (this.sliderHandleNode);\n\t\t\tthis._handleMove.setParent (this);\n\t\t\tif (this.clickSelect){\n\t\t\t\tdojo.event.connect (this.constrainingContainerNode, \"onmousedown\", this, \"_onClick\");\n\t\t\t} \n\t\t\tif (this.isEnableX){\n\t\t\t\tthis.setValueX (!isNaN(this.initialValueX) ? this.initialValueX : (!isNaN(this.minimumX) ? this.minimumX : 0));\n\t\t\t}\n\t\t\tif (!this.isEnableX || !this.showButtons){\n\t\t\t\tthis.rightButtonNode.style.width = \"1px\"; \/\/ allow the border to show\n\t\t\t\tthis.rightButtonNode.style.visibility = \"hidden\";\n\t\t\t\tthis.leftButtonNode.style.width = \"1px\"; \/\/ allow the border to show\n\t\t\t\tthis.leftButtonNode.style.visibility = \"hidden\";\n\t\t\t}\n\t\t\tif (this.isEnableY){\n\t\t\t\tthis.setValueY (!isNaN(this.initialValueY) ? this.initialValueY : (!isNaN(this.minimumY) ? this.minimumY : 0));\n\t\t\t}\n\t\t\tif (!this.isEnableY || !this.showButtons){\n\t\t\t\tthis.bottomButtonNode.style.width = \"1px\"; \/\/ allow the border to show\n\t\t\t\tthis.bottomButtonNode.style.visibility = \"hidden\";\n\t\t\t\tthis.topButtonNode.style.width = \"1px\"; \/\/ allow the border to show\n\t\t\t\tthis.topButtonNode.style.visibility = \"hidden\";\n\t\t\t}\n\t\t\tif(this.focusNode.addEventListener){\n\t\t\t\t\/\/ dojo.event.connect() doesn't seem to work with DOMMouseScroll\n\t\t\t\tthis.focusNode.addEventListener('DOMMouseScroll', dojo.lang.hitch(this, \"_mouseWheeled\"), false); \/\/ Mozilla + Firefox + Netscape\n\t\t\t}","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._snapX":{"meta":{"summary":"","parameters":{"x":{"type":"Number"}},"src":" \t\tif (x < 0){ x = 0; }\n\t\t\telse if (x > this._constraintWidth){ x = this._constraintWidth; }\n\t\t\telse {\n\t\t\t\tvar selectedValue = Math.round (x \/ this._valueSizeX);\n\t\t\t\tx = Math.round (selectedValue * this._valueSizeX);\n\t\t\t}\n\t\t\tthis.sliderHandleNode.style.left = x + \"px\";\n\t\t\tif (this.flipX){\n\t\t\t\tthis._clipLeft = x + this._clipXdelta;\n\t\t\t} else {\n\t\t\t\tthis._clipRight = x + this._clipXdelta;\n\t\t\t}\n\t\t\tthis.progressBackgroundNode.style.clip = \"rect(\"+this._clipTop+\"px,\"+this._clipRight+\"px,\"+this._clipBottom+\"px,\"+this._clipLeft+\"px)\";","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._calc_valueSizeX":{"meta":{"summary":"","src":" \t\tvar constrainingCtrBox = dojo.html.getContentBox(this.constrainingContainerNode);\n\t\t\tvar sliderHandleBox = dojo.html.getContentBox(this.sliderHandleNode);\n\t\t\tif (isNaN(constrainingCtrBox.width) || isNaN(sliderHandleBox.width) || constrainingCtrBox.width <= 0 || sliderHandleBox.width <= 0){ \n\t\t\t\treturn false; \n\t\t\t}\n\t\t\tthis._constraintWidth = constrainingCtrBox.width \n\t\t\t\t+ dojo.html.getPadding(this.constrainingContainerNode).width\n\t\t\t\t- sliderHandleBox.width;\n\t\t\tif (this.flipX){\n\t\t\t\tthis._clipLeft = this._clipRight = constrainingCtrBox.width;\n\t\t\t} else {\n\t\t\t\tthis._clipLeft = this._clipRight = 0;\n\t\t\t}\n\t\t\tthis._clipXdelta = sliderHandleBox.width >> 1;\n\t\t\tif (!this.isEnableY){\n\t\t\t\tthis._clipTop = 0;\n\t\t\t\tthis._clipBottom = constrainingCtrBox.height;\n\t\t\t}\n\t\t\tif (this._constraintWidth <= 0){ return false; }\n\t\t\tif (this.snapValuesX == 0){\n\t\t\t\tthis.snapValuesX = this._constraintWidth + 1;\n\t\t\t}\n\t\t\tthis._valueSizeX = this._constraintWidth \/ (this.snapValuesX - 1);\n\t\t\treturn true;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider.setValueX":{"meta":{"summary":"","parameters":{"value":{"type":"Number"}},"src":" \t\tif (0.0 == this._valueSizeX){\n\t\t\t\tif (this._calc_valueSizeX () == false){\n\t\t\t\t\tdojo.lang.setTimeout(this, \"setValueX\", 100, value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isNaN(value)){\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tif (value > this.maximumX){\n\t\t\t\tvalue = this.maximumX;\n\t\t\t}\n\t\t\telse if (value < this.minimumX){\n\t\t\t\tvalue = this.minimumX;\n\t\t\t}\n\t\t\tvar pixelPercent = (value-this.minimumX) \/ (this.maximumX-this.minimumX);\n\t\t\tif (this.flipX){\n\t\t\t\tpixelPercent = 1.0 - pixelPercent;\n\t\t\t}\n\t\t\tthis._snapX (pixelPercent * this._constraintWidth);\n\t\t\tthis.notifyListeners();","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider.getValueX":{"meta":{"summary":"","src":" \t\tvar pixelPercent = dojo.html.getPixelValue (this.sliderHandleNode,\"left\") \/ this._constraintWidth;\n\t\t\tif (this.flipX){\n\t\t\t\tpixelPercent = 1.0 - pixelPercent;\n\t\t\t}\n\t\t\treturn Math.round (pixelPercent * (this.snapValuesX-1)) * ((this.maximumX-this.minimumX) \/ (this.snapValuesX-1)) + this.minimumX;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._snapY":{"meta":{"summary":"","parameters":{"y":{"type":"Number"}},"src":" \t\tif (y < 0){ y = 0; }\n\t\t\telse if (y > this._constraintHeight){ y = this._constraintHeight; }\n\t\t\telse {\n\t\t\t\tvar selectedValue = Math.round (y \/ this._valueSizeY);\n\t\t\t\ty = Math.round (selectedValue * this._valueSizeY);\n\t\t\t}\n\t\t\tthis.sliderHandleNode.style.top = y + \"px\";\n\t\t\tif (this.flipY){\n\t\t\t\tthis._clipTop = y + this._clipYdelta;\n\t\t\t} else {\n\t\t\t\tthis._clipBottom = y + this._clipYdelta;\n\t\t\t}\n\t\t\tthis.progressBackgroundNode.style.clip = \"rect(\"+this._clipTop+\"px,\"+this._clipRight+\"px,\"+this._clipBottom+\"px,\"+this._clipLeft+\"px)\";","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._calc_valueSizeY":{"meta":{"summary":"","src":" \t\tvar constrainingCtrBox = dojo.html.getContentBox(this.constrainingContainerNode);\n\t\t\tvar sliderHandleBox = dojo.html.getContentBox(this.sliderHandleNode);\n\t\t\tif (isNaN(constrainingCtrBox.height) || isNaN(sliderHandleBox.height) || constrainingCtrBox.height <= 0 || sliderHandleBox.height <= 0){ \n\t\t\t\treturn false; \n\t\t\t}\n\t\t\tthis._constraintHeight = constrainingCtrBox.height\n\t\t\t\t+ dojo.html.getPadding(this.constrainingContainerNode).height\n\t\t\t\t- sliderHandleBox.height;\n\t\t\tif (this.flipY){\n\t\t\t\tthis._clipTop = this._clipBottom = constrainingCtrBox.height;\n\t\t\t} else {\n\t\t\t\tthis._clipTop = this._clipBottom = 0;\n\t\t\t}\n\t\t\tthis._clipYdelta = sliderHandleBox.height >> 1;\n\t\t\tif (!this.isEnableX){\n\t\t\t\tthis._clipLeft = 0;\n\t\t\t\tthis._clipRight = constrainingCtrBox.width;\n\t\t\t}\n\t\t\tif (this._constraintHeight <= 0){ return false; }\n\t\t\tif (this.snapValuesY == 0){\n\t\t\t\tthis.snapValuesY = this._constraintHeight + 1;\n\t\t\t}\n\t\t\tthis._valueSizeY = this._constraintHeight \/ (this.snapValuesY - 1);\n\t\t\treturn true;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider.setValueY":{"meta":{"summary":"","parameters":{"value":{"type":"Number"}},"src":" \t\tif (0.0 == this._valueSizeY){\n\t\t\t\tif (this._calc_valueSizeY () == false){\n\t\t\t\t\tdojo.lang.setTimeout(this, \"setValueY\", 100, value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isNaN(value)){\n\t\t\t\tvalue = 0;\n\t\t\t}\n\t\t\tif (value > this.maximumY){\n\t\t\t\tvalue = this.maximumY;\n\t\t\t}\n\t\t\telse if (value < this.minimumY){\n\t\t\t\tvalue = this.minimumY;\n\t\t\t}\n\t\t\tvar pixelPercent = (value-this.minimumY) \/ (this.maximumY-this.minimumY);\n\t\t\tif (this.flipY){\n\t\t\t\tpixelPercent = 1.0 - pixelPercent;\n\t\t\t}\n\t\t\tthis._snapY (pixelPercent * this._constraintHeight);\n\t\t\tthis.notifyListeners();","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider.getValueY":{"meta":{"summary":"","src":" \t\tvar pixelPercent = dojo.html.getPixelValue (this.sliderHandleNode,\"top\") \/ this._constraintHeight;\n\t\t\tif (this.flipY){\n\t\t\t\tpixelPercent = 1.0 - pixelPercent;\n\t\t\t}\n\t\t\treturn Math.round (pixelPercent * (this.snapValuesY-1)) * ((this.maximumY-this.minimumY) \/ (this.snapValuesY-1)) + this.minimumY;","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider._onClick":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \t\tif (this._isDragInProgress){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar parent = dojo.html.getAbsolutePosition(this.constrainingContainerNode, true, dojo.html.boxSizing.MARGIN_BOX);\n\t\t\tvar content = dojo.html.getContentBox(this._handleMove.domNode);\t\t\t\n\t\t\tif (this.isEnableX){\n\t\t\t\tvar x = evt.pageX - parent.x - (content.width >> 1);\n\t\t\t\tthis._snapX(x);\n\t\t\t}\n\t\t\tif (this.isEnableY){\n\t\t\t\tvar y = evt.pageY - parent.y - (content.height >> 1);\n\t\t\t\tthis._snapY(y);\n\t\t\t}\n\t\t\tthis.notifyListeners();","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider.notifyListeners":{"meta":{"summary":"","src":" \t\tthis.onValueChanged(this.getValueX(), this.getValueY());","prototype":"dojo.widget.Slider"}},"dojo.widget.Slider.onValueChanged":{"meta":{"summary":"","parameters":{"x":{"type":"Number"},"y":{"type":"Number"}},"src":"","prototype":"dojo.widget.Slider"}},"dojo.widget.SliderHorizontal":{"meta":{"prototype_chain":["dojo.widget.Slider"],"call_chain":["dojo.widget.Slider"],"prototype_variables":["isEnableX","isEnableY","initialValue","snapValues","minimum","maximum","buttonStyle","backgroundSize","backgroundSrc","flip"],"variables":["isEnableX","isEnableY","initialValue","snapValues","minimum","maximum","buttonStyle","backgroundSize","backgroundSrc","flip"],"instance_variables":["initialValueX","minimumX","maximumX","snapValuesX","buttonStyleX","flipX"],"summary":"the horizontal slider widget subclass"}},"dojo.widget.SliderHorizontal.postMixInProperties":{"meta":{"summary":"","src":" \t\tdojo.widget.SliderHorizontal.superclass.postMixInProperties.apply(this, arguments);\n\t\t\tif (!isNaN(parseFloat(this.initialValue))){\n\t\t\t\tthis.initialValueX = parseFloat(this.initialValue);\n\t\t\t}\n\t\t\tif (!isNaN(parseFloat(this.minimum))){\n\t\t\t\tthis.minimumX = parseFloat(this.minimum);\n\t\t\t}\n\t\t\tif (!isNaN(parseFloat(this.maximum))){\n\t\t\t\tthis.maximumX = parseFloat(this.maximum);\n\t\t\t}\n\t\t\tif (!isNaN(parseInt(this.snapValues))){\n\t\t\t\tthis.snapValuesX = parseInt(this.snapValues);\n\t\t\t}\n\t\t\tif (dojo.lang.isString(this.buttonStyle) && this.buttonStyle != \"\"){\n\t\t\t\tthis.buttonStyleX = this.buttonStyle;\n\t\t\t}\n\t\t\tif (dojo.lang.isBoolean(this.flip)){\n\t\t\t\tthis.flipX = this.flip;\n\t\t\t}","call_chain":["dojo.widget.SliderHorizontal.superclass.postMixInProperties"],"prototype":"dojo.widget.SliderHorizontal"}},"dojo.widget.SliderHorizontal.notifyListeners":{"meta":{"summary":"","src":" \t\tthis.onValueChanged(this.getValueX());","prototype":"dojo.widget.SliderHorizontal"}},"dojo.widget.SliderHorizontal.getValue":{"meta":{"summary":"","src":" \t\treturn this.getValueX ();","prototype":"dojo.widget.SliderHorizontal"}},"dojo.widget.SliderHorizontal.setValue":{"meta":{"summary":"","parameters":{"value":{"type":"Number"}},"src":" \t\tthis.setValueX (value);","prototype":"dojo.widget.SliderHorizontal"}},"dojo.widget.SliderHorizontal.onValueChanged":{"meta":{"summary":"","parameters":{"value":{"type":"Number"}},"src":"","prototype":"dojo.widget.SliderHorizontal"}},"dojo.widget.SliderVertical":{"meta":{"prototype_chain":["dojo.widget.Slider"],"call_chain":["dojo.widget.Slider"],"prototype_variables":["isEnableX","isEnableY","initialValue","snapValues","minimum","maximum","buttonStyle","backgroundSize","backgroundSrc","flip"],"variables":["isEnableX","isEnableY","initialValue","snapValues","minimum","maximum","buttonStyle","backgroundSize","backgroundSrc","flip"],"instance_variables":["initialValueY","minimumY","maximumY","snapValuesY","buttonStyleY","flipY"],"summary":"the vertical slider widget subclass"}},"dojo.widget.SliderVertical.postMixInProperties":{"meta":{"summary":"","src":" \t\tdojo.widget.SliderVertical.superclass.postMixInProperties.apply(this, arguments);\n\t\t\tif (!isNaN(parseFloat(this.initialValue))){\n\t\t\t\tthis.initialValueY = parseFloat(this.initialValue);\n\t\t\t}\n\t\t\tif (!isNaN(parseFloat(this.minimum))){\n\t\t\t\tthis.minimumY = parseFloat(this.minimum);\n\t\t\t}\n\t\t\tif (!isNaN(parseFloat(this.maximum))){\n\t\t\t\tthis.maximumY = parseFloat(this.maximum);\n\t\t\t}\n\t\t\tif (!isNaN(parseInt(this.snapValues))){\n\t\t\t\tthis.snapValuesY = parseInt(this.snapValues);\n\t\t\t}\n\t\t\tif (dojo.lang.isString(this.buttonStyle) && this.buttonStyle != \"\"){\n\t\t\t\tthis.buttonStyleY = this.buttonStyle;\n\t\t\t}\n\t\t\tif (dojo.lang.isBoolean(this.flip)){\n\t\t\t\tthis.flipY = this.flip;\n\t\t\t}","call_chain":["dojo.widget.SliderVertical.superclass.postMixInProperties"],"prototype":"dojo.widget.SliderVertical"}},"dojo.widget.SliderVertical.notifyListeners":{"meta":{"summary":"","src":" \t\tthis.onValueChanged(this.getValueY());","prototype":"dojo.widget.SliderVertical"}},"dojo.widget.SliderVertical.getValue":{"meta":{"summary":"","src":" \t\treturn this.getValueY ();","prototype":"dojo.widget.SliderVertical"}},"dojo.widget.SliderVertical.setValue":{"meta":{"summary":"","parameters":{"value":{"type":"Number"}},"src":" \t\tthis.setValueY (value);","prototype":"dojo.widget.SliderVertical"}},"dojo.widget.SliderVertical.onValueChanged":{"meta":{"summary":"","parameters":{"value":{"type":"Number"}},"src":"","prototype":"dojo.widget.SliderVertical"}}}}},"dojo.widget.SortableTable":{"meta":{"requires":{"common":["dojo.lang.common","dojo.date.format","dojo.html.*","dojo.html.selection","dojo.html.util","dojo.html.style","dojo.event.*","dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.SortableTable":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["enableMultipleSelect","maximumNumberOfSelections","enableAlternateRows","minRows","defaultDateFormat","sortIndex","sortDirection","valueField","headClass","tbodyClass","headerClass","headerSortUpClass","headerSortDownClass","rowClass","rowAlternateClass","rowSelectedClass","columnSelected","isContainer","templatePath","templateCssPath","getTypeFromString","compare","isSelected","removeFromSelected","getSelection","getValue","reset","resetSelections","getObjectFromRow","setSelectionByRow","parseColumns","parseData","parseDataFromTable","showSelections","render","onSelect","onUISelect","onHeaderClick","postCreate"],"variables":["enableMultipleSelect","maximumNumberOfSelections","enableAlternateRows","minRows","defaultDateFormat","sortIndex","sortDirection","valueField","headClass","tbodyClass","headerClass","headerSortUpClass","headerSortDownClass","rowClass","rowAlternateClass","rowSelectedClass","columnSelected","isContainer","templatePath","templateCssPath","getTypeFromString","compare","isSelected","removeFromSelected","getSelection","getValue","reset","resetSelections","getObjectFromRow","setSelectionByRow","parseColumns","parseData","parseDataFromTable","showSelections","render","onSelect","onUISelect","onHeaderClick","postCreate"],"summary":"","src":" \tthis.data=[];\n\t\tthis.selected=[];\t\t\/\/\talways an array to handle multiple selections.\n\t\tthis.columns=[];","instance_variables":["data","selected","columns"]}}}}},"dojo.widget.Spinner":{"meta":{"requires":{"common":["dojo.io.*","dojo.lfx.*","dojo.html.*","dojo.html.layout","dojo.string","dojo.widget.*","dojo.widget.IntegerTextbox","dojo.widget.RealNumberTextbox","dojo.widget.DateTextbox","dojo.experimental"]},"functions":{"dojo.widget.IntegerSpinner":{"meta":{"prototype_variables":["delta"],"variables":["delta"],"instance_variables":["flags.signed"],"summary":"an IntegerTextbox with +\/- buttons"}},"dojo.widget.IntegerSpinner.postMixInProperties":{"meta":{"summary":"","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":" \tdojo.widget.IntegerSpinner.superclass.postMixInProperties.apply(this, arguments);\n\t\tthis._spinnerPostMixInProperties(args, frag);","call_chain":["dojo.widget.IntegerSpinner.superclass.postMixInProperties"],"prototype":"dojo.widget.IntegerSpinner"}},"dojo.widget.IntegerSpinner.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":" \tdojo.widget.IntegerSpinner.superclass.postCreate.apply(this, arguments);\n\t\tthis._spinnerPostCreate(args, frag);","call_chain":["dojo.widget.IntegerSpinner.superclass.postCreate"],"prototype":"dojo.widget.IntegerSpinner"}},"dojo.widget.IntegerSpinner.adjustValue":{"meta":{"summary":"","parameters":{"direction":{"type":"Number"},"x":{"type":"Number"}},"src":"\t\tvar val = this.getValue().replace(\/[^\\-+\\d]\/g, \"\");\n\t\tif(val.length == 0){ return; }\n\t\tvar num = Math.min(Math.max((parseInt(val)+(parseInt(this.delta) * direction)), (this.flags.min?this.flags.min:-Infinity)), (this.flags.max?this.flags.max:+Infinity));\n\t\tval = num.toString();\n\t\tif(num >= 0){\n\t\t\tval = ((this.flags.signed == true)?'+':' ')+val; \/\/ make sure first char is a nondigit\n\t\t}\n\t\tif(this.flags.separator.length > 0){\n\t\t\tfor (var i=val.length-3; i > 1; i-=3){\n\t\t\t\tval = val.substr(0,i)+this.flags.separator+val.substr(i);\n\t\t\t}\n\t\t}\n\t\tif(val.substr(0,1) == ' '){ val = val.substr(1); } \/\/ remove space\n\t\tthis.setValue(val);\n\t\treturn val.length;","prototype":"dojo.widget.IntegerSpinner"},"extra":{"parameters":{"direction":{"type":"0","summary":"revalidate existing value"}}}},"dojo.widget.RealNumberSpinner":{"meta":{"prototype_variables":["delta"],"variables":["delta"],"instance_variables":["flags.eSigned","flags.exponent","flags.places","flags.signed"],"summary":"","src":" function(){ dojo.experimental(\"dojo.widget.RealNumberSpinner\");    "}},"dojo.widget.RealNumberSpinner.postMixInProperties":{"meta":{"summary":"","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":" \tdojo.widget.RealNumberSpinner.superclass.postMixInProperties.apply(this, arguments);\n\t\tthis._spinnerPostMixInProperties(args, frag);","call_chain":["dojo.widget.RealNumberSpinner.superclass.postMixInProperties"],"prototype":"dojo.widget.RealNumberSpinner"}},"dojo.widget.RealNumberSpinner.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":" \tdojo.widget.RealNumberSpinner.superclass.postCreate.apply(this, arguments);\n\t\tthis._spinnerPostCreate(args, frag);","call_chain":["dojo.widget.RealNumberSpinner.superclass.postCreate"],"prototype":"dojo.widget.RealNumberSpinner"}},"dojo.widget.RealNumberSpinner.adjustValue":{"meta":{"summary":"","parameters":{"direction":{"type":"Number"},"x":{"type":"Number"}},"src":" \t\tvar val = this.getValue().replace(\/[^\\-+\\.eE\\d]\/g, \"\");\n\t\t\tif(!val.length){ return; }\n\t\t\tvar num = parseFloat(val);\n\t\t\tif(isNaN(num)){ return; }\n\t\t\tvar delta = this.delta.split(\/[eE]\/);\n\t\t\tif(!delta.length){\n\t\t\t\tdelta = [1, 1];\n\t\t\t}else{\n\t\t\t\tdelta[0] = parseFloat(delta[0].replace(\/[^\\-+\\.\\d]\/g, \"\"));\n\t\t\t\tif(isNaN(delta[0])){ delta[0] = 1; }\n\t\t\t\tif(delta.length > 1){\n\t\t\t\t\tdelta[1] = parseInt(delta[1]);\n\t\t\t\t}\n\t\t\t\tif(isNaN(delta[1])){ delta[1] = 1; }\n\t\t\t}\n\t\t\tval = this.getValue().split(\/[eE]\/);\n\t\t\tif(!val.length){ return; }\n\t\t\tvar numBase = parseFloat(val[0].replace(\/[^\\-+\\.\\d]\/g, \"\"));\n\t\t\tif(val.length == 1){\n\t\t\t\tvar numExp = 0;\n\t\t\t}else{\n\t\t\t\tvar numExp = parseInt(val[1].replace(\/[^\\-+\\d]\/g, \"\"));\n\t\t\t}\n\t\t\tif(x <= val[0].length){\n\t\t\t\tx = 0;\n\t\t\t\tnumBase += delta[0] * direction;\n\t\t\t}else{\n\t\t\t\tx = Number.MAX_VALUE;\n\t\t\t\tnumExp += delta[1] * direction;\n\t\t\t\tif(this.flags.eSigned == false && numExp < 0){\n\t\t\t\t\tnumExp = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnum = Math.min(Math.max((numBase * Math.pow(10,numExp)), (this.flags.min?this.flags.min:-Infinity)), (this.flags.max?this.flags.max:+Infinity));\n\t\t\tif((this.flags.exponent == true || (this.flags.exponent != false && x != 0)) && num.toExponential){\n\t\t\t\tif (isNaN(this.flags.places) || this.flags.places == Infinity){\n\t\t\t\t\tval = num.toExponential();\n\t\t\t\t}else{\n\t\t\t\t\tval = num.toExponential(this.flags.places);\n\t\t\t\t}\n\t\t\t}else if(num.toFixed && num.toPrecision){\n\t\t\t\tif(isNaN(this.flags.places) || this.flags.places == Infinity){\n\t\t\t\t\tval = num.toPrecision((1\/3).toString().length-1);\n\t\t\t\t}else{\n\t\t\t\t\tval = num.toFixed(this.flags.places);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tval = num.toString();\n\t\t\t}\n\t\t\tif(num >= 0){\n\t\t\t\tif(this.flags.signed == true){\n\t\t\t\t\tval = '+' + val;\n\t\t\t\t}\n\t\t\t}\n\t\t\tval = val.split(\/[eE]\/);\n\t\t\tif(this.flags.separator.length > 0){\n\t\t\t\tif(num >= 0 && val[0].substr(0,1) != '+'){\n\t\t\t\t\tval[0] = ' ' + val[0]; \/\/ make sure first char is nondigit for easy algorithm\n\t\t\t\t}\n\t\t\t\tvar i = val[0].lastIndexOf('.');\n\t\t\t\tif(i >= 0){\n\t\t\t\t\ti -= 3;\n\t\t\t\t}else{\n\t\t\t\t\ti = val[0].length-3;\n\t\t\t\t}\n\t\t\t\tfor (; i > 1; i-=3){\n\t\t\t\t\tval[0] = val[0].substr(0,i)+this.flags.separator+val[0].substr(i);\n\t\t\t\t}\n\t\t\t\tif(val[0].substr(0,1) == ' '){ val[0] = val[0].substr(1); } \/\/ remove space\n\t\t\t}\n\t\t\tif(val.length > 1){\n\t\t\t\tif((this.flags.eSigned == true)&&(val[1].substr(0,1) != '+')){\n\t\t\t\t\tval[1] = '+' + val[1];\n\t\t\t\t}else if((!this.flags.eSigned)&&(val[1].substr(0,1) == '+')){\n\t\t\t\t\tval[1] = val[1].substr(1);\n\t\t\t\t}else if((!this.flags.eSigned)&&(val[1].substr(0,1) == '-')&&(num.toFixed && num.toPrecision)){\n\t\t\t\t\tif(isNaN(this.flags.places)){\n\t\t\t\t\t\tval[0] = num.toPrecision((1\/3).toString().length-1);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tval[0] = num.toFixed(this.flags.places).toString();\n\t\t\t\t\t}\n\t\t\t\t\tval[1] = \"0\";\n\t\t\t\t}\n\t\t\t\tval[0] += 'e' + val[1];\n\t\t\t}\n\t\t\tthis.setValue(val[0]);\n\t\t\tif(x > val[0].length){ x = val[0].length; }\n\t\t\treturn x;","prototype":"dojo.widget.RealNumberSpinner"}},"dojo.widget.TimeSpinner.postMixInProperties":{"meta":{"summary":"","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":" \tdojo.widget.TimeSpinner.superclass.postMixInProperties.apply(this, arguments);\n\t\tthis._spinnerPostMixInProperties(args, frag);","call_chain":["dojo.widget.TimeSpinner.superclass.postMixInProperties"],"prototype":"dojo.widget.TimeSpinner"}},"dojo.widget.TimeSpinner.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"}},"src":" \tdojo.widget.TimeSpinner.superclass.postCreate.apply(this, arguments);\n\t\tthis._spinnerPostCreate(args, frag);","call_chain":["dojo.widget.TimeSpinner.superclass.postCreate"],"prototype":"dojo.widget.TimeSpinner"}},"dojo.widget.TimeSpinner.adjustValue":{"meta":{"summary":"","parameters":{"direction":{"type":"Number"},"x":{"type":"Number"}},"src":" \tvar val = this.getValue();\n\t\tvar format = (this.flags.format && this.flags.format.search(\/[Hhmst]\/) >= 0) ? this.flags.format : \"hh:mm:ss t\";\n\t\tif(direction == 0 || !val.length || !this.isValid()){ return; }\n\t\tif (!this.flags.amSymbol){\n\t\t\tthis.flags.amSymbol = \"AM\";\n\t\t}\n\t\tif (!this.flags.pmSymbol){\n\t\t\tthis.flags.pmSymbol = \"PM\";\n\t\t}\n\t\tvar re = dojo.regexp.time(this.flags);\n\t\tvar qualifiers = format.replace(\/H\/g,\"h\").replace(\/[^hmst]\/g,\"\").replace(\/([hmst])\\1\/g,\"$1\");\n\t\tvar hourPos = qualifiers.indexOf('h') + 1;\n\t\tvar minPos = qualifiers.indexOf('m') + 1;\n\t\tvar secPos = qualifiers.indexOf('s') + 1;\n\t\tvar ampmPos = qualifiers.indexOf('t') + 1;\n\t\t\/\/ tweak format to match the incoming data exactly to help find where the cursor is\n\t\tvar cursorFormat = format;\n\t\tvar ampm = \"\";\n\t\tif (ampmPos > 0){\n\t\t\tampm = val.replace(new RegExp(re),\"$\"+ampmPos);\n\t\t\tcursorFormat = cursorFormat.replace(\/t+\/, ampm.replace(\/.\/g,\"t\"));\n\t\t}\n\t\tvar hour = 0;\n\t\tvar deltaHour = 1;\n\t\tif (hourPos > 0){\n\t\t\thour = val.replace(new RegExp(re),\"$\"+hourPos);\n\t\t\tif (dojo.lang.isString(this.delta)){\n\t\t\t\tdeltaHour = this.delta.replace(new RegExp(re),\"$\"+hourPos);\n\t\t\t}\n\t\t\tif (isNaN(deltaHour)){\n\t\t\t\tdeltaHour = 1;\n\t\t\t} else {\n\t\t\t\tdeltaHour = parseInt(deltaHour);\n\t\t\t}\n\t\t\tif (hour.length == 2){\n\t\t\t\tcursorFormat = cursorFormat.replace(\/([Hh])+\/, \"$1$1\");\n\t\t\t} else {\n\t\t\t\tcursorFormat = cursorFormat.replace(\/([Hh])+\/, \"$1\");\n\t\t\t}\n\t\t\tif (isNaN(hour)){\n\t\t\t\thour = 0;\n\t\t\t} else {\n\t\t\t\thour = parseInt(hour.replace(\/^0(\\d)\/,\"$1\"));\n\t\t\t}\n\t\t}\n\t\tvar min = 0;\n\t\tvar deltaMin = 1;\n\t\tif (minPos > 0){\n\t\t\tmin = val.replace(new RegExp(re),\"$\"+minPos);\n\t\t\tif (dojo.lang.isString(this.delta)){\n\t\t\t\tdeltaMin = this.delta.replace(new RegExp(re),\"$\"+minPos);\n\t\t\t}\n\t\t\tif (isNaN(deltaMin)){\n\t\t\t\tdeltaMin = 1;\n\t\t\t} else {\n\t\t\t\tdeltaMin = parseInt(deltaMin);\n\t\t\t}\n\t\t\tcursorFormat = cursorFormat.replace(\/m+\/, min.replace(\/.\/g,\"m\"));\n\t\t\tif (isNaN(min)){\n\t\t\t\tmin = 0;\n\t\t\t} else {\n\t\t\t\tmin = parseInt(min.replace(\/^0(\\d)\/,\"$1\"));\n\t\t\t}\n\t\t}\n\t\tvar sec = 0;\n\t\tvar deltaSec = 1;\n\t\tif (secPos > 0){\n\t\t\tsec = val.replace(new RegExp(re),\"$\"+secPos);\n\t\t\tif (dojo.lang.isString(this.delta)){\n\t\t\t\tdeltaSec = this.delta.replace(new RegExp(re),\"$\"+secPos);\n\t\t\t}\n\t\t\tif (isNaN(deltaSec)){\n\t\t\t\tdeltaSec = 1;\n\t\t\t} else {\n\t\t\t\tdeltaSec = parseInt(deltaSec);\n\t\t\t}\n\t\t\tcursorFormat = cursorFormat.replace(\/s+\/, sec.replace(\/.\/g,\"s\"));\n\t\t\tif (isNaN(sec)){\n\t\t\t\tsec = 0;\n\t\t\t} else {\n\t\t\t\tsec = parseInt(sec.replace(\/^0(\\d)\/,\"$1\"));\n\t\t\t}\n\t\t}\n\t\tif (isNaN(x) || x >= cursorFormat.length){\n\t\t\tx = cursorFormat.length-1;\n\t\t}\n\t\tvar cursorToken = cursorFormat.charAt(x);\n\t\tswitch(cursorToken){\n\t\t\tcase 't':\n\t\t\t\tif (ampm == this.flags.amSymbol){\n\t\t\t\t\tampm = this.flags.pmSymbol;\n\t\t\t\t}\n\t\t\t\telse if (ampm == this.flags.pmSymbol){\n\t\t\t\t\tampm = this.flags.amSymbol;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (hour >= 1 && hour < 12 && ampm == this.flags.pmSymbol){\n\t\t\t\t\thour += 12;\n\t\t\t\t}\n\t\t\t\tif (hour == 12 && ampm == this.flags.amSymbol){\n\t\t\t\t\thour = 0;\n\t\t\t\t}\n\t\t\t\tswitch(cursorToken){\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tsec += deltaSec * direction;\n\t\t\t\t\t\twhile (sec < 0){\n\t\t\t\t\t\t\tmin--;\n\t\t\t\t\t\t\tsec += 60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (sec >= 60){\n\t\t\t\t\t\t\tmin++;\n\t\t\t\t\t\t\tsec -= 60;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\tif (cursorToken == 'm'){\n\t\t\t\t\t\t\tmin += deltaMin * direction;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (min < 0){\n\t\t\t\t\t\t\thour--;\n\t\t\t\t\t\t\tmin += 60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (min >= 60){\n\t\t\t\t\t\t\thour++;\n\t\t\t\t\t\t\tmin -= 60;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'h':\n\t\t\t\t\tcase 'H':\n\t\t\t\t\t\tif (cursorToken == 'h' || cursorToken == 'H'){\n\t\t\t\t\t\t\thour += deltaHour * direction;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (hour < 0){\n\t\t\t\t\t\t\thour += 24;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (hour >= 24){\n\t\t\t\t\t\t\thour -= 24;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: \/\/ should never get here\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (hour >= 12){\n\t\t\t\t\tampm = this.flags.pmSymbol;\n\t\t\t\t\tif (format.indexOf('h') >= 0 && hour >= 13){\n\t\t\t\t\t\thour -= 12;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tampm = this.flags.amSymbol;\n\t\t\t\t\tif (format.indexOf('h') >= 0 && hour == 0){\n\t\t\t\t\t\thour = 12;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tcursorFormat = format;\n\t\tif (hour >= 0 && hour < 10 && format.search(\/[hH]{2}\/) >= 0){\n\t\t\thour = \"0\" + hour.toString();\n\t\t}\n\t\tif (hour >= 10 && cursorFormat.search(\/[hH]{2}\/) < 0 ){\n\t\t\tcursorFormat = cursorFormat.replace(\/(h|H)\/, \"$1$1\");\n\t\t}\n\t\tif (min >= 0 && min < 10 && cursorFormat.search(\/mm\/) >= 0){\n\t\t\tmin = \"0\" + min.toString();\n\t\t}\n\t\tif (min >= 10 && cursorFormat.search(\/mm\/) < 0 ){\n\t\t\tcursorFormat = cursorFormat.replace(\/m\/, \"$1$1\");\n\t\t}\n\t\tif (sec >= 0 && sec < 10 && cursorFormat.search(\/ss\/) >= 0){\n\t\t\tsec = \"0\" + sec.toString();\n\t\t}\n\t\tif (sec >= 10 && cursorFormat.search(\/ss\/) < 0 ){\n\t\t\tcursorFormat = cursorFormat.replace(\/s\/, \"$1$1\");\n\t\t}\n\t\tx = cursorFormat.indexOf(cursorToken);\n\t\tif (x == -1){\n\t\t\tx = format.length;\n\t\t}\n\t\tformat = format.replace(\/[hH]+\/, hour);\n\t\tformat = format.replace(\/m+\/, min);\n\t\tformat = format.replace(\/s+\/, sec);\n\t\tformat = format.replace(\/t\/, ampm);\n\t\tthis.setValue(format);\n\t\tif(x > format.length){ x = format.length; }\n\t\treturn x;","prototype":"dojo.widget.TimeSpinner"}},"dojo.widget.TimeSpinner":{"meta":{"instance_variables":["flags.amSymbol","flags.pmSymbol"],"summary":"","src":" function(){ dojo.experimental(\"dojo.widget.TimeSpinner\");    "}}}}},"dojo.widget.SplitContainer":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.ContentPane","dojo.widget.HtmlWidget","dojo.html.style","dojo.html.layout","dojo.html.selection","dojo.io.cookie"]},"functions":{"dojo.widget.SplitContainer":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","templateCssPath","activeSizing","sizerWidth","orientation","persist"],"variables":["isContainer","templateCssPath","activeSizing","sizerWidth","orientation","persist"],"instance_variables":["isHorizontal","domNode.style.overflow","paneWidth","paneHeight","sizerWidth","virtualSizer","virtualSizer.style.position","virtualSizer.style.display","virtualSizer.style.zIndex","virtualSizer.className","sizers.length","children.length","paneBefore","paneAfter","isSizing","sizingSplitter","originPos","startPoint","screenToClientOffset","dragOffset","lastPoint","isDraggingLeft","paneBefore.sizeActual","paneAfter.position","paneAfter.sizeActual","virtualSizer.style.left","virtualSizer.style.top","sizers"],"summary":"","src":" \tthis.sizers = [];"},"extra":{"variables":{"orientation":{"type":"String","summary":"either 'horizontal' or vertical; indicates whether the children are arranged side-by-side or up\/down."},"persist":{"type":"Boolean","summary":"Save splitter positions in a cookie"}}}},"dojo.widget.SplitContainer.postMixInProperties":{"meta":{"summary":"","src":" \tdojo.widget.SplitContainer.superclass.postMixInProperties.apply(this, arguments);\n\t\tthis.isHorizontal = (this.orientation == 'horizontal');","call_chain":["dojo.widget.SplitContainer.superclass.postMixInProperties"],"prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.fillInTemplate":{"meta":{"summary":"","src":" \tdojo.widget.SplitContainer.superclass.fillInTemplate.apply(this, arguments);\n\t\tdojo.html.addClass(this.domNode, \"dojoSplitContainer\");\n\t\t\/\/ overflow has to be explicitly hidden for splitContainers using gekko (trac #1435)\n\t\t\/\/ to keep other combined css classes from inadvertantly making the overflow visible\n\t\tif (dojo.render.html.moz) {\n\t\t        this.domNode.style.overflow = '-moz-scrollbars-none'; \/\/ hidden doesn't work\n\t\t}\n\t\tvar content = dojo.html.getContentBox(this.domNode);\n\t\tthis.paneWidth = content.width;\n\t\tthis.paneHeight = content.height;","call_chain":["dojo.widget.SplitContainer.superclass.fillInTemplate"],"prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.onResized":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar content = dojo.html.getContentBox(this.domNode);\n\t\tthis.paneWidth = content.width;\n\t\tthis.paneHeight = content.height;\n\t\tthis._layoutPanels();","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"fragment":{"type":""},"parentComp":{"type":""}},"src":" \tdojo.widget.SplitContainer.superclass.postCreate.apply(this, arguments);\n\t\t\/\/ attach the children and create the draggers\n\t\tfor(var i=0; i<this.children.length; i++){\n            with(this.children[i].domNode.style){\n                position = \"absolute\";\n            }\n            dojo.html.addClass(this.children[i].domNode,\n                \"dojoSplitPane\");\n            if(i == this.children.length-1){\n                break;\n            }\n            this._addSizer();\n\t\t}\n\t\t\/\/ create the fake dragger\n\t\tif (typeof this.sizerWidth == \"object\") { \n\t\t\ttry {\n\t\t\t\tthis.sizerWidth = parseInt(this.sizerWidth.toString()); \n\t\t\t} catch(e) { this.sizerWidth = 15; }\n\t\t}\n\t\tthis.virtualSizer = document.createElement('div');\n\t\tthis.virtualSizer.style.position = 'absolute';\n\t\tthis.virtualSizer.style.display = 'none';\n\t\t\/\/this.virtualSizer.style.backgroundColor = 'lime';\n\t\tthis.virtualSizer.style.zIndex = 10;\n\t\tthis.virtualSizer.className = this.isHorizontal ? 'dojoSplitContainerVirtualSizerH' : 'dojoSplitContainerVirtualSizerV';\n\t\tthis.domNode.appendChild(this.virtualSizer);\n\t\tdojo.html.disableSelection(this.virtualSizer);\n\t\tif(this.persist){\n\t\t\tthis._restoreState();\n\t\t}\n\t\t\/\/ size the panels once the browser has caught up\n\t\tthis.resizeSoon();","call_chain":["dojo.widget.SplitContainer.superclass.postCreate"],"prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._injectChild":{"meta":{"summary":"","parameters":{"child":{"type":""}},"src":"        with(child.domNode.style){\n            position = \"absolute\";\n        }\n        dojo.html.addClass(child.domNode,\n            \"dojoSplitPane\");","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._addSizer":{"meta":{"summary":"","src":"        var i = this.sizers.length;\n        this.sizers[i] = document.createElement('div');\n        this.sizers[i].style.position = 'absolute';\n        this.sizers[i].className = this.isHorizontal ? 'dojoSplitContainerSizerH' : 'dojoSplitContainerSizerV';\n        var self = this;\n        var handler = (function(){ var sizer_i = i; return function(e){ self.beginSizing(e, sizer_i); } })();\n        dojo.event.connect(this.sizers[i], \"onmousedown\", handler);\n        this.domNode.appendChild(this.sizers[i]);\n        dojo.html.disableSelection(this.sizers[i]);","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.removeChild":{"meta":{"summary":"","parameters":{"widget":{"type":""}},"src":"        if (this.sizers.length > 0) {\n            for(var x=0; x<this.children.length; x++){\n                if(this.children[x] === widget){\n                    var i = this.sizers.length - 1;\n                    this.domNode.removeChild(this.sizers[i]);\n                    this.sizers.length = i;\n                    break;\n                }\n            }\n        }\n        \/\/ Remove widget and repaint\n        dojo.widget.SplitContainer.superclass.removeChild.call(this, widget, arguments);\n        this.onResized();","call_chain":["dojo.widget.SplitContainer.superclass.removeChild"],"prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.addChild":{"meta":{"summary":"","parameters":{"widget":{"type":""}},"src":"        dojo.widget.SplitContainer.superclass.addChild.apply(this, arguments);\n        this._injectChild(widget);\n        if (this.children.length > 1) {\n            this._addSizer();\n        }\n        this._layoutPanels();","call_chain":["dojo.widget.SplitContainer.superclass.addChild"],"prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._layoutPanels":{"meta":{"summary":"","src":"        if (this.children.length == 0){ return; }\n\t\t\/\/\n\t\t\/\/ calculate space\n\t\t\/\/\n\t\tvar space = this.isHorizontal ? this.paneWidth : this.paneHeight;\n\t\tif (this.children.length > 1){\n\t\t\tspace -= this.sizerWidth * (this.children.length - 1);\n\t\t}\n\t\t\/\/\n\t\t\/\/ calculate total of SizeShare values\n\t\t\/\/\n\t\tvar out_of = 0;\n\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\tout_of += this.children[i].sizeShare;\n\t\t}\n\t\t\/\/\n\t\t\/\/ work out actual pixels per sizeshare unit\n\t\t\/\/\n\t\tvar pix_per_unit = space \/ out_of;\n\t\t\/\/\n\t\t\/\/ set the SizeActual member of each pane\n\t\t\/\/\n\t\tvar total_size = 0;\n\t\tfor(var i=0; i<this.children.length-1; i++){\n\t\t\tvar size = Math.round(pix_per_unit * this.children[i].sizeShare);\n\t\t\tthis.children[i].sizeActual = size;\n\t\t\ttotal_size += size;\n\t\t}\n\t\tthis.children[this.children.length-1].sizeActual = space - total_size;\n\t\t\/\/\n\t\t\/\/ make sure the sizes are ok\n\t\t\/\/\n\t\tthis._checkSizes();\n\t\t\/\/\n\t\t\/\/ now loop, positioning each pane and letting children resize themselves\n\t\t\/\/\n\t\tvar pos = 0;\n\t\tvar size = this.children[0].sizeActual;\n\t\tthis._movePanel(this.children[0], pos, size);\n\t\tthis.children[0].position = pos;\n\t\tpos += size;\n\t\tfor(var i=1; i<this.children.length; i++){\n\t\t\t\/\/ first we position the sizing handle before this pane\n\t\t\tthis._moveSlider(this.sizers[i-1], pos, this.sizerWidth);\n\t\t\tthis.sizers[i-1].position = pos;\n\t\t\tpos += this.sizerWidth;\n\t\t\tsize = this.children[i].sizeActual;\n\t\t\tthis._movePanel(this.children[i], pos, size);\n\t\t\tthis.children[i].position = pos;\n\t\t\tpos += size;\n\t\t}","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._movePanel":{"meta":{"summary":"","parameters":{"panel":{"type":"Widget"},"pos":{"type":""},"size":{"type":""}},"src":" \tif (this.isHorizontal){\n\t\t\tpanel.domNode.style.left = pos + 'px';\n\t\t\tpanel.domNode.style.top = 0;\n\t\t\tpanel.resizeTo(size, this.paneHeight);\n\t\t}else{\n\t\t\tpanel.domNode.style.left = 0;\n\t\t\tpanel.domNode.style.top = pos + 'px';\n\t\t\tpanel.resizeTo(this.paneWidth, size);\n\t\t}","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._moveSlider":{"meta":{"summary":"","parameters":{"slider":{"type":"DomNode"},"pos":{"type":""},"size":{"type":""}},"src":" \tif (this.isHorizontal){\n\t\t\tslider.style.left = pos + 'px';\n\t\t\tslider.style.top = 0;\n\t\t\tdojo.html.setMarginBox(slider, { width: size, height: this.paneHeight });\n\t\t}else{\n\t\t\tslider.style.left = 0;\n\t\t\tslider.style.top = pos + 'px';\n\t\t\tdojo.html.setMarginBox(slider, { width: this.paneWidth, height: size });\n\t\t}","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._growPane":{"meta":{"summary":"","parameters":{"growth":{"type":""},"pane":{"type":""}},"src":" \tif (growth > 0){\n\t\t\tif (pane.sizeActual > pane.sizeMin){\n\t\t\t\tif ((pane.sizeActual - pane.sizeMin) > growth){\n\t\t\t\t\t\/\/ stick all the growth in this pane\n\t\t\t\t\tpane.sizeActual = pane.sizeActual - growth;\n\t\t\t\t\tgrowth = 0;\n\t\t\t\t}else{\n\t\t\t\t\t\/\/ put as much growth in here as we can\n\t\t\t\t\tgrowth -= pane.sizeActual - pane.sizeMin;\n\t\t\t\t\tpane.sizeActual = pane.sizeMin;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn growth;","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._checkSizes":{"meta":{"summary":"","src":" \tvar total_min_size = 0;\n\t\tvar total_size = 0;\n\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\ttotal_size += this.children[i].sizeActual;\n\t\t\ttotal_min_size += this.children[i].sizeMin;\n\t\t}\n\t\t\/\/ only make adjustments if we have enough space for all the minimums\n\t\tif (total_min_size <= total_size){\n\t\t\tvar growth = 0;\n\t\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\t\tif (this.children[i].sizeActual < this.children[i].sizeMin){\n\t\t\t\t\tgrowth += this.children[i].sizeMin - this.children[i].sizeActual;\n\t\t\t\t\tthis.children[i].sizeActual = this.children[i].sizeMin;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (growth > 0){\n\t\t\t\tif (this.isDraggingLeft){\n\t\t\t\t\tfor(var i=this.children.length-1; i>=0; i--){\n\t\t\t\t\t\tgrowth = this._growPane(growth, this.children[i]);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\t\t\t\tgrowth = this._growPane(growth, this.children[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\t\tthis.children[i].sizeActual = Math.round(total_size * (this.children[i].sizeMin \/ total_min_size));\n\t\t\t}\n\t\t}","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.beginSizing":{"meta":{"summary":"","parameters":{"e":{"type":""},"i":{"type":""}},"src":" \tthis.paneBefore = this.children[i];\n\t\tthis.paneAfter = this.children[i+1];\n\t\tthis.isSizing = true;\n\t\tthis.sizingSplitter = this.sizers[i];\n\t\tthis.originPos = dojo.html.getAbsolutePosition(this.children[0].domNode, true, dojo.html.boxSizing.MARGIN_BOX);\n\t\tif (this.isHorizontal){\n\t\t\tvar client = (e.layerX ? e.layerX : e.offsetX);\n\t\t\tvar screen = e.pageX;\n\t\t\tthis.originPos = this.originPos.x;\n\t\t}else{\n\t\t\tvar client = (e.layerY ? e.layerY : e.offsetY);\n\t\t\tvar screen = e.pageY;\n\t\t\tthis.originPos = this.originPos.y;\n\t\t}\n\t\tthis.startPoint = this.lastPoint = screen;\n\t\tthis.screenToClientOffset = screen - client;\n\t\tthis.dragOffset = this.lastPoint - this.paneBefore.sizeActual - this.originPos - this.paneBefore.position;\n\t\tif (!this.activeSizing){\n\t\t\tthis._showSizingLine();\n\t\t}\n\t\t\/\/\n\t\t\/\/ attach mouse events\n\t\t\/\/\n\t\tdojo.event.connect(document.documentElement, \"onmousemove\", this, \"changeSizing\");\n\t\tdojo.event.connect(document.documentElement, \"onmouseup\", this, \"endSizing\");\n\t\tdojo.event.browser.stopEvent(e);","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.changeSizing":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tthis.lastPoint = this.isHorizontal ? e.pageX : e.pageY;\n\t\tif (this.activeSizing){\n\t\t\tthis.movePoint();\n\t\t\tthis._updateSize();\n\t\t}else{\n\t\t\tthis.movePoint();\n\t\t\tthis._moveSizingLine();\n\t\t}\n\t\tdojo.event.browser.stopEvent(e);","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.endSizing":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif (!this.activeSizing){\n\t\t\tthis._hideSizingLine();\n\t\t}\n\t\tthis._updateSize();\n\t\tthis.isSizing = false;\n\t\tdojo.event.disconnect(document.documentElement, \"onmousemove\", this, \"changeSizing\");\n\t\tdojo.event.disconnect(document.documentElement, \"onmouseup\", this, \"endSizing\");\n\t\tif(this.persist){\n\t\t\tthis._saveState(this);\n\t\t}","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.movePoint":{"meta":{"summary":"","src":" \tvar p = this.lastPoint - this.screenToClientOffset;\n\t\tvar a = p - this.dragOffset;\n\t\ta = this.legaliseSplitPoint(a);\n\t\tp = a + this.dragOffset;\n\t\tthis.lastPoint = p + this.screenToClientOffset;","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer.legaliseSplitPoint":{"meta":{"summary":"","parameters":{"a":{"type":""}},"src":" \ta += this.sizingSplitter.position;\n\t\tthis.isDraggingLeft = (a > 0) ? true : false;\n\t\tif (!this.activeSizing){\n\t\t\tif (a < this.paneBefore.position + this.paneBefore.sizeMin){\n\t\t\t\ta = this.paneBefore.position + this.paneBefore.sizeMin;\n\t\t\t}\n\t\t\tif (a > this.paneAfter.position + (this.paneAfter.sizeActual - (this.sizerWidth + this.paneAfter.sizeMin))){\n\t\t\t\ta = this.paneAfter.position + (this.paneAfter.sizeActual - (this.sizerWidth + this.paneAfter.sizeMin));\n\t\t\t}\n\t\t}\n\t\ta -= this.sizingSplitter.position;\n\t\tthis._checkSizes();\n\t\treturn a;","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._updateSize":{"meta":{"summary":"","src":" \tvar pos = this.lastPoint - this.dragOffset - this.originPos;\n\t\tvar start_region = this.paneBefore.position;\n\t\tvar end_region   = this.paneAfter.position + this.paneAfter.sizeActual;\n\t\tthis.paneBefore.sizeActual = pos - start_region;\n\t\tthis.paneAfter.position    = pos + this.sizerWidth;\n\t\tthis.paneAfter.sizeActual  = end_region - this.paneAfter.position;\n\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\tthis.children[i].sizeShare = this.children[i].sizeActual;\n\t\t}\n\t\tthis._layoutPanels();","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._showSizingLine":{"meta":{"summary":"","src":" \tthis._moveSizingLine();\n\t\tif (this.isHorizontal){\n\t\t\tdojo.html.setMarginBox(this.virtualSizer, { width: this.sizerWidth, height: this.paneHeight });\n\t\t}else{\n\t\t\tdojo.html.setMarginBox(this.virtualSizer, { width: this.paneWidth, height: this.sizerWidth });\n\t\t}\n\t\tthis.virtualSizer.style.display = 'block';","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._hideSizingLine":{"meta":{"summary":"","src":" \tthis.virtualSizer.style.display = 'none';","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._moveSizingLine":{"meta":{"summary":"","src":" \tvar pos = this.lastPoint - this.startPoint + this.sizingSplitter.position;\n\t\tif (this.isHorizontal){\n\t\t\tthis.virtualSizer.style.left = pos + 'px';\n\t\t}else{\n\t\t\tvar pos = (this.lastPoint - this.startPoint) + this.sizingSplitter.position;\n\t\t\tthis.virtualSizer.style.top = pos + 'px';\n\t\t}","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._getCookieName":{"meta":{"summary":"","parameters":{"i":{"type":""}},"src":" \treturn this.widgetId + \"_\" + i;","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._restoreState":{"meta":{"summary":"","src":" \tfor(var i=0; i<this.children.length; i++) {\n\t\t\tvar cookieName = this._getCookieName(i);\n\t\t\tvar cookieValue = dojo.io.cookie.getCookie(cookieName);\n\t\t\tif (cookieValue != null) {\n\t\t\t\tvar pos = parseInt(cookieValue);\n\t\t\t\tif (typeof pos == \"number\") {\n\t\t\t\t\tthis.children[i].sizeShare=pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainer._saveState":{"meta":{"summary":"","src":" \tfor(var i=0; i<this.children.length; i++) {\n\t\t\tvar cookieName = this._getCookieName(i);\n\t\t\tdojo.io.cookie.setCookie(cookieName, this.children[i].sizeShare, null, null, null, null);\n\t\t}","prototype":"dojo.widget.SplitContainer"}},"dojo.widget.SplitContainerPanel":{"meta":{"prototype_chain":["dojo.widget.ContentPane"],"call_chain":["dojo.widget.ContentPane"]}},"dojo.widget.Widget":{"meta":{"prototype_variables":["sizeMin","sizeShare"]}}}}},"dojo.widget.SvgButton":{"meta":{"requires":{"common":["dojo.experimental"]},"functions":{"dojo.widget.SvgButton":{"meta":{"summary":"","src":"\tdojo.widget.DomButton.call(this);\n\tdojo.widget.SvgWidget.call(this);\n\t\/\/ FIXME: freaking implement this already!\n\tthis.onFoo = function(){ alert(\"bar\"); }\n\tthis.label = \"huzzah!\";\n\tthis.setLabel = function(x, y, textSize, label, shape){\n\t\t\/\/var labelNode = this.domNode.ownerDocument.createTextNode(this.label);\n\t\t\/\/var textNode = this.domNode.ownerDocument.createElement(\"text\");\n\t\tvar coords = dojo.widget.SvgButton.prototype.coordinates(x, y, textSize, label, shape);\n\t\tvar textString = \"\";\n\t\tswitch(shape) {\n\t\t\tcase \"ellipse\":\n\t\t\t\ttextString = \"<text x='\"+ coords[6] + \"' y='\"+ coords[7] + \"'>\"+ label + \"<\/text>\";\n\t\t\t\t\/\/textNode.setAttribute(\"x\", coords[6]);\n\t\t\t\t\/\/textNode.setAttribute(\"y\", coords[7]);\n\t\t\t\tbreak;\n\t\t\tcase \"rectangle\":\n\t\t\t\t\/\/FIXME: implement\n\t\t\t\ttextString = \"\";\n\t\t\t\t\/\/textNode.setAttribute(\"x\", coords[6]);\n\t\t\t\t\/\/textNode.setAttribute(\"y\", coords[7]);\n\t\t\t\tbreak;\n\t\t\tcase \"circle\":\n\t\t\t\t\/\/FIXME: implement\n\t\t\t\ttextString = \"\";\n\t\t\t\t\/\/textNode.setAttribute(\"x\", coords[6]);\n\t\t\t\t\/\/textNode.setAttribute(\"y\", coords[7]);\n\t\t\t\tbreak;\n\t\t}\n\t\t\/\/textNode.appendChild(labelNode);\n\t\t\/\/this.domNode.appendChild(textNode);\n\t\treturn textString;\n\t\t\/\/alert(textNode.getComputedTextLength());\n\t}\n\tthis.fillInTemplate = function(x, y, textSize, label, shape){\n\t\t\/\/ the idea is to set the text to the appropriate place given its length\n\t\t\/\/ and the template shape\n\t\t\/\/ FIXME: For now, assuming text sizes are integers in SVG units\n\t\tthis.textSize = textSize || 12;\n\t\tthis.label = label;\n\t\t\/\/ FIXEME: for now, I'm going to fake this... need to come up with a real way to \n\t\t\/\/ determine the actual width of the text, such as computedStyle\n\t\tvar textWidth = this.label.length*this.textSize ;\n\t\t\/\/this.setLabel();\n\t}","instance_variables":["onFoo","label","setLabel","fillInTemplate","textSize"],"call_chain":["dojo.widget.DomButton","dojo.widget.SvgWidget"],"prototype_chain":["dojo.widget.DomButton"]}},"dojo.widget.SvgButton.onFoo":{"meta":{"summary":"","src":" this.onFoo = function(){ alert(\"bar\");   ","instance":"dojo.widget.SvgButton"}},"dojo.widget.SvgButton.setLabel":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"textSize":{"type":""},"label":{"type":""},"shape":{"type":""}},"src":" \tvar coords = dojo.widget.SvgButton.prototype.coordinates(x, y, textSize, label, shape);\n\t\tvar textString = \"\";\n\t\tswitch(shape) {\n\t\t\tcase \"ellipse\":\n\t\t\t\ttextString = \"<text x='\"+ coords[6] + \"' y='\"+ coords[7] + \"'>\"+ label + \"<\/text>\";\n\t\t\t\t\/\/textNode.setAttribute(\"x\", coords[6]);\n\t\t\t\t\/\/textNode.setAttribute(\"y\", coords[7]);\n\t\t\t\tbreak;\n\t\t\tcase \"rectangle\":\n\t\t\t\t\/\/FIXME: implement\n\t\t\t\ttextString = \"\";\n\t\t\t\t\/\/textNode.setAttribute(\"x\", coords[6]);\n\t\t\t\t\/\/textNode.setAttribute(\"y\", coords[7]);\n\t\t\t\tbreak;\n\t\t\tcase \"circle\":\n\t\t\t\t\/\/FIXME: implement\n\t\t\t\ttextString = \"\";\n\t\t\t\t\/\/textNode.setAttribute(\"x\", coords[6]);\n\t\t\t\t\/\/textNode.setAttribute(\"y\", coords[7]);\n\t\t\t\tbreak;\n\t\t}\n\t\t\/\/textNode.appendChild(labelNode);\n\t\t\/\/this.domNode.appendChild(textNode);\n\t\treturn textString;\n\t\t\/\/alert(textNode.getComputedTextLength());","instance":"dojo.widget.SvgButton"}},"dojo.widget.SvgButton.fillInTemplate":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"textSize":{"type":""},"label":{"type":""},"shape":{"type":""}},"src":" \tthis.textSize = textSize || 12;\n\t\tthis.label = label;\n\t\t\/\/ FIXEME: for now, I'm going to fake this... need to come up with a real way to \n\t\t\/\/ determine the actual width of the text, such as computedStyle\n\t\tvar textWidth = this.label.length*this.textSize ;\n\t\t\/\/this.setLabel();","instance":"dojo.widget.SvgButton"}},"dojo.widget.SvgButton.shapeString":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"textSize":{"type":""},"label":{"type":""},"shape":{"type":""}},"src":" switch(shape) {\n\t\tcase \"ellipse\":\n\t\t\tvar coords = dojo.widget.SvgButton.prototype.coordinates(x, y, textSize, label, shape)\n\t\t\treturn \"<ellipse cx='\"+ coords[4]+\"' cy='\"+ coords[5]+\"' rx='\"+ coords[2]+\"' ry='\"+ coords[3]+\"'\/>\";\n\t\t\tbreak;\n\t\tcase \"rect\":\n\t\t\t\/\/FIXME: implement\n\t\t\treturn \"\";\n\t\t\t\/\/return \"<rect x='110' y='45' width='70' height='30'\/>\";\n\t\t\tbreak;\n\t\tcase \"circle\":\n\t\t\t\/\/FIXME: implement\n\t\t\treturn \"\";\n\t\t\t\/\/return \"<circle cx='210' cy='60' r='23'\/>\";\n\t\t\tbreak;\n\t}","prototype":"dojo.widget.SvgButton"}},"dojo.widget.SvgButton.coordinates":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"textSize":{"type":""},"label":{"type":""},"shape":{"type":""}},"src":" switch(shape) {\n\t\tcase \"ellipse\":\n\t\t\tvar buttonWidth = label.length*textSize;\n\t\t\tvar buttonHeight = textSize*2.5\n\t\t\tvar rx = buttonWidth\/2;\n\t\t\tvar ry = buttonHeight\/2;\n\t\t\tvar cx = rx + x;\n\t\t\tvar cy = ry + y;\n\t\t\tvar textX = cx - rx*textSize\/25;\n\t\t\tvar textY = cy*1.1;\n\t\t\treturn [buttonWidth, buttonHeight, rx, ry, cx, cy, textX, textY];\n\t\t\tbreak;\n\t\tcase \"rectangle\":\n\t\t\t\/\/FIXME: implement\n\t\t\treturn \"\";\n\t\t\tbreak;\n\t\tcase \"circle\":\n\t\t\t\/\/FIXME: implement\n\t\t\treturn \"\";\n\t\t\tbreak;\n\t}","prototype":"dojo.widget.SvgButton"}},"dojo.widget.SvgButton.labelString":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"textSize":{"type":""},"label":{"type":""},"shape":{"type":""}},"src":" var textString = \"\";\n\tvar coords = dojo.widget.SvgButton.prototype.coordinates(x, y, textSize, label, shape);\n\tswitch(shape) {\n\t\tcase \"ellipse\":\n\t\t\ttextString = \"<text x='\"+ coords[6] + \"' y='\"+ coords[7] + \"'>\"+ label + \"<\/text>\";\n\t\t\tbreak;\n\t\tcase \"rectangle\":\n\t\t\t\/\/FIXME: implement\n\t\t\ttextString = \"\";\n\t\t\tbreak;\n\t\tcase \"circle\":\n\t\t\t\/\/FIXME: implement\n\t\t\ttextString = \"\";\n\t\t\tbreak;\n\t}\n\treturn textString;","prototype":"dojo.widget.SvgButton"}},"dojo.widget.SvgButton.templateString":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"textSize":{"type":""},"label":{"type":""},"shape":{"type":""}},"src":" return \"<g class='dojoButton' dojoAttachEvent='onClick; onMouseMove: onFoo;' dojoAttachPoint='labelNode'>\"+ dojo.widgets.SVGButton.prototype.shapeString(x, y, textSize, label, shape) + dojo.widget.SVGButton.prototype.labelString(x, y, textSize, label, shape) + \"<\/g>\";","prototype":"dojo.widget.SvgButton"}}}}},"dojo.widget.SvgWidget":{"meta":{"requires":{"common":["dojo.widget.DomWidget","dojo.dom","dojo.experimental"]},"functions":{"tf":{"meta":{"summary":"","src":" \tvar rw = new function(){\n\t\t\tdojo.widget.SvgWidget.call(this);\n\t\t\tthis.buildRendering = function(){ return; }\n\t\t\tthis.destroyRendering = function(){ return; }\n\t\t\tthis.postInitialize = function(){ return; }\n\t\t\tthis.widgetType = \"SVGRootWidget\";\n\t\t\tthis.domNode = document.documentElement;\n\t\t}\n\t\tvar wm = dojo.widget.manager;\n\t\twm.root = rw;\n\t\twm.add(rw);\n\t\t\/\/ extend the widgetManager with a getWidgetFromNode method\n\t\twm.getWidgetFromNode = function(node){\n\t\t\tvar filter = function(x){\n\t\t\t\tif(x.domNode == node){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar widgets = [];\n\t\t\twhile((node)&&(widgets.length < 1)){\n\t\t\t\twidgets = this.getWidgetsByFilter(filter);\n\t\t\t\tnode = node.parentNode;\n\t\t\t}\n\t\t\tif(widgets.length > 0){\n\t\t\t\treturn widgets[0];\n\t\t\t}else{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\twm.getWidgetFromEvent = function(domEvt){\n\t\t\treturn this.getWidgetFromNode(domEvt.target);\n\t\t}\n\t\twm.getWidgetFromPrimitive = wm.getWidgetFromNode;","instance_variables":["buildRendering","destroyRendering","postInitialize","widgetType","domNode"],"call_chain":["dojo.widget.SvgWidget"]}},"tf.buildRendering":{"meta":{"summary":"","src":" \t\tthis.buildRendering = function(){ return;   ","instance":"tf"}},"tf.destroyRendering":{"meta":{"summary":"","src":" \t\tthis.destroyRendering = function(){ return;   ","instance":"tf"}},"tf.postInitialize":{"meta":{"summary":"","src":" \t\tthis.postInitialize = function(){ return;   ","instance":"tf"}}}}},"dojo.widget.SwtWidget":{"meta":{"requires":{"common":["dojo.experimental","dojo.event.*","dojo.widget.Widget","dojo.uri.*","dojo.lang.func","dojo.lang.extras"]},"functions":{"dojo.widget.SwtWidget":{"meta":{"prototype_chain":["dojo.widget.Widget"],"call_chain":["dojo.widget.Widget"],"prototype_variables":["display","shell"],"variables":["display","shell"],"summary":"","src":" \t\tif((arguments.length>0)&&(typeof arguments[0] == \"object\")){\n\t\t\t\tthis.create(arguments[0]);\n\t\t\t}"}},"dojo.widget.SwtWidget.show":{"meta":{"summary":"","src":"","prototype":"dojo.widget.SwtWidget"}},"dojo.widget.SwtWidget.hide":{"meta":{"summary":"","src":"","prototype":"dojo.widget.SwtWidget"}},"dojo.widget.SwtWidget.addChild":{"meta":{"summary":"","src":"","prototype":"dojo.widget.SwtWidget"}},"dojo.widget.SwtWidget.registerChild":{"meta":{"summary":"","src":"","prototype":"dojo.widget.SwtWidget"}},"dojo.widget.SwtWidget.addWidgetAsDirectChild":{"meta":{"summary":"","src":"","prototype":"dojo.widget.SwtWidget"}},"dojo.widget.SwtWidget.removeChild":{"meta":{"summary":"","src":"","prototype":"dojo.widget.SwtWidget"}},"dojo.widget.SwtWidget.destroyRendering":{"meta":{"summary":"","src":"","prototype":"dojo.widget.SwtWidget"}},"dojo.widget.SwtWidget.postInitialize":{"meta":{"summary":"","src":"","prototype":"dojo.widget.SwtWidget"}},"dojo.widget.manager.startShell":{"meta":{"summary":"","src":" \tvar sh = dojo.widget.SwtWidget.prototype.shell;\n\t\tvar d = dojo.widget.SwtWidget.prototype.display;\n\t\tsh.open();\n\t\twhile(!sh.isDisposed()){\n\t\t\tdojo.widget.manager.doNext();\n\t\t\tif(!d.readAndDispatch()){\n\t\t\t\td.sleep();\n\t\t\t}\n\t\t}\n\t\td.dispose();"}}}}},"dojo.widget.TabContainer":{"meta":{"requires":{"common":["dojo.lang.func","dojo.widget.*","dojo.widget.PageContainer","dojo.event.*","dojo.html.selection","dojo.widget.html.layout"]},"functions":{"dojo.widget.TabContainer":{"meta":{"prototype_chain":["dojo.widget.PageContainer"],"call_chain":["dojo.widget.PageContainer"],"prototype_variables":["labelPosition","closeButton","templateString","templatePath","templateCssPath","selectedTab"],"variables":["labelPosition","closeButton","templateString","templatePath","templateCssPath","selectedTab"],"instance_variables":["selectedChild","tablist","closeButton"],"summary":"A TabContainer is a container that has multiple panes, but shows only one pane at a time. There are a set of tabs corresponding to each pane, where each tab has the title (aka label) of the pane, and optionally a close button. Publishes topics <widgetId>-addChild, <widgetId>-removeChild, and <widgetId>-selectChild (where <widgetId> is the id of the TabContainer itself."},"extra":{"variables":{"closeButton":{"type":"String","summary":"If closebutton==\"tab\", then every tab gets a close button. DEPRECATED: Should just say closable=true on each pane you want to be closable. override setting in PageContainer"}}}},"dojo.widget.TabContainer.postMixInProperties":{"meta":{"summary":"","src":" \tif(this.selectedTab){\n\t\t\tdojo.deprecated(\"selectedTab deprecated, use selectedChild instead, will be removed in\", \"0.5\");\n\t\t\tthis.selectedChild=this.selectedTab;\n\t\t}\n\t\tif(this.closeButton!=\"none\"){\n\t\t\tdojo.deprecated(\"closeButton deprecated, use closable='true' on each child instead, will be removed in\", \"0.5\");\n\t\t}\n\t\tdojo.widget.TabContainer.superclass.postMixInProperties.apply(this, arguments);","call_chain":["dojo.widget.TabContainer.superclass.postMixInProperties"],"prototype":"dojo.widget.TabContainer"}},"dojo.widget.TabContainer.fillInTemplate":{"meta":{"summary":"","src":" \tthis.tablist = dojo.widget.createWidget(\"TabController\",\n\t\t\t{\n\t\t\t\tid: this.widgetId + \"_tablist\",\n\t\t\t\tlabelPosition: this.labelPosition,\n\t\t\t\tdoLayout: this.doLayout,\n\t\t\t\tcontainerId: this.widgetId\n\t\t\t}, this.tablistNode);\n\t\tdojo.widget.TabContainer.superclass.fillInTemplate.apply(this, arguments);","call_chain":["dojo.widget.TabContainer.superclass.fillInTemplate"],"prototype":"dojo.widget.TabContainer"}},"dojo.widget.TabContainer.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tdojo.widget.TabContainer.superclass.postCreate.apply(this, arguments);\n\t\t\/\/ size the container pane to take up the space not used by the tabs themselves\n\t\tthis.onResized();","call_chain":["dojo.widget.TabContainer.superclass.postCreate"],"prototype":"dojo.widget.TabContainer"}},"dojo.widget.TabContainer._setupChild":{"meta":{"summary":"","parameters":{"tab":{"type":""}},"src":" \tif(this.closeButton==\"tab\" || this.closeButton==\"pane\"){\n\t\t\t\/\/ TODO: remove in 0.5\n\t\t\ttab.closable=true;\n\t\t}\n\t\tdojo.html.addClass(tab.domNode, \"dojoTabPane\");\n\t\tdojo.widget.TabContainer.superclass._setupChild.apply(this, arguments);","call_chain":["dojo.widget.TabContainer.superclass._setupChild"],"prototype":"dojo.widget.TabContainer"}},"dojo.widget.TabContainer.onResized":{"meta":{"summary":"","src":" \tif(!this.doLayout){ return; }\n\t\t\/\/ position the labels and the container node\n\t\tvar labelAlign=this.labelPosition.replace(\/-h\/,\"\");\n\t\tvar children = [\n\t\t\t{domNode: this.tablist.domNode, layoutAlign: labelAlign},\n\t\t\t{domNode: this.containerNode, layoutAlign: \"client\"}\n\t\t];\n\t\tdojo.widget.html.layout(this.domNode, children);\n\t\tif(this.selectedChildWidget){\n\t\t\tvar containerSize = dojo.html.getContentBox(this.containerNode);\n\t\t\tthis.selectedChildWidget.resizeTo(containerSize.width, containerSize.height);\n\t\t}","prototype":"dojo.widget.TabContainer"}},"dojo.widget.TabContainer.selectTab":{"meta":{"summary":"","parameters":{"tab":{"type":""},"callingWidget":{"type":""}},"src":" \tdojo.deprecated(\"use selectChild() rather than selectTab(), selectTab() will be removed in\", \"0.5\");\n\t\tthis.selectChild(tab, callingWidget);","prototype":"dojo.widget.TabContainer"}},"dojo.widget.TabContainer.onKey":{"meta":{"summary":"Keystroke handling for keystrokes on the tab panel itself (that were bubbled up to me) Ctrl-up: focus is returned from the pane to the tab button Alt-del: close tab","parameters":{"e":{"type":""}},"src":" \tif(e.keyCode == e.KEY_UP_ARROW && e.ctrlKey){\n\t\t\t\/\/ set focus to current tab\n\t\t\tvar button = this.correspondingTabButton || this.selectedTabWidget.tabButton;\n\t\t\tbutton.focus();\n\t\t\tdojo.event.browser.stopEvent(e);\n\t\t}else if(e.keyCode == e.KEY_DELETE && e.altKey){\n\t\t\tif (this.selectedChildWidget.closable){\n\t\t\t\tthis.closeChild(this.selectedChildWidget);\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TabContainer"}},"dojo.widget.TabContainer.destroy":{"meta":{"summary":"","src":" \tthis.tablist.destroy();\n\t\tdojo.widget.TabContainer.superclass.destroy.apply(this, arguments);","call_chain":["dojo.widget.TabContainer.superclass.destroy"],"prototype":"dojo.widget.TabContainer"}},"dojo.widget.TabController":{"meta":{"prototype_chain":["dojo.widget.PageController"],"call_chain":["dojo.widget.PageController"],"prototype_variables":["templateString","labelPosition","doLayout","class","buttonWidget"],"variables":["templateString","labelPosition","doLayout","class","buttonWidget"],"summary":"Set of tabs (the things with labels and a close button, that you click to show a tab panel). Lets the user select the currently shown pane in a TabContainer or PageContainer. TabController also monitors the TabContainer, and whenever a pane is added or deleted updates itself accordingly."}},"dojo.widget.TabController.postMixInProperties":{"meta":{"summary":"","src":" \t\tif(!this[\"class\"]){\n\t\t\t\tthis[\"class\"] = \"dojoTabLabels-\" + this.labelPosition + (this.doLayout ? \"\" : \" dojoTabNoLayout\");\n\t\t\t}\n\t\t\tdojo.widget.TabController.superclass.postMixInProperties.apply(this, arguments);","call_chain":["dojo.widget.TabController.superclass.postMixInProperties"],"prototype":"dojo.widget.TabController"}},"dojo.widget.TabButton":{"meta":{"prototype_chain":["dojo.widget.PageButton"],"call_chain":["dojo.widget.PageButton"],"prototype_variables":["templateString"],"variables":["templateString"],"instance_variables":["closeButtonStyle"],"summary":"A tab (the thing you click to select a pane). Contains the title (aka label) of the pane, and optionally a close-button to destroy the pane. This is an internal widget and should not be instantiated directly."}},"dojo.widget.TabButton.postMixInProperties":{"meta":{"summary":"","src":" \tthis.closeButtonStyle = this.closeButton ? \"\" : \"display: none\";\n\t\tdojo.widget.TabButton.superclass.postMixInProperties.apply(this, arguments);","call_chain":["dojo.widget.TabButton.superclass.postMixInProperties"],"prototype":"dojo.widget.TabButton"}},"dojo.widget.TabButton.fillInTemplate":{"meta":{"summary":"","src":" \tdojo.html.disableSelection(this.titleNode);\n\t\tdojo.widget.TabButton.superclass.fillInTemplate.apply(this, arguments);","call_chain":["dojo.widget.TabButton.superclass.fillInTemplate"],"prototype":"dojo.widget.TabButton"}},"dojo.widget.TabButton.onCloseButtonClick":{"meta":{"summary":"","parameters":{"evt":{"type":"Event"}},"src":" \tevt.stopPropagation();\n\t\tdojo.widget.TabButton.superclass.onCloseButtonClick.apply(this, arguments);","call_chain":["dojo.widget.TabButton.superclass.onCloseButtonClick"],"prototype":"dojo.widget.TabButton"}},"dojo.widget.a11y.TabButton":{"meta":{"prototype_chain":["dojo.widget.TabButton"],"call_chain":["dojo.widget.TabButton"],"prototype_variables":["imgPath","templateString"],"variables":["imgPath","templateString"],"summary":"Tab for display in high-contrast mode (where background images don't show up). This is an internal widget and shouldn't be instantiated directly."}}}}},"dojo.widget.TaskBar":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.FloatingPane","dojo.widget.HtmlWidget","dojo.event.*","dojo.html.selection"]},"functions":{"dojo.widget.TaskBarItem":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["iconSrc","caption","templatePath","templateCssPath"],"variables":["iconSrc","caption","templatePath","templateCssPath"],"instance_variables":["window","window.explodeSrc"],"summary":"Widget used internally by the TaskBar; shows an icon associated w\/a floating pane"},"extra":{"variables":{"caption":{"type":"String","summary":"name of associated floating pane"}}}},"dojo.widget.TaskBarItem.fillInTemplate":{"meta":{"summary":"","src":" \tif (this.iconSrc) {\n\t\t\tvar img = document.createElement(\"img\");\n\t\t\timg.src = this.iconSrc;\n\t\t\tthis.domNode.appendChild(img);\n\t\t}\n\t\tthis.domNode.appendChild(document.createTextNode(this.caption));\n\t\tdojo.html.disableSelection(this.domNode);","prototype":"dojo.widget.TaskBarItem"}},"dojo.widget.TaskBarItem.postCreate":{"meta":{"summary":"","src":" \tthis.window=dojo.widget.getWidgetById(this.windowId);\n\t\tthis.window.explodeSrc = this.domNode;\n\t\tdojo.event.connect(this.window, \"destroy\", this, \"destroy\")","prototype":"dojo.widget.TaskBarItem"}},"dojo.widget.TaskBarItem.onClick":{"meta":{"summary":"","src":" \tthis.window.toggleDisplay();","prototype":"dojo.widget.TaskBarItem"}},"dojo.widget.TaskBar":{"meta":{"prototype_chain":["dojo.widget.FloatingPane"],"call_chain":["dojo.widget.FloatingPane"],"prototype_variables":["resizable","titleBarDisplay"],"variables":["resizable","titleBarDisplay"],"instance_variables":["_addChildStack"],"summary":"","src":" \tthis._addChildStack = [];"}},"dojo.widget.TaskBar.addChild":{"meta":{"summary":"add taskbar item for specified FloatingPane TODO: this should not be called addChild(), as that has another meaning.","parameters":{"child":{"type":"Widget"}},"src":" \tif(!this.containerNode){ \n\t\t\tthis._addChildStack.push(child);\n\t\t}else if(this._addChildStack.length > 0){\n\t\t\tvar oarr = this._addChildStack;\n\t\t\tthis._addChildStack = [];\n\t\t\tdojo.lang.forEach(oarr, this.addChild, this);\n\t\t}\n\t\tvar tbi = dojo.widget.createWidget(\"TaskBarItem\",\n\t\t\t{\twindowId: child.widgetId, \n\t\t\t\tcaption: child.title, \n\t\t\t\ticonSrc: child.iconSrc\n\t\t\t});\n\t\tdojo.widget.TaskBar.superclass.addChild.call(this,tbi);","call_chain":["dojo.widget.TaskBar.superclass.addChild"],"prototype":"dojo.widget.TaskBar"}}}}},"dojo.widget.Textbox":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.widget.Manager","dojo.widget.Parse","dojo.xml.Parse","dojo.lang.array","dojo.lang.common","dojo.i18n.common"]},"functions":{"dojo.widget.Textbox":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["className","name","value","type","trim","uppercase","lowercase","ucFirst","digit","htmlfloat","templatePath","textbox"],"variables":["className","name","value","type","trim","uppercase","lowercase","ucFirst","digit","htmlfloat","templatePath","textbox"],"instance_variables":["textbox.value","className"],"summary":"A generic textbox field. Serves as a base class to derive more specialized functionality in subclasses."},"extra":{"variables":{"htmlfloat":{"type":"String","summary":"\"none\", \"left\", or \"right\". CSS float attribute applied to generated dom node."},"textbox":{"type":"DomNode","summary":"our DOM node event handlers, you can over-ride these in your own subclasses All functions below are called by create from dojo.widget.Widget"}}}},"dojo.widget.Textbox.fillInTemplate":{"meta":{"summary":"","src":" \t\tthis.textbox.value = this.value;","prototype":"dojo.widget.Textbox"}},"dojo.widget.Textbox.filter":{"meta":{"summary":"Apply various filters to textbox value","src":" \t\tif (this.trim) {\n\t\t\t\tthis.textbox.value = this.textbox.value.replace(\/(^\\s*|\\s*$)\/g, \"\");\n\t\t\t} \n\t\t\tif (this.uppercase) {\n\t\t\t\tthis.textbox.value = this.textbox.value.toUpperCase();\n\t\t\t} \n\t\t\tif (this.lowercase) {\n\t\t\t\tthis.textbox.value = this.textbox.value.toLowerCase();\n\t\t\t} \n\t\t\tif (this.ucFirst) {\n\t\t\t\tthis.textbox.value = this.textbox.value.replace(\/\\b\\w+\\b\/g, \n\t\t\t\t\tfunction(word) { return word.substring(0,1).toUpperCase() + word.substring(1).toLowerCase(); });\n\t\t\t} \n\t\t\tif (this.digit) {\n\t\t\t\tthis.textbox.value = this.textbox.value.replace(\/\\D\/g, \"\");\n\t\t\t} ","prototype":"dojo.widget.Textbox"}},"dojo.widget.Textbox.onfocus":{"meta":{"summary":"","src":"","prototype":"dojo.widget.Textbox"}},"dojo.widget.Textbox.onblur":{"meta":{"summary":"","src":" \tonblur: function() { this.filter();    ","prototype":"dojo.widget.Textbox"}},"dojo.widget.Textbox.mixInProperties":{"meta":{"summary":"","parameters":{"localProperties":{"type":""},"frag":{"type":""}},"src":" \t\tdojo.widget.Textbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\tif ( localProperties[\"class\"] ) { \n\t\t\t\tthis.className = localProperties[\"class\"];\n\t\t\t}","call_chain":["dojo.widget.Textbox.superclass.mixInProperties"],"prototype":"dojo.widget.Textbox"}}}}},"dojo.widget.TimePicker":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.event.*","dojo.date.serialize","dojo.date.format","dojo.dom","dojo.html.style"]},"functions":{"dojo.widget.TimePicker":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","templatePath","templateCssPath"],"variables":["isContainer","templatePath","templateCssPath"],"instance_variables":["calendar","widgetStrings","storedTime","time","selectedTime.anyTime","selectedTime.amPm","useDefaultTime","useDefaultMinutes","currentTime","classNames","any","selectedTime","hourIndexMap","minuteIndexMap"],"summary":"","src":" \tthis.time = \"\";\n\t\t\/\/ useDefaultTime: Boolean\n\t\t\/\/\tset following flag to true if a default time should be set\n\t\tthis.useDefaultTime = false;\n\t\t\/\/ useDefaultMinutes: Boolean\n\t\t\/\/\tset the following to true to set default minutes to current time, false to \/\/ use zero\n\t\tthis.useDefaultMinutes = false;\n\t\t\/\/ storedTime: String\n\t\t\/\/\trfc 3339 time\n\t\tthis.storedTime = \"\";\n\t\t\/\/ currentTime: Object\n\t\t\/\/\ttime currently selected in the UI, stored in hours, minutes, seconds in the format that will be actually displayed\n\t\tthis.currentTime = {};\n\t\tthis.classNames = {\n\t\t\/\/ summary:\n\t\t\/\/\tstores a list of class names that may be overriden\n\t\t\tselectedTime: \"selectedItem\"\n\t\t};\n\t\tthis.any = \"any\"; \/\/FIXME: never used?\n\t\t\/\/ dom node indecies for selected hour, minute, amPm, and \"any time option\"\n\t\tthis.selectedTime = {\n\t\t\thour: \"\",\n\t\t\tminute: \"\",\n\t\t\tamPm: \"\",\n\t\t\tanyTime: false\n\t\t};\n\t\t\/\/ minutes are ordered as follows: [\"12\", \"6\", \"1\", \"7\", \"2\", \"8\", \"3\", \"9\", \"4\", \"10\", \"5\", \"11\"]\n\t\tthis.hourIndexMap = [\"\", 2, 4, 6, 8, 10, 1, 3, 5, 7, 9, 11, 0];\n\t\t\/\/ minutes are ordered as follows: [\"00\", \"30\", \"05\", \"35\", \"10\", \"40\", \"15\", \"45\", \"20\", \"50\", \"25\", \"55\"]\n\t\tthis.minuteIndexMap = [0, 2, 4, 6, 8, 10, 1, 3, 5, 7, 9, 11];"},"extra":{"variables":{"time":{"type":"Date","summary":"selected time"}}}},"dojo.widget.TimePicker.postMixInProperties":{"meta":{"summary":"see dojo.widget.DomWidget","parameters":{"localProperties":{"type":""},"frag":{"type":""}},"src":" \tdojo.widget.TimePicker.superclass.postMixInProperties.apply(this, arguments);\n\t\tthis.calendar = dojo.i18n.getLocalization(\"dojo.i18n.calendar\", \"gregorian\", this.lang); \/\/ \"am\",\"pm\"\n\t\tthis.widgetStrings = dojo.i18n.getLocalization(\"dojo.widget\", \"TimePicker\", this.lang); \/\/ \"any\"","call_chain":["dojo.widget.TimePicker.superclass.postMixInProperties"],"prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.fillInTemplate":{"meta":{"summary":"see dojo.widget.DomWidget","parameters":{"args":{"type":""},"frag":{"type":""}},"src":"\t\t\/\/ Copy style info from input node to output node\n\t\tvar source = this.getFragNodeRef(frag);\n\t\tdojo.html.copyStyle(this.domNode, source);\n\t\tif(args.value){\n\t\t\tif(args.value instanceof Date){\n\t\t\t\tthis.storedTime = dojo.date.toRfc3339(args.value);\n\t\t\t}else{\n\t\t\t\tthis.storedTime = args.value;\n\t\t\t}\n\t\t}\t\t\n\t\tthis.initData();\n\t\tthis.initUI();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.initData":{"meta":{"summary":"","src":" \tif(this.storedTime.indexOf(\"T\")!=-1 && this.storedTime.split(\"T\")[1] && this.storedTime!=\" \" && this.storedTime.split(\"T\")[1]!=\"any\"){\n\t\t\tthis.time = dojo.widget.TimePicker.util.fromRfcDateTime(this.storedTime, this.useDefaultMinutes, this.selectedTime.anyTime);\n\t\t}else if(this.useDefaultTime){\n\t\t\tthis.time = dojo.widget.TimePicker.util.fromRfcDateTime(\"\", this.useDefaultMinutes, this.selectedTime.anyTime);\n\t\t}else{\n\t\t\tthis.selectedTime.anyTime = true;\n\t\t\tthis.time = dojo.widget.TimePicker.util.fromRfcDateTime(\"\", 0, 1);\n\t\t}","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.initUI":{"meta":{"summary":"","src":" \tif(!this.selectedTime.anyTime && this.time) {\n\t\t\tvar amPmHour = dojo.widget.TimePicker.util.toAmPmHour(this.time.getHours());\n\t\t\tvar hour = amPmHour[0];\n\t\t\tvar isAm = amPmHour[1];\n\t\t\tvar minute = this.time.getMinutes();\n\t\t\tvar minuteIndex = parseInt(minute\/5);\n\t\t\tthis.onSetSelectedHour(this.hourIndexMap[hour]);\n\t\t\tthis.onSetSelectedMinute(this.minuteIndexMap[minuteIndex]);\n\t\t\tthis.onSetSelectedAmPm(isAm);\n\t\t} else {\n\t\t\tthis.onSetSelectedAnyTime();\n\t\t}","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.setTime":{"meta":{"summary":"set the current date and update the UI","parameters":{"date":{"type":""}},"src":" \tif(date) {\n\t\t\tthis.selectedTime.anyTime = false;\n\t\t\tthis.setDateTime(dojo.date.toRfc3339(date));\n\t\t} else {\n\t\t\tthis.selectedTime.anyTime = true;\n\t\t}\n\t\tthis.initData();\n\t\tthis.initUI();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.setDateTime":{"meta":{"summary":"","parameters":{"rfcDate":{"type":""}},"src":" \tthis.storedTime = rfcDate;","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onClearSelectedHour":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.clearSelectedHour();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onClearSelectedMinute":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.clearSelectedMinute();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onClearSelectedAmPm":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.clearSelectedAmPm();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onClearSelectedAnyTime":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.clearSelectedAnyTime();\n\t\tif(this.selectedTime.anyTime) {\n\t\t\tthis.selectedTime.anyTime = false;\n\t\t\tthis.time = dojo.widget.TimePicker.util.fromRfcDateTime(\"\", this.useDefaultMinutes);\n\t\t\tthis.initUI();\n\t\t}","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.clearSelectedHour":{"meta":{"summary":"","src":" \tvar hourNodes = this.hourContainerNode.getElementsByTagName(\"td\");\n\t\tfor (var i=0; i<hourNodes.length; i++) {\n\t\t\tdojo.html.setClass(hourNodes.item(i), \"\");\n\t\t}","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.clearSelectedMinute":{"meta":{"summary":"","src":" \tvar minuteNodes = this.minuteContainerNode.getElementsByTagName(\"td\");\n\t\tfor (var i=0; i<minuteNodes.length; i++) {\n\t\t\tdojo.html.setClass(minuteNodes.item(i), \"\");\n\t\t}","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.clearSelectedAmPm":{"meta":{"summary":"","src":" \tvar amPmNodes = this.amPmContainerNode.getElementsByTagName(\"td\");\n\t\tfor (var i=0; i<amPmNodes.length; i++) {\n\t\t\tdojo.html.setClass(amPmNodes.item(i), \"\");\n\t\t}","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.clearSelectedAnyTime":{"meta":{"summary":"","src":" \tdojo.html.setClass(this.anyTimeContainerNode, \"anyTimeContainer\");","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onSetSelectedHour":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.onClearSelectedAnyTime();\n\t\tthis.onClearSelectedHour();\n\t\tthis.setSelectedHour(evt);\n\t\tthis.onSetTime();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.setSelectedHour":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tif(evt && evt.target) {\n\t\t\tif(evt.target.nodeType == dojo.dom.ELEMENT_NODE) {\n\t\t\t\tvar eventTarget = evt.target;\n\t\t\t} else {\n\t\t\t\tvar eventTarget = evt.target.parentNode;\n\t\t\t}\n\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\tdojo.html.setClass(eventTarget, this.classNames.selectedTime);\n\t\t\tthis.selectedTime[\"hour\"] = eventTarget.innerHTML;\n\t\t} else if (!isNaN(evt)) {\n\t\t\tvar hourNodes = this.hourContainerNode.getElementsByTagName(\"td\");\n\t\t\tif(hourNodes.item(evt)) {\n\t\t\t\tdojo.html.setClass(hourNodes.item(evt), this.classNames.selectedTime);\n\t\t\t\tthis.selectedTime[\"hour\"] = hourNodes.item(evt).innerHTML;\n\t\t\t}\n\t\t}\n\t\tthis.selectedTime.anyTime = false;","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onSetSelectedMinute":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.onClearSelectedAnyTime();\n\t\tthis.onClearSelectedMinute();\n\t\tthis.setSelectedMinute(evt);\n\t\tthis.selectedTime.anyTime = false;\n\t\tthis.onSetTime();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.setSelectedMinute":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tif(evt && evt.target) {\n\t\t\tif(evt.target.nodeType == dojo.dom.ELEMENT_NODE) {\n\t\t\t\tvar eventTarget = evt.target;\n\t\t\t} else {\n\t\t\t\tvar eventTarget = evt.target.parentNode;\n\t\t\t}\n\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\tdojo.html.setClass(eventTarget, this.classNames.selectedTime);\n\t\t\tthis.selectedTime[\"minute\"] = eventTarget.innerHTML;\n\t\t} else if (!isNaN(evt)) {\n\t\t\tvar minuteNodes = this.minuteContainerNode.getElementsByTagName(\"td\");\n\t\t\tif(minuteNodes.item(evt)) {\n\t\t\t\tdojo.html.setClass(minuteNodes.item(evt), this.classNames.selectedTime);\n\t\t\t\tthis.selectedTime[\"minute\"] = minuteNodes.item(evt).innerHTML;\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onSetSelectedAmPm":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.onClearSelectedAnyTime();\n\t\tthis.onClearSelectedAmPm();\n\t\tthis.setSelectedAmPm(evt);\n\t\tthis.selectedTime.anyTime = false;\n\t\tthis.onSetTime();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.setSelectedAmPm":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tvar eventTarget = evt.target;\n\t\tif(evt && eventTarget) {\n\t\t\tif(eventTarget.nodeType != dojo.dom.ELEMENT_NODE) {\n\t\t\t\teventTarget = eventTarget.parentNode;\n\t\t\t}\n\t\t\tdojo.event.browser.stopEvent(evt);\n\t\t\tthis.selectedTime.amPm = eventTarget.id;\n\t\t\tdojo.html.setClass(eventTarget, this.classNames.selectedTime);\n\t\t} else {\n\t\t\tevt = evt ? 0 : 1;\n\t\t\tvar amPmNodes = this.amPmContainerNode.getElementsByTagName(\"td\");\n\t\t\tif(amPmNodes.item(evt)) {\n\t\t\t\tthis.selectedTime.amPm = amPmNodes.item(evt).id;\n\t\t\t\tdojo.html.setClass(amPmNodes.item(evt), this.classNames.selectedTime);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onSetSelectedAnyTime":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.onClearSelectedHour();\n\t\tthis.onClearSelectedMinute();\n\t\tthis.onClearSelectedAmPm();\n\t\tthis.setSelectedAnyTime();\n\t\tthis.onSetTime();","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.setSelectedAnyTime":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tthis.selectedTime.anyTime = true;\n\t\tdojo.html.setClass(this.anyTimeContainerNode, this.classNames.selectedTime + \" \" + \"anyTimeContainer\");","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onClick":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tdojo.event.browser.stopEvent(evt);","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onSetTime":{"meta":{"summary":"","src":" \tif(this.selectedTime.anyTime) {\n\t\t\tthis.time = new Date();\n\t\t\tvar tempDateTime = dojo.widget.TimePicker.util.toRfcDateTime(this.time);\n\t\t\tthis.setDateTime(tempDateTime.split(\"T\")[0]);\n\t\t} else {\n\t\t\tvar hour = 12;\n\t\t\tvar minute = 0;\n\t\t\tvar isAm = false;\n\t\t\tif(this.selectedTime[\"hour\"]) {\n\t\t\t\thour = parseInt(this.selectedTime[\"hour\"], 10);\n\t\t\t}\n\t\t\tif(this.selectedTime[\"minute\"]) {\n\t\t\t\tminute = parseInt(this.selectedTime[\"minute\"], 10);\n\t\t\t}\n\t\t\tif(this.selectedTime[\"amPm\"]) {\n\t\t\t\tisAm = (this.selectedTime[\"amPm\"].toLowerCase() == \"am\");\n\t\t\t}\n\t\t\tthis.time = new Date();\n\t\t\tthis.time.setHours(dojo.widget.TimePicker.util.fromAmPmHour(hour, isAm));\n\t\t\tthis.time.setMinutes(minute);\n\t\t\tthis.setDateTime(dojo.widget.TimePicker.util.toRfcDateTime(this.time));\n\t\t}\n\t\tthis.onValueChanged(this.time);","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.onValueChanged":{"meta":{"summary":"the set date event handler","parameters":{"date":{"type":"Date"}},"src":"\t\t\/\/summary: the set date event handler","prototype":"dojo.widget.TimePicker"}},"dojo.widget.TimePicker.util":{"meta":{"initialized":true,"summary":"utility functions","src":" this.toRfcDateTime = function(jsDate) {\n\t\t\/\/summary: formats a Date object to RFC 3339 string\n\t\tif(!jsDate) {\n\t\t\tjsDate = new Date();\n\t\t}\n\t\tjsDate.setSeconds(0);\n\t\treturn dojo.date.strftime(jsDate, \"%Y-%m-%dT%H:%M:00%z\"); \/\/FIXME: use dojo.date.toRfc3339 instead\n\t}\n\tthis.fromRfcDateTime = function(rfcDate, useDefaultMinutes, isAnyTime) {\n\t\t\/\/summary: constructs a Date object from RFC 3339 string\n\t\tvar tempDate = new Date();\n\t\tif(!rfcDate || rfcDate.indexOf(\"T\")==-1) {\n\t\t\tif(useDefaultMinutes) {\n\t\t\t\ttempDate.setMinutes(Math.floor(tempDate.getMinutes()\/5)*5);\n\t\t\t} else {\n\t\t\t\ttempDate.setMinutes(0);\n\t\t\t}\n\t\t} else {\n\t\t\tvar tempTime = rfcDate.split(\"T\")[1].split(\":\");\n\t\t\t\/\/ fullYear, month, date\n\t\t\tvar tempDate = new Date();\n\t\t\ttempDate.setHours(tempTime[0]);\n\t\t\ttempDate.setMinutes(tempTime[1]);\n\t\t}\n\t\treturn tempDate;\n\t}\n\tthis.toAmPmHour = function(hour) {\n\t\t\/\/summary: converts a 24-hour-based hour value to a 12-hour-based hour value, and an AM\/PM flag\n\t\tvar amPmHour = hour;\n\t\tvar isAm = true;\n\t\tif (amPmHour == 0) {\n\t\t\tamPmHour = 12;\n\t\t} else if (amPmHour>12) {\n\t\t\tamPmHour = amPmHour - 12;\n\t\t\tisAm = false;\n\t\t} else if (amPmHour == 12) {\n\t\t\tisAm = false;\n\t\t}\n\t\treturn [amPmHour, isAm];\n\t}\n\tthis.fromAmPmHour = function(amPmHour, isAm) {\n\t\t\/\/summary: converts a 12-hour-based hour value and an AM\/PM flag to a 24-hour-based hour value\n\t\tvar hour = parseInt(amPmHour, 10);\n\t\tif(isAm && hour == 12) {\n\t\t\thour = 0;\n\t\t} else if (!isAm && hour<12) {\n\t\t\thour = hour + 12;\n\t\t}\n\t\treturn hour;\n\t}","instance_variables":["toRfcDateTime","fromRfcDateTime","toAmPmHour","fromAmPmHour"],"returns":"FIXME: use dojo.date.toRfc3339 instead"}},"dojo.widget.TimePicker.util.toRfcDateTime":{"meta":{"summary":"formats a Date object to RFC 3339 string","parameters":{"jsDate":{"type":""}},"src":" \tif(!jsDate) {\n\t\t\tjsDate = new Date();\n\t\t}\n\t\tjsDate.setSeconds(0);\n\t\treturn dojo.date.strftime(jsDate, \"%Y-%m-%dT%H:%M:00%z\"); \/\/FIXME: use dojo.date.toRfc3339 instead","returns":"FIXME: use dojo.date.toRfc3339 instead","instance":"dojo.widget.TimePicker.util"}},"dojo.widget.TimePicker.util.fromRfcDateTime":{"meta":{"summary":"constructs a Date object from RFC 3339 string","parameters":{"rfcDate":{"type":""},"useDefaultMinutes":{"type":""},"isAnyTime":{"type":""}},"src":" \tvar tempDate = new Date();\n\t\tif(!rfcDate || rfcDate.indexOf(\"T\")==-1) {\n\t\t\tif(useDefaultMinutes) {\n\t\t\t\ttempDate.setMinutes(Math.floor(tempDate.getMinutes()\/5)*5);\n\t\t\t} else {\n\t\t\t\ttempDate.setMinutes(0);\n\t\t\t}\n\t\t} else {\n\t\t\tvar tempTime = rfcDate.split(\"T\")[1].split(\":\");\n\t\t\t\/\/ fullYear, month, date\n\t\t\tvar tempDate = new Date();\n\t\t\ttempDate.setHours(tempTime[0]);\n\t\t\ttempDate.setMinutes(tempTime[1]);\n\t\t}\n\t\treturn tempDate;","instance":"dojo.widget.TimePicker.util"}},"dojo.widget.TimePicker.util.toAmPmHour":{"meta":{"summary":"converts a 24-hour-based hour value to a 12-hour-based hour value, and an AM\/PM flag","parameters":{"hour":{"type":""}},"src":" \tvar amPmHour = hour;\n\t\tvar isAm = true;\n\t\tif (amPmHour == 0) {\n\t\t\tamPmHour = 12;\n\t\t} else if (amPmHour>12) {\n\t\t\tamPmHour = amPmHour - 12;\n\t\t\tisAm = false;\n\t\t} else if (amPmHour == 12) {\n\t\t\tisAm = false;\n\t\t}\n\t\treturn [amPmHour, isAm];","instance":"dojo.widget.TimePicker.util"}},"dojo.widget.TimePicker.util.fromAmPmHour":{"meta":{"summary":"converts a 12-hour-based hour value and an AM\/PM flag to a 24-hour-based hour value","parameters":{"amPmHour":{"type":""},"isAm":{"type":""}},"src":" \tvar hour = parseInt(amPmHour, 10);\n\t\tif(isAm && hour == 12) {\n\t\t\thour = 0;\n\t\t} else if (!isAm && hour<12) {\n\t\t\thour = hour + 12;\n\t\t}\n\t\treturn hour;","instance":"dojo.widget.TimePicker.util"}}}}},"dojo.widget.TitlePane":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.ContentPane","dojo.html.style","dojo.lfx.*"]},"functions":{"dojo.widget.TitlePane":{"meta":{"prototype_chain":["dojo.widget.ContentPane"],"call_chain":["dojo.widget.ContentPane"],"prototype_variables":["labelNodeClass","containerNodeClass","label","open","templatePath"],"variables":["labelNodeClass","containerNodeClass","label","open","templatePath"],"instance_variables":["open","labelNode.innerHTML"],"summary":"A pane with a title on top, that can be opened or collapsed."},"extra":{"variables":{"labelNodeClass":{"type":"String","summary":"CSS class name for <div> containing title of the pane."},"open":{"type":"Boolean","summary":"Whether pane is opened or closed."}}}},"dojo.widget.TitlePane.postCreate":{"meta":{"summary":"","src":" \tif (this.label) {\n\t\t\tthis.labelNode.appendChild(document.createTextNode(this.label));\n\t\t}\n\t\tif (this.labelNodeClass) {\n\t\t\tdojo.html.addClass(this.labelNode, this.labelNodeClass);\n\t\t}\t\n\t\tif (this.containerNodeClass) {\n\t\t\tdojo.html.addClass(this.containerNode, this.containerNodeClass);\n\t\t}\t\n\t\tif (!this.open) {\n\t\t\tdojo.html.hide(this.containerNode);\n\t\t}\n\t\tdojo.widget.TitlePane.superclass.postCreate.apply(this, arguments);","call_chain":["dojo.widget.TitlePane.superclass.postCreate"],"prototype":"dojo.widget.TitlePane"}},"dojo.widget.TitlePane.onLabelClick":{"meta":{"summary":"callback when label is clicked","src":" \tif (this.open) {\n\t\t\tdojo.lfx.wipeOut(this.containerNode, 250).play();\n\t\t\tthis.open=false;\n\t\t} else {\n\t\t\tdojo.lfx.wipeIn(this.containerNode, 250).play();\n\t\t\tthis.open=true;\n\t\t}","prototype":"dojo.widget.TitlePane"}},"dojo.widget.TitlePane.setLabel":{"meta":{"summary":"sets the text of the label","parameters":{"label":{"type":"String"}},"src":" \tthis.labelNode.innerHTML=label;","prototype":"dojo.widget.TitlePane"}}}}},"dojo.widget.Toaster":{"meta":{"requires":{"common":["dojo.widget.*","dojo.lfx.*","dojo.html.iframe"]},"functions":{"dojo.widget.Toaster":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templateString","templateCssPath","messageTopic","defaultType","clipCssClass","containerCssClass","contentCssClass","messageCssClass","warningCssClass","errorCssClass","fatalCssClass","positionDirection","positionDirectionTypes","showDelay"],"variables":["templateString","templateCssPath","messageTopic","defaultType","clipCssClass","containerCssClass","contentCssClass","messageCssClass","warningCssClass","errorCssClass","fatalCssClass","positionDirection","positionDirectionTypes","showDelay"],"instance_variables":["positionDirection","contentNode.innerHTML","containerNode.style.left","containerNode.style.top","slideAnim","fadeAnim","clipNode.style.height","clipNode.style.width","clipNode.style.top","clipNode.style.left","clipNode.style.clip","bgIframe","_scrollConnected"],"summary":"Message that slides in from the corner of the screen, used for notifications like \"new email\"."},"extra":{"variables":{"messageTopic":{"type":"String","summary":"Name of topic; anything published to this topic will be displayed as a message. Message format is either String or an object like {message: \"hello word\", type: \"ERROR\", delay: 500} messageTypes: Enumeration Possible message types."},"defaultType":{"type":"String","summary":"If message type isn't specified (see \"messageTopic\" parameter), then display message as this type. Possible values in messageTypes enumeration (\"MESSAGE\", \"WARNING\", \"ERROR\", \"FATAL\")"},"positionDirectionTypes":{"type":"Enumeration","summary":"Possible values for positionDirection parameter"},"showDelay":{"type":"Integer","summary":"Number of milliseconds to show message TODO: this is a strange name. \"duration\" makes more sense"}}}},"dojo.widget.Toaster.postCreate":{"meta":{"summary":"","src":" \t\tthis.hide();\n\t\t\tdojo.html.setClass(this.clipNode, this.clipCssClass);\n\t\t\tdojo.html.addClass(this.containerNode, this.containerCssClass);\n\t\t\tdojo.html.setClass(this.contentNode, this.contentCssClass);\n\t\t\tif(this.messageTopic){\n\t\t\t\tdojo.event.topic.subscribe(this.messageTopic, this, \"_handleMessage\");\n\t\t\t}\n\t\t\tif(!this.positionDirection || !dojo.lang.inArray(this.positionDirectionTypes, this.positionDirection)){\n\t\t\t\tthis.positionDirection = this.positionDirectionTypes.BRU;\n\t\t\t}","prototype":"dojo.widget.Toaster"}},"dojo.widget.Toaster._handleMessage":{"meta":{"summary":"","parameters":{"msg":{"type":""}},"src":" \t\tif(dojo.lang.isString(msg)){\n\t\t\t\tthis.setContent(msg);\n\t\t\t}else{\n\t\t\t\tthis.setContent(msg[\"message\"], msg[\"type\"], msg[\"delay\"]);\n\t\t\t}","prototype":"dojo.widget.Toaster"}},"dojo.widget.Toaster.setContent":{"meta":{"summary":"sets and displays the given message and show duration","parameters":{"msg":{"type":""},"messageType":{"type":""},"delay":{"type":""}},"src":"\t\t\tvar delay = delay||this.showDelay;\n\t\t\t\/\/ sync animations so there are no ghosted fades and such\n\t\t\tif(this.slideAnim && this.slideAnim.status() == \"playing\"){\n\t\t\t\tdojo.lang.setTimeout(50, dojo.lang.hitch(this, function(){\n\t\t\t\t\tthis.setContent(msg, messageType);\n\t\t\t\t}));\n\t\t\t\treturn;\n\t\t\t}else if(this.slideAnim){\n\t\t\t\tthis.slideAnim.stop();\n\t\t\t\tif(this.fadeAnim) this.fadeAnim.stop();\n\t\t\t}\n\t\t\tif(!msg){\n\t\t\t\tdojo.debug(this.widgetId + \".setContent() incoming content was null, ignoring.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!this.positionDirection || !dojo.lang.inArray(this.positionDirectionTypes, this.positionDirection)){\n\t\t\t\tdojo.raise(this.widgetId + \".positionDirection is an invalid value: \" + this.positionDirection);\n\t\t\t}\n\t\t\t\/\/ determine type of content and apply appropriately\n\t\t\tdojo.html.removeClass(this.containerNode, this.messageCssClass);\n\t\t\tdojo.html.removeClass(this.containerNode, this.warningCssClass);\n\t\t\tdojo.html.removeClass(this.containerNode, this.errorCssClass);\n\t\t\tdojo.html.removeClass(this.containerNode, this.fatalCssClass);\n\t\t\tdojo.html.clearOpacity(this.containerNode);\n\t\t\tif(msg instanceof String || typeof msg == \"string\"){\n\t\t\t\tthis.contentNode.innerHTML = msg;\n\t\t\t}else if(dojo.html.isNode(msg)){\n\t\t\t\tthis.contentNode.innerHTML = dojo.html.getContentAsString(msg);\n\t\t\t}else{\n\t\t\t\tdojo.raise(\"Toaster.setContent(): msg is of unknown type:\" + msg);\n\t\t\t}\n\t\t\tswitch(messageType){\n\t\t\t\tcase this.messageTypes.WARNING:\n\t\t\t\t\tdojo.html.addClass(this.containerNode, this.warningCssClass);\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.messageTypes.ERROR:\n\t\t\t\t\tdojo.html.addClass(this.containerNode, this.errorCssClass);\n\t\t\t\t\tbreak\n\t\t\t\tcase this.messageTypes.FATAL:\n\t\t\t\t\tdojo.html.addClass(this.containerNode, this.fatalCssClass);\n\t\t\t\t\tbreak;\n\t\t\t\tcase this.messageTypes.MESSAGE:\n\t\t\t\tdefault:\n\t\t\t\t\tdojo.html.addClass(this.containerNode, this.messageCssClass);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\/\/ now do funky animation of widget appearing from\n\t\t\t\/\/ bottom right of page and up\n\t\t\tthis.show();\n\t\t\tvar nodeSize = dojo.html.getMarginBox(this.containerNode);\n\t\t\t\/\/ sets up initial position of container node and slide-out direction\n\t\t\tif(this.positionDirection.indexOf(\"-up\") >= 0){\n\t\t\t\tthis.containerNode.style.left=0+\"px\";\n\t\t\t\tthis.containerNode.style.top=nodeSize.height + 10 + \"px\";\n\t\t\t}else if(this.positionDirection.indexOf(\"-left\") >= 0){\n\t\t\t\tthis.containerNode.style.left=nodeSize.width + 10 +\"px\";\n\t\t\t\tthis.containerNode.style.top=0+\"px\";\n\t\t\t}else if(this.positionDirection.indexOf(\"-right\") >= 0){\n\t\t\t\tthis.containerNode.style.left = 0 - nodeSize.width - 10 + \"px\";\n\t\t\t\tthis.containerNode.style.top = 0+\"px\";\n\t\t\t}else if(this.positionDirection.indexOf(\"-down\") >= 0){\n\t\t\t\tthis.containerNode.style.left = 0+\"px\";\n\t\t\t\tthis.containerNode.style.top = 0 - nodeSize.height - 10 + \"px\";\n\t\t\t}else{\n\t\t\t\tdojo.raise(this.widgetId + \".positionDirection is an invalid value: \" + this.positionDirection);\n\t\t\t}\n\t\t\tthis.slideAnim = dojo.lfx.html.slideTo(\n\t\t\t\tthis.containerNode,\n\t\t\t\t{ top: 0, left: 0 },\n\t\t\t\t450,\n\t\t\t\tnull,\n\t\t\t\tdojo.lang.hitch(this, function(nodes, anim){\n\t\t\t\t\tdojo.lang.setTimeout(dojo.lang.hitch(this, function(evt){\n\t\t\t\t\t\t\/\/ we must hide the iframe in order to fade\n\t\t\t\t\t\t\/\/ TODO: figure out how to fade with a BackgroundIframe\n\t\t\t\t\t\tif(this.bgIframe){\n\t\t\t\t\t\t\tthis.bgIframe.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\/\/ can't do a fadeHide because we're fading the\n\t\t\t\t\t\t\/\/ inner node rather than the clipping node\n\t\t\t\t\t\tthis.fadeAnim = dojo.lfx.html.fadeOut(\n\t\t\t\t\t\t\tthis.containerNode,\n\t\t\t\t\t\t\t1000,\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tdojo.lang.hitch(this, function(evt){\n\t\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t\t})).play();\n\t\t\t\t\t}), delay);\n\t\t\t\t})).play();","prototype":"dojo.widget.Toaster"},"extra":{"parameters":{"msg":{"type":"String","summary":"the message"},"messageType":{"type":"Enumeration","summary":"type of message; possible values in messageTypes array (\"MESSAGE\", \"WARNING\", \"ERROR\", \"FATAL\")"},"delay":{"type":"Integer","summary":"number of milliseconds to display message"}}}},"dojo.widget.Toaster._placeClip":{"meta":{"summary":"","src":" \t\tvar scroll = dojo.html.getScroll();\n\t\t\tvar view = dojo.html.getViewport();\n\t\t\tvar nodeSize = dojo.html.getMarginBox(this.containerNode);\n\t\t\t\/\/ sets up the size of the clipping node\n\t\t\tthis.clipNode.style.height = nodeSize.height+\"px\";\n\t\t\tthis.clipNode.style.width = nodeSize.width+\"px\";\n\t\t\t\/\/ sets up the position of the clipping node\n\t\t\tif(this.positionDirection.match(\/^t\/)){\n\t\t\t\tthis.clipNode.style.top = scroll.top+\"px\";\n\t\t\t}else if(this.positionDirection.match(\/^b\/)){\n\t\t\t\tthis.clipNode.style.top = (view.height - nodeSize.height - 2 + scroll.top)+\"px\";\n\t\t\t}\n\t\t\tif(this.positionDirection.match(\/^[tb]r-\/)){\n\t\t\t\tthis.clipNode.style.left = (view.width - nodeSize.width - 1 - scroll.left)+\"px\";\n\t\t\t}else if(this.positionDirection.match(\/^[tb]l-\/)){\n\t\t\t\tthis.clipNode.style.left = 0 + \"px\";\n\t\t\t}\n\t\t\tthis.clipNode.style.clip = \"rect(0px, \" + nodeSize.width + \"px, \" + nodeSize.height + \"px, 0px)\";\n\t\t\tif(dojo.render.html.ie){\n\t\t\t\tif(!this.bgIframe){\n\t\t\t\t\tthis.bgIframe = new dojo.html.BackgroundIframe(this.containerNode);\n\t\t\t\t\tthis.bgIframe.setZIndex(this.containerNode);\n\t\t\t\t}\n\t\t\t\tthis.bgIframe.onResized();\n\t\t\t\tthis.bgIframe.show();\n\t\t\t}","prototype":"dojo.widget.Toaster"}},"dojo.widget.Toaster.onSelect":{"meta":{"summary":"callback for when user clicks the message","parameters":{"e":{"type":""}},"src":"\t\t\t\/\/ summary: callback for when user clicks the message","prototype":"dojo.widget.Toaster"}},"dojo.widget.Toaster.show":{"meta":{"summary":"","src":" \t\tdojo.widget.Toaster.superclass.show.call(this);\n\t\t\tthis._placeClip();\n\t\t\tif(!this._scrollConnected){\n\t\t\t\tthis._scrollConnected = true;\n\t\t\t\tdojo.event.connect(window, \"onscroll\", this, \"_placeClip\");\n\t\t\t}","call_chain":["dojo.widget.Toaster.superclass.show"],"prototype":"dojo.widget.Toaster"}},"dojo.widget.Toaster.hide":{"meta":{"summary":"","src":" \t\tdojo.widget.Toaster.superclass.hide.call(this);\n\t\t\tif(this._scrollConnected){\n\t\t\t\tthis._scrollConnected = false;\n\t\t\t\tdojo.event.disconnect(window, \"onscroll\", this, \"_placeClip\");\n\t\t\t}\n\t\t\tdojo.html.setOpacity(this.containerNode, 1.0);","call_chain":["dojo.widget.Toaster.superclass.hide"],"prototype":"dojo.widget.Toaster"}}},"objects":{"dojo.widget.Toaster.messageTypes":{"meta":{"variables":["MESSAGE","WARNING","ERROR","FATAL"]}}}}},"dojo.widget.Toggler":{"meta":{"requires":{"common":["dojo.widget.*","dojo.event.*"]},"functions":{"dojo.widget.Toggler":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["targetId"],"variables":["targetId"],"summary":"clicking on this widget shows\/hides another widget"}},"dojo.widget.Toggler.fillInTemplate":{"meta":{"summary":"","src":" \tdojo.event.connect(this.domNode, \"onclick\", this, \"onClick\");","prototype":"dojo.widget.Toggler"}},"dojo.widget.Toggler.onClick":{"meta":{"summary":"","src":" \tvar pane = dojo.widget.byId(this.targetId);\n\t\tif(!pane){ return; }\n\t\tpane.explodeSrc = this.domNode;\n\t\tpane.toggleShowing();","prototype":"dojo.widget.Toggler"}}}}},"dojo.widget.Toolbar":{"meta":{"requires":{"common":["dojo.widget.*","dojo.html.style"]},"functions":{"dojo.widget.ToolbarContainer":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","templateString","templateCssPath"],"variables":["isContainer","templateString","templateCssPath"]}},"dojo.widget.ToolbarContainer.getItem":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tif(name instanceof dojo.widget.ToolbarItem) { return name; }\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\tvar item = child.getItem(name);\n\t\t\t\tif(item) { return item; }\n\t\t\t}\n\t\t}\n\t\treturn null;","prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.ToolbarContainer.getItems":{"meta":{"summary":"","src":" \tvar items = [];\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\titems = items.concat(child.getItems());\n\t\t\t}\n\t\t}\n\t\treturn items;","prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.ToolbarContainer.enable":{"meta":{"summary":"","src":" \tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\tchild.enable.apply(child, arguments);\n\t\t\t}\n\t\t}","call_chain":["child.enable"],"prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.ToolbarContainer.disable":{"meta":{"summary":"","src":" \tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\tchild.disable.apply(child, arguments);\n\t\t\t}\n\t\t}","call_chain":["child.disable"],"prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.ToolbarContainer.select":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\tchild.select(arguments);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.ToolbarContainer.deselect":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\tchild.deselect(arguments);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.ToolbarContainer.getItemsState":{"meta":{"summary":"","src":" \tvar values = {};\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\tdojo.lang.mixin(values, child.getItemsState());\n\t\t\t}\n\t\t}\n\t\treturn values;","prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.ToolbarContainer.getItemsActiveState":{"meta":{"summary":"","src":" \tvar values = {};\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\tdojo.lang.mixin(values, child.getItemsActiveState());\n\t\t\t}\n\t\t}\n\t\treturn values;","prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.ToolbarContainer.getItemsSelectedState":{"meta":{"summary":"","src":" \tvar values = {};\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.Toolbar) {\n\t\t\t\tdojo.lang.mixin(values, child.getItemsSelectedState());\n\t\t\t}\n\t\t}\n\t\treturn values;","prototype":"dojo.widget.ToolbarContainer"}},"dojo.widget.Toolbar":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","templateString"],"variables":["isContainer","templateString"]}},"dojo.widget.Toolbar._getItem":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar start = new Date();\n\t\tvar widget = null;\n\t\twhile(node && node != this.domNode) {\n\t\t\tif(dojo.html.hasClass(node, \"toolbarItem\")) {\n\t\t\t\tvar widgets = dojo.widget.manager.getWidgetsByFilter(function(w) { return w.domNode == node; });\n\t\t\t\tif(widgets.length == 1) {\n\t\t\t\t\twidget = widgets[0];\n\t\t\t\t\tbreak;\n\t\t\t\t} else if(widgets.length > 1) {\n\t\t\t\t\tdojo.raise(\"Toolbar._getItem: More than one widget matches the node\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn widget;","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar._onmouseover":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar widget = this._getItem(e.target);\n\t\tif(widget && widget._onmouseover) { widget._onmouseover(e); }","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar._onmouseout":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar widget = this._getItem(e.target);\n\t\tif(widget && widget._onmouseout) { widget._onmouseout(e); }","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar._onclick":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar widget = this._getItem(e.target);\n\t\tif(widget && widget._onclick){\n\t\t\twidget._onclick(e);\n\t\t}","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar._onmousedown":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar widget = this._getItem(e.target);\n\t\tif(widget && widget._onmousedown) { widget._onmousedown(e); }","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar._onmouseup":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar widget = this._getItem(e.target);\n\t\tif(widget && widget._onmouseup) { widget._onmouseup(e); }","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.addChild":{"meta":{"summary":"","parameters":{"item":{"type":""},"pos":{"type":""},"props":{"type":""}},"src":" \tvar widget = dojo.widget.ToolbarItem.make(item, null, props);\n\t\tvar ret = dojo.widget.Toolbar.superclass.addChild.call(this, widget, null, pos, null);\n\t\treturn ret;","call_chain":["dojo.widget.Toolbar.superclass.addChild"],"prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.push":{"meta":{"summary":"","src":" \tfor(var i = 0; i < arguments.length; i++) {\n\t\t\tthis.addChild(arguments[i]);\n\t\t}","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.getItem":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tif(name instanceof dojo.widget.ToolbarItem) { return name; }\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.ToolbarItem\n\t\t\t\t&& child._name == name) { return child; }\n\t\t}\n\t\treturn null;","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.getItems":{"meta":{"summary":"","src":" \tvar items = [];\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.ToolbarItem) {\n\t\t\t\titems.push(child);\n\t\t\t}\n\t\t}\n\t\treturn items;","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.getItemsState":{"meta":{"summary":"","src":" \tvar values = {};\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.ToolbarItem) {\n\t\t\t\tvalues[child._name] = {\n\t\t\t\t\tselected: child._selected,\n\t\t\t\t\tenabled: !child.disabled\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn values;","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.getItemsActiveState":{"meta":{"summary":"","src":" \tvar values = this.getItemsState();\n\t\tfor(var item in values) {\n\t\t\tvalues[item] = values[item].enabled;\n\t\t}\n\t\treturn values;","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.getItemsSelectedState":{"meta":{"summary":"","src":" \tvar values = this.getItemsState();\n\t\tfor(var item in values) {\n\t\t\tvalues[item] = values[item].selected;\n\t\t}\n\t\treturn values;","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.enable":{"meta":{"summary":"","src":" \tvar items = arguments.length ? arguments : this.children;\n\t\tfor(var i = 0; i < items.length; i++) {\n\t\t\tvar child = this.getItem(items[i]);\n\t\t\tif(child instanceof dojo.widget.ToolbarItem) {\n\t\t\t\tchild.enable(false, true);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.disable":{"meta":{"summary":"","src":" \tvar items = arguments.length ? arguments : this.children;\n\t\tfor(var i = 0; i < items.length; i++) {\n\t\t\tvar child = this.getItem(items[i]);\n\t\t\tif(child instanceof dojo.widget.ToolbarItem) {\n\t\t\t\tchild.disable();\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.select":{"meta":{"summary":"","src":" \tfor(var i = 0; i < arguments.length; i++) {\n\t\t\tvar name = arguments[i];\n\t\t\tvar item = this.getItem(name);\n\t\t\tif(item) { item.select(); }\n\t\t}","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.deselect":{"meta":{"summary":"","src":" \tfor(var i = 0; i < arguments.length; i++) {\n\t\t\tvar name = arguments[i];\n\t\t\tvar item = this.getItem(name);\n\t\t\tif(item) { item.disable(); }\n\t\t}","prototype":"dojo.widget.Toolbar"}},"dojo.widget.Toolbar.setValue":{"meta":{"summary":"","src":" \tfor(var i = 0; i < arguments.length; i += 2) {\n\t\t\tvar name = arguments[i], value = arguments[i+1];\n\t\t\tvar item = this.getItem(name);\n\t\t\tif(item) {\n\t\t\t\tif(item instanceof dojo.widget.ToolbarItem) {\n\t\t\t\t\titem.setValue(value);\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Toolbar"}},"dojo.widget.ToolbarItem":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templateString","_name","_selected","_toggleItem","_icon","_label"],"variables":["templateString","_name","_selected","_toggleItem","_icon","_label"],"instance_variables":["_name","_selected","_toggleItem","disabled","_icon","_label","labelNode","labelNode.innerHTML"]}},"dojo.widget.ToolbarItem.getName":{"meta":{"summary":"","src":" getName: function() { return this._name;    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.setName":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" setName: function(value) { return (this._name = value);    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.getValue":{"meta":{"summary":"","src":" getValue: function() { return this.getName();    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.setValue":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" setValue: function(value) { return this.setName(value);    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.isSelected":{"meta":{"summary":"","src":" isSelected: function() { return this._selected;    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.setSelected":{"meta":{"summary":"","parameters":{"is":{"type":""},"force":{"type":""},"preventEvent":{"type":""}},"src":" \tif(!this._toggleItem && !force) { return; }\n\t\tis = Boolean(is);\n\t\tif(force || !this.disabled && this._selected != is) {\n\t\t\tthis._selected = is;\n\t\t\tthis.update();\n\t\t\tif(!preventEvent) {\n\t\t\t\tthis._fireEvent(is ? \"onSelect\" : \"onDeselect\");\n\t\t\t\tthis._fireEvent(\"onChangeSelect\");\n\t\t\t}\n\t\t}","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.select":{"meta":{"summary":"","parameters":{"force":{"type":""},"preventEvent":{"type":""}},"src":" \treturn this.setSelected(true, force, preventEvent);","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.deselect":{"meta":{"summary":"","parameters":{"force":{"type":""},"preventEvent":{"type":""}},"src":" \treturn this.setSelected(false, force, preventEvent);","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.isToggleItem":{"meta":{"summary":"","src":" isToggleItem: function() { return this._toggleItem;    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.setToggleItem":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" setToggleItem: function(value) { this._toggleItem = Boolean(value);    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.toggleSelected":{"meta":{"summary":"","parameters":{"force":{"type":""}},"src":" \treturn this.setSelected(!this._selected, force);","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.isEnabled":{"meta":{"summary":"","src":" isEnabled: function() { return !this.disabled;    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.setEnabled":{"meta":{"summary":"","parameters":{"is":{"type":""},"force":{"type":""},"preventEvent":{"type":""}},"src":" \tis = Boolean(is);\n\t\tif(force || this.disabled == is) {\n\t\t\tthis.disabled = !is;\n\t\t\tthis.update();\n\t\t\tif(!preventEvent) {\n\t\t\t\tthis._fireEvent(this.disabled ? \"onDisable\" : \"onEnable\");\n\t\t\t\tthis._fireEvent(\"onChangeEnabled\");\n\t\t\t}\n\t\t}\n\t\treturn !this.disabled;","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.enable":{"meta":{"summary":"","parameters":{"force":{"type":""},"preventEvent":{"type":""}},"src":" \treturn this.setEnabled(true, force, preventEvent);","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.disable":{"meta":{"summary":"","parameters":{"force":{"type":""},"preventEvent":{"type":""}},"src":" \treturn this.setEnabled(false, force, preventEvent);","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.toggleEnabled":{"meta":{"summary":"","parameters":{"force":{"type":""},"preventEvent":{"type":""}},"src":" \treturn this.setEnabled(this.disabled, force, preventEvent);","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.getIcon":{"meta":{"summary":"","src":" getIcon: function() { return this._icon;    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.setIcon":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" \tvar icon = dojo.widget.Icon.make(value);\n\t\tif(this._icon) {\n\t\t\tthis._icon.setIcon(icon);\n\t\t} else {\n\t\t\tthis._icon = icon;\n\t\t}\n\t\tvar iconNode = this._icon.getNode();\n\t\tif(iconNode.parentNode != this.domNode) {\n\t\t\tif(this.domNode.hasChildNodes()) {\n\t\t\t\tthis.domNode.insertBefore(iconNode, this.domNode.firstChild);\n\t\t\t} else {\n\t\t\t\tthis.domNode.appendChild(iconNode);\n\t\t\t}\n\t\t}\n\t\treturn this._icon;","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.getLabel":{"meta":{"summary":"","src":" getLabel: function() { return this._label;    ","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.setLabel":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" \tvar ret = (this._label = value);\n\t\tif(!this.labelNode) {\n\t\t\tthis.labelNode = document.createElement(\"span\");\n\t\t\tthis.domNode.appendChild(this.labelNode);\n\t\t}\n\t\tthis.labelNode.innerHTML = \"\";\n\t\tthis.labelNode.appendChild(document.createTextNode(this._label));\n\t\tthis.update();\n\t\treturn ret;","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.update":{"meta":{"summary":"","src":" \tif(this.disabled) {\n\t\t\tthis._selected = false;\n\t\t\tdojo.html.addClass(this.domNode, \"disabled\");\n\t\t\tdojo.html.removeClass(this.domNode, \"down\");\n\t\t\tdojo.html.removeClass(this.domNode, \"hover\");\n\t\t} else {\n\t\t\tdojo.html.removeClass(this.domNode, \"disabled\");\n\t\t\tif(this._selected) {\n\t\t\t\tdojo.html.addClass(this.domNode, \"selected\");\n\t\t\t} else {\n\t\t\t\tdojo.html.removeClass(this.domNode, \"selected\");\n\t\t\t}\n\t\t}\n\t\tthis._updateIcon();","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem._updateIcon":{"meta":{"summary":"","src":" \tif(this._icon) {\n\t\t\tif(this.disabled) {\n\t\t\t\tthis._icon.disable();\n\t\t\t} else {\n\t\t\t\tif(this._cssHover) {\n\t\t\t\t\tthis._icon.hover();\n\t\t\t\t} else if(this._selected) {\n\t\t\t\t\tthis._icon.select();\n\t\t\t\t} else {\n\t\t\t\t\tthis._icon.enable();\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem._fireEvent":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \tif(typeof this[evt] == \"function\") {\n\t\t\tvar args = [this];\n\t\t\tfor(var i = 1; i < arguments.length; i++) {\n\t\t\t\targs.push(arguments[i]);\n\t\t\t}\n\t\t\tthis[evt].apply(this, args);\n\t\t}","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem._onmouseover":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif(this.disabled) { return; }\n\t\tdojo.html.addClass(this.domNode, \"hover\");\n\t\tthis._fireEvent(\"onMouseOver\");","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem._onmouseout":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.html.removeClass(this.domNode, \"hover\");\n\t\tdojo.html.removeClass(this.domNode, \"down\");\n\t\tif(!this._selected) {\n\t\t\tdojo.html.removeClass(this.domNode, \"selected\");\n\t\t}\n\t\tthis._fireEvent(\"onMouseOut\");","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem._onclick":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif(!this.disabled && !this._toggleItem) {\n\t\t\tthis._fireEvent(\"onClick\");\n\t\t}","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem._onmousedown":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif(e.preventDefault) { e.preventDefault(); }\n\t\tif(this.disabled) { return; }\n\t\tdojo.html.addClass(this.domNode, \"down\");\n\t\tif(this._toggleItem) {\n\t\t\tif(this.parent.preventDeselect && this._selected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.toggleSelected();\n\t\t}\n\t\tthis._fireEvent(\"onMouseDown\");","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem._onmouseup":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.html.removeClass(this.domNode, \"down\");\n\t\tthis._fireEvent(\"onMouseUp\");","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.onClick":{"meta":{"summary":"","src":"","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.onMouseOver":{"meta":{"summary":"","src":"","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.onMouseOut":{"meta":{"summary":"","src":"","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.onMouseDown":{"meta":{"summary":"","src":"","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.onMouseUp":{"meta":{"summary":"","src":"","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarItem.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tif(args.name) { this._name = args.name; }\n\t\tif(args.selected) { this.select(); }\n\t\tif(args.disabled) { this.disable(); }\n\t\tif(args.label) { this.setLabel(args.label); }\n\t\tif(args.icon) { this.setIcon(args.icon); }\n\t\tif(args.toggleitem||args.toggleItem) { this.setToggleItem(true); }","prototype":"dojo.widget.ToolbarItem"}},"dojo.widget.ToolbarButtonGroup":{"meta":{"prototype_chain":["dojo.widget.ToolbarItem"],"call_chain":["dojo.widget.ToolbarItem"],"prototype_variables":["isContainer","templateString","defaultButton","_value","setValue","preventDeselect"],"variables":["isContainer","templateString","defaultButton","_value","setValue","preventDeselect"],"instance_variables":["defaultButton","_value"]}},"dojo.widget.ToolbarButtonGroup.postCreate":{"meta":{"summary":"","src":"        for (var i = 0; i < this.children.length; i++) {\n            this._injectChild(this.children[i]);\n        }","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.addChild":{"meta":{"summary":"","parameters":{"item":{"type":""},"pos":{"type":""},"props":{"type":""}},"src":" \tvar widget = dojo.widget.ToolbarItem.make(item, null, dojo.lang.mixin(props||{}, {toggleItem:true}));\n\t\tvar ret = dojo.widget.ToolbarButtonGroup.superclass.addChild.call(this, widget, null, pos, null);\n        this._injectChild(widget);\n        return ret;","call_chain":["dojo.widget.ToolbarButtonGroup.superclass.addChild"],"prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup._injectChild":{"meta":{"summary":"","parameters":{"widget":{"type":""}},"src":"        dojo.event.connect(widget, \"onSelect\", this, \"onChildSelected\");\n        dojo.event.connect(widget, \"onDeselect\", this, \"onChildDeSelected\");\n        if(widget._name == this.defaultButton\n\t\t\t|| (typeof this.defaultButton == \"number\"\n\t\t\t&& this.children.length-1 == this.defaultButton)) {\n\t\t\twidget.select(false, true);\n\t\t}","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.getItem":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \tif(name instanceof dojo.widget.ToolbarItem) { return name; }\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.ToolbarItem\n\t\t\t\t&& child._name == name) { return child; }\n\t\t}\n\t\treturn null;","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.getItems":{"meta":{"summary":"","src":" \tvar items = [];\n\t\tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.ToolbarItem) {\n\t\t\t\titems.push(child);\n\t\t\t}\n\t\t}\n\t\treturn items;","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.onChildSelected":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tthis.select(e._name);","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.onChildDeSelected":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tthis._fireEvent(\"onChangeSelect\", this._value);","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.enable":{"meta":{"summary":"","parameters":{"force":{"type":""},"preventEvent":{"type":""}},"src":" \tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.ToolbarItem) {\n\t\t\t\tchild.enable(force, preventEvent);\n\t\t\t\tif(child._name == this._value) {\n\t\t\t\t\tchild.select(force, preventEvent);\n\t\t\t\t}\n\t\t\t}\n\t\t}","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.disable":{"meta":{"summary":"","parameters":{"force":{"type":""},"preventEvent":{"type":""}},"src":" \tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.ToolbarItem) {\n\t\t\t\tchild.disable(force, preventEvent);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.getValue":{"meta":{"summary":"","src":" getValue: function() { return this._value;    ","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButtonGroup.select":{"meta":{"summary":"","parameters":{"name":{"type":""},"force":{"type":""},"preventEvent":{"type":""}},"src":" \tfor(var i = 0; i < this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\tif(child instanceof dojo.widget.ToolbarItem) {\n\t\t\t\tif(child._name == name) {\n\t\t\t\t\tchild.select(force, preventEvent);\n\t\t\t\t\tthis._value = name;\n\t\t\t\t} else {\n\t\t\t\t\tchild.deselect(true, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!preventEvent) {\n\t\t\tthis._fireEvent(\"onSelect\", this._value);\n\t\t\tthis._fireEvent(\"onChangeSelect\", this._value);\n\t\t}","prototype":"dojo.widget.ToolbarButtonGroup"}},"dojo.widget.ToolbarButton":{"meta":{"prototype_chain":["dojo.widget.ToolbarItem"],"call_chain":["dojo.widget.ToolbarItem"],"instance_variables":["_name"]}},"dojo.widget.ToolbarButton.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tdojo.widget.ToolbarButton.superclass.fillInTemplate.call(this, args, frag);\n\t\tdojo.html.addClass(this.domNode, \"toolbarButton\");\n\t\tif(this._icon) {\n\t\t\tthis.setIcon(this._icon);\n\t\t}\n\t\tif(this._label) {\n\t\t\tthis.setLabel(this._label);\n\t\t}\n\t\tif(!this._name) {\n\t\t\tif(this._label) {\n\t\t\t\tthis.setName(this._label);\n\t\t\t} else if(this._icon) {\n\t\t\t\tvar src = this._icon.getSrc(\"enabled\").match(\/[\\\/^]([^\\.\\\/]+)\\.(gif|jpg|jpeg|png)$\/i);\n\t\t\t\tif(src) { this.setName(src[1]); }\n\t\t\t} else {\n\t\t\t\tthis._name = this._widgetId;\n\t\t\t}\n\t\t}","call_chain":["dojo.widget.ToolbarButton.superclass.fillInTemplate"],"prototype":"dojo.widget.ToolbarButton"}},"dojo.widget.ToolbarDialog":{"meta":{"prototype_chain":["dojo.widget.ToolbarButton"],"call_chain":["dojo.widget.ToolbarButton"]}},"dojo.widget.ToolbarDialog.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tdojo.widget.ToolbarDialog.superclass.fillInTemplate.call(this, args, frag);\n\t\tdojo.event.connect(this, \"onSelect\", this, \"showDialog\");\n\t\tdojo.event.connect(this, \"onDeselect\", this, \"hideDialog\");","call_chain":["dojo.widget.ToolbarDialog.superclass.fillInTemplate"],"prototype":"dojo.widget.ToolbarDialog"}},"dojo.widget.ToolbarDialog.showDialog":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.lang.setTimeout(dojo.event.connect, 1, document, \"onmousedown\", this, \"deselect\");","prototype":"dojo.widget.ToolbarDialog"}},"dojo.widget.ToolbarDialog.hideDialog":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.event.disconnect(document, \"onmousedown\", this, \"deselect\");","prototype":"dojo.widget.ToolbarDialog"}},"dojo.widget.ToolbarMenu":{"meta":{"prototype_chain":["dojo.widget.ToolbarDialog"],"call_chain":["dojo.widget.ToolbarDialog"]}},"dojo.widget.ToolbarSeparator":{"meta":{"prototype_chain":["dojo.widget.ToolbarItem"],"call_chain":["dojo.widget.ToolbarItem"],"prototype_variables":["templateString","defaultIconPath","_onmouseover","_onmouseout","_onclick","_onmousedown","_onmouseup"],"variables":["templateString","defaultIconPath","_onmouseover","_onmouseout","_onclick","_onmousedown","_onmouseup"],"instance_variables":["_name"]}},"dojo.widget.ToolbarSeparator.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""},"skip":{"type":""}},"src":" \tdojo.widget.ToolbarSeparator.superclass.fillInTemplate.call(this, args, frag);\n\t\tthis._name = this.widgetId;\n\t\tif(!skip) {\n\t\t\tif(!this._icon) {\n\t\t\t\tthis.setIcon(this.defaultIconPath);\n\t\t\t}\n\t\t\tthis.domNode.appendChild(this._icon.getNode());\n\t\t}","call_chain":["dojo.widget.ToolbarSeparator.superclass.fillInTemplate"],"prototype":"dojo.widget.ToolbarSeparator"}},"dojo.widget.ToolbarSpace":{"meta":{"prototype_chain":["dojo.widget.ToolbarSeparator"],"call_chain":["dojo.widget.ToolbarSeparator"]}},"dojo.widget.ToolbarSpace.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""},"skip":{"type":""}},"src":" \tdojo.widget.ToolbarSpace.superclass.fillInTemplate.call(this, args, frag, true);\n\t\tif(!skip) {\n\t\t\tdojo.html.addClass(this.domNode, \"toolbarSpace\");\n\t\t}","call_chain":["dojo.widget.ToolbarSpace.superclass.fillInTemplate"],"prototype":"dojo.widget.ToolbarSpace"}},"dojo.widget.ToolbarSelect":{"meta":{"prototype_chain":["dojo.widget.ToolbarItem"],"call_chain":["dojo.widget.ToolbarItem"],"prototype_variables":["templateString","_onmouseover","_onmouseout","_onclick","_onmousedown","_onmouseup"],"variables":["templateString","_onmouseover","_onmouseout","_onclick","_onmousedown","_onmouseup"],"instance_variables":["selectBox.disabled"]}},"dojo.widget.ToolbarSelect.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tdojo.widget.ToolbarSelect.superclass.fillInTemplate.call(this, args, frag, true);\n\t\tvar keys = args.values;\n\t\tvar i = 0;\n\t\tfor(var val in keys) {\n\t\t\tvar opt = document.createElement(\"option\");\n\t\t\topt.setAttribute(\"value\", keys[val]);\n\t\t\topt.innerHTML = val;\n\t\t\tthis.selectBox.appendChild(opt);\n\t\t}","call_chain":["dojo.widget.ToolbarSelect.superclass.fillInTemplate"],"prototype":"dojo.widget.ToolbarSelect"}},"dojo.widget.ToolbarSelect.changed":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tthis._fireEvent(\"onSetValue\", this.selectBox.value);","prototype":"dojo.widget.ToolbarSelect"}},"dojo.widget.ToolbarSelect.setEnabled":{"meta":{"summary":"","parameters":{"is":{"type":""},"force":{"type":""},"preventEvent":{"type":""}},"src":" \tvar ret = dojo.widget.ToolbarSelect.superclass.setEnabled.call(this, is, force, preventEvent);\n\t\tthis.selectBox.disabled = this.disabled;\n\t\treturn ret;","call_chain":["dojo.widget.ToolbarSelect.superclass.setEnabled"],"prototype":"dojo.widget.ToolbarSelect"}},"dojo.widget.ToolbarColorDialog":{"meta":{"prototype_chain":["dojo.widget.ToolbarDialog"],"call_chain":["dojo.widget.ToolbarDialog"],"prototype_variables":["palette"],"variables":["palette"],"instance_variables":["dialog","dialog.domNode.style.position","_value"]}},"dojo.widget.ToolbarColorDialog.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tdojo.widget.ToolbarColorDialog.superclass.fillInTemplate.call(this, args, frag);\n\t\tthis.dialog = dojo.widget.createWidget(\"ColorPalette\", {palette: this.palette});\n\t\tthis.dialog.domNode.style.position = \"absolute\";\n\t\tdojo.event.connect(this.dialog, \"onColorSelect\", this, \"_setValue\");","call_chain":["dojo.widget.ToolbarColorDialog.superclass.fillInTemplate"],"prototype":"dojo.widget.ToolbarColorDialog"}},"dojo.widget.ToolbarColorDialog._setValue":{"meta":{"summary":"","parameters":{"color":{"type":""}},"src":" \tthis._value = color;\n\t\tthis._fireEvent(\"onSetValue\", color);","prototype":"dojo.widget.ToolbarColorDialog"}},"dojo.widget.ToolbarColorDialog.showDialog":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.widget.ToolbarColorDialog.superclass.showDialog.call(this, e);\n\t\tvar abs = dojo.html.getAbsolutePosition(this.domNode, true);\n\t\tvar y = abs.y + dojo.html.getBorderBox(this.domNode).height;\n\t\tthis.dialog.showAt(abs.x, y);","call_chain":["dojo.widget.ToolbarColorDialog.superclass.showDialog"],"prototype":"dojo.widget.ToolbarColorDialog"}},"dojo.widget.ToolbarColorDialog.hideDialog":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.widget.ToolbarColorDialog.superclass.hideDialog.call(this, e);\n\t\tthis.dialog.hide();","call_chain":["dojo.widget.ToolbarColorDialog.superclass.hideDialog"],"prototype":"dojo.widget.ToolbarColorDialog"}},"dojo.widget.ToolbarItem.make":{"meta":{"summary":"","parameters":{"wh":{"type":""},"whIsType":{"type":""},"props":{"type":""}},"src":" var item = null;\n\tif(wh instanceof Array) {\n\t\titem = dojo.widget.createWidget(\"ToolbarButtonGroup\", props);\n\t\titem.setName(wh[0]);\n\t\tfor(var i = 1; i < wh.length; i++) {\n\t\t\titem.addChild(wh[i]);\n\t\t}\n\t} else if(wh instanceof dojo.widget.ToolbarItem) {\n\t\titem = wh;\n\t} else if(wh instanceof dojo.uri.Uri) {\n\t\titem = dojo.widget.createWidget(\"ToolbarButton\",\n\t\t\tdojo.lang.mixin(props||{}, {icon: new dojo.widget.Icon(wh.toString())}));\n\t} else if(whIsType) {\n\t\titem = dojo.widget.createWidget(wh, props);\n\t} else if(typeof wh == \"string\" || wh instanceof String) {\n\t\tswitch(wh.charAt(0)) {\n\t\t\tcase \"|\":\n\t\t\tcase \"-\":\n\t\t\tcase \"\/\":\n\t\t\t\titem = dojo.widget.createWidget(\"ToolbarSeparator\", props);\n\t\t\t\tbreak;\n\t\t\tcase \" \":\n\t\t\t\tif(wh.length == 1) {\n\t\t\t\t\titem = dojo.widget.createWidget(\"ToolbarSpace\", props);\n\t\t\t\t} else {\n\t\t\t\t\titem = dojo.widget.createWidget(\"ToolbarFlexibleSpace\", props);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif(\/\\.(gif|jpg|jpeg|png)$\/i.test(wh)) {\n\t\t\t\t\titem = dojo.widget.createWidget(\"ToolbarButton\",\n\t\t\t\t\t\tdojo.lang.mixin(props||{}, {icon: new dojo.widget.Icon(wh.toString())}));\n\t\t\t\t} else {\n\t\t\t\t\titem = dojo.widget.createWidget(\"ToolbarButton\",\n\t\t\t\t\t\tdojo.lang.mixin(props||{}, {label: wh.toString()}));\n\t\t\t\t}\n\t\t}\n\t} else if(wh && wh.tagName && \/^img$\/i.test(wh.tagName)) {\n\t\titem = dojo.widget.createWidget(\"ToolbarButton\",\n\t\t\tdojo.lang.mixin(props||{}, {icon: wh}));\n\t} else {\n\t\titem = dojo.widget.createWidget(\"ToolbarButton\",\n\t\t\tdojo.lang.mixin(props||{}, {label: wh.toString()}));\n\t}\n\treturn item;"}},"dojo.widget.ToolbarMenuItem":{"meta":{"summary":"","src":""}},"dojo.widget.Icon":{"meta":{"summary":"","parameters":{"enabled":{"type":""},"disabled":{"type":""},"hovered":{"type":""},"selected":{"type":""}},"src":" if(!arguments.length){\n\t\t\/\/ FIXME: should this be dojo.raise?\n\t\tthrow new Error(\"Icon must have at least an enabled state\");\n\t}\n\tvar states = [\"enabled\", \"disabled\", \"hovered\", \"selected\"];\n\tvar currentState = \"enabled\";\n\tvar domNode = document.createElement(\"img\");\n\tthis.getState = function(){ return currentState; }\n\tthis.setState = function(value){\n\t\tif(dojo.lang.inArray(states, value)){\n\t\t\tif(this[value]){\n\t\t\t\tcurrentState = value;\n\t\t\t\tvar img = this[currentState];\n\t\t\t\tif ((dojo.render.html.ie55 || dojo.render.html.ie60) && img.src && img.src.match(\/[.]png$\/i) ) {\n\t\t\t\t\tdomNode.width = img.width||img.offsetWidth;\n\t\t\t\t\tdomNode.height = img.height||img.offsetHeight;\n\t\t\t\t\tdomNode.setAttribute(\"src\", dojo.uri.dojoUri(\"src\/widget\/templates\/images\/blank.gif\").uri);\n\t\t\t\t\tdomNode.style.filter=\"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\"+img.src+\"',sizingMethod='image')\";\n\t\t\t\t} else {\n\t\t\t\t\tdomNode.setAttribute(\"src\", img.src);\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tthrow new Error(\"Invalid state set on Icon (state: \" + value + \")\");\n\t\t}\n\t}\n\tthis.setSrc = function(state, value){\n\t\tif(\/^img$\/i.test(value.tagName)){\n\t\t\tthis[state] = value;\n\t\t}else if(typeof value == \"string\" || value instanceof String\n\t\t\t|| value instanceof dojo.uri.Uri){\n\t\t\tthis[state] = new Image();\n\t\t\tthis[state].src = value.toString();\n\t\t}\n\t\treturn this[state];\n\t}\n\tthis.setIcon = function(icon){\n\t\tfor(var i = 0; i < states.length; i++){\n\t\t\tif(icon[states[i]]){\n\t\t\t\tthis.setSrc(states[i], icon[states[i]]);\n\t\t\t}\n\t\t}\n\t\tthis.update();\n\t}\n\tthis.enable = function(){ this.setState(\"enabled\"); }\n\tthis.disable = function(){ this.setState(\"disabled\"); }\n\tthis.hover = function(){ this.setState(\"hovered\"); }\n\tthis.select = function(){ this.setState(\"selected\"); }\n\tthis.getSize = function(){\n\t\treturn {\n\t\t\twidth: domNode.width||domNode.offsetWidth,\n\t\t\theight: domNode.height||domNode.offsetHeight\n\t\t};\n\t}\n\tthis.setSize = function(w, h){\n\t\tdomNode.width = w;\n\t\tdomNode.height = h;\n\t\treturn { width: w, height: h };\n\t}\n\tthis.getNode = function(){\n\t\treturn domNode;\n\t}\n\tthis.getSrc = function(state){\n\t\tif(state){ return this[state].src; }\n\t\treturn domNode.src||\"\";\n\t}\n\tthis.update = function(){\n\t\tthis.setState(currentState);\n\t}\n\tfor(var i = 0; i < states.length; i++){\n\t\tvar arg = arguments[i];\n\t\tvar state = states[i];\n\t\tthis[state] = null;\n\t\tif(!arg){ continue; }\n\t\tthis.setSrc(state, arg);\n\t}\n\tthis.enable();","instance_variables":["getState","setState","setSrc","setIcon","enable","disable","hover","select","getSize","setSize","getNode","getSrc","update"]}},"dojo.widget.Icon.getState":{"meta":{"summary":"","src":" this.getState = function(){ return currentState;   ","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.setState":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" \tif(dojo.lang.inArray(states, value)){\n\t\t\tif(this[value]){\n\t\t\t\tcurrentState = value;\n\t\t\t\tvar img = this[currentState];\n\t\t\t\tif ((dojo.render.html.ie55 || dojo.render.html.ie60) && img.src && img.src.match(\/[.]png$\/i) ) {\n\t\t\t\t\tdomNode.width = img.width||img.offsetWidth;\n\t\t\t\t\tdomNode.height = img.height||img.offsetHeight;\n\t\t\t\t\tdomNode.setAttribute(\"src\", dojo.uri.dojoUri(\"src\/widget\/templates\/images\/blank.gif\").uri);\n\t\t\t\t\tdomNode.style.filter=\"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\"+img.src+\"',sizingMethod='image')\";\n\t\t\t\t} else {\n\t\t\t\t\tdomNode.setAttribute(\"src\", img.src);\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tthrow new Error(\"Invalid state set on Icon (state: \" + value + \")\");\n\t\t}","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.setSrc":{"meta":{"summary":"","parameters":{"state":{"type":""},"value":{"type":""}},"src":" \tif(\/^img$\/i.test(value.tagName)){\n\t\t\tthis[state] = value;\n\t\t}else if(typeof value == \"string\" || value instanceof String\n\t\t\t|| value instanceof dojo.uri.Uri){\n\t\t\tthis[state] = new Image();\n\t\t\tthis[state].src = value.toString();\n\t\t}\n\t\treturn this[state];","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.setIcon":{"meta":{"summary":"","parameters":{"icon":{"type":""}},"src":" \tfor(var i = 0; i < states.length; i++){\n\t\t\tif(icon[states[i]]){\n\t\t\t\tthis.setSrc(states[i], icon[states[i]]);\n\t\t\t}\n\t\t}\n\t\tthis.update();","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.enable":{"meta":{"summary":"","src":" this.enable = function(){ this.setState(\"enabled\");   ","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.disable":{"meta":{"summary":"","src":" this.disable = function(){ this.setState(\"disabled\");   ","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.hover":{"meta":{"summary":"","src":" this.hover = function(){ this.setState(\"hovered\");   ","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.select":{"meta":{"summary":"","src":" this.select = function(){ this.setState(\"selected\");   ","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.getSize":{"meta":{"summary":"","src":" \treturn {\n\t\t\twidth: domNode.width||domNode.offsetWidth,\n\t\t\theight: domNode.height||domNode.offsetHeight\n\t\t};","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.setSize":{"meta":{"summary":"","parameters":{"w":{"type":""},"h":{"type":""}},"src":" \tdomNode.width = w;\n\t\tdomNode.height = h;\n\t\treturn { width: w, height: h };","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.getNode":{"meta":{"summary":"","src":" \treturn domNode;","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.getSrc":{"meta":{"summary":"","parameters":{"state":{"type":""}},"src":" \tif(state){ return this[state].src; }\n\t\treturn domNode.src||\"\";","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.update":{"meta":{"summary":"","src":" \tthis.setState(currentState);","instance":"dojo.widget.Icon"}},"dojo.widget.Icon.make":{"meta":{"summary":"","parameters":{"a":{"type":""},"b":{"type":""},"c":{"type":""},"d":{"type":""}},"src":" for(var i = 0; i < arguments.length; i++){\n\t\tif(arguments[i] instanceof dojo.widget.Icon){\n\t\t\treturn arguments[i];\n\t\t}\n\t}\n\treturn new dojo.widget.Icon(a,b,c,d);"}},"props||{}":{"meta":{"variables":["icon","icon","label","icon","label"]}}}}},"dojo.widget.Tooltip":{"meta":{"requires":{"common":["dojo.widget.ContentPane","dojo.widget.PopupContainer","dojo.uri.Uri","dojo.widget.*","dojo.event.*","dojo.html.style","dojo.html.util"]},"functions":{"dojo.widget.Tooltip":{"meta":{"prototype_variables":["caption","showDelay","hideDelay","connectId","templateCssPath"],"variables":["caption","showDelay","hideDelay","connectId","templateCssPath"],"instance_variables":["_connectNode","_mouse","_tracking","_hover","_showTimer","_hideTimer"],"summary":"Pops up a tooltip (a help message) when you hover over a node"},"extra":{"variables":{"showDelay":{"type":"Integer","summary":"Number of milliseconds to wait after hovering over the object, before the tooltip is displayed."},"hideDelay":{"type":"Integer","summary":"Number of milliseconds to wait after moving mouse off of the object (or off of the tooltip itself), before erasing the tooltip"},"connectId":{"type":"String","summary":"Id of domNode to attach the tooltip to. (When user hovers over specified dom node, the tooltip will appear.)"}}}},"dojo.widget.Tooltip.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tif(this.caption != \"\"){\n\t\t\t\tthis.domNode.appendChild(document.createTextNode(this.caption));\n\t\t\t}\n\t\t\tthis._connectNode = dojo.byId(this.connectId);\n\t\t\tdojo.widget.Tooltip.superclass.fillInTemplate.call(this, args, frag);\n\t\t\tthis.addOnLoad(this, \"_loadedContent\");\n\t\t\tdojo.html.addClass(this.domNode, \"dojoTooltip\");\n\t\t\t\/\/copy style from input node to output node\n\t\t\tvar source = this.getFragNodeRef(frag);\n\t\t\tdojo.html.copyStyle(this.domNode, source);\n\t\t\t\/\/apply the necessary css rules to the node so that it can popup\n\t\t\tthis.applyPopupBasicStyle();","call_chain":["dojo.widget.Tooltip.superclass.fillInTemplate"],"prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip.postCreate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \t\tdojo.event.connect(this._connectNode, \"onmouseover\", this, \"_onMouseOver\");\n\t\t\tdojo.widget.Tooltip.superclass.postCreate.call(this, args, frag);","call_chain":["dojo.widget.Tooltip.superclass.postCreate"],"prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip._onMouseOver":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \t\tthis._mouse = {x: e.pageX, y: e.pageY};\n\t\t\t\/\/ Start tracking mouse movements, so we know when to cancel timers or erase the tooltip\n\t\t\tif(!this._tracking){\n\t\t\t\tdojo.event.connect(document.documentElement, \"onmousemove\", this, \"_onMouseMove\");\n\t\t\t\tthis._tracking=true;\n\t\t\t}\n\t\t\tthis._onHover(e);\t\t\t","prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip._onMouseMove":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \t\tthis._mouse = {x: e.pageX, y: e.pageY};\n\t\t\tif(dojo.html.overElement(this._connectNode, e) || dojo.html.overElement(this.domNode, e)){\n\t\t\t\tthis._onHover(e);\n\t\t\t} else {\n\t\t\t\t\/\/ mouse has been moved off the element\/tooltip\n\t\t\t\t\/\/ note: can't use onMouseOut to detect this because the \"explode\" effect causes\n\t\t\t\t\/\/ spurious onMouseOut events (due to interference from outline), w\/out corresponding _onMouseOver\n\t\t\t\tthis._onUnHover(e);\n\t\t\t}","prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip._onHover":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \t\tif(this._hover){ return; }\n\t\t\tthis._hover=true;\n\t\t\t\/\/ If the tooltip has been scheduled to be erased, cancel that timer\n\t\t\t\/\/ since we are hovering over element\/tooltip again\n\t\t\tif(this._hideTimer) {\n\t\t\t\tclearTimeout(this._hideTimer);\n\t\t\t\tdelete this._hideTimer;\n\t\t\t}\n\t\t\t\/\/ If tooltip not showing yet then set a timer to show it shortly\n\t\t\tif(!this.isShowingNow && !this._showTimer){\n\t\t\t\tthis._showTimer = setTimeout(dojo.lang.hitch(this, \"open\"), this.showDelay);\n\t\t\t}","prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip._onUnHover":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \t\tif(!this._hover){ return; }\n\t\t\tthis._hover=false;\n\t\t\tif(this._showTimer){\n\t\t\t\tclearTimeout(this._showTimer);\n\t\t\t\tdelete this._showTimer;\n\t\t\t}\n\t\t\tif(this.isShowingNow && !this._hideTimer){\n\t\t\t\tthis._hideTimer = setTimeout(dojo.lang.hitch(this, \"close\"), this.hideDelay);\n\t\t\t}\n\t\t\t\/\/ If we aren't showing the tooltip, then we can stop tracking the mouse now;\n\t\t\t\/\/ otherwise must track the mouse until tooltip disappears\n\t\t\tif(!this.isShowingNow){\n\t\t\t\tdojo.event.disconnect(document.documentElement, \"onmousemove\", this, \"_onMouseMove\");\n\t\t\t\tthis._tracking=false;\n\t\t\t}","prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip.open":{"meta":{"summary":"display the tooltip; usually not called directly.","src":"\t\t\tif (this.isShowingNow) { return; }\n\t\t\tdojo.widget.PopupContainerBase.prototype.open.call(this, this._mouse.x, this._mouse.y, null, [this._mouse.x, this._mouse.y], \"TL,TR,BL,BR\", [10,15]);","call_chain":["dojo.widget.PopupContainerBase.prototype.open"],"prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip.close":{"meta":{"summary":"hide the tooltip; usually not called directly.","src":" \t\tif (this.isShowingNow) {\n\t\t\t\tif ( this._showTimer ) {\n\t\t\t\t\tclearTimeout(this._showTimer);\n\t\t\t\t\tdelete this._showTimer;\n\t\t\t\t}\n\t\t\t\tif ( this._hideTimer ) {\n\t\t\t\t\tclearTimeout(this._hideTimer);\n\t\t\t\t\tdelete this._hideTimer;\n\t\t\t\t}\n\t\t\t\tdojo.event.disconnect(document.documentElement, \"onmousemove\", this, \"_onMouseMove\");\n\t\t\t\tthis._tracking=false;\n\t\t\t\tdojo.widget.PopupContainerBase.prototype.close.call(this);\n\t\t\t}","call_chain":["dojo.widget.PopupContainerBase.prototype.close"],"prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip._position":{"meta":{"summary":"","src":" \t\tthis.move(this._mouse.x, this._mouse.y, [10,15], \"TL,TR,BL,BR\");","prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip._loadedContent":{"meta":{"summary":"","src":" \t\tif(this.isShowingNow){\n\t\t\t\t\/\/ the tooltip has changed size due to downloaded contents, so reposition it\n\t\t\t\tthis._position();\n\t\t\t}","prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip.checkSize":{"meta":{"summary":"","src":"\t\t\t\/\/ Override checkSize() in HtmlWidget.\n\t\t\t\/\/ checkSize() is called when the user has resized the browser window,\n\t\t\t\/\/ but that doesn't affect this widget (or this widget's children)\n\t\t\t\/\/ so it can be safely ignored","prototype":"dojo.widget.Tooltip"}},"dojo.widget.Tooltip.uninitialize":{"meta":{"summary":"","src":" \t\tthis.close();\n\t\t\tdojo.event.disconnect(this._connectNode, \"onmouseover\", this, \"_onMouseOver\");","prototype":"dojo.widget.Tooltip"}}}}},"dojo.widget.Tree":{"meta":{"requires":{"common":["dojo.widget.*","dojo.event.*","dojo.io.*","dojo.widget.HtmlWidget","dojo.widget.TreeNode","dojo.html.common","dojo.html.selection","dojo.widget.TreeBasicController","dojo.widget.TreeSelector"]},"functions":{"dojo.widget.Tree":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["widgetType","isContainer","DNDMode","lockLevel","strictFolders","DNDAcceptTypes","templateCssPath","templateString","isExpanded","isTree","objectId","controller","selector","menu","expandLevel","blankIconSrc","gridIconSrcT","gridIconSrcL","gridIconSrcV","gridIconSrcP","gridIconSrcC","gridIconSrcX","gridIconSrcY","gridIconSrcZ","expandIconSrcPlus","expandIconSrcMinus","expandIconSrcLoading","iconWidth","iconHeight","showGrid","showRootGrid"],"variables":["widgetType","isContainer","DNDMode","lockLevel","strictFolders","DNDAcceptTypes","templateCssPath","templateString","isExpanded","isTree","objectId","controller","selector","menu","expandLevel","blankIconSrc","gridIconSrcT","gridIconSrcL","gridIconSrcV","gridIconSrcP","gridIconSrcC","gridIconSrcX","gridIconSrcY","gridIconSrcZ","expandIconSrcPlus","expandIconSrcMinus","expandIconSrcLoading","iconWidth","iconHeight","showGrid","showRootGrid"],"instance_variables":["controller","selector","DNDMode","expandLevel","menu","containerNode","state","lockLevel","eventNames","tree","DNDAcceptTypes","actionsDisabled"],"summary":"","src":" this.eventNames = {};\n\tthis.tree = this;\n\tthis.DNDAcceptTypes = [];\n\tthis.actionsDisabled = [];"}},"dojo.widget.Tree.actionIsDisabled":{"meta":{"summary":"","parameters":{"action":{"type":""}},"src":" \tvar _this = this;\n\t\treturn dojo.lang.inArray(_this.actionsDisabled, action)","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.getInfo":{"meta":{"summary":"","src":" \tvar info = {\n\t\t\twidgetId: this.widgetId,\n\t\t\tobjectId: this.objectId\n\t\t}\n\t\treturn info;","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.initializeController":{"meta":{"summary":"","src":" \tif (this.controller != \"off\") {\n\t\t\tif (this.controller) {\n\t\t\t\tthis.controller = dojo.widget.byId(this.controller);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\/\/ create default controller here\n\t\t\t\tdojo.require(\"dojo.widget.TreeBasicController\");\n\t\t\t\tthis.controller = dojo.widget.createWidget(\"TreeBasicController\",\n\t\t\t\t\t{ DNDController: (this.DNDMode ? \"create\" : \"\"), dieWithTree: true }\n\t\t\t\t );\n\t\t\t}\n\t\t\tthis.controller.listenTree(this); \/\/ controller listens to my events\n\t\t} else {\n\t\t\tthis.controller = null;\n\t\t}","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.initializeSelector":{"meta":{"summary":"","src":" \tif (this.selector != \"off\") {\n\t\t\tif (this.selector) {\n\t\t\t\tthis.selector = dojo.widget.byId(this.selector);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\/\/ create default controller here\n\t\t\t\tdojo.require(\"dojo.widget.TreeSelector\");\n\t\t\t\tthis.selector = dojo.widget.createWidget(\"TreeSelector\", {dieWithTree: true});\n\t\t\t}\n\t\t\tthis.selector.listenTree(this);\n\t\t} else {\n\t\t\tthis.selector = null;\n\t\t}","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tvar _this = this;\n\t\tfor(name in this.eventNamesDefault) {\n\t\t\tif (dojo.lang.isUndefined(this.eventNames[name])) {\n\t\t\t\tthis.eventNames[name] = this.widgetId+\"\/\"+this.eventNamesDefault[name];\n\t\t\t}\n\t\t}\n\t\tfor(var i=0; i<this.actionsDisabled.length; i++) {\n\t\t\tthis.actionsDisabled[i] = this.actionsDisabled[i].toUpperCase();\n\t\t}\n\t\tif (this.DNDMode == \"off\") {\n\t\t\tthis.DNDMode = 0;\n\t\t} else if (this.DNDMode == \"between\") {\n\t\t\tthis.DNDMode = this.DNDModes.ONTO | this.DNDModes.BETWEEN;\n\t\t} else if (this.DNDMode == \"onto\") {\n\t\t\tthis.DNDMode = this.DNDModes.ONTO;\n\t\t}\n\t\tthis.expandLevel = parseInt(this.expandLevel);\n\t\tthis.initializeSelector();\n\t\tthis.initializeController();\n\t\tif (this.menu) {\n\t\t\tthis.menu = dojo.widget.byId(this.menu);\n\t\t\tthis.menu.listenTree(this);\n\t\t}\n\t\tthis.containerNode = this.domNode;","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.postCreate":{"meta":{"summary":"","src":" \tthis.createDOMNode();","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.createDOMNode":{"meta":{"summary":"","src":" \tdojo.html.disableSelection(this.domNode);\n\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\tthis.children[i].parent = this; \/\/ root nodes have tree as parent\n\t\t\tvar node = this.children[i].createDOMNode(this, 0);\n\t\t\tthis.domNode.appendChild(node);\n\t\t}\n\t\tif (!this.showRootGrid){\n\t\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\t\tthis.children[i].expand();\n\t\t\t}\n\t\t}\n\t\tdojo.event.topic.publish(this.eventNames.treeCreate, { source: this } );","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.destroy":{"meta":{"summary":"","src":" \tdojo.event.topic.publish(this.tree.eventNames.treeDestroy, { source: this } );\n\t\treturn dojo.widget.HtmlWidget.prototype.destroy.apply(this, arguments);","call_chain":["dojo.widget.HtmlWidget.prototype.destroy"],"prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.addChild":{"meta":{"summary":"","parameters":{"child":{"type":""},"index":{"type":""}},"src":"\t\tvar message = {\n\t\t\tchild: child,\n\t\t\tindex: index,\n\t\t\tparent: this,\n\t\t\t\/\/ remember if dom was already initialized\n\t\t\t\/\/ initialized => no createDOMNode => no createDOMNode event\n\t\t\tdomNodeInitialized: child.domNodeInitialized\n\t\t}\n\t\tthis.doAddChild.apply(this, arguments);\n\t\tdojo.event.topic.publish(this.tree.eventNames.addChild, message);","call_chain":["this.doAddChild"],"prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.doAddChild":{"meta":{"summary":"","parameters":{"child":{"type":""},"index":{"type":""}},"src":" \tif (dojo.lang.isUndefined(index)) {\n\t\t\tindex = this.children.length;\n\t\t}\n\t\tif (!child.isTreeNode){\n\t\t\tdojo.raise(\"You can only add TreeNode widgets to a \"+this.widgetType+\" widget!\");\n\t\t\treturn;\n\t\t}\n\t\t\/\/ usually it is impossible to change \"isFolder\" state, but if anyone wants to add a child to leaf,\n\t\t\/\/ it is possible program-way.\n\t\tif (this.isTreeNode){\n\t\t\tif (!this.isFolder) { \/\/ just became a folder.\n\t\t\t\t\/\/dojo.debug(\"becoming folder \"+this);\n\t\t\t\tthis.setFolder();\n\t\t\t}\n\t\t}\n\t\t\/\/ adjust tree\n\t\tvar _this = this;\n\t\tdojo.lang.forEach(child.getDescendants(), function(elem) { elem.tree = _this.tree; });\n\t\t\/\/ fix parent\n\t\tchild.parent = this;\n\t\t\/\/ no dynamic loading for those who become parents\n\t\tif (this.isTreeNode) {\n\t\t\tthis.state = this.loadStates.LOADED;\n\t\t}\n\t\t\/\/ add new child into DOM after it was added into children\n\t\tif (index < this.children.length) { \/\/ children[] already has child\n\t\t\t\/\/dojo.debug(\"Inserting before \"+this.children[index].title);\n\t\t\tdojo.html.insertBefore(child.domNode, this.children[index].domNode);\n\t\t} else {\n\t\t\tthis.containerNode.appendChild(child.domNode);\n\t\t\tif (this.isExpanded && this.isTreeNode) {\n\t\t\t\t\/* When I add children to hidden containerNode => show container w\/ them *\/\n\t\t\t\tthis.showChildren();\n\t\t\t}\n\t\t}\n\t\tthis.children.splice(index, 0, child);\n\t\t\/\/dojo.debugShallow(this.children);\n\t\t\/\/ if node exists - adjust its depth, otherwise build it\n\t\tif (child.domNodeInitialized) {\n\t\t\tvar d = this.isTreeNode ? this.depth : -1;\n\t\t\tchild.adjustDepth( d - child.depth + 1 );\n\t\t\t\/\/ update icons to link generated dom with Tree => updateParentGrid\n\t\t\t\/\/ if I moved child from LastNode inside the tree => need to link it up'n'down =>\n\t\t\t\/\/ updateExpandGridColumn\n\t\t\t\/\/ if I change depth => need to update all grid..\n\t\t\tchild.updateIconTree();\n\t\t} else {\n\t\t\t\/\/dojo.debug(\"Create domnode \");\n\t\t\tchild.depth = this.isTreeNode ? this.depth+1 : 0;\n\t\t\tchild.createDOMNode(child.tree, child.depth);\n\t\t}\n\t\t\/\/ Use-case:\n\t\t\/\/ When previous sibling was created => it was last, no children after it\n\t\t\/\/ so it did not create link down => let's add it for all descendants\n\t\t\/\/ Use-case:\n\t\t\/\/ a child was moved down under the last node so last node should be updated\n\t\tvar prevSibling = child.getPreviousSibling();\n\t\tif (child.isLastChild() && prevSibling) {\n\t\t\tprevSibling.updateExpandGridColumn();\n\t\t}\n\t\t\/\/dojo.debug(\"Added child \"+child);","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.makeBlankImg":{"meta":{"summary":"","src":" \tvar img = document.createElement('img');\n\t\timg.style.width = this.iconWidth + 'px';\n\t\timg.style.height = this.iconHeight + 'px';\n\t\timg.src = this.blankIconSrc;\n\t\timg.style.verticalAlign = 'middle';\n\t\treturn img;","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.updateIconTree":{"meta":{"summary":"","src":" \tif (!this.isTree) {\n\t\t\tthis.updateIcons();\n\t\t}\n\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\tthis.children[i].updateIconTree();\n\t\t}","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.toString":{"meta":{"summary":"","src":" \treturn \"[\"+this.widgetType+\" ID:\"+this.widgetId+\"]\"","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.move":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":"\t\tvar oldParent = child.parent;\n\t\tvar oldTree = child.tree;\n\t\tthis.doMove.apply(this, arguments);\n\t\tvar newParent = child.parent;\n\t\tvar newTree = child.tree;\n\t\tvar message = {\n\t\t\t\toldParent: oldParent, oldTree: oldTree,\n\t\t\t\tnewParent: newParent, newTree: newTree,\n\t\t\t\tchild: child\n\t\t};\n\t\t\/* publish events here about structural changes for both source and target trees *\/\n\t\tdojo.event.topic.publish(oldTree.eventNames.moveFrom, message);\n\t\tdojo.event.topic.publish(newTree.eventNames.moveTo, message);","call_chain":["this.doMove"],"prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.doMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":" \tchild.parent.doRemoveNode(child);\n\t\tnewParent.doAddChild(child, index);","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.removeNode":{"meta":{"summary":"","parameters":{"child":{"type":""}},"src":" \tif (!child.parent) return;\n\t\tvar oldTree = child.tree;\n\t\tvar oldParent = child.parent;\n\t\tvar removedChild = this.doRemoveNode.apply(this, arguments);\n\t\tdojo.event.topic.publish(this.tree.eventNames.removeNode,\n\t\t\t{ child: removedChild, tree: oldTree, parent: oldParent }\n\t\t);\n\t\treturn removedChild;","call_chain":["this.doRemoveNode"],"prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.doRemoveNode":{"meta":{"summary":"","parameters":{"child":{"type":""}},"src":" \tif (!child.parent) return;\n\t\tvar parent = child.parent;\n\t\tvar children = parent.children;\n\t\tvar index = child.getParentIndex();\n\t\tif (index < 0) {\n\t\t\tdojo.raise(\"Couldn't find node \"+child+\" for removal\");\n\t\t}\n\t\tchildren.splice(index,1);\n\t\tdojo.html.removeNode(child.domNode);\n\t\tif (parent.children.length == 0 && !parent.isTree) {\n\t\t\tparent.containerNode.style.display = \"none\";\n\t\t}\n\t\t\/\/ if WAS last node (children.length decreased already) and has prevSibling\n\t\tif (index == children.length && index>0) {\n\t\t\tchildren[index-1].updateExpandGridColumn();\n\t\t}\n\t\t\/\/ if it WAS first node in WHOLE TREE -\n\t\t\/\/ update link up of its former lower neighbour(if exists still)\n\t\tif (parent instanceof dojo.widget.Tree && index == 0 && children.length>0) {\n\t\t\tchildren[0].updateExpandGrid();\n\t\t}\n\t\t\/\/parent.updateIconTree();\n\t\tchild.parent = child.tree = null;\n\t\treturn child;","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.markLoading":{"meta":{"summary":"","src":"\t\t\/\/ no way to mark tree loading","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.unMarkLoading":{"meta":{"summary":"","src":"\t\t\/\/ no way to show that tree finished loading","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.lock":{"meta":{"summary":"","src":" \t!this.lockLevel && this.markLoading();\n\t\tthis.lockLevel++;","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.unlock":{"meta":{"summary":"","src":" \tif (!this.lockLevel) {\n\t\t\tdojo.raise(\"unlock: not locked\");\n\t\t}\n\t\tthis.lockLevel--;\n\t\t!this.lockLevel && this.unMarkLoading();","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.isLocked":{"meta":{"summary":"","src":" \tvar node = this;\n\t\twhile (true) {\n\t\t\tif (node.lockLevel) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (node instanceof dojo.widget.Tree) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn false;","prototype":"dojo.widget.Tree"}},"dojo.widget.Tree.flushLock":{"meta":{"summary":"","src":" \tthis.lockLevel = 0;\n\t\tthis.unMarkLoading();","prototype":"dojo.widget.Tree"}}},"objects":{"dojo.widget.Tree.eventNamesDefault":{"meta":{"variables":["createDOMNode","treeCreate","treeDestroy","treeClick","iconClick","titleClick","moveFrom","moveTo","addChild","removeNode","expand","collapse"]},"extra":{"variables":{"expand":{"type":"new","summary":"child does not get domNode filled in (only template draft) until addChild->createDOMNode is called(program way) OR createDOMNode (html-way) hook events to operate on new DOMNode, create dropTargets etc tree created.. Perform tree-wide actions if needed icon clicked node icon clicked node title clicked"}}}},"dojo.widget.Tree.DNDModes":{"meta":{"variables":["BETWEEN","ONTO"]}},"dojo.widget.Tree.actions":{"meta":{"variables":["ADDCHILD"]}}}}},"dojo.widget.TreeBasicController":{"meta":{"requires":{"common":["dojo.event.*","dojo.json","dojo.io.*","dojo.dnd.TreeDragAndDrop"]},"functions":{"dojo.widget.TreeBasicController":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["widgetType","DNDController","dieWithTree"],"variables":["widgetType","DNDController","dieWithTree"],"instance_variables":["DNDController","node","expandLevel","process"]}},"dojo.widget.TreeBasicController.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tif (this.DNDController == \"create\") {\n\t\t\tdojo.require(\"dojo.dnd.TreeDragAndDrop\");\n\t\t\tthis.DNDController = new dojo.dnd.TreeDNDController(this);\n\t\t}","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.listenTree":{"meta":{"summary":"","parameters":{"tree":{"type":""}},"src":" \tdojo.event.topic.subscribe(tree.eventNames.createDOMNode, this, \"onCreateDOMNode\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.treeClick, this, \"onTreeClick\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.treeCreate, this, \"onTreeCreate\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.treeDestroy, this, \"onTreeDestroy\");\n\t\tif (this.DNDController) {\n\t\t\tthis.DNDController.listenTree(tree);\n\t\t}","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.unlistenTree":{"meta":{"summary":"","parameters":{"tree":{"type":""}},"src":" \tdojo.event.topic.unsubscribe(tree.eventNames.createDOMNode, this, \"onCreateDOMNode\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.treeClick, this, \"onTreeClick\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.treeCreate, this, \"onTreeCreate\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.treeDestroy, this, \"onTreeDestroy\");","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.onTreeDestroy":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar tree = message.source;\n\t\tthis.unlistenTree(tree);\n\t\tif (this.dieWithTree) {\n\t\t\t\/\/alert(\"Killing myself \"+this.widgetId);\n\t\t\tthis.destroy();\n\t\t\t\/\/dojo.debug(\"done\");\n\t\t}","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.onCreateDOMNode":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar node = message.source;\n\t\tif (node.expandLevel > 0) {\n\t\t\tthis.expandToLevel(node, node.expandLevel);\n\t\t}","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.onTreeCreate":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar tree = message.source;\n\t\tvar _this = this;\n\t\tif (tree.expandLevel) {\n\t\t\tdojo.lang.forEach(tree.children,\n\t\t\t\tfunction(child) {\n\t\t\t\t\t_this.expandToLevel(child, tree.expandLevel-1)\n\t\t\t\t}\n\t\t\t);\n\t\t}","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.expandToLevel":{"meta":{"summary":"","parameters":{"node":{"type":""},"level":{"type":""}},"src":" \tif (level == 0) return;\n\t\tvar children = node.children;\n\t\tvar _this = this;\n\t\tvar handler = function(node, expandLevel) {\n\t\t\tthis.node = node;\n\t\t\tthis.expandLevel = expandLevel;\n\t\t\t\/\/ recursively expand opened node\n\t\t\tthis.process = function() {\n\t\t\t\t\/\/dojo.debug(\"Process \"+node+\" level \"+level);\n\t\t\t\tfor(var i=0; i<this.node.children.length; i++) {\n\t\t\t\t\tvar child = node.children[i];\n\t\t\t\t\t_this.expandToLevel(child, this.expandLevel);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tvar h = new handler(node, level-1);\n\t\tthis.expand(node, false, h, h.process);","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.expandToLevel.process":{"meta":{"summary":"","src":" \t\t\tfor(var i=0; i<this.node.children.length; i++) {\n\t\t\t\t\tvar child = node.children[i];\n\t\t\t\t\t_this.expandToLevel(child, this.expandLevel);\n\t\t\t\t}","instance":"dojo.widget.TreeBasicController.expandToLevel"}},"dojo.widget.TreeBasicController.onTreeClick":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar node = message.source;\n\t\tif(node.isLocked()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (node.isExpanded){\n\t\t\tthis.collapse(node);\n\t\t} else {\n\t\t\tthis.expand(node);\n\t\t}","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.expand":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tnode.expand();\n\t\tif (callFunc) callFunc.apply(callObj, [node]);","call_chain":["callFunc"],"prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.collapse":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tnode.collapse();","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.canMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""}},"src":" \tif (child.actionIsDisabled(child.actions.MOVE)) {\n\t\t\treturn false;\n\t\t}\n\t\t\/\/ if we move under same parent then no matter if ADDCHILD disabled for him\n\t\t\/\/ but if we move to NEW parent then check if action is disabled for him\n\t\t\/\/ also covers case for newParent being a non-folder in strict mode etc\n\t\tif (child.parent !== newParent && newParent.actionIsDisabled(newParent.actions.ADDCHILD)) {\n\t\t\treturn false;\n\t\t}\n\t\t\/\/ Can't move parent under child. check whether new parent is child of \"child\".\n\t\tvar node = newParent;\n\t\twhile(node.isTreeNode) {\n\t\t\t\/\/dojo.debugShallow(node.title)\n\t\t\tif (node === child) {\n\t\t\t\t\/\/ parent of newParent is child\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.move":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":" \tif (!this.canMove(child, newParent)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar result = this.doMove(child, newParent, index);\n\t\tif (!result) return result;\n\t\tif (newParent.isTreeNode) {\n\t\t\tthis.expand(newParent);\n\t\t}\n\t\treturn result;","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.doMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":" \tchild.tree.move(child, newParent, index);\n\t\treturn true;","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.canRemoveNode":{"meta":{"summary":"","parameters":{"child":{"type":""}},"src":" \tif (child.actionIsDisabled(child.actions.REMOVE)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.removeNode":{"meta":{"summary":"","parameters":{"node":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tif (!this.canRemoveNode(node)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.doRemoveNode(node, callObj, callFunc);","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.doRemoveNode":{"meta":{"summary":"","parameters":{"node":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tnode.tree.removeNode(node);\n\t\tif (callFunc) {\n\t\t\tcallFunc.apply(dojo.lang.isUndefined(callObj) ? this : callObj, [node]);\n\t\t}","call_chain":["callFunc"],"prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.canCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""}},"src":" \tif (parent.actionIsDisabled(parent.actions.ADDCHILD)) return false;\n\t\treturn true;","prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.createChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tif (!this.canCreateChild(parent, index, data)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.doCreateChild.apply(this, arguments);","call_chain":["this.doCreateChild"],"prototype":"dojo.widget.TreeBasicController"}},"dojo.widget.TreeBasicController.doCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tvar widgetType = data.widgetType ? data.widgetType : \"TreeNode\";\n\t\tvar newChild = dojo.widget.createWidget(widgetType, data);\n\t\tparent.addChild(newChild, index);\n\t\tthis.expand(parent);\n\t\tif (callFunc) {\n\t\t\tcallFunc.apply(callObj, [newChild]);\n\t\t}\n\t\treturn newChild;","call_chain":["callFunc"],"prototype":"dojo.widget.TreeBasicController"}}}}},"dojo.widget.TreeBasicControllerV3":{"meta":{"requires":{"common":["dojo.event.*","dojo.json","dojo.io.*","dojo.widget.TreeCommon","dojo.widget.TreeNodeV3","dojo.widget.TreeV3","dojo.widget.TreeTimeoutIterator"]},"functions":{"dojo.widget.TreeBasicControllerV3":{"meta":{"prototype_variables":["listenTreeEvents","editor","batchExpandTimeout"],"variables":["listenTreeEvents","editor","batchExpandTimeout"],"instance_variables":["editor","editor.controller","listenedTrees"],"summary":"","src":" \tthis.listenedTrees = {};"}},"dojo.widget.TreeBasicControllerV3.listenNodeFilter":{"meta":{"summary":"","parameters":{"elem":{"type":""}},"src":" listenNodeFilter: function(elem) { return elem instanceof dojo.widget.Widget    ","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""}},"src":" \tif (args.editor) {\n\t\t\tthis.editor = dojo.widget.byId(args.editor);\n\t\t\tthis.editor.controller = this;\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.getInfo":{"meta":{"summary":"","parameters":{"elem":{"type":""}},"src":" \treturn elem.getInfo();","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onBeforeTreeDestroy":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":"                this.unlistenTree(message.source);","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onAfterSetFolder":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (message.source.expandLevel > 0) {\n\t\t\tthis.expandToLevel(message.source, message.source.expandLevel);\t\t\t\t\n\t\t}\n\t\tif (message.source.loadLevel > 0) {\n\t\t\tthis.loadToLevel(message.source, message.source.loadLevel);\t\t\t\t\n\t\t}\n\t\t\/\/dojo.profile.end(\"onTreeChange\");","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3._focusNextVisible":{"meta":{"summary":"","parameters":{"nodeWidget":{"type":""}},"src":" \tif (nodeWidget.isFolder && nodeWidget.isExpanded && nodeWidget.children.length > 0) {\n\t\t\treturnWidget = nodeWidget.children[0];\t\t\t\n\t\t} else {\n\t\t\t\/\/ find a parent node with a sibling\n\t\t\twhile (nodeWidget.isTreeNode && nodeWidget.isLastChild()) {\n\t\t\t\tnodeWidget = nodeWidget.parent;\n\t\t\t}\n\t\t\tif (nodeWidget.isTreeNode) {\n\t\t\t\tvar returnWidget = nodeWidget.parent.children[nodeWidget.getParentIndex()+1];\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tif (returnWidget && returnWidget.isTreeNode) {\n\t\t\tthis._focusLabel(returnWidget);\n\t\t\treturn returnWidget;\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3._focusPreviousVisible":{"meta":{"summary":"","parameters":{"nodeWidget":{"type":""}},"src":" \tvar returnWidget = nodeWidget;\n\t\t\/\/ if younger siblings\t\t\n\t\tif (!nodeWidget.isFirstChild()) {\n\t\t\tvar previousSibling = nodeWidget.parent.children[nodeWidget.getParentIndex()-1]\n\t\t\tnodeWidget = previousSibling;\n\t\t\t\/\/ if the previous nodeWidget is expanded, dive in deep\n\t\t\twhile (nodeWidget.isFolder && nodeWidget.isExpanded && nodeWidget.children.length > 0) {\n\t\t\t\treturnWidget = nodeWidget;\n\t\t\t\t\/\/ move to the last child\n\t\t\t\tnodeWidget = nodeWidget.children[nodeWidget.children.length-1];\n\t\t\t}\n\t\t} else {\n\t\t\t\/\/ if this is the first child, return the parent\n\t\t\tnodeWidget = nodeWidget.parent;\n\t\t}\n\t\tif (nodeWidget && nodeWidget.isTreeNode) {\n\t\t\treturnWidget = nodeWidget;\n\t\t}\n\t\tif (returnWidget && returnWidget.isTreeNode) {\n\t\t\tthis._focusLabel(returnWidget);\n\t\t\treturn returnWidget;\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3._focusZoomIn":{"meta":{"summary":"","parameters":{"nodeWidget":{"type":""}},"src":" \tvar returnWidget = nodeWidget;\n\t\t\/\/ if not expanded, expand, else move to 1st child\n\t\tif (nodeWidget.isFolder && !nodeWidget.isExpanded) {\n\t\t\tthis.expand(nodeWidget);\n\t\t}else if (nodeWidget.children.length > 0) {\n\t\t\tnodeWidget = nodeWidget.children[0];\n\t\t}\n\t\tif (nodeWidget && nodeWidget.isTreeNode) {\n\t\t\treturnWidget = nodeWidget;\n\t\t}\n\t\tif (returnWidget && returnWidget.isTreeNode) {\n\t\t\tthis._focusLabel(returnWidget);\n\t\t\treturn returnWidget;\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3._focusZoomOut":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar returnWidget = node;\n\t\t\/\/ if not expanded, expand, else move to 1st child\n\t\tif (node.isFolder && node.isExpanded) {\n\t\t\tthis.collapse(node);\n\t\t} else {\n\t\t\tnode = node.parent;\n\t\t}\n\t\tif (node && node.isTreeNode) {\n\t\t\treturnWidget = node;\n\t\t}\n\t\tif (returnWidget && returnWidget.isTreeNode) {\n\t\t\tthis._focusLabel(returnWidget);\n\t\t\treturn returnWidget;\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onFocusNode":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar node = this.domElement2TreeNode(e.target);\n\t\tif (node) {\n\t\t\tnode.viewFocus();\t\t\t\n\t\t\tdojo.event.browser.stopEvent(e);\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onBlurNode":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar node = this.domElement2TreeNode(e.target);\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tvar labelNode = node.labelNode;\n\t\tlabelNode.setAttribute(\"tabIndex\", \"-1\");\n\t\tnode.viewUnfocus();\t\t\n\t\tdojo.event.browser.stopEvent(e);\n\t\t\/\/ this could have been set to -1 by the shift+TAB processing\n\t\tnode.tree.domNode.setAttribute(\"tabIndex\", \"0\");","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3._focusLabel":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar lastFocused = node.tree.lastFocused;\n\t\tvar labelNode;\n\t\tif (lastFocused && lastFocused.labelNode) {\n\t\t\tlabelNode = lastFocused.labelNode;\n\t\t\t\/\/ help Opera out with blur events\n\t\t\tdojo.event.disconnect(labelNode, \"onblur\", this, \"onBlurNode\");\n\t\t\tlabelNode.setAttribute(\"tabIndex\", \"-1\");\n\t\t\tdojo.html.removeClass(labelNode, \"TreeLabelFocused\");\n\t\t}\n\t\t\/\/ set tabIndex so that the tab key can find this node\n\t\tlabelNode = node.labelNode;\n\t\tlabelNode.setAttribute(\"tabIndex\", \"0\");\n\t\tnode.tree.lastFocused = node;\n\t\t\/\/ add an outline - this helps opera a lot\n\t\tdojo.html.addClass(labelNode, \"TreeLabelFocused\");\n\t\tdojo.event.connectOnce(labelNode, \"onblur\", this, \"onBlurNode\");\n\t\t\/\/ prevent the domNode from seeing the focus event\n\t\tdojo.event.connectOnce(labelNode, \"onfocus\", this, \"onFocusNode\");\n\t\t\/\/ set focus so that the label wil be voiced using screen readers\n\t\tlabelNode.focus();","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onKey":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif (!e.key || e.ctrkKey || e.altKey) { return; }\n\t\t\/\/ pretend the key was directed toward the current focused node (helps opera out)\n\t\tvar nodeWidget = this.domElement2TreeNode(e.target);\n\t\tif (!nodeWidget) {\n\t\t\treturn;\n\t\t}\n\t\tvar treeWidget = nodeWidget.tree;\n\t\tif (treeWidget.lastFocused && treeWidget.lastFocused.labelNode) {\n\t\t\tnodeWidget = treeWidget.lastFocused;\n\t\t}\n\t\tswitch(e.key) {\n\t\t\tcase e.KEY_TAB:\n\t\t\t\tif (e.shiftKey) {\n\t\t\t\t\t\/\/ we're moving backwards so don't tab to the domNode\n\t\t\t\t\t\/\/ it'll be added back in onBlurNode\n\t\t\t\t\ttreeWidget.domNode.setAttribute(\"tabIndex\", \"-1\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase e.KEY_RIGHT_ARROW:\n\t\t\t\tthis._focusZoomIn(nodeWidget);\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t\tbreak;\n\t\t\tcase e.KEY_LEFT_ARROW:\n\t\t\t\tthis._focusZoomOut(nodeWidget);\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t\tbreak;\n\t\t\tcase e.KEY_UP_ARROW:\n\t\t\t\tthis._focusPreviousVisible(nodeWidget);\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t\tbreak;\n\t\t\tcase e.KEY_DOWN_ARROW:\n\t\t\t\tthis._focusNextVisible(nodeWidget);\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t\tbreak;\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onFocusTree":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif (!e.currentTarget) { return; }\n\t\ttry {\n\t\t\tvar treeWidget = this.getWidgetByNode(e.currentTarget);\n\t\t\tif (!treeWidget || !treeWidget.isTree) { return; }\n\t\t\t\/\/ on first focus, choose the root node\n\t\t\tvar nodeWidget = this.getWidgetByNode(treeWidget.domNode.firstChild);\n\t\t\tif (nodeWidget && nodeWidget.isTreeNode) {\n\t\t\t\tif (treeWidget.lastFocused && treeWidget.lastFocused.isTreeNode) { \/\/ onClick could have chosen a non-root node\n\t\t\t\t\tnodeWidget = treeWidget.lastFocused;\n\t\t\t\t}\n\t\t\t\tthis._focusLabel(nodeWidget);\n\t\t\t}\n\t\t}\n\t\tcatch(e) {}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onAfterTreeCreate":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar tree = message.source;\n\t\tdojo.event.browser.addListener(tree.domNode, \"onKey\", dojo.lang.hitch(this, this.onKey));\n\t\tdojo.event.browser.addListener(tree.domNode, \"onmousedown\", dojo.lang.hitch(this, this.onTreeMouseDown));\n\t\tdojo.event.browser.addListener(tree.domNode, \"onclick\", dojo.lang.hitch(this, this.onTreeClick));\n\t\tdojo.event.browser.addListener(tree.domNode, \"onfocus\", dojo.lang.hitch(this, this.onFocusTree));\n\t\ttree.domNode.setAttribute(\"tabIndex\", \"0\");\n\t\tif (tree.expandLevel) {\t\t\t\t\t\t\t\t\n\t\t\tthis.expandToLevel(tree, tree.expandLevel)\n\t\t}\n\t\tif (tree.loadLevel) {\n\t\t\tthis.loadToLevel(tree, tree.loadLevel);\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onTreeMouseDown":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":"","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.onTreeClick":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tvar domElement = e.target;\n\t\t\/\/dojo.debug('click')\n\t\t\/\/ find node\n        var node = this.domElement2TreeNode(domElement);\t\t\n\t\tif (!node || !node.isTreeNode) {\n\t\t\treturn;\n\t\t}\n\t\tvar checkExpandClick = function(el) {\n\t\t\treturn el === node.expandNode;\n\t\t}\n\t\tif (this.checkPathCondition(domElement, checkExpandClick)) {\n\t\t\tthis.processExpandClick(node);\t\t\t\n\t\t}\n\t\tthis._focusLabel(node);\n\t\t\/\/dojo.profile.end(\"onTreeClick\");","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.processExpandClick":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (node.isExpanded){\n\t\t\tthis.collapse(node);\n\t\t} else {\n\t\t\tthis.expand(node);\n\t\t}\n\t\t\/\/dojo.profile.end(\"processExpandClick\");","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.expandAll":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""}},"src":" \treturn this.expandToLevel(nodeOrTree, Number.POSITIVE_INFINITY);","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.collapseAll":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""}},"src":" \tvar _this = this;\n\t\tvar filter = function(elem) {\n\t\t\treturn (elem instanceof dojo.widget.Widget) && elem.isFolder && elem.isExpanded;\n\t\t}\n\t\tif (nodeOrTree.isTreeNode) {\t\t\n\t\t\tthis.processDescendants(nodeOrTree, filter, this.collapse);\n\t\t} else if (nodeOrTree.isTree) {\n\t\t\tdojo.lang.forEach(nodeOrTree.children,function(c) { _this.processDescendants(c, filter, _this.collapse) });\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.expandToNode":{"meta":{"summary":"","parameters":{"node":{"type":""},"withSelected":{"type":""}},"src":" \tn = withSelected ? node : node.parent\n\t\ts = []\n\t\twhile (!n.isExpanded) {\n\t\t\ts.push(n)\n\t\t\tn = n.parent\n\t\t}\n\t\tdojo.lang.forEach(s, function(n) { n.expand() })","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.expandToLevel":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"level":{"type":""}},"src":" \tdojo.require(\"dojo.widget.TreeTimeoutIterator\");\n\t\tvar _this = this;\n\t\tvar filterFunc = function(elem) {\n\t\t\tvar res = elem.isFolder || elem.children && elem.children.length;\n\t\t\t\/\/dojo.debug(\"Filter \"+elem+ \" result:\"+res);\n\t\t\treturn res;\n\t\t};\n\t\tvar callFunc = function(node, iterator) {\t\t\t\n\t\t\t _this.expand(node, true);\n\t\t\t iterator.forward();\n\t\t}\n\t\tvar iterator = new dojo.widget.TreeTimeoutIterator(nodeOrTree, callFunc, this);\n\t\titerator.setFilter(filterFunc);\n\t\titerator.timeout = this.batchExpandTimeout;\n\t\t\/\/dojo.debug(\"here \"+nodeOrTree+\" level \"+level);\n\t\titerator.setMaxLevel(nodeOrTree.isTreeNode ? level-1 : level);\n\t\treturn iterator.start(nodeOrTree.isTreeNode);","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.getWidgetByNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar widgetId;\n\t\tvar newNode = node;\n\t\twhile (! (widgetId = newNode.widgetId) ) {\n\t\t\tnewNode = newNode.parentNode;\n\t\t\tif (newNode == null) { break; }\n\t\t}\n\t\tif (widgetId) { return dojo.widget.byId(widgetId); }\n\t\telse if (node == null) { return null; }\n\t\telse{ return dojo.widget.manager.byNode(node); }","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.expand":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (node.isFolder) {\t\t\t\n\t\t\tnode.expand(); \/\/ skip trees or non-folders\n\t\t}\t\t\n\t\t\/\/dojo.profile.end(\"expand\");","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.collapse":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (node.isFolder) {\n\t\t\tnode.collapse();\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.canEditLabel":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (node.actionIsDisabledNow(node.actions.EDIT)) return false;\n\t\treturn true;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.editLabelStart":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (!this.canEditLabel(node)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.editor.isClosed()) {\n\t\t\t\/\/dojo.debug(\"editLabelStart editor open\");\n\t\t\tthis.editLabelFinish(this.editor.saveOnBlur);\t\t\t\n\t\t}\n\t\tthis.doEditLabelStart(node);","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.editLabelFinish":{"meta":{"summary":"","parameters":{"save":{"type":""}},"src":" \tthis.doEditLabelFinish(save);\t\t","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.doEditLabelStart":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (!this.editor) {\n\t\t\tdojo.raise(this.widgetType+\": no editor specified\");\n\t\t}\n\t\t\/\/dojo.debug(\"editLabelStart editor open \"+node);\n\t\tthis.editor.open(node);","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.doEditLabelFinish":{"meta":{"summary":"","parameters":{"save":{"type":""},"server_data":{"type":""}},"src":" \tif (!this.editor) {\n\t\t\tdojo.raise(this.widgetType+\": no editor specified\");\n\t\t}\n\t\tvar node = this.editor.node;\t\n\t\tvar editorTitle = this.editor.getContents();\n\t\tthis.editor.close(save);\n\t\tif (save) {\n\t\t\tvar data = {title:editorTitle};\n\t\t\tif (server_data) { \/\/ may be undefined\n\t\t\t\tdojo.lang.mixin(data, server_data);\n\t\t\t}\n\t\t\tif (node.isPhantom) {\t\t\t\n\t\t\t\t\/\/ I can't just set node phantom's title, because widgetId\/objectId\/widgetName...\n\t\t\t\t\/\/ may be provided by server\n\t\t\t\tvar parent = node.parent;\n\t\t\t\tvar index = node.getParentIndex();\t\t\t\t\n\t\t\t\tnode.destroy();\n\t\t\t\t\/\/ new node was added!\n\t\t\t\tdojo.widget.TreeBasicControllerV3.prototype.doCreateChild.call(this, parent, index, data);\n\t\t\t} else {\n\t\t\t\tvar title = server_data && server_data.title ? server_data.title : editorTitle;\n\t\t\t\t\/\/ use special method to make sure everything updated and event sent\n\t\t\t\tnode.setTitle(title); \n\t\t\t}\n\t\t} else {\n\t\t\t\/\/dojo.debug(\"Kill phantom on cancel\");\n\t\t\tif (node.isPhantom) {\n\t\t\t\tnode.destroy();\n\t\t\t}\n\t\t}","call_chain":["dojo.widget.TreeBasicControllerV3.prototype.doCreateChild"],"prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.makeDefaultNode":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""}},"src":" \tvar data = {title:parent.tree.defaultChildTitle};\n\t\treturn dojo.widget.TreeBasicControllerV3.prototype.doCreateChild.call(this,parent,index,data);","call_chain":["dojo.widget.TreeBasicControllerV3.prototype.doCreateChild"],"prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.runStages":{"meta":{"summary":"","parameters":{"check":{"type":""},"prepare":{"type":""},"make":{"type":""},"finalize":{"type":""},"expose":{"type":""},"args":{"type":""}},"src":" \tif (check && !check.apply(this, args)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (prepare && !prepare.apply(this, args)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar result = make.apply(this, args);\n\t\tif (finalize) {\n\t\t\tfinalize.apply(this,args);\t\t\t\n\t\t}\n\t\tif (!result) {\n\t\t\treturn result;\n\t\t}\n\t\tif (expose) {\n\t\t\texpose.apply(this, args);\n\t\t}\n\t\treturn result;","call_chain":["check","prepare","make","finalize","expose"],"prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.createAndEdit":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""}},"src":" \tvar data = {title:parent.tree.defaultChildTitle};\n\t\tif (!this.canCreateChild(parent, index, data)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar child = this.doCreateChild(parent, index, data);\n\t\tif (!child) return false;\n\t\tthis.exposeCreateChild(parent, index, data);\n\t\tchild.isPhantom = true;\n\t\tif (!this.editor.isClosed()) {\n\t\t\t\/\/dojo.debug(\"editLabelStart editor open\");\n\t\t\tthis.editLabelFinish(this.editor.saveOnBlur);\t\t\t\n\t\t}\n\t\tthis.doEditLabelStart(child);\t\t","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.canClone":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""},"deep":{"type":""}},"src":" \treturn true;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.clone":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""},"deep":{"type":""}},"src":" \treturn this.runStages(\n\t\t\tthis.canClone, this.prepareClone, this.doClone, this.finalizeClone, this.exposeClone, arguments\n\t\t);\t\t\t","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.exposeClone":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""}},"src":" \tif (newParent.isTreeNode) {\n\t\t\tthis.expand(newParent);\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.doClone":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""},"deep":{"type":""}},"src":" \tvar cloned = child.clone(deep);\n\t\tnewParent.addChild(cloned, index);\n\t\treturn cloned;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.canDetach":{"meta":{"summary":"","parameters":{"child":{"type":""}},"src":" \tif (child.actionIsDisabledNow(child.actions.DETACH)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.detach":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \treturn this.runStages(\n\t\t\tthis.canDetach, this.prepareDetach, this.doDetach, this.finalizeDetach, this.exposeDetach, arguments\n\t\t);\t\t\t","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.doDetach":{"meta":{"summary":"","parameters":{"node":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tnode.detach();","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.canDestroyChild":{"meta":{"summary":"","parameters":{"child":{"type":""}},"src":" \tif (child.parent && !this.canDetach(child)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.destroyChild":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \treturn this.runStages(\n\t\t\tthis.canDestroyChild, this.prepareDestroyChild, this.doDestroyChild, this.finalizeDestroyChild, this.exposeDestroyChild, arguments\n\t\t);\t\t\t","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.doDestroyChild":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tnode.destroy();","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.canMoveNotANode":{"meta":{"summary":"","parameters":{"child":{"type":""},"parent":{"type":""}},"src":" \tif (child.treeCanMove) {\n\t\t\treturn child.treeCanMove(parent);\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.canMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""}},"src":" \tif (!child.isTreeNode) {\n\t\t\treturn this.canMoveNotANode(child, newParent);\n\t\t}\n\t\tif (child.actionIsDisabledNow(child.actions.MOVE)) {\n\t\t\treturn false;\n\t\t}\n\t\t\/\/ if we move under same parent then no matter if ADDCHILD disabled for him\n\t\t\/\/ but if we move to NEW parent then check if action is disabled for him\n\t\t\/\/ also covers case for newParent being a non-folder in strict mode etc\n\t\tif (child.parent !== newParent && newParent.actionIsDisabledNow(newParent.actions.ADDCHILD)) {\n\t\t\treturn false;\n\t\t}\n\t\t\/\/ Can't move parent under child. check whether new parent is child of \"child\".\n\t\tvar node = newParent;\n\t\twhile(node.isTreeNode) {\n\t\t\t\/\/dojo.debugShallow(node.title)\n\t\t\tif (node === child) {\n\t\t\t\t\/\/ parent of newParent is child\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.move":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":",..."}},"src":" \treturn this.runStages(this.canMove, this.prepareMove, this.doMove, this.finalizeMove, this.exposeMove, arguments);\t\t\t","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.doMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":" \tchild.tree.move(child, newParent, index);\n\t\treturn true;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.exposeMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""}},"src":" \tif (newParent.isTreeNode) {\n\t\t\tthis.expand(newParent);\n\t\t}","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.canCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""}},"src":" \tif (parent.actionIsDisabledNow(parent.actions.ADDCHILD)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.createChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""}},"src":" \tif(!data) {\n\t\t\tdata = {title:parent.tree.defaultChildTitle};\n\t\t}\n\t\treturn this.runStages(this.canCreateChild, this.prepareCreateChild, this.doCreateChild, this.finalizeCreateChild, this.exposeCreateChild,\n\t\t\t[parent, index, data]);\t\t","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.prepareCreateChild":{"meta":{"summary":"","src":" prepareCreateChild: function() { return true;    ","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.finalizeCreateChild":{"meta":{"summary":"","src":"","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.doCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""}},"src":" \tvar newChild = parent.tree.createNode(data); \n\t\t\/\/var newChild = dojo.widget.createWidget(widgetType, data);\n\t\tparent.addChild(newChild, index);\n\t\treturn newChild;","prototype":"dojo.widget.TreeBasicControllerV3"}},"dojo.widget.TreeBasicControllerV3.exposeCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""}},"src":" \treturn this.expand(parent);","prototype":"dojo.widget.TreeBasicControllerV3"}}}}},"dojo.widget.TreeCommon":{"meta":{"requires":{"common":["dojo.widget.*"]}}},"dojo.widget.TreeContextMenu":{"meta":{"requires":{"common":["dojo.event.*","dojo.io.*","dojo.widget.Menu2"]},"functions":{"dojo.widget.TreeContextMenu":{"meta":{"prototype_chain":["dojo.widget.PopupMenu2"],"call_chain":["dojo.widget.PopupMenu2"],"summary":"","src":" this.listenedTrees = [];","instance_variables":["listenedTrees"]}},"dojo.widget.TreeContextMenu.open":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"parentMenu":{"type":""},"explodeSrc":{"type":""}},"src":" \tvar result = dojo.widget.PopupMenu2.prototype.open.apply(this, arguments);\n\t\t\/* publish many events here about structural changes *\/\n\t\tdojo.event.topic.publish(this.eventNames.open, { menu:this });\n\t\treturn result;","call_chain":["dojo.widget.PopupMenu2.prototype.open"],"prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.listenTree":{"meta":{"summary":"","parameters":{"tree":{"type":""}},"src":" \tvar nodes = tree.getDescendants();\n\t\tfor(var i=0; i<nodes.length; i++) {\n\t\t\tif (!nodes[i].isTreeNode) continue;\n\t\t\tthis.bindDomNode(nodes[i].labelNode);\n\t\t}\n\t\t\/* bind context menu to all nodes that will be created in the future (e.g loaded from server)*\/\n\t\tvar _this = this;\n\t\tdojo.event.topic.subscribe(tree.eventNames.createDOMNode, this, \"onCreateDOMNode\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.moveFrom, this, \"onMoveFrom\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.moveTo, this, \"onMoveTo\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.removeNode, this, \"onRemoveNode\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.addChild, this, \"onAddChild\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.treeDestroy, this, \"onTreeDestroy\");\n\t\tthis.listenedTrees.push(tree);","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.unlistenTree":{"meta":{"summary":"","parameters":{"tree":{"type":""}},"src":"\t\tdojo.event.topic.unsubscribe(tree.eventNames.createDOMNode, this, \"onCreateDOMNode\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.moveFrom, this, \"onMoveFrom\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.moveTo, this, \"onMoveTo\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.removeNode, this, \"onRemoveNode\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.addChild, this, \"onAddChild\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.treeDestroy, this, \"onTreeDestroy\");\n\t\tfor(var i=0; i<this.listenedTrees.length; i++){\n           if(this.listenedTrees[i] === tree){\n                   this.listenedTrees.splice(i, 1);\n                   break;\n           }\n\t\t}","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.onTreeDestroy":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.unlistenTree(message.source);","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.bindTreeNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar _this = this;\n\t\t\/\/dojo.debug(\"bind to \"+node);\n\t\tdojo.lang.forEach(node.getDescendants(),\n\t\t\tfunction(e) {_this.bindDomNode(e.labelNode); }\n\t\t);","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.unBindTreeNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar _this = this;\n\t\t\/\/dojo.debug(\"Unbind from \"+node);\n\t\tdojo.lang.forEach(node.getDescendants(),\n\t\t\tfunction(e) {_this.unBindDomNode(e.labelNode); }\n\t\t);","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.onCreateDOMNode":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.bindTreeNode(message.source);","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.onMoveFrom":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (!dojo.lang.inArray(this.listenedTrees, message.newTree)) {\n\t\t\tthis.unBindTreeNode(message.child);\n\t\t}","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.onMoveTo":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (dojo.lang.inArray(this.listenedTrees, message.newTree)) {\n\t\t\tthis.bindTreeNode(message.child);\n\t\t}","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.onRemoveNode":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.unBindTreeNode(message.child);","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeContextMenu.onAddChild":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (message.domNodeInitialized) {\n\t\t\t\/\/ dom node was there already => I did not process onNodeDomCreate\n\t\t\tthis.bindTreeNode(message.child);\n\t\t}","prototype":"dojo.widget.TreeContextMenu"}},"dojo.widget.TreeMenuItem":{"meta":{"prototype_chain":["dojo.widget.MenuItem2"],"call_chain":["dojo.widget.MenuItem2"],"prototype_variables":["treeActions"],"variables":["treeActions"],"instance_variables":["treeActions"]},"extra":{"variables":{"treeActions":{"type":"menu","summary":"item performs following actions (to be checked for permissions)"}}}},"dojo.widget.TreeMenuItem.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tthis.treeActions = this.treeActions.split(\",\");\n\t\tfor(var i=0; i<this.treeActions.length; i++) {\n\t\t\tthis.treeActions[i] = this.treeActions[i].toUpperCase();\n\t\t}","prototype":"dojo.widget.TreeMenuItem"}},"dojo.widget.TreeMenuItem.getTreeNode":{"meta":{"summary":"","src":" \tvar menu = this;\n\t\twhile (! (menu instanceof dojo.widget.TreeContextMenu) ) {\n\t\t\tmenu = menu.parent;\n\t\t}\n\t\tvar source = menu.getTopOpenEvent().target;\n\t\twhile (!source.getAttribute('treeNode') && source.tagName != 'body') {\n\t\t\tsource = source.parentNode;\n\t\t}\n\t\tif (source.tagName == 'body') {\n\t\t\tdojo.raise(\"treeNode not detected\");\n\t\t}\n\t\tvar treeNode = dojo.widget.manager.getWidgetById(source.getAttribute('treeNode'));\n\t\treturn treeNode;","prototype":"dojo.widget.TreeMenuItem"}},"dojo.widget.TreeMenuItem.menuOpen":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar treeNode = this.getTreeNode();\n\t\tthis.setDisabled(false); \/\/ enable by default\n\t\tvar _this = this;\n\t\tdojo.lang.forEach(_this.treeActions,\n\t\t\tfunction(action) {\n\t\t\t\t_this.setDisabled( treeNode.actionIsDisabled(action) );\n\t\t\t}\n\t\t);","prototype":"dojo.widget.TreeMenuItem"}},"dojo.widget.TreeMenuItem.toString":{"meta":{"summary":"","src":" \treturn \"[\"+this.widgetType+\" node \"+this.getTreeNode()+\"]\";","prototype":"dojo.widget.TreeMenuItem"}}}}},"dojo.widget.TreeContextMenuV3":{"meta":{"requires":{"common":["dojo.event.*","dojo.io.*","dojo.widget.*","dojo.widget.Menu2","dojo.widget.TreeCommon"]},"functions":{"dojo.widget.TreeContextMenuV3":{"meta":{"prototype_variables":["listenTreeEvents"],"variables":["listenTreeEvents"],"summary":"","src":" \tthis.listenedTrees = {};","instance_variables":["listenedTrees"]}},"dojo.widget.TreeContextMenuV3.listenNodeFilter":{"meta":{"summary":"","parameters":{"elem":{"type":""}},"src":" listenNodeFilter: function(elem) { return elem instanceof dojo.widget.Widget   ","prototype":"dojo.widget.TreeContextMenuV3"}},"dojo.widget.TreeContextMenuV3.onAfterTreeCreate":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar tree = message.source;\n\t\tthis.bindDomNode(tree.domNode);","prototype":"dojo.widget.TreeContextMenuV3"}},"dojo.widget.TreeContextMenuV3.onBeforeTreeDestroy":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.unBindDomNode(message.source.domNode);","prototype":"dojo.widget.TreeContextMenuV3"}},"dojo.widget.TreeContextMenuV3.getTreeNode":{"meta":{"summary":"","src":" \tvar source = this.getTopOpenEvent().target;\n\t\tvar treeNode = this.domElement2TreeNode(source);\n\t\treturn treeNode;","prototype":"dojo.widget.TreeContextMenuV3"}},"dojo.widget.TreeContextMenuV3.open":{"meta":{"summary":"","src":" \tvar result = dojo.widget.PopupMenu2.prototype.open.apply(this, arguments);\n\t\tfor(var i=0; i< this.children.length; i++) {\n\t\t\t\/* notify children *\/\n\t\t\tif (this.children[i].menuOpen) {\n\t\t\t\tthis.children[i].menuOpen(this.getTreeNode());\n\t\t\t}\n\t\t}\n\t\treturn result;","call_chain":["dojo.widget.PopupMenu2.prototype.open"],"prototype":"dojo.widget.TreeContextMenuV3"}},"dojo.widget.TreeContextMenuV3.close":{"meta":{"summary":"","src":" \tfor(var i=0; i< this.children.length; i++) {\n\t\t\t\/* notify menu entries *\/\n\t\t\tif (this.children[i].menuClose) {\n\t\t\t\tthis.children[i].menuClose(this.getTreeNode());\n\t\t\t}\n\t\t}\n\t\tvar result = dojo.widget.PopupMenu2.prototype.close.apply(this, arguments);\n\t\treturn result","call_chain":["dojo.widget.PopupMenu2.prototype.close"],"prototype":"dojo.widget.TreeContextMenuV3"}},"dojo.widget.TreeMenuItemV3":{"meta":{"prototype_variables":["treeActions"],"variables":["treeActions"],"summary":"","src":" \tthis.treeActions = [];","instance_variables":["treeActions"]},"extra":{"variables":{"treeActions":{"type":"menu","summary":"item performs following actions (to be checked for permissions)"}}}},"dojo.widget.TreeMenuItemV3.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tfor(var i=0; i<this.treeActions.length; i++) {\n\t\t\tthis.treeActions[i] = this.treeActions[i].toUpperCase();\n\t\t}","prototype":"dojo.widget.TreeMenuItemV3"}},"dojo.widget.TreeMenuItemV3.getTreeNode":{"meta":{"summary":"","src":" \tvar menu = this;\n\t\t\/\/ FIXME: change to dojo.widget[this.widgetType]\n\t\twhile (! (menu instanceof dojo.widget.TreeContextMenuV3) ) {\n\t\t\t\tmenu = menu.parent;\n\t\t}\n\t\tvar treeNode = menu.getTreeNode()\n\t\treturn treeNode;","prototype":"dojo.widget.TreeMenuItemV3"}},"dojo.widget.TreeMenuItemV3.menuOpen":{"meta":{"summary":"","parameters":{"treeNode":{"type":""}},"src":" \ttreeNode.viewEmphasize()\n\t\tthis.setDisabled(false); \/\/ enable by default\n\t\tvar _this = this;\n\t\tdojo.lang.forEach(_this.treeActions,\n\t\t\tfunction(action) {\n\t\t\t\t_this.setDisabled( treeNode.actionIsDisabledNow(action) );\n\t\t\t}\n\t\t);","prototype":"dojo.widget.TreeMenuItemV3"}},"dojo.widget.TreeMenuItemV3.menuClose":{"meta":{"summary":"","parameters":{"treeNode":{"type":""}},"src":" \ttreeNode.viewUnemphasize()","prototype":"dojo.widget.TreeMenuItemV3"}},"dojo.widget.TreeMenuItemV3.toString":{"meta":{"summary":"","src":" \treturn \"[\"+this.widgetType+\" node \"+this.getTreeNode()+\"]\";","prototype":"dojo.widget.TreeMenuItemV3"}}}}},"dojo.widget.TreeDemo":{"meta":{"requires":{"common":["dojo.Deferred"]},"functions":{"dojo.widget.TreeDemo.reportIfDefered":{"meta":{"summary":"","parameters":{"res":{"type":""}},"src":" \tif (res instanceof dojo.Deferred) {\t\t\t\n\t\t\tres.addCallbacks(\n\t\t\t\tfunction(res) { \/* dojo.debug(\"OK \" + (res ? res: '')); *\/ return res },\n\t\t\t\tfunction(err) { dojo.debug(\"Error\"); dojo.debugShallow(err); }\n\t\t\t);\n\t\t}\t\t"}},"dojo.widget.TreeDemo.resetRandomChildren":{"meta":{"summary":"","parameters":{"maxCount":{"type":""}},"src":" \tthis.randomChildrenMaxCount = maxCount;\n\t\tthis.randomChildrenCount = 0;\n\t\tthis.randomChildrenDepth = 0;","instance_variables":["randomChildrenMaxCount","randomChildrenCount","randomChildrenDepth"]}},"dojo.widget.TreeDemo.makeRandomChildren":{"meta":{"summary":"","parameters":{"title":{"type":""}},"src":" \tthis.randomChildrenDepth++;\n\t\tvar children = [];\n\t\tfor (var i=1; i<=5; i++) {\t\t\t\t\n\t\t\tvar t = title+(this.randomChildrenDepth==1 ? '' : '.')+i;\n\t\t\tvar node = {title: t};\n\t\t\tchildren.push(node);\t\t\n\t\t\tthis.randomChildrenCount++\t\n\t\t\tif (this.randomChildrenCount >= this.randomChildrenMaxCount) {\n\t\t\t\tbreak;\t\t\t\n\t\t\t}\n\t\t}\n\t\tvar i=1;\n\t\tvar _this = this;\n\t\tdojo.lang.forEach(children, function(child) {\n\t\t\tvar t = title+(_this.randomChildrenDepth==1 ? '' : '.')+i;\n\t\t\ti++;\n\t\t\t\/\/ first node is always folder for tests\n\t\t\tif (_this.randomChildrenCount<_this.randomChildrenMaxCount && (\n\t\t\t\t_this.randomChildrenDepth==1 && child === children[0] || _this.randomChildrenDepth<5 && Math.random()>0.3 )\n\t\t\t  ) {\n\t\t\t\t\/\/dojo.debug(\"add child \"+t);\n\t\t\t\tchild.children = _this.makeRandomChildren(t);\t\n\t\t\t}\n\t\t});\n\t\t\t\/\/dojo.debug(\"out \"+nodeOrTree);\n\t\tthis.randomChildrenDepth--;\n\t\treturn children;\t\t\t","instance_variables":["randomChildrenDepth"]}},"dojo.widget.TreeDemo.bindDemoMenu":{"meta":{"summary":"","parameters":{"controller":{"type":""}},"src":" \tvar _t = this;\n\t\tdojo.event.topic.subscribe('treeContextMenuDestroy\/engage',\n\t\t\tfunction (menuItem) { \n\t\t\t\tvar node = menuItem.getTreeNode();\n\t\t\t\t\/\/if (confirm(\"Delete node with descendants: \"+node.title.replace(\/(<([^>]+)>)\/ig,\" \") +\" ?\")) {\n\t\t\t\t_t.reportIfDefered(controller.destroyChild(node)); \n\t\t\t}\n\t\t);\n\t\tdojo.event.topic.subscribe('treeContextMenuRefresh\/engage',\n\t\t\tfunction (menuItem) {\n                var node = menuItem.getTreeNode();\n                _t.reportIfDefered(controller.refreshChildren(node));\n\t\t\t}\n\t\t);\n\t\tdojo.event.topic.subscribe('treeContextMenuCreate\/engage',\n\t\t\tfunction (menuItem) {\n\t\t\t\tvar node = menuItem.getTreeNode();\n\t\t\t\tvar d = controller.createAndEdit(node, 0);\n\t\t\t\t_t.reportIfDefered(d);\n            }\n\t\t);\n\t\tdojo.event.topic.subscribe('treeContextMenuUp\/engage',\n\t\t\tfunction (menuItem) {\n                var node = menuItem.getTreeNode();\n                if (node.isFirstChild()) return;\n                _t.reportIfDefered(controller.move(node, node.parent, node.getParentIndex()-1));\n            }\n\t\t);\n\t\tdojo.event.topic.subscribe('treeContextMenuDown\/engage',\n\t\t\tfunction (menuItem) {\n                var node = menuItem.getTreeNode();\n                if (node.isLastChild()) return;\n                _t.reportIfDefered(controller.move(node, node.parent, node.getParentIndex()+1));\n            }\n\t\t);\n\t\tdojo.event.topic.subscribe('treeContextMenuEdit\/engage',\n\t\t\tfunction (menuItem) {\n                var node = menuItem.getTreeNode();\n                _t.reportIfDefered(controller.editLabelStart(node));\n\t\t\t}\n\t\t);"}}}}},"dojo.widget.TreeDeselectOnDblselect":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.TreeSelectorV3"]},"functions":{"dojo.widget.TreeDeselectOnDblselect":{"meta":{"prototype_variables":["selector"],"variables":["selector"],"instance_variables":["selector"]}},"dojo.widget.TreeDeselectOnDblselect.initialize":{"meta":{"summary":"","src":" \tthis.selector = dojo.widget.byId(this.selector);\n\t\t\/\/dojo.debug(\"OK \"+this.selector);\n\t\tdojo.event.topic.subscribe(this.selector.eventNames.dblselect, this, \"onDblselect\");\t\t","prototype":"dojo.widget.TreeDeselectOnDblselect"}},"dojo.widget.TreeDeselectOnDblselect.onDblselect":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.selector.deselect(message.node);","prototype":"dojo.widget.TreeDeselectOnDblselect"}}}}},"dojo.widget.TreeDisableWrapExtension":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.TreeExtension"]},"functions":{"dojo.widget.TreeDisableWrapExtension":{"meta":{"prototype_chain":["dojo.widget.TreeExtension"],"call_chain":["dojo.widget.TreeExtension"],"prototype_variables":["templateCssPath"],"variables":["templateCssPath"]}},"dojo.widget.TreeDisableWrapExtension.listenTree":{"meta":{"summary":"","parameters":{"tree":{"type":""}},"src":" \tvar wrappingDiv = document.createElement( \"div\" );\n\t\tvar clazz = tree.classPrefix+\"DisableWrap\";\n\t\tif (dojo.render.html.ie) {\n\t\t\tclazz = clazz+' '+ tree.classPrefix+\"IEDisableWrap\";\n\t\t}\n\t\tdojo.html.setClass(wrappingDiv, clazz);\n\t\tvar table = document.createElement( \"table\" );\n\t\twrappingDiv.appendChild( table );\n\t\tvar tbody = document.createElement( \"tbody\" );\n\t\ttable.appendChild( tbody );\n\t\tvar tr = document.createElement( \"tr\" );\n\t\ttbody.appendChild( tr );\n\t\tvar td = document.createElement( \"td\" );\n\t\ttr.appendChild( td );\n\t\tif( tree.domNode.parentNode ) {\n\t\t\ttree.domNode.parentNode.replaceChild( wrappingDiv, tree.domNode );\n\t\t}\n\t\ttd.appendChild( tree.domNode );\n\t\ttree.domNode = wrappingDiv;","prototype":"dojo.widget.TreeDisableWrapExtension"}}}}},"dojo.widget.TreeDndControllerV3":{"meta":{"requires":{"common":["dojo.dnd.TreeDragAndDropV3","dojo.experimental"]},"functions":{"dojo.widget.TreeDndControllerV3":{"meta":{"prototype_variables":["listenTreeEvents"],"variables":["listenTreeEvents"],"instance_variables":["treeController","dragSources","dropTargets","listenedTrees"],"summary":"","src":" \tthis.dragSources = {};\n\t\tthis.dropTargets = {};\n\t\tthis.listenedTrees = {};"}},"dojo.widget.TreeDndControllerV3.listenNodeFilter":{"meta":{"summary":"","parameters":{"elem":{"type":""}},"src":" listenNodeFilter: function(elem) { return elem instanceof dojo.widget.Widget    ","prototype":"dojo.widget.TreeDndControllerV3"}},"dojo.widget.TreeDndControllerV3.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""}},"src":" \tthis.treeController = dojo.lang.isString(args.controller) ? dojo.widget.byId(args.controller) : args.controller;\n\t\tif (!this.treeController) {\n\t\t\tdojo.raise(\"treeController must be declared\");\n\t\t}","prototype":"dojo.widget.TreeDndControllerV3"}},"dojo.widget.TreeDndControllerV3.onBeforeTreeDestroy":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.unlistenTree(message.source);","prototype":"dojo.widget.TreeDndControllerV3"}},"dojo.widget.TreeDndControllerV3.onAfterAddChild":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.listenNode(message.child);\t\t","prototype":"dojo.widget.TreeDndControllerV3"}},"dojo.widget.TreeDndControllerV3.onAfterChangeTree":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (!message.oldTree) return;\n\t\t\/\/dojo.debug(\"HERE\");\n\t\tif (!message.newTree || !this.listenedTrees[message.newTree.widgetId]) {\t\t\t\n\t\t\tthis.processDescendants(message.node, this.listenNodeFilter, this.unlistenNode);\n\t\t}\t\t\n\t\tif (!this.listenedTrees[message.oldTree.widgetId]) {\n\t\t\t\/\/ we have new node\n\t\t\tthis.processDescendants(message.node, this.listenNodeFilter, this.listenNode);\t\n\t\t}\n\t\t\/\/dojo.profile.end(\"onTreeChange\");","prototype":"dojo.widget.TreeDndControllerV3"}},"dojo.widget.TreeDndControllerV3.listenNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (!node.tree.DndMode) return;\n\t\tif (this.dragSources[node.widgetId] || this.dropTargets[node.widgetId]) return;\n\t\t\/* I drag label, not domNode, because large domNodes are very slow to copy and large to drag *\/\n\t\tvar source = null;\n\t\tvar target = null;\n\t\tif (!node.actionIsDisabled(node.actions.MOVE)) {\n\t\t\t\/\/dojo.debug(\"reg source\")\n\t\t\t\/\/dojo.profile.start(\"Dnd source \"+node);\t\t\n\t\t\tvar source = this.makeDragSource(node);\n\t\t\t\/\/dojo.profile.end(\"Dnd source \"+node);\t\t\n\t\t\tthis.dragSources[node.widgetId] = source;\n\t\t}\n\t\t\/\/dojo.profile.start(\"Dnd target \"+node);\t\t\n\t\t\/\/dojo.debug(\"reg target\");\n\t\tvar target = this.makeDropTarget(node);\n\t\t\/\/dojo.profile.end(\"Dnd target \"+node);\t\t\n\t\tthis.dropTargets[node.widgetId] = target;\n\t\t\/\/dojo.profile.end(\"Dnd listenNode \"+node);\t\t","prototype":"dojo.widget.TreeDndControllerV3"}},"dojo.widget.TreeDndControllerV3.makeDragSource":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \treturn new dojo.dnd.TreeDragSourceV3(node.contentNode, this, node.tree.widgetId, node);","prototype":"dojo.widget.TreeDndControllerV3"}},"dojo.widget.TreeDndControllerV3.makeDropTarget":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \t return new dojo.dnd.TreeDropTargetV3(node.contentNode, this.treeController, node.tree.DndAcceptTypes, node);","prototype":"dojo.widget.TreeDndControllerV3"}},"dojo.widget.TreeDndControllerV3.unlistenNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (this.dragSources[node.widgetId]) {\n\t\t\tdojo.dnd.dragManager.unregisterDragSource(this.dragSources[node.widgetId]);\n\t\t\tdelete this.dragSources[node.widgetId];\n\t\t}\n\t\tif (this.dropTargets[node.widgetId]) {\n\t\t\tdojo.dnd.dragManager.unregisterDropTarget(this.dropTargets[node.widgetId]);\n\t\t\tdelete this.dropTargets[node.widgetId];\n\t\t}","prototype":"dojo.widget.TreeDndControllerV3"}}}}},"dojo.widget.TreeDocIconExtension":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.TreeExtension"]},"functions":{"dojo.widget.TreeDocIconExtension":{"meta":{"prototype_variables":["templateCssPath","listenTreeEvents"],"variables":["templateCssPath","listenTreeEvents"]}},"dojo.widget.TreeDocIconExtension.listenNodeFilter":{"meta":{"summary":"","parameters":{"elem":{"type":""}},"src":" listenNodeFilter: function(elem) { return elem instanceof dojo.widget.Widget    ","prototype":"dojo.widget.TreeDocIconExtension"}},"dojo.widget.TreeDocIconExtension.getnodeDocType":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar nodeDocType = node.getnodeDocType();\n\t\tif (!nodeDocType) { \/\/ set default type\n\t\t\tnodeDocType = node.isFolder ? \"Folder\" : \"Document\";\n\t\t}\n\t\treturn nodeDocType;","prototype":"dojo.widget.TreeDocIconExtension"}},"dojo.widget.TreeDocIconExtension.setnodeDocTypeClass":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar reg = new RegExp(\"(^|\\\\s)\"+node.tree.classPrefix+\"Icon\\\\w+\",'g');\t\t\t\n\t\tvar clazz = dojo.html.getClass(node.iconNode).replace(reg,'') + ' ' + node.tree.classPrefix+'Icon'+this.getnodeDocType(node);\n\t\tdojo.html.setClass(node.iconNode, clazz);\t\t","prototype":"dojo.widget.TreeDocIconExtension"}},"dojo.widget.TreeDocIconExtension.onAfterSetFolder":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (message.source.iconNode) {\n\t\t\t\/\/ on node-initialize time when folder is set there is no iconNode\n\t\t\t\/\/ this case will be processed in treeChange anyway\t\t\t\n\t\t\tthis.setnodeDocTypeClass(message.source);\n\t\t}","prototype":"dojo.widget.TreeDocIconExtension"}},"dojo.widget.TreeDocIconExtension.onAfterUnsetFolder":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.setnodeDocTypeClass(message.source);","prototype":"dojo.widget.TreeDocIconExtension"}},"dojo.widget.TreeDocIconExtension.listenNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tnode.contentIconNode = document.createElement(\"div\");\n\t\tvar clazz = node.tree.classPrefix+\"IconContent\";\n\t\tif (dojo.render.html.ie) {\n\t\t\tclazz = clazz+' '+ node.tree.classPrefix+\"IEIconContent\";\n\t\t}\n\t\tdojo.html.setClass(node.contentIconNode, clazz);\n\t\tnode.contentNode.parentNode.replaceChild(node.contentIconNode, node.expandNode);\n\t  \tnode.iconNode = document.createElement(\"div\");\n\t\tdojo.html.setClass(node.iconNode, node.tree.classPrefix+\"Icon\"+' '+node.tree.classPrefix+'Icon'+this.getnodeDocType(node));\n\t\tnode.contentIconNode.appendChild(node.expandNode);\n\t\tnode.contentIconNode.appendChild(node.iconNode);\n\t\tdojo.dom.removeNode(node.contentNode);\n\t\tnode.contentIconNode.appendChild(node.contentNode);\n\t\t\/\/dojo.html.insertAfter(node.iconNode, node.expandNode);\n\t\t\/\/dojo.debug(\"listenNode out \"+node);","prototype":"dojo.widget.TreeDocIconExtension"}},"dojo.widget.TreeDocIconExtension.onAfterChangeTree":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar _this = this;\n\t\t\/\/dojo.debug(message.node)\n\t\tif (!message.oldTree || !this.listenedTrees[message.oldTree.widgetId]) {\t\t\t\n\t\t\t\/\/ moving from old tree to our tree\n\t\t\tthis.processDescendants(message.node,\n\t\t\t\tthis.listenNodeFilter,\n\t\t\t\tthis.listenNode\n\t\t\t);\n\t\t}","prototype":"dojo.widget.TreeDocIconExtension"}}}}},"dojo.widget.TreeEditor":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.widget.RichText"]},"functions":{"dojo.widget.TreeEditor":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["singleLineMode","saveOnBlur","sync","selectOnOpen","controller","node"],"variables":["singleLineMode","saveOnBlur","sync","selectOnOpen","controller","node"],"instance_variables":["richText","node"]}},"dojo.widget.TreeEditor.getContents":{"meta":{"summary":"","src":" \treturn this.richText.getEditorContent();","prototype":"dojo.widget.TreeEditor"}},"dojo.widget.TreeEditor.open":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tif (!this.richText) {\n\t\t\tthis.richText = dojo.widget.createWidget(\"RichText\", this.richTextParams, node.labelNode);\n\t\t\tdojo.event.connect(\"around\", this.richText, \"onKeyDown\", this, \"richText_onKeyDown\" );\n\t\t\tdojo.event.connect(this.richText, \"onBlur\", this, \"richText_onBlur\" );\n\t\t\tvar self = this;\n\t\t\tdojo.event.connect(this.richText, \"onLoad\", function(){\n\t\t\t\tif (self.selectOnOpen) {\n\t\t\t\t\tself.richText.execCommand(\"selectall\");\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.richText.open(node.labelNode);\n\t\t}\n\t\tthis.node = node;\t\t","prototype":"dojo.widget.TreeEditor"}},"dojo.widget.TreeEditor.close":{"meta":{"summary":"","parameters":{"save":{"type":""}},"src":" \tthis.richText.close(save);\n\t\tthis.node = null;\t","prototype":"dojo.widget.TreeEditor"}},"dojo.widget.TreeEditor.isClosed":{"meta":{"summary":"","src":" \treturn !this.richText || this.richText.isClosed;","prototype":"dojo.widget.TreeEditor"}},"dojo.widget.TreeEditor.execCommand":{"meta":{"summary":"","src":" \tthis.richText.execCommand.apply(this.richText, arguments);","call_chain":["this.richText.execCommand"],"prototype":"dojo.widget.TreeEditor"}},"dojo.widget.TreeEditor.richText_onKeyDown":{"meta":{"summary":"","parameters":{"invocation":{"type":""}},"src":" \tvar e = invocation.args[0];\n\t\tif((!e)&&(this.object)) {\n\t\t\te = dojo.event.browser.fixEvent(this.editor.window.event);\n\t\t}\n\t\tswitch (e.keyCode) {\n\t\t\tcase e.KEY_ESCAPE:\n\t\t\t\tthis.finish(false);\n\t\t\t\tdojo.event.browser.stopEvent(e);\t\t\n\t\t\t\tbreak;\n\t\t\tcase e.KEY_ENTER:\n\t\t\t\tif( e.ctrlKey && !this.singleLineMode ) {\n\t\t\t\t\tthis.execCommand( \"inserthtml\", \"<br\/>\" );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.finish(true);\t\t\t\t\t\n\t\t\t\t\t\/\/dojo.debug(\"finish\");\n\t\t\t\t}\n\t\t\t\tdojo.event.browser.stopEvent(e);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn invocation.proceed();\n\t\t}","prototype":"dojo.widget.TreeEditor"}},"dojo.widget.TreeEditor.richText_onBlur":{"meta":{"summary":"","src":" \tthis.finish(this.saveOnBlur);","prototype":"dojo.widget.TreeEditor"}},"dojo.widget.TreeEditor.finish":{"meta":{"summary":"","parameters":{"save":{"type":""}},"src":" \treturn this.controller.editLabelFinish(save, this.sync);","prototype":"dojo.widget.TreeEditor"}}},"objects":{"dojo.widget.TreeEditor.richTextParams":{"meta":{"variables":["styleSheets"]}}}}},"dojo.widget.TreeEmphasizeOnSelect":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.TreeSelectorV3","dojo.html.selection"]},"functions":{"dojo.widget.TreeEmphasizeOnSelect":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["selector"],"variables":["selector"],"instance_variables":["selector"]}},"dojo.widget.TreeEmphasizeOnSelect.initialize":{"meta":{"summary":"","src":" \tthis.selector = dojo.widget.byId(this.selector);\n\t\tdojo.event.topic.subscribe(this.selector.eventNames.select, this, \"onSelect\");\n\t\tdojo.event.topic.subscribe(this.selector.eventNames.deselect, this, \"onDeselect\");\t","prototype":"dojo.widget.TreeEmphasizeOnSelect"}},"dojo.widget.TreeEmphasizeOnSelect.onSelect":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tmessage.node.viewEmphasize()\t\t","prototype":"dojo.widget.TreeEmphasizeOnSelect"}},"dojo.widget.TreeEmphasizeOnSelect.onDeselect":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tmessage.node.viewUnemphasize()","prototype":"dojo.widget.TreeEmphasizeOnSelect"}}}}},"dojo.widget.TreeExpandToNodeOnSelect":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.TreeExpandToNodeOnSelect":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["selector","controller","withSelected"],"variables":["selector","controller","withSelected"],"instance_variables":["selector","controller"]}},"dojo.widget.TreeExpandToNodeOnSelect.initialize":{"meta":{"summary":"","src":" \tthis.selector = dojo.widget.byId(this.selector);\n\t\tthis.controller = dojo.widget.byId(this.controller);\n\t\tdojo.event.topic.subscribe(this.selector.eventNames.select, this, \"onSelect\");\t","prototype":"dojo.widget.TreeExpandToNodeOnSelect"}},"dojo.widget.TreeExpandToNodeOnSelect.onSelectEvent":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.controller.expandToNode(message.node, this.withSelected)\t\t","prototype":"dojo.widget.TreeExpandToNodeOnSelect"}}}}},"dojo.widget.TreeExtension":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.TreeCommon"]},"functions":{"dojo.widget.TreeExtension":{"meta":{"summary":"","src":" \tthis.listenedTrees = {};","instance_variables":["listenedTrees"]}}}}},"dojo.widget.TreeLinkExtension":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.TreeExtension"]},"functions":{"dojo.widget.TreeLinkExtension":{"meta":{"prototype_chain":["dojo.widget.TreeExtension"],"call_chain":["dojo.widget.TreeExtension"],"prototype_variables":["listenTreeEvents"],"variables":["listenTreeEvents"],"summary":"","src":" \tthis.params = {};","instance_variables":["params"]}},"dojo.widget.TreeLinkExtension.listenTree":{"meta":{"summary":"","parameters":{"tree":{"type":""}},"src":" \tdojo.widget.TreeCommon.prototype.listenTree.call(this,tree);\n\t\tvar labelNode = tree.labelNodeTemplate;\n\t\tvar newLabel = this.makeALabel();\n\t\tdojo.html.setClass(newLabel, dojo.html.getClass(labelNode));\n\t\tlabelNode.parentNode.replaceChild(newLabel, labelNode);\t\t","call_chain":["dojo.widget.TreeCommon.prototype.listenTree"],"prototype":"dojo.widget.TreeLinkExtension"}},"dojo.widget.TreeLinkExtension.makeALabel":{"meta":{"summary":"","src":" \tvar newLabel = document.createElement(\"a\");\n\t\tfor(var key in this.params) {\n\t\t\tif (key in {}) continue;\n\t\t\tnewLabel.setAttribute(key, this.params[key]);\n\t\t}\n\t\treturn newLabel;","prototype":"dojo.widget.TreeLinkExtension"}},"dojo.widget.TreeLinkExtension.onAfterChangeTree":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar _this = this;\n\t\t\/\/ only for new nodes\n\t\tif (!message.oldTree) {\n\t\t\tthis.listenNode(message.node);\n\t\t}","prototype":"dojo.widget.TreeLinkExtension"}},"dojo.widget.TreeLinkExtension.listenNode":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tfor(var key in node.object) {\n\t\t\tif (key in {}) continue;\n\t\t\tnode.labelNode.setAttribute(key, node.object[key]);\n\t\t}","prototype":"dojo.widget.TreeLinkExtension"}}}}},"dojo.widget.TreeLoadingController":{"meta":{"requires":{"common":["dojo.widget.TreeBasicController","dojo.event.*","dojo.json","dojo.io.*"]},"functions":{"dojo.widget.TreeLoadingController":{"meta":{"prototype_chain":["dojo.widget.TreeBasicController"],"call_chain":["dojo.widget.TreeBasicController"],"prototype_variables":["RPCUrl","RPCActionParam","preventCache"],"variables":["RPCUrl","RPCActionParam","preventCache"],"instance_variables":["RPCUrl"]}},"dojo.widget.TreeLoadingController.RPCErrorHandler":{"meta":{"summary":"","parameters":{"type":{"type":""},"obj":{"type":""},"evt":{"type":""}},"src":" \talert( \"RPC Error: \" + (obj.message||\"no message\"));","prototype":"dojo.widget.TreeLoadingController"}},"dojo.widget.TreeLoadingController.getRPCUrl":{"meta":{"summary":"","parameters":{"action":{"type":""}},"src":" \tif (this.RPCUrl == \"local\") {\n\t\t\tvar dir = document.location.href.substr(0, document.location.href.lastIndexOf('\/'));\n\t\t\tvar localUrl = dir+\"\/\"+action;\n\t\t\t\/\/dojo.debug(localUrl);\n\t\t\treturn localUrl;\n\t\t}\n\t\tif (!this.RPCUrl) {\n\t\t\tdojo.raise(\"Empty RPCUrl: can't load\");\n\t\t}\n\t\treturn this.RPCUrl + ( this.RPCUrl.indexOf(\"?\") > -1 ? \"&\" : \"?\") + this.RPCActionParam+\"=\"+action;","prototype":"dojo.widget.TreeLoadingController"},"extra":{"variables":{"RPCUrl":{"type":"local","summary":"meant SOLELY for DEMO and LOCAL TESTS. May lead to widgetId collisions"}}}},"dojo.widget.TreeLoadingController.loadProcessResponse":{"meta":{"summary":"","parameters":{"node":{"type":""},"result":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tif (!dojo.lang.isUndefined(result.error)) {\n\t\t\tthis.RPCErrorHandler(\"server\", result.error);\n\t\t\treturn false;\n\t\t}\n\t\t\/\/dojo.debugShallow(result);\n\t\tvar newChildren = result;\n\t\tif (!dojo.lang.isArray(newChildren)) {\n\t\t\tdojo.raise('loadProcessResponse: Not array loaded: '+newChildren);\n\t\t}\n\t\tfor(var i=0; i<newChildren.length; i++) {\n\t\t\t\/\/ looks like dojo.widget.manager needs no special \"add\" command\n\t\t\tnewChildren[i] = dojo.widget.createWidget(node.widgetType, newChildren[i]);\n\t\t\tnode.addChild(newChildren[i]);\n\t\t}\n\t\t\/\/node.addAllChildren(newChildren);\n\t\tnode.state = node.loadStates.LOADED;\n\t\t\/\/dojo.debug(callFunc);\n\t\tif (dojo.lang.isFunction(callFunc)) {\n\t\t\tcallFunc.apply(dojo.lang.isUndefined(callObj) ? this : callObj, [node, newChildren]);\n\t\t}\n\t\t\/\/this.expand(node);","call_chain":["callFunc"],"prototype":"dojo.widget.TreeLoadingController"}},"dojo.widget.TreeLoadingController.getInfo":{"meta":{"summary":"","parameters":{"obj":{"type":""}},"src":" \treturn obj.getInfo();","prototype":"dojo.widget.TreeLoadingController"}},"dojo.widget.TreeLoadingController.runRPC":{"meta":{"summary":"","parameters":{"kw":{"type":""}},"src":" \tvar _this = this;\n\t\tvar handle = function(type, data, evt) {\n\t\t\t\/\/ unlock BEFORE any processing is done\n\t\t\t\/\/ so errorHandler may apply locking\n\t\t\tif (kw.lock) {\n\t\t\t\tdojo.lang.forEach(kw.lock,\n\t\t\t\t\tfunction(t) { t.unlock() }\n\t\t\t\t);\n\t\t\t}\n\t\t\tif(type == \"load\"){\n\t\t\t\tkw.load.call(this, data);\n\t\t\t}else{\n\t\t\t\tthis.RPCErrorHandler(type, data, evt);\n\t\t\t}\n\t\t}\n\t\tif (kw.lock) {\n\t\t\tdojo.lang.forEach(kw.lock,\n\t\t\t\tfunction(t) { t.lock() }\n\t\t\t);\n\t\t}\n\t\tdojo.io.bind({\n\t\t\turl: kw.url,\n\t\t\t\/* I hitch to get this.loadOkHandler *\/\n\t\t\thandle: dojo.lang.hitch(this, handle),\n\t\t\tmimetype: \"text\/json\",\n\t\t\tpreventCache: _this.preventCache,\n\t\t\tsync: kw.sync,\n\t\t\tcontent: { data: dojo.json.serialize(kw.params) }\n\t\t});","call_chain":["kw.load"],"prototype":"dojo.widget.TreeLoadingController"}},"dojo.widget.TreeLoadingController.loadRemote":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tvar _this = this;\n\t\tvar params = {\n\t\t\tnode: this.getInfo(node),\n\t\t\ttree: this.getInfo(node.tree)\n\t\t};\n\t\t\/\/dojo.debug(callFunc)\n\t\tthis.runRPC({\n\t\t\turl: this.getRPCUrl('getChildren'),\n\t\t\tload: function(result) {\n\t\t\t\t_this.loadProcessResponse(node, result, callObj, callFunc) ;\n\t\t\t},\n\t\t\tsync: sync,\n\t\t\tlock: [node],\n\t\t\tparams: params\n\t\t});","prototype":"dojo.widget.TreeLoadingController"}},"dojo.widget.TreeLoadingController.expand":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tif (node.state == node.loadStates.UNCHECKED && node.isFolder) {\n\t\t\tthis.loadRemote(node, sync,\n\t\t\t\tthis,\n\t\t\t\tfunction(node, newChildren) {\n\t\t\t\t\tthis.expand(node, sync, callObj, callFunc);\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tdojo.widget.TreeBasicController.prototype.expand.apply(this, arguments);","call_chain":["dojo.widget.TreeBasicController.prototype.expand"],"prototype":"dojo.widget.TreeLoadingController"}},"dojo.widget.TreeLoadingController.doMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":" \tif (newParent.isTreeNode && newParent.state == newParent.loadStates.UNCHECKED) {\n\t\t\tthis.loadRemote(newParent, true);\n\t\t}\n\t\treturn dojo.widget.TreeBasicController.prototype.doMove.apply(this, arguments);","call_chain":["dojo.widget.TreeBasicController.prototype.doMove"],"prototype":"dojo.widget.TreeLoadingController"}},"dojo.widget.TreeLoadingController.doCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tif (parent.state == parent.loadStates.UNCHECKED) {\n\t\t\tthis.loadRemote(parent, true);\n\t\t}\n\t\treturn dojo.widget.TreeBasicController.prototype.doCreateChild.apply(this, arguments);","call_chain":["dojo.widget.TreeBasicController.prototype.doCreateChild"],"prototype":"dojo.widget.TreeLoadingController"}}}}},"dojo.widget.TreeLoadingControllerV3":{"meta":{"requires":{"common":["dojo.widget.TreeBasicControllerV3","dojo.event.*","dojo.json","dojo.io.*","dojo.Deferred","dojo.DeferredList"]},"functions":{"dojo.Error":{"meta":{"prototype_chain":["Error"],"call_chain":["Error"],"summary":"","parameters":{"message":{"type":""},"extra":{"type":""}},"src":" \tthis.message = message;\n\t\tthis.extra = extra;\n\t\tthis.stack = (new Error()).stack;\t","instance_variables":["message","extra","stack"]}},"dojo.CommunicationError":{"meta":{"prototype_chain":["dojo.Error"],"call_chain":["dojo.Error"],"summary":"","src":" \tthis.name=\"CommunicationError\";","instance_variables":["name"]}},"dojo.LockedError":{"meta":{"prototype_chain":["dojo.Error"],"call_chain":["dojo.Error"],"summary":"","src":" \tthis.name=\"LockedError\";","instance_variables":["name"]}},"dojo.FormatError":{"meta":{"prototype_chain":["dojo.Error"],"call_chain":["dojo.Error"],"summary":"","src":" \tthis.name=\"FormatError\";","instance_variables":["name"]}},"dojo.RpcError":{"meta":{"prototype_chain":["dojo.Error"],"call_chain":["dojo.Error"],"summary":"","src":" \tthis.name=\"RpcError\";","instance_variables":["name"]}},"dojo.widget.TreeLoadingControllerV3":{"meta":{"prototype_chain":["dojo.widget.TreeBasicControllerV3"],"call_chain":["dojo.widget.TreeBasicControllerV3"],"prototype_variables":["RpcUrl","RpcActionParam","preventCache","batchExpandTimeout"],"variables":["RpcUrl","RpcActionParam","preventCache","batchExpandTimeout"],"instance_variables":["RpcUrl"]}},"dojo.widget.TreeLoadingControllerV3.checkValidRpcResponse":{"meta":{"summary":"","parameters":{"type":{"type":""},"obj":{"type":""}},"src":" \tif (type != \"load\") {\n\t\t\tvar extra = {}\t\t\t\t\n\t\t\tfor(var i=1; i<arguments.length;i++) {\n\t\t\t\tdojo.lang.mixin(extra, arguments[i]);\t\t\t\t\t\n\t\t\t}\n\t\t\treturn new dojo.CommunicationError(obj, extra);\t\t\t\t\n\t\t}\n\t\tif (typeof obj != 'object') {\n\t\t\treturn new dojo.FormatError(\"Wrong server answer format \"+(obj && obj.toSource ? obj.toSource() : obj)+\" type \"+(typeof obj), obj);\n\t\t}\n\t\t\/\/dojo.debugShallow(obj);\n\t\tif (!dojo.lang.isUndefined(obj.error)) {\n\t\t\treturn new dojo.RpcError(obj.error, obj);\n\t\t}\n\t\treturn false;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.getDeferredBindHandler":{"meta":{"summary":"create callback that calls the Deferred's callback method","parameters":{"deferred":{"type":"dojo.rpc.Deferred"}},"src":" \treturn dojo.lang.hitch(this, \n\t\t\tfunction(type, obj){\t\t\t\t\n\t\t\t\t\/\/dojo.debug(\"getDeferredBindHandler \"+obj.toSource());\n\t\t\t\tvar error = this.checkValidRpcResponse.apply(this, arguments);\n\t\t\t\tif (error) {\n\t\t\t\t\tdeferred.errback(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdeferred.callback(obj);\t\t\t\t\t\t\t\t\n\t\t\t}\n\t\t);","call_chain":["this.checkValidRpcResponse"],"prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.getRpcUrl":{"meta":{"summary":"","parameters":{"action":{"type":""}},"src":" \tif (this.RpcUrl == \"local\") {\n\t\t\tvar dir = document.location.href.substr(0, document.location.href.lastIndexOf('\/'));\n\t\t\tvar localUrl = dir+\"\/local\/\"+action;\n\t\t\t\/\/dojo.debug(localUrl);\n\t\t\treturn localUrl;\t\n\t\t}\n\t\tif (!this.RpcUrl) {\n\t\t\tdojo.raise(\"Empty RpcUrl: can't load\");\n\t\t}\n\t\tvar url = this.RpcUrl;\n\t\tif (url.indexOf(\"\/\") != 0) { \/\/ not absolute\n\t\t\tvar protocol = document.location.href.replace(\/:\\\/\\\/.*\/,'');\n\t\t\tvar prefix = document.location.href.substring(protocol.length+3);\n\t\t\tif (prefix.lastIndexOf(\"\/\") != prefix.length-1) {\n\t\t\t\tprefix = prefix.replace(\/\\\/[^\\\/]+$\/,'\/'); \/\/ strip file name\n\t\t\t}\n\t\t\tif (prefix.lastIndexOf(\"\/\") != prefix.length-1) {\n\t\t\t\tprefix = prefix+'\/'; \/\/ add \/ if not exists it all\n\t\t\t}\n\t\t\t\/\/dojo.debug(url);\n\t\t\turl = protocol + ':\/\/' + prefix + url;\n\t\t}\n\t\treturn url + (url.indexOf(\"?\")>-1 ? \"&\" : \"?\") + this.RpcActionParam+\"=\"+action;","prototype":"dojo.widget.TreeLoadingControllerV3"},"extra":{"variables":{"RpcUrl":{"type":"local","summary":"meant SOLELY for DEMO and LOCAL TESTS"}}}},"dojo.widget.TreeLoadingControllerV3.loadProcessResponse":{"meta":{"summary":"","parameters":{"node":{"type":""},"result":{"type":""}},"src":" \tif (!dojo.lang.isArray(result)) {\n\t\t\tthrow new dojo.FormatError('loadProcessResponse: Not array loaded: '+result);\n\t\t}\n\t\tnode.setChildren(result);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.runRpc":{"meta":{"summary":"","parameters":{"kw":{"type":""}},"src":" \tvar _this = this;\n\t\tvar deferred = new dojo.Deferred();\n\t\tdojo.io.bind({\n\t\t\turl: kw.url,\t\t\t\n\t\t\thandle: this.getDeferredBindHandler(deferred),\n\t\t\tmimetype: \"text\/javascript\",\n\t\t\tpreventCache: this.preventCache,\n\t\t\tsync: kw.sync,\n\t\t\tcontent: { data: dojo.json.serialize(kw.params) }\n\t\t});\n\t\treturn deferred;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.loadRemote":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""}},"src":" \tvar _this = this;\n\t\tvar params = {\n\t\t\tnode: this.getInfo(node),\n\t\t\ttree: this.getInfo(node.tree)\n\t\t};\n\t\tvar deferred = this.runRpc({\n\t\t\turl: this.getRpcUrl('getChildren'),\n\t\t\tsync: sync,\n\t\t\tparams: params\n\t\t});\n\t\tdeferred.addCallback(function(res) { return _this.loadProcessResponse(node,res) });\n\t\treturn deferred;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.recurseToLevel":{"meta":{"summary":"","parameters":{"widget":{"type":""},"level":{"type":""},"callFunc":{"type":""},"callObj":{"type":""},"skipFirst":{"type":""},"sync":{"type":""}},"src":" \tif (level == 0) return;\n\t\tif (!skipFirst) {\n\t\t\tvar deferred = callFunc.call(callObj, widget, sync);\n\t\t} else {\n\t\t\tvar deferred = dojo.Deferred.prototype.makeCalled();\n\t\t}\n\t\t\/\/dojo.debug(\"expand deferred saved \"+node+\" sync \"+sync);\n\t\tvar _this = this;\n\t\tvar recurseOnExpand = function() {\n\t\t\tvar children = widget.children;\n\t\t\tvar deferreds = [];\t\t\n\t\t\tfor(var i=0; i<children.length; i++) {\n\t\t\t\t\/\/dojo.debug(\"push recursive call for \"+node.children[i]+\" level \"+level);\n\t\t\t\tdeferreds.push(_this.recurseToLevel(children[i], level-1, callFunc, callObj, sync));\n\t\t\t}\n\t\t\treturn new dojo.DeferredList(deferreds);\n\t\t}\n\t\tdeferred.addCallback(recurseOnExpand);\n\t\treturn deferred;","call_chain":["callFunc"],"prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.expandToLevel":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"level":{"type":""},"sync":{"type":""}},"src":" \treturn this.recurseToLevel(nodeOrTree, nodeOrTree.isTree ? level+1 : level, this.expand, this, nodeOrTree.isTree, sync);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.loadToLevel":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"level":{"type":""},"sync":{"type":""}},"src":" \treturn this.recurseToLevel(nodeOrTree, nodeOrTree.isTree ? level+1 : level, this.loadIfNeeded, this, nodeOrTree.isTree, sync);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.loadAll":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"sync":{"type":""}},"src":" \treturn this.loadToLevel(nodeOrTree, Number.POSITIVE_INFINITY, sync);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.expand":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""}},"src":" \tvar _this = this;\n\t\tvar deferred = this.startProcessing(node);\n\t\tdeferred.addCallback(function() {\n\t\t\treturn _this.loadIfNeeded(node, sync);\n\t\t});\n\t\tdeferred.addCallback(function(res) {\n\t\t\t\/\/dojo.debug(\"Activated callback dojo.widget.TreeBasicControllerV3.prototype.expand(node); \"+res);\n\t\t\tdojo.widget.TreeBasicControllerV3.prototype.expand(node);\n\t\t\treturn res;\n\t\t});\n\t\tdeferred.addBoth(function(res) {\n\t\t\t_this.finishProcessing(node);\n\t\t\treturn res;\n\t\t});\n\t\treturn deferred;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.loadIfNeeded":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""}},"src":" \tvar deferred\n\t\tif (node.state == node.loadStates.UNCHECKED && node.isFolder && !node.children.length) {\n\t\t\t\/\/ populate deferred with other things to pre-do\n\t\t\tdeferred = this.loadRemote(node, sync);\t\t\t\n\t\t} else {\n\t\t\t\/* \"fake action\" here *\/\n\t\t\tdeferred = new dojo.Deferred();\n\t\t\tdeferred.callback();\n\t\t}\n\t\treturn deferred;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.runStages":{"meta":{"summary":"","parameters":{"check":{"type":""},"prepare":{"type":""},"make":{"type":""},"finalize":{"type":""},"expose":{"type":""},"args":{"type":""}},"src":" \tvar _this = this;\n\t\tif (check && !check.apply(this, args)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar deferred = dojo.Deferred.prototype.makeCalled();\n\t\tif (prepare) {\n\t\t\tdeferred.addCallback(function() {\n\t\t\t\treturn prepare.apply(_this, args);\n\t\t\t});\n\t\t}\n\t\t\/\/deferred.addCallback(function(res) { dojo.debug(\"Prepare fired \"+res); return res});\n\t\tif (make) {\n\t\t\tdeferred.addCallback(function() {\t\t\t\n\t\t\tvar res = make.apply(_this, args);\n\t\t\t\/\/res.addBoth(function(r) {dojo.debugShallow(r); return r;});\n\t\t\treturn res;\n\t\t\t});\n\t\t}\n\t\t\/\/deferred.addCallback(function(res) { dojo.debug(\"Main fired \"+res); return res});\n\t\tif (finalize) {\n\t\t\tdeferred.addBoth(function(res) {\n\t\t\t\tfinalize.apply(_this, args);\n\t\t\t\treturn res;\n\t\t\t});\n\t\t}\n\t\t\/\/ exposer does not affect result\n\t\tif (expose) {\n\t\t\tdeferred.addCallback(function(res) {\n\t\t\t\texpose.apply(_this, args);\n\t\t\t\treturn res;\n\t\t\t});\n\t\t}\n\t\treturn deferred;","call_chain":["check","prepare","make","finalize","expose"],"prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.startProcessing":{"meta":{"summary":"","parameters":{"nodesArray":{"type":""}},"src":" \tvar deferred = new dojo.Deferred();\n\t\tvar nodes = dojo.lang.isArray(nodesArray) ? nodesArray : arguments;\n\t\t\/*\n\t\tfor(var i=0;i<nodes.length;i++) {\n\t\t\tdojo.debug(nodes[i]);\n\t\t}*\/\n\t\tfor(var i=0;i<nodes.length;i++) {\n\t\t\tif (nodes[i].isLocked()) {\n\t\t\t\tdeferred.errback(new dojo.LockedError(\"item locked \"+nodes[i], nodes[i]));\n\t\t\t\t\/\/dojo.debug(\"startProcessing errback \"+arguments[i]);\n\t\t\t\treturn deferred;\n\t\t\t}\n\t\t\tif (nodes[i].isTreeNode) {\n\t\t\t\t\/\/dojo.debug(\"mark \"+nodes[i]);\n\t\t\t\tnodes[i].markProcessing();\n\t\t\t}\n\t\t\tnodes[i].lock();\n\t\t}\n\t\t\/\/dojo.debug(\"startProcessing callback\");\n\t\tdeferred.callback();\n\t\treturn deferred;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.finishProcessing":{"meta":{"summary":"","parameters":{"nodesArray":{"type":""}},"src":" \tvar nodes = dojo.lang.isArray(nodesArray) ? nodesArray : arguments;\n\t\tfor(var i=0;i<nodes.length;i++) {\n\t\t\tif (!nodes[i].hasLock()) {\n\t\t\t\t\/\/ is not processed. probably we locked it and then met bad node in startProcessing\n\t\t\t\tcontinue; \n\t\t\t}\n\t\t\t\/\/dojo.debug(\"has lock\");\t\n\t\t\tnodes[i].unlock();\n\t\t\tif (nodes[i].isTreeNode) {\n\t\t\t\t\/\/dojo.debug(\"unmark \"+nodes[i]);\n\t\t\t\tnodes[i].unmarkProcessing();\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.refreshChildren":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"sync":{"type":""}},"src":" \treturn this.runStages(null, this.prepareRefreshChildren, this.doRefreshChildren, this.finalizeRefreshChildren, this.exposeRefreshChildren, arguments);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.prepareRefreshChildren":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"sync":{"type":""}},"src":" \tvar deferred = this.startProcessing(nodeOrTree);\n\t\tnodeOrTree.destroyChildren();\n\t\tnodeOrTree.state = nodeOrTree.loadStates.UNCHECKED;\n\t\treturn deferred;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.doRefreshChildren":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"sync":{"type":""}},"src":" \treturn this.loadRemote(nodeOrTree, sync);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.finalizeRefreshChildren":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"sync":{"type":""}},"src":" \tthis.finishProcessing(nodeOrTree);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.exposeRefreshChildren":{"meta":{"summary":"","parameters":{"nodeOrTree":{"type":""},"sync":{"type":""}},"src":" \tnodeOrTree.expand();","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.move":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":",..."}},"src":" \treturn this.runStages(this.canMove, this.prepareMove, this.doMove, this.finalizeMove, this.exposeMove, arguments);\t\t\t","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.doMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":" \tchild.tree.move(child, newParent, index);\n\t\treturn true;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.prepareMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""},"sync":{"type":""}},"src":" \tvar deferred = this.startProcessing(newParent);\n\t\tdeferred.addCallback(dojo.lang.hitch(this, function() {\n\t\t\treturn this.loadIfNeeded(newParent, sync);\n\t\t}));\n\t\treturn deferred;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.finalizeMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""}},"src":" \tthis.finishProcessing(newParent);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.prepareCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""},"sync":{"type":""}},"src":" \tvar deferred = this.startProcessing(parent);\n\t\tdeferred.addCallback(dojo.lang.hitch(this, function() {\n\t\t\treturn this.loadIfNeeded(parent, sync);\n\t\t}));\n\t\treturn deferred;","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.finalizeCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""}},"src":" \tthis.finishProcessing(parent);","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.prepareClone":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""},"deep":{"type":""},"sync":{"type":""}},"src":" \tvar deferred = this.startProcessing(child, newParent);\n\t\tdeferred.addCallback(dojo.lang.hitch(this, function() {\n\t\t\treturn this.loadIfNeeded(newParent, sync);\n\t\t}));\t\t\n\t\treturn deferred;\t","prototype":"dojo.widget.TreeLoadingControllerV3"}},"dojo.widget.TreeLoadingControllerV3.finalizeClone":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""}},"src":" \tthis.finishProcessing(child, newParent);","prototype":"dojo.widget.TreeLoadingControllerV3"}}}}},"dojo.widget.TreeNode":{"meta":{"requires":{"common":["dojo.html.*","dojo.event.*","dojo.io.*"]},"functions":{"dojo.widget.TreeNode":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["widgetType","isContainer","lockLevel","templateString","childIconSrc","childIconFolderSrc","childIconDocumentSrc","childIcon","isTreeNode","objectId","afterLabel","afterLabelNode","expandIcon","title","object","isFolder","labelNode","titleNode","imgs","expandLevel","tree","depth","isExpanded","state","domNodeInitialized"],"variables":["widgetType","isContainer","lockLevel","templateString","childIconSrc","childIconFolderSrc","childIconDocumentSrc","childIcon","isTreeNode","objectId","afterLabel","afterLabelNode","expandIcon","title","object","isFolder","labelNode","titleNode","imgs","expandLevel","tree","depth","isExpanded","state","domNodeInitialized"],"instance_variables":["state","expandLevel","_markLoadingSavedIcon","expandIcon.src","isFolder","tree","depth","imgs","expandIcon","childIcon","domNodeInitialized","childIcon.src","childIcon.style.display","isExpanded","titleNode.innerHTML","afterLabelNode.innerHTML","actionsDisabled"],"summary":"","src":" this.actionsDisabled = [];"}},"dojo.widget.TreeNode.isFirstChild":{"meta":{"summary":"","src":" \treturn this.getParentIndex() == 0 ? true: false;","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.isLastChild":{"meta":{"summary":"","src":" \treturn this.getParentIndex() == this.parent.children.length-1 ? true : false;","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.lock":{"meta":{"summary":"","src":" lock: function(){ return this.tree.lock.apply(this, arguments)    ","call_chain":["this.tree.lock"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.unlock":{"meta":{"summary":"","src":" unlock: function(){ return this.tree.unlock.apply(this, arguments)    ","call_chain":["this.tree.unlock"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.isLocked":{"meta":{"summary":"","src":" isLocked: function(){ return this.tree.isLocked.apply(this, arguments)    ","call_chain":["this.tree.isLocked"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.cleanLock":{"meta":{"summary":"","src":" cleanLock: function(){ return this.tree.cleanLock.apply(this, arguments)    ","call_chain":["this.tree.cleanLock"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.actionIsDisabled":{"meta":{"summary":"","parameters":{"action":{"type":""}},"src":" \tvar _this = this;\n\t\tvar disabled = false;\n\t\tif (this.tree.strictFolders && action == this.actions.ADDCHILD && !this.isFolder) {\n\t\t\tdisabled = true;\n\t\t}\n\t\tif (dojo.lang.inArray(_this.actionsDisabled, action)) {\n\t\t\tdisabled = true;\n\t\t}\n\t\tif (this.isLocked()) {\n\t\t\tdisabled = true;\n\t\t}\n\t\treturn disabled;","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.getInfo":{"meta":{"summary":"","src":" \tvar info = {\n\t\t\twidgetId: this.widgetId,\n\t\t\tobjectId: this.objectId,\n\t\t\tindex: this.getParentIndex(),\n\t\t\tisFolder: this.isFolder\n\t\t}\n\t\treturn info;","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":"\t\tthis.state = this.loadStates.UNCHECKED;\n\t\tfor(var i=0; i<this.actionsDisabled.length; i++) {\n\t\t\tthis.actionsDisabled[i] = this.actionsDisabled[i].toUpperCase();\n\t\t}\n\t\tthis.expandLevel = parseInt(this.expandLevel);","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.adjustDepth":{"meta":{"summary":"","parameters":{"depthDiff":{"type":""}},"src":" \tfor(var i=0; i<this.children.length; i++) {\n\t\t\tthis.children[i].adjustDepth(depthDiff);\n\t\t}\n\t\tthis.depth += depthDiff;\n\t\tif (depthDiff>0) {\n\t\t\tfor(var i=0; i<depthDiff; i++) {\n\t\t\t\tvar img = this.tree.makeBlankImg();\n\t\t\t\tthis.imgs.unshift(img);\n\t\t\t\t\/\/dojo.debugShallow(this.domNode);\n\t\t\t\tdojo.html.insertBefore(this.imgs[0], this.domNode.firstChild);\n\t\t\t}\n\t\t}\n\t\tif (depthDiff<0) {\n\t\t\tfor(var i=0; i<-depthDiff;i++) {\n\t\t\t\tthis.imgs.shift();\n\t\t\t\tdojo.html.removeNode(this.domNode.firstChild);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.markLoading":{"meta":{"summary":"","src":" \tthis._markLoadingSavedIcon = this.expandIcon.src;\n\t\tthis.expandIcon.src = this.tree.expandIconSrcLoading;","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.unMarkLoading":{"meta":{"summary":"","src":" \tif (!this._markLoadingSavedIcon) return;\n\t\tvar im = new Image();\n\t\tim.src = this.tree.expandIconSrcLoading;\n\t\t\/\/dojo.debug(\"Unmark \"+this.expandIcon.src+\" : \"+im.src);\n\t\tif (this.expandIcon.src == im.src) {\n\t\t\tthis.expandIcon.src = this._markLoadingSavedIcon;\n\t\t}\n\t\tthis._markLoadingSavedIcon = null;","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.setFolder":{"meta":{"summary":"","src":" \tdojo.event.connect(this.expandIcon, 'onclick', this, 'onTreeClick');\n\t\tthis.expandIcon.src = this.isExpanded ? this.tree.expandIconSrcMinus : this.tree.expandIconSrcPlus;\n\t\tthis.isFolder = true;","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.createDOMNode":{"meta":{"summary":"","parameters":{"tree":{"type":""},"depth":{"type":""}},"src":" \tthis.tree = tree;\n\t\tthis.depth = depth;\n\t\t\/\/\n\t\t\/\/ add the tree icons\n\t\t\/\/\n\t\tthis.imgs = [];\n\t\tfor(var i=0; i<this.depth+1; i++){\n\t\t\tvar img = this.tree.makeBlankImg();\n\t\t\tthis.domNode.insertBefore(img, this.labelNode);\n\t\t\tthis.imgs.push(img);\n\t\t}\n\t\tthis.expandIcon = this.imgs[this.imgs.length-1];\n\t\tthis.childIcon = this.tree.makeBlankImg();\n\t\t\/\/ add to images before the title\n\t\tthis.imgs.push(this.childIcon);\n\t\tdojo.html.insertBefore(this.childIcon, this.titleNode);\n\t\t\/\/ node with children(from source html) becomes folder on build stage.\n\t\tif (this.children.length || this.isFolder) {\n\t\t\tthis.setFolder();\n\t\t}\n\t\telse {\n\t\t\t\/\/ leaves are always loaded\n\t\t\t\/\/dojo.debug(\"Set \"+this+\" state to loaded\");\n\t\t\tthis.state = this.loadStates.LOADED;\n\t\t}\n\t\tdojo.event.connect(this.childIcon, 'onclick', this, 'onIconClick');\n\t\t\/\/\n\t\t\/\/ create the child rows\n\t\t\/\/\n\t\tfor(var i=0; i<this.children.length; i++){\n\t\t\tthis.children[i].parent = this;\n\t\t\tvar node = this.children[i].createDOMNode(this.tree, this.depth+1);\n\t\t\tthis.containerNode.appendChild(node);\n\t\t}\n\t\tif (this.children.length) {\n\t\t\tthis.state = this.loadStates.LOADED;\n\t\t}\n\t\tthis.updateIcons();\n\t\tthis.domNodeInitialized = true;\n\t\tdojo.event.topic.publish(this.tree.eventNames.createDOMNode, { source: this } );\n\t\treturn this.domNode;","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.onTreeClick":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.event.topic.publish(this.tree.eventNames.treeClick, { source: this, event: e });","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.onIconClick":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.event.topic.publish(this.tree.eventNames.iconClick, { source: this, event: e });","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.onTitleClick":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tdojo.event.topic.publish(this.tree.eventNames.titleClick, { source: this, event: e });","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.markSelected":{"meta":{"summary":"","src":" \tdojo.html.addClass(this.titleNode, 'dojoTreeNodeLabelSelected');","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.unMarkSelected":{"meta":{"summary":"","src":" \tdojo.html.removeClass(this.titleNode, 'dojoTreeNodeLabelSelected');","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.updateExpandIcon":{"meta":{"summary":"","src":" \tif (this.isFolder){\n\t\t\tthis.expandIcon.src = this.isExpanded ? this.tree.expandIconSrcMinus : this.tree.expandIconSrcPlus;\n\t\t} else {\n\t\t\tthis.expandIcon.src = this.tree.blankIconSrc;\n\t\t}","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.updateExpandGrid":{"meta":{"summary":"","src":" \tif (this.tree.showGrid){\n\t\t\tif (this.depth){\n\t\t\t\tthis.setGridImage(-2, this.isLastChild() ? this.tree.gridIconSrcL : this.tree.gridIconSrcT);\n\t\t\t}else{\n\t\t\t\tif (this.isFirstChild()){\n\t\t\t\t\tthis.setGridImage(-2, this.isLastChild() ? this.tree.gridIconSrcX : this.tree.gridIconSrcY);\n\t\t\t\t}else{\n\t\t\t\t\tthis.setGridImage(-2, this.isLastChild() ? this.tree.gridIconSrcL : this.tree.gridIconSrcT);\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tthis.setGridImage(-2, this.tree.blankIconSrc);\n\t\t}","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.updateChildGrid":{"meta":{"summary":"","src":" \tif ((this.depth || this.tree.showRootGrid) && this.tree.showGrid){\n\t\t\tthis.setGridImage(-1, (this.children.length && this.isExpanded) ? this.tree.gridIconSrcP : this.tree.gridIconSrcC);\n\t\t}else{\n\t\t\tif (this.tree.showGrid && !this.tree.showRootGrid){\n\t\t\t\tthis.setGridImage(-1, (this.children.length && this.isExpanded) ? this.tree.gridIconSrcZ : this.tree.blankIconSrc);\n\t\t\t}else{\n\t\t\t\tthis.setGridImage(-1, this.tree.blankIconSrc);\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.updateParentGrid":{"meta":{"summary":"","src":" \tvar parent = this.parent;\n\t\t\/\/dojo.debug(\"updateParentGrid \"+this);\n\t\tfor(var i=0; i<this.depth; i++){\n\t\t\t\/\/dojo.debug(\"Parent \"+parent);\n\t\t\tvar idx = this.imgs.length-(3+i);\n\t\t\tvar img = (this.tree.showGrid && !parent.isLastChild()) ? this.tree.gridIconSrcV : this.tree.blankIconSrc;\n\t\t\t\/\/dojo.debug(\"Image \"+img+\" for \"+idx);\n\t\t\tthis.setGridImage(idx, img);\n\t\t\tparent = parent.parent;\n\t\t}","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.updateExpandGridColumn":{"meta":{"summary":"","src":" \tif (!this.tree.showGrid) return;\n\t\tvar _this = this;\n\t\tvar icon = this.isLastChild() ? this.tree.blankIconSrc : this.tree.gridIconSrcV;\n\t\tdojo.lang.forEach(_this.getDescendants(),\n\t\t\tfunction(node) { node.setGridImage(_this.depth, icon); }\n\t\t);\n\t\tthis.updateExpandGrid();","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.updateIcons":{"meta":{"summary":"","src":"\t\t\/\/dojo.debug(\"Update icons for \"+this)\n\t\t\/\/dojo.debug(this.isFolder)\n\t\tthis.imgs[0].style.display = this.tree.showRootGrid ? 'inline' : 'none';\n\t\t\/\/\n\t\t\/\/ set the expand icon\n\t\t\/\/\n\t\t\/\/\n\t\t\/\/ set the child icon\n\t\t\/\/\n\t\tthis.buildChildIcon();\n\t\tthis.updateExpandGrid();\n\t\tthis.updateChildGrid();\n\t\tthis.updateParentGrid();\n\t\tdojo.profile.stop(\"updateIcons\")","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.buildChildIcon":{"meta":{"summary":"","src":" \tif(this.childIconSrc){\n\t\t\tthis.childIcon.src = this.childIconSrc;\n\t\t}\n\t\tthis.childIcon.style.display = this.childIconSrc ? 'inline' : 'none';","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.setGridImage":{"meta":{"summary":"","parameters":{"idx":{"type":""},"src":{"type":""}},"src":" \tif (idx < 0){\n\t\t\tidx = this.imgs.length + idx;\n\t\t}\n\t\t\/\/if (idx >= this.imgs.length-2) return;\n\t\tthis.imgs[idx].style.backgroundImage = 'url(' + src + ')';","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.updateIconTree":{"meta":{"summary":"","src":" \tthis.tree.updateIconTree.call(this);","call_chain":["this.tree.updateIconTree"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.expand":{"meta":{"summary":"","src":" \tif (this.isExpanded) return;\n\t\tif (this.children.length) {\n\t\t\tthis.showChildren();\n\t\t}\n\t\tthis.isExpanded = true;\n\t\tthis.updateExpandIcon();\n\t\tdojo.event.topic.publish(this.tree.eventNames.expand, {source: this} );","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.collapse":{"meta":{"summary":"","src":" \tif (!this.isExpanded) return;\n\t\tthis.hideChildren();\n\t\tthis.isExpanded = false;\n\t\tthis.updateExpandIcon();\n\t\tdojo.event.topic.publish(this.tree.eventNames.collapse, {source: this} );","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.hideChildren":{"meta":{"summary":"","src":" \tthis.tree.toggleObj.hide(\n\t\t\tthis.containerNode, this.toggleDuration, this.explodeSrc, dojo.lang.hitch(this, \"onHide\")\n\t\t);\n\t\t\/* if dnd is in action, recalculate changed coordinates *\/\n\t\tif(dojo.exists(dojo, 'dnd.dragManager.dragObjects') && dojo.dnd.dragManager.dragObjects.length) {\n\t\t\tdojo.dnd.dragManager.cacheTargetLocations();\n\t\t}","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.showChildren":{"meta":{"summary":"","src":" \tthis.tree.toggleObj.show(\n\t\t\tthis.containerNode, this.toggleDuration, this.explodeSrc, dojo.lang.hitch(this, \"onShow\")\n\t\t);\n\t\t\/* if dnd is in action, recalculate changed coordinates *\/\n\t\tif(dojo.exists(dojo, 'dnd.dragManager.dragObjects') && dojo.dnd.dragManager.dragObjects.length) {\n\t\t\tdojo.dnd.dragManager.cacheTargetLocations();\n\t\t}","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.addChild":{"meta":{"summary":"","src":" \treturn this.tree.addChild.apply(this, arguments);","call_chain":["this.tree.addChild"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.doAddChild":{"meta":{"summary":"","src":" \treturn this.tree.doAddChild.apply(this, arguments);","call_chain":["this.tree.doAddChild"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.edit":{"meta":{"summary":"","parameters":{"props":{"type":""}},"src":" \tdojo.lang.mixin(this, props);\n\t\tif (props.title) {\n\t\t\tthis.titleNode.innerHTML = this.title;\n\t\t}\n\t\tif (props.afterLabel) {\n\t\t\tthis.afterLabelNode.innerHTML = this.afterLabel;\n\t\t}\n\t\tif (props.childIconSrc) {\n\t\t\tthis.buildChildIcon();\n\t\t}","prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.removeNode":{"meta":{"summary":"","src":" removeNode: function(){ return this.tree.removeNode.apply(this, arguments)    ","call_chain":["this.tree.removeNode"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.doRemoveNode":{"meta":{"summary":"","src":" doRemoveNode: function(){ return this.tree.doRemoveNode.apply(this, arguments)    ","call_chain":["this.tree.doRemoveNode"],"prototype":"dojo.widget.TreeNode"}},"dojo.widget.TreeNode.toString":{"meta":{"summary":"","src":" \treturn \"[\"+this.widgetType+\" Tree:\"+this.tree+\" ID:\"+this.widgetId+\" Title:\"+this.title+\"]\";","prototype":"dojo.widget.TreeNode"}}},"objects":{"dojo.widget.TreeNode.loadStates":{"meta":{"variables":["UNCHECKED","LOADING","LOADED"]}},"dojo.widget.TreeNode.actions":{"meta":{"variables":["MOVE","REMOVE","EDIT","ADDCHILD"]}}}}},"dojo.widget.TreeNodeV3":{"meta":{"requires":{"common":["dojo.html.*","dojo.event.*","dojo.io.*","dojo.widget.TreeWithNode"]},"functions":{"dojo.widget.TreeNodeV3":{"meta":{"prototype_variables":["tryLazyInit","labelClass","contentClass","expandNode","labelNode","nodeDocType","selected","cloneProperties","isTreeNode","title","isFolder","contentNode","expandClass","isExpanded","containerNode"],"variables":["tryLazyInit","labelClass","contentClass","expandNode","labelNode","nodeDocType","selected","cloneProperties","isTreeNode","title","isFolder","contentNode","expandClass","isExpanded","containerNode"],"instance_variables":["markProcessingSavedClass","tree","domNode","expandNode","contentNode","labelNode","domNode.widgetId","labelNode.innerHTML","isFolder","containerNode","parent","tryLazyInit","isExpanded","actionsDisabled","object"],"summary":"","src":" \tthis.actionsDisabled = [];\n\t        this.object = {};"}},"dojo.widget.TreeNodeV3.getnodeDocType":{"meta":{"summary":"","src":" \treturn this.nodeDocType;","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.clone":{"meta":{"summary":"","parameters":{"deep":{"type":""}},"src":" \tvar ret = new this.constructor();\n\t\t\/\/dojo.debug(\"start cloning props \"+this);\n\t\tfor(var i=0; i<this.cloneProperties.length; i++) {\n\t\t\tvar prop = this.cloneProperties[i];\n\t\t\t\/\/dojo.debug(\"cloning \"+prop+ \":\" +this[prop]);\n\t\t\tret[prop] = dojo.lang.shallowCopy(this[prop], true);\t\t\t\n\t\t}\n\t\tif (this.tree.unsetFolderOnEmpty && !deep && this.isFolder) {\n\t\t\tret.isFolder = false;\n\t\t}\n\t\t\/\/dojo.debug(\"cloned props \"+this);\n\t\tret.toggleObj = this.toggleObj;\n\t\tdojo.widget.manager.add(ret);\n\t\tret.tree = this.tree;\n\t\tret.buildRendering({},{});\n\t\tret.initialize({},{});\n\t\tif (deep && this.children.length) {\n\t\t\t\/\/dojo.debug(\"deeper copy start\");\n\t\t\tfor(var i=0; i<this.children.length; i++) {\n\t\t\t\tvar child = this.children[i];\n\t\t\t\t\/\/dojo.debug(\"copy child \"+child);\n\t\t\t\tif (child.clone) {\n\t\t\t\t\tret.children.push(child.clone(deep));\n\t\t\t\t} else {\n\t\t\t\t\tret.children.push(dojo.lang.shallowCopy(child, deep));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\/\/dojo.debug(\"deeper copy end\");\n\t\t\tret.setChildren();\n\t\t}\n\t\treturn ret;","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.markProcessing":{"meta":{"summary":"","src":" \tthis.markProcessingSavedClass = dojo.html.getClass(this.expandNode);\n\t\tdojo.html.setClass(this.expandNode, this.tree.classPrefix+'ExpandLoading');\t\t\t","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.unmarkProcessing":{"meta":{"summary":"","src":" \tdojo.html.setClass(this.expandNode, this.markProcessingSavedClass);\t\t\t","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.buildRendering":{"meta":{"summary":"","parameters":{"args":{"type":""},"fragment":{"type":""},"parent":{"type":""}},"src":" \tif (args.tree) {\n\t\t\tthis.tree = dojo.lang.isString(args.tree) ? dojo.widget.manager.getWidgetById(args.tree) : args.tree;\t\t\t\n\t\t} else if (parent && parent.tree) {\n\t\t\tthis.tree = parent.tree;\n\t\t} \n\t\tif (!this.tree) {\n\t\t\tdojo.raise(\"Can't evaluate tree from arguments or parent\");\n\t\t}\n\t\t\/\/dojo.profile.start(\"buildRendering - cloneNode\");\n\t\tthis.domNode = this.tree.nodeTemplate.cloneNode(true);\n\t\tthis.expandNode = this.domNode.firstChild;\n\t\tthis.contentNode = this.domNode.childNodes[1];\n\t\tthis.labelNode = this.contentNode.firstChild;\n\t\tif (this.labelClass) {\n\t\t\tdojo.html.addClass(this.labelNode, this.labelClass);\n\t\t}\n\t\tif (this.contentClass) {\n\t\t\tdojo.html.addClass(this.contentNode, this.contentClass);\n\t\t}\n\t\t\/\/dojo.profile.end(\"buildRendering - cloneNode\");\n\t\tthis.domNode.widgetId = this.widgetId;\n\t\t\/\/dojo.profile.start(\"buildRendering - innerHTML\");\n\t\tthis.labelNode.innerHTML = this.title;\n\t\t\/\/dojo.profile.end(\"buildRendering - innerHTML\");","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.getInfo":{"meta":{"summary":"","src":" \tvar info = {\n\t\t\twidgetId: this.widgetId,\n\t\t\tobjectId: this.objectId,\n\t\t\tindex: this.getParentIndex()\n\t\t}\n\t\treturn info;","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.setFolder":{"meta":{"summary":"","src":" \tthis.isFolder = true;\n\t\tthis.viewSetExpand();\n\t\tif (!this.containerNode) { \/\/ maybe this node was unfolderized and still has container\n\t\t\tthis.viewAddContainer(); \/\/ all folders have container.\n\t\t}\n\t\t\/\/dojo.debug(\"publish \"+this.tree.eventNames.setFolder);\n\t\tdojo.event.topic.publish(this.tree.eventNames.afterSetFolder, { source: this });","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""},"parent":{"type":""}},"src":" \tif (args.isFolder) {\n\t\t\tthis.isFolder = true;\n\t\t}\n\t\tif (this.children.length || this.isFolder) {\n\t\t\t\/\/dojo.debug(\"children found\");\n\t\t\t\/\/dojo.debug(this.children);\n\t\t\t\/\/dojo.debug(\"isFolder \"+args.isFolder);\n\t\t\t\/\/ viewSetExpand for Folder is set here also\n\t\t\tthis.setFolder();\t\t\t\n\t\t} else {\n\t\t\t\/\/ set expandicon for leaf \t\n\t\t\tthis.viewSetExpand();\n\t\t}\n\t\tfor(var i=0; i<this.actionsDisabled.length;i++) {\n\t\t\tthis.actionsDisabled[i] = this.actionsDisabled[i].toUpperCase();\n\t\t}\n\t\t\/\/dojo.debug(\"publish \"+this.tree.eventNames.changeTree);\n\t\tdojo.event.topic.publish(this.tree.eventNames.afterChangeTree, {oldTree:null, newTree:this.tree, node:this} );\n\t\t\/\/dojo.profile.end(\"initialize\");\n\t\t\/\/dojo.debug(\"initialize out \"+this);\n\t\t\/\/dojo.debug(this+\" parent \"+parent);","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.unsetFolder":{"meta":{"summary":"","src":" \tthis.isFolder = false;\n\t\tthis.viewSetExpand();\t\t\n\t\tdojo.event.topic.publish(this.tree.eventNames.afterUnsetFolder, { source: this });","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.insertNode":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""}},"src":" \tif (!index) index = 0;\n\t\t\/\/dojo.debug(\"insertNode \"+this+\" parent \"+parent+\" before \"+index);\n\t\tif (index==0) {\n\t\t\tdojo.html.prependChild(this.domNode, parent.containerNode);\n\t\t} else {\n\t\t\tdojo.html.insertAfter(this.domNode, parent.children[index-1].domNode);\n\t\t}","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.updateTree":{"meta":{"summary":"","parameters":{"newTree":{"type":""}},"src":" \tif (this.tree === newTree) {\n\t\t\treturn;\n\t\t}\n\t\tvar oldTree = this.tree;\n\t\tdojo.lang.forEach(this.getDescendants(),\n\t\t\tfunction(elem) {\t\t\t\n\t\t\t\telem.tree = newTree;\t\t\t\n\t\t});\n\t\t\/**\n\t\t * UNTESTED\n\t\t * changes class prefix for all domnodes when moving between trees\n\t\t *\/\n\t\tif (oldTree.classPrefix != newTree.classPrefix) {\n\t\t\tvar stack = [this.domNode]\n\t\t\tvar elem;\n\t\t\tvar reg = new RegExp(\"(^|\\\\s)\"+oldTree.classPrefix, \"g\");\n\t\t\twhile (elem = stack.pop()) {\n\t\t\t\tfor(var i=0; i<elem.childNodes.length; i++) {\n\t\t\t\t\tvar childNode = elem.childNodes[i]\n\t\t\t\t\tif (childNode.nodeDocType != 1) continue;\n\t\t\t\t\t\/\/ change prefix for classes\n\t\t\t\t\tdojo.html.setClass(childNode, dojo.html.getClass(childNode).replace(reg, '$1'+newTree.classPrefix));\n\t\t\t\t\tstack.push(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar message = {oldTree:oldTree, newTree:newTree, node:this}\n\t\tdojo.event.topic.publish(this.tree.eventNames.afterChangeTree, message );\t\t\n\t\tdojo.event.topic.publish(newTree.eventNames.afterChangeTree, message );","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.addedTo":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"dontPublishEvent":{"type":""}},"src":" \tif (this.tree !== parent.tree) {\n\t\t\tthis.updateTree(parent.tree);\n\t\t}\n\t\tif (parent.isTreeNode) {\n\t\t\tif (!parent.isFolder) {\n\t\t\t\t\/\/dojo.debug(\"folderize parent \"+parent);\n\t\t\t\tparent.setFolder();\n\t\t\t\tparent.state = parent.loadStates.LOADED;\n\t\t\t}\n\t\t}\n\t\tvar siblingsCount = parent.children.length;\n\t\t\/\/ setFolder works BEFORE insertNode\n\t\tthis.insertNode(parent, index);\n\t\tthis.viewAddLayout();\n\t\t\/\/dojo.debug(\"siblings \"+parent.children);\n\t\tif (siblingsCount > 1) {\n\t\t\tif (index == 0 && parent.children[1] instanceof dojo.widget.Widget) {\n\t\t\t\tparent.children[1].viewUpdateLayout();\t\t\t\t\n\t\t\t}\n\t\t\tif (index == siblingsCount-1 && parent.children[siblingsCount-2] instanceof dojo.widget.Widget) {\n\t\t\t\tparent.children[siblingsCount-2].viewUpdateLayout();\t\t\t\n\t\t\t}\n\t\t} else if (parent.isTreeNode) {\n\t\t\t\/\/ added as the first child\n\t\t\t\/\/dojo.debug(\"added as first\");\n\t\t\tparent.viewSetHasChildren();\n\t\t}\n\t\tif (!dontPublishEvent) {\n\t\t\tvar message = {\n\t\t\t\tchild: this,\n\t\t\t\tindex: index,\n\t\t\t\tparent: parent\n\t\t\t}\n\t\t\tdojo.event.topic.publish(this.tree.eventNames.afterAddChild, message);\n\t\t}\n\t\t\/\/dojo.profile.end(\"addedTo\");","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.createSimple":{"meta":{"summary":"","parameters":{"args":{"type":""},"parent":{"type":""}},"src":" \tif (args.tree) {\n\t\t\tvar tree = args.tree;\n\t\t} else if (parent) {\n\t\t\tvar tree = parent.tree;\n\t\t} else {\n\t\t\tdojo.raise(\"createSimple: can't evaluate tree\");\n\t\t}\n\t\ttree = dojo.widget.byId(tree);\n\t\t\/\/dojo.debug(tree);\n\t\tvar treeNode = new tree.defaultChildWidget(); \n\t\t\/\/dojo.profile.end(this.widgetType+\" createSimple constructor\");\n\t\t\/\/dojo.profile.start(this.widgetType+\" createSimple mixin\");\t\t\n\t\tfor(var x in args){ \/\/ fastMixIn\t\t\t\n\t\t\ttreeNode[x] = args[x];\n\t\t}\n\t\t\/\/dojo.profile.end(this.widgetType+\" createSimple mixin\");\n\t\t\/\/ HtmlWidget.postMixIn \n\t\ttreeNode.toggleObj = dojo.lfx.toggle[treeNode.toggle.toLowerCase()] || dojo.lfx.toggle.plain;\n\t\t\/\/dojo.profile.start(this.widgetType + \" manager\");\n\t\tdojo.widget.manager.add(treeNode);\n\t\t\/\/dojo.profile.end(this.widgetType + \" manager\");\n\t\t\/\/dojo.profile.start(this.widgetType + \" buildRendering\");\n\t\ttreeNode.buildRendering(args, {}, parent);\t\t\n\t\t\/\/dojo.profile.end(this.widgetType + \" buildRendering\");\n\t\ttreeNode.initialize(args, {}, parent);\n\t\t\/\/dojo.profile.end(this.widgetType+\"createSimple\");\n\t\tif (treeNode.parent) {\n\t\t\tdelete dojo.widget.manager.topWidgets[treeNode.widgetId];\n\t\t}\n\t\treturn treeNode;","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewUpdateLayout":{"meta":{"summary":"","src":"\t\tthis.viewRemoveLayout();\n\t\tthis.viewAddLayout();\n\t\t\/\/dojo.profile.end(\"viewUpdateLayout\");\t","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewAddContainer":{"meta":{"summary":"","src":" \tthis.containerNode = this.tree.containerNodeTemplate.cloneNode(true);\n\t\tthis.domNode.appendChild(this.containerNode);","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewAddLayout":{"meta":{"summary":"","src":" \tif (this.parent[\"isTree\"]) {\n\t\t\t\/\/dojo.debug(\"Parent isTree => add isTreeRoot\");\n\t\t\t\/\/ use setClass, not addClass for speed\n\t\t\tdojo.html.setClass(this.domNode, dojo.html.getClass(this.domNode) + ' '+this.tree.classPrefix+'IsRoot')\n\t\t}\n\t\t\/\/dojo.debug(this.parent.children.length);\n\t\t\/\/dojo.debug(this.parent.children[this.parent.children.length-1]);\n\t\tif (this.isLastChild()) {\n\t\t\t\/\/dojo.debug(\"Checked last node for \"+this);\n\t\t\t\/\/dojo.debug(\"Parent last is \"+this.parent.children[this.parent.children.length-1]);\n\t\t\t\/\/dojo.debug(\"last node => add isTreeLast for \"+this);\n\t\t\tdojo.html.setClass(this.domNode, dojo.html.getClass(this.domNode) + ' '+this.tree.classPrefix+'IsLast')\t\t\t\n\t\t}\n\t\t\/\/dojo.profile.end(\"viewAddLayout\");\n\t\t\/\/dojo.debug(\"viewAddLayout out\");","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewRemoveLayout":{"meta":{"summary":"","src":" \tdojo.html.removeClass(this.domNode, this.tree.classPrefix+\"IsRoot\");\n\t\tdojo.html.removeClass(this.domNode, this.tree.classPrefix+\"IsLast\");\n\t\t\/\/dojo.profile.end(\"viewRemoveLayout\");","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewGetExpandClass":{"meta":{"summary":"","src":" \tif (this.isFolder) {\t\t\t\n\t\t\treturn this.isExpanded ? \"ExpandOpen\" : \"ExpandClosed\";\n\t\t} else {\n\t\t\treturn \"ExpandLeaf\";\n\t\t}","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewSetExpand":{"meta":{"summary":"","src":" \tvar expand = this.tree.classPrefix+this.viewGetExpandClass();\n\t\tvar reg = new RegExp(\"(^|\\\\s)\"+this.tree.classPrefix+\"Expand\\\\w+\",'g');\t\t\t\n\t\tdojo.html.setClass(this.domNode, dojo.html.getClass(this.domNode).replace(reg,'') + ' '+expand);\n\t\t\/\/dojo.debug(dojo.html.getClass(this.domNode))\n\t\t\/\/dojo.profile.end(\"viewSetExpand\");\n\t\tthis.viewSetHasChildrenAndExpand();","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewGetChildrenClass":{"meta":{"summary":"","src":" \treturn 'Children'+(this.children.length ? 'Yes' : 'No');","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewSetHasChildren":{"meta":{"summary":"","src":" \tvar clazz = this.tree.classPrefix+this.viewGetChildrenClass();\n\t\tvar reg = new RegExp(\"(^|\\\\s)\"+this.tree.classPrefix+\"Children\\\\w+\",'g');\t\t\t\n\t\tdojo.html.setClass(this.domNode, dojo.html.getClass(this.domNode).replace(reg,'') + ' '+clazz);\n\t\tthis.viewSetHasChildrenAndExpand();","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewSetHasChildrenAndExpand":{"meta":{"summary":"","src":" \tvar clazz = this.tree.classPrefix+'State'+this.viewGetChildrenClass()+'-'+this.viewGetExpandClass();\n\t\tvar reg = new RegExp(\"(^|\\\\s)\"+this.tree.classPrefix+\"State[\\\\w-]+\",'g');\t\t\t\n\t\tdojo.html.setClass(this.domNode, dojo.html.getClass(this.domNode).replace(reg,'') + ' '+clazz);\t\t","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewUnfocus":{"meta":{"summary":"","src":" \tdojo.html.removeClass(this.labelNode, this.tree.classPrefix+\"LabelFocused\");","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewFocus":{"meta":{"summary":"","src":" \tdojo.html.addClass(this.labelNode, this.tree.classPrefix+\"LabelFocused\");","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewEmphasize":{"meta":{"summary":"","src":"        dojo.html.clearSelection(this.labelNode);\n\t\tdojo.html.addClass(this.labelNode, this.tree.classPrefix+'NodeEmphasized');","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.viewUnemphasize":{"meta":{"summary":"","src":"        dojo.html.removeClass(this.labelNode, this.tree.classPrefix+'NodeEmphasized');","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.detach":{"meta":{"summary":"","src":" \tif (!this.parent) return;\n\t\tvar parent = this.parent;\n\t\tvar index = this.getParentIndex();\n\t\tthis.doDetach.apply(this, arguments);\n\t\tdojo.event.topic.publish(this.tree.eventNames.afterDetach,\n\t\t\t{ child: this, parent: parent, index:index }\n\t\t);","call_chain":["this.doDetach"],"prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.doDetach":{"meta":{"summary":"","src":" \tvar parent = this.parent;\n\t\t\/\/dojo.debug(parent.containerNode.style.display)\n\t\tif (!parent) return;\n\t\tvar index = this.getParentIndex();\n\t\tthis.viewRemoveLayout();\n\t\tdojo.widget.DomWidget.prototype.removeChild.call(parent, this);\n\t\tvar siblingsCount = parent.children.length;\n\t\t\/\/dojo.debug(\"siblingsCount \"+siblingsCount);\n\t\tif (siblingsCount > 0) {\n\t\t\tif (index == 0) {\t\/\/ deleted first node => update new first\n\t\t\t\tparent.children[0].viewUpdateLayout();\t\t\n\t\t\t}\n\t\t\tif (index == siblingsCount) { \/\/ deleted last node\n\t\t\t\tparent.children[siblingsCount-1].viewUpdateLayout();\t\t\n\t\t\t}\n\t\t} else {\n\t\t\tif (parent.isTreeNode) {\n\t\t\t\tparent.viewSetHasChildren();\n\t\t\t}\n\t\t}\n\t\tif (this.tree.unsetFolderOnEmpty && !parent.children.length && parent.isTreeNode) {\n\t\t\tparent.unsetFolder();\n\t\t}\t\t\n\t\t\/\/dojo.debug(parent.containerNode.style.display)\n\t\tthis.parent = null;","call_chain":["dojo.widget.DomWidget.prototype.removeChild"],"prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.destroy":{"meta":{"summary":"","src":" \tdojo.event.topic.publish(this.tree.eventNames.beforeNodeDestroy, { source: this } );\n\t\tthis.detach();\t\t\n\t\treturn dojo.widget.HtmlWidget.prototype.destroy.apply(this, arguments);","call_chain":["dojo.widget.HtmlWidget.prototype.destroy"],"prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.expand":{"meta":{"summary":"","src":" \tif (this.isExpanded) return;\n\t\t\/\/dojo.profile.start(\"expand \"+this);\n\t\t\/\/dojo.debug(\"expand in \"+this);\n\t\t\/\/dojo.profile.start(\"expand - lazy init \"+this);\n\t\tif (this.tryLazyInit) {\n\t\t\tthis.setChildren();\n\t\t\tthis.tryLazyInit = false;\n\t\t}\n\t\t\/\/dojo.profile.end(\"expand - lazy init \"+this);\n\t\tthis.isExpanded = true;\n\t\tthis.viewSetExpand();\n\t\t\/\/dojo.profile.start(\"expand - showChildren \"+this);\n\t\t\/**\n\t\t * no matter if I have children or not. need to show\/hide container anyway.\n\t\t * use case: empty folder is expanded => then child is added, container already shown all fine\n\t\t *\/\n\t\tthis.showChildren();\n\t\t\/\/dojo.profile.end(\"expand - showChildren \"+this);\n\t\t\/\/dojo.profile.end(\"expand \"+this);","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.collapse":{"meta":{"summary":"","src":" \tif (!this.isExpanded) return;\n\t\tthis.isExpanded = false;\n\t\tthis.hideChildren();","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.hideChildren":{"meta":{"summary":"","src":" \tthis.tree.toggleObj.hide(\n\t\t\tthis.containerNode, this.tree.toggleDuration, this.explodeSrc, dojo.lang.hitch(this, \"onHideChildren\")\n\t\t);","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.showChildren":{"meta":{"summary":"","src":" \tthis.tree.toggleObj.show(\n\t\t\tthis.containerNode, this.tree.toggleDuration, this.explodeSrc, dojo.lang.hitch(this, \"onShowChildren\")\n\t\t);\n\t\t\/\/dojo.profile.end(\"showChildren\"+this);","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.onShowChildren":{"meta":{"summary":"","src":"        this.onShow();\n\t\t\/\/dojo.profile.end(\"onShowChildren\"+this);\n\t\tdojo.event.topic.publish(this.tree.eventNames.afterExpand, {source: this} );\t\t","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.onHideChildren":{"meta":{"summary":"","src":" \tthis.viewSetExpand();\n\t\tthis.onHide();\n\t\tdojo.event.topic.publish(this.tree.eventNames.afterCollapse, {source: this} );","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.setTitle":{"meta":{"summary":"","parameters":{"title":{"type":""}},"src":" \tvar oldTitle = this.title;\n\t\tthis.labelNode.innerHTML = this.title = title;\n\t\tdojo.event.topic.publish(this.tree.eventNames.afterSetTitle, { source: this, oldTitle:oldTitle });","prototype":"dojo.widget.TreeNodeV3"}},"dojo.widget.TreeNodeV3.toString":{"meta":{"summary":"","src":" \treturn '['+this.widgetType+', '+this.title+']';","prototype":"dojo.widget.TreeNodeV3"}}},"objects":{"dojo.widget.TreeNodeV3.actions":{"meta":{"variables":["MOVE","DETACH","EDIT","ADDCHILD","SELECT"]}}}}},"dojo.widget.TreeRPCController":{"meta":{"requires":{"common":["dojo.event.*","dojo.json","dojo.io.*","dojo.widget.TreeLoadingController"]},"functions":{"dojo.widget.TreeRPCController":{"meta":{"prototype_chain":["dojo.widget.TreeLoadingController"],"call_chain":["dojo.widget.TreeLoadingController"]}},"dojo.widget.TreeRPCController.doMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":"\t\tvar params = {\n\t\t\t\/\/ where from\n\t\t\tchild: this.getInfo(child),\n\t\t\tchildTree: this.getInfo(child.tree),\n\t\t\t\/\/ where to\n\t\t\tnewParent: this.getInfo(newParent),\n\t\t\tnewParentTree: this.getInfo(newParent.tree),\n\t\t\tnewIndex: index\n\t\t};\n\t\tvar success;\n\t\tthis.runRPC({\t\t\n\t\t\turl: this.getRPCUrl('move'),\n\t\t\t\/* I hitch to get this.loadOkHandler *\/\n\t\t\tload: function(response){\n\t\t\t\tsuccess = this.doMoveProcessResponse(response, child, newParent, index) ;\n\t\t\t},\n\t\t\tsync: true,\n\t\t\tlock: [child, newParent],\n\t\t\tparams: params\n\t\t});\n\t\treturn success;","prototype":"dojo.widget.TreeRPCController"}},"dojo.widget.TreeRPCController.doMoveProcessResponse":{"meta":{"summary":"","parameters":{"response":{"type":""},"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":" \tif(!dojo.lang.isUndefined(response.error)){\n\t\t\tthis.RPCErrorHandler(\"server\", response.error);\n\t\t\treturn false;\n\t\t}\n\t\tvar args = [child, newParent, index];\n\t\treturn dojo.widget.TreeLoadingController.prototype.doMove.apply(this, args);","call_chain":["dojo.widget.TreeLoadingController.prototype.doMove"],"prototype":"dojo.widget.TreeRPCController"}},"dojo.widget.TreeRPCController.doRemoveNode":{"meta":{"summary":"","parameters":{"node":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tvar params = {\n\t\t\tnode: this.getInfo(node),\n\t\t\ttree: this.getInfo(node.tree)\n\t\t}\n\t\tthis.runRPC({\n\t\t\t\turl: this.getRPCUrl('removeNode'),\n\t\t\t\t\/* I hitch to get this.loadOkHandler *\/\n\t\t\t\tload: function(response){\n\t\t\t\t\tthis.doRemoveNodeProcessResponse(response, node, callObj, callFunc) \n\t\t\t\t},\n\t\t\t\tparams: params,\n\t\t\t\tlock: [node]\n\t\t});","prototype":"dojo.widget.TreeRPCController"}},"dojo.widget.TreeRPCController.doRemoveNodeProcessResponse":{"meta":{"summary":"","parameters":{"response":{"type":""},"node":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tif(!dojo.lang.isUndefined(response.error)){\n\t\t\tthis.RPCErrorHandler(\"server\", response.error);\n\t\t\treturn false;\n\t\t}\n\t\tif(!response){ return false; }\n\t\tif(response == true){\n\t\t\t\/* change parent succeeded *\/\n\t\t\tvar args = [ node, callObj, callFunc ];\n\t\t\tdojo.widget.TreeLoadingController.prototype.doRemoveNode.apply(this, args);\n\t\t\treturn;\n\t\t}else if(dojo.lang.isObject(response)){\n\t\t\tdojo.raise(response.error);\n\t\t}else{\n\t\t\tdojo.raise(\"Invalid response \"+response)\n\t\t}","call_chain":["dojo.widget.TreeLoadingController.prototype.doRemoveNode"],"prototype":"dojo.widget.TreeRPCController"}},"dojo.widget.TreeRPCController.doCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"output":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \t\tvar params = {\n\t\t\t\ttree: this.getInfo(parent.tree),\n\t\t\t\tparent: this.getInfo(parent),\n\t\t\t\tindex: index,\n\t\t\t\tdata: output\n\t\t\t}\n\t\t\tthis.runRPC({\n\t\t\t\turl: this.getRPCUrl('createChild'),\n\t\t\t\tload: function(response) {\n\t\t\t\t\t\/\/ suggested data is dead, fresh data from server is used\n\t\t\t\t\tthis.doCreateChildProcessResponse( response, parent, index, callObj, callFunc) \n\t\t\t\t},\n\t\t\t\tparams: params,\n\t\t\t\tlock: [parent]\n\t\t\t});","prototype":"dojo.widget.TreeRPCController"}},"dojo.widget.TreeRPCController.doCreateChildProcessResponse":{"meta":{"summary":"","parameters":{"response":{"type":""},"parent":{"type":""},"index":{"type":""},"callObj":{"type":""},"callFunc":{"type":""}},"src":" \tif(!dojo.lang.isUndefined(response.error)){\n\t\t\tthis.RPCErrorHandler(\"server\",response.error);\n\t\t\treturn false;\n\t\t}\n\t\tif(!dojo.lang.isObject(response)){\n\t\t\tdojo.raise(\"Invalid result \"+response)\n\t\t}\n\t\tvar args = [parent, index, response, callObj, callFunc];\n\t\tdojo.widget.TreeLoadingController.prototype.doCreateChild.apply(this, args);","call_chain":["dojo.widget.TreeLoadingController.prototype.doCreateChild"],"prototype":"dojo.widget.TreeRPCController"}}}}},"dojo.widget.TreeRpcControllerV3":{"meta":{"requires":{"common":["dojo.event.*","dojo.json","dojo.io.*","dojo.widget.TreeLoadingControllerV3"]},"functions":{"dojo.widget.TreeRpcControllerV3":{"meta":{"prototype_chain":["dojo.widget.TreeLoadingControllerV3"],"call_chain":["dojo.widget.TreeLoadingControllerV3"],"prototype_variables":["extraRpcOnEdit"],"variables":["extraRpcOnEdit"]}},"dojo.widget.TreeRpcControllerV3.doMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""},"sync":{"type":""}},"src":"\t\tvar params = {\n\t\t\t\/\/ where from\n\t\t\tchild: this.getInfo(child),\n\t\t\tchildTree: this.getInfo(child.tree),\n\t\t\toldParent: this.getInfo(child.parent),\n\t\t\toldParentTree: this.getInfo(child.parent.tree),\n\t\t\t\/\/ where to\n\t\t\tnewParent: this.getInfo(newParent),\n\t\t\tnewParentTree: this.getInfo(newParent.tree),\n\t\t\tnewIndex: index\n\t\t};\n\t\tvar deferred = this.runRpc({\t\t\n\t\t\turl: this.getRpcUrl('move'),\n\t\t\tsync: sync,\t\t\t\n\t\t\tparams: params\n\t\t});\n\t\tvar _this = this;\n\t\tvar args = arguments;\t\n\t\t\/\/deferred.addCallback(function(res) { dojo.debug(\"doMove fired \"+res); return res});\n\t\tdeferred.addCallback(function() {\t\t\t\n\t\t\tdojo.widget.TreeBasicControllerV3.prototype.doMove.apply(_this,args);\n\t\t});\n\t\treturn deferred;","call_chain":["dojo.widget.TreeBasicControllerV3.prototype.doMove"],"prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.prepareDetach":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""}},"src":" \tvar deferred = this.startProcessing(node);\t\t\n\t\treturn deferred;","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.finalizeDetach":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tthis.finishProcessing(node);","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.doDetach":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""}},"src":" \tvar params = {\n\t\t\tnode: this.getInfo(node),\n\t\t\ttree: this.getInfo(node.tree)\n\t\t}\n\t\tvar deferred = this.runRpc({\n\t\t\turl: this.getRpcUrl('detach'),\n\t\t\tsync: sync,\n\t\t\tparams: params\t\t\t\n\t\t});\n\t\tvar _this = this;\n\t\tvar args = arguments;\n\t\tdeferred.addCallback(function() {\t\t\t\n\t\t\tdojo.widget.TreeBasicControllerV3.prototype.doDetach.apply(_this,args);\n\t\t});\n\t\treturn deferred;","call_chain":["dojo.widget.TreeBasicControllerV3.prototype.doDetach"],"prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.requestEditConfirmation":{"meta":{"summary":"","parameters":{"node":{"type":""},"action":{"type":""},"sync":{"type":""}},"src":" \tif (!this.extraRpcOnEdit) {\t\t\t\n\t\t\treturn dojo.Deferred.prototype.makeCalled();\n\t\t}\n\t\t\/\/dojo.debug(\"requestEditConfirmation \"+node+\" \"+action);\n\t\tvar _this = this;\n\t\tvar deferred = this.startProcessing(node);\n\t\t\/\/dojo.debug(\"startProcessing \"+node);\n\t\tvar params = {\n\t\t\tnode: this.getInfo(node),\n\t\t\ttree: this.getInfo(node.tree)\n\t\t}\n\t\tdeferred.addCallback(function() {\n\t\t\t\/\/dojo.debug(\"add action on requestEditConfirmation \"+action);\n\t\t\treturn _this.runRpc({\n\t\t\t\turl: _this.getRpcUrl(action),\n\t\t\t\tsync: sync,\n\t\t\t\tparams: params\t\t\t\n\t\t\t});\n\t\t});\n\t\tdeferred.addBoth(function(r) {\n\t\t\t\/\/dojo.debug(\"finish rpc with \"+r);\n\t\t\t_this.finishProcessing(node);\n\t\t\treturn r;\n\t\t});\n\t\treturn deferred;","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.editLabelSave":{"meta":{"summary":"","parameters":{"node":{"type":""},"newContent":{"type":""},"sync":{"type":""}},"src":" \tvar deferred = this.startProcessing(node);\n\t\tvar _this = this;\n\t\tvar params = {\n\t\t\tnode: this.getInfo(node),\n\t\t\ttree: this.getInfo(node.tree),\n\t\t\tnewContent: newContent\n\t\t}\n\t\tdeferred.addCallback(function() {\n\t\t\treturn _this.runRpc({\n\t\t\t\turl: _this.getRpcUrl('editLabelSave'),\n\t\t\t\tsync: sync,\n\t\t\t\tparams: params\t\t\t\n\t\t\t});\n\t\t});\n\t\tdeferred.addBoth(function(r) {\n\t\t\t_this.finishProcessing(node);\n\t\t\treturn r;\n\t\t});\n\t\treturn deferred;","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.editLabelStart":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""}},"src":" \tif (!this.canEditLabel(node)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar _this = this;\n\t\tif (!this.editor.isClosed()) {\n\t\t\t\/\/dojo.debug(\"editLabelStart editor open\");\n\t\t\tvar deferred = this.editLabelFinish(this.editor.saveOnBlur, sync);\n\t\t\tdeferred.addCallback(function() {\n\t\t\t\treturn _this.editLabelStart(node, sync);\n\t\t\t});\n\t\t\treturn deferred;\n\t\t}\n\t\t\/\/dojo.debug(\"editLabelStart closed, request\");\n\t\tvar deferred = this.requestEditConfirmation(node, 'editLabelStart', sync);\n\t\tdeferred.addCallback(function() {\n\t\t\t\/\/dojo.debug(\"start edit\");\n\t\t\t_this.doEditLabelStart(node);\n\t\t});\n\t\treturn deferred;","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.editLabelFinish":{"meta":{"summary":"","parameters":{"save":{"type":""},"sync":{"type":""}},"src":" \tvar _this = this;\n\t\tvar node = this.editor.node;\n\t\tvar deferred = dojo.Deferred.prototype.makeCalled();\n\t\tif (!save && !node.isPhantom) {\n\t\t\tdeferred = this.requestEditConfirmation(this.editor.node,'editLabelFinishCancel', sync);\n\t\t}\n\t\tif (save) {\n\t\t\tif (node.isPhantom) {\n\t\t\t\tdeferred = this.sendCreateChildRequest(\n\t\t\t\t\tnode.parent,\n\t\t\t\t\tnode.getParentIndex(),\n\t\t\t\t\t{title:this.editor.getContents()},\n\t\t\t\t\tsync\n\t\t\t\t);\n\t\t\t} else {\t\t\t\t\n\t\t\t\t\/\/ this deferred has new information from server\n\t\t\t\tdeferred = this.editLabelSave(node, this.editor.getContents(), sync);\n\t\t\t}\n\t\t}\n\t\tdeferred.addCallback(function(server_data) {\t\t\t\n\t\t\t_this.doEditLabelFinish(save, server_data);\n\t\t});\n\t\tdeferred.addErrback(function(r) {\n\t\t\t\/\/dojo.debug(\"Error occured\");\n\t\t\t\/\/dojo.debugShallow(r);\n\t\t\t_this.doEditLabelFinish(false);\n\t\t\treturn false;\n\t\t});\n\t\treturn deferred;","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.createAndEdit":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"sync":{"type":""}},"src":" \tvar data = {title:parent.tree.defaultChildTitle};\n\t\tif (!this.canCreateChild(parent, index, data)) {\n\t\t\treturn false;\n\t\t}\n\t\t\/* close editor first *\/\n\t\tif (!this.editor.isClosed()) {\n\t\t\t\/\/dojo.debug(\"editLabelStart editor open\");\n\t\t\tvar deferred = this.editLabelFinish(this.editor.saveOnBlur, sync);\n\t\t\tdeferred.addCallback(function() {\n\t\t\t\treturn _this.createAndEdit(parent, index, sync);\n\t\t\t});\n\t\t\treturn deferred;\n\t\t}\n\t\tvar _this = this;\n\t\t\/* load parent and create child*\/\n\t\tvar deferred = this.prepareCreateChild(parent, index, data, sync);\n\t\tdeferred.addCallback(function() {\n\t\t\tvar child = _this.makeDefaultNode(parent, index);\t\t\t\n\t\t\tchild.isPhantom = true;\n\t\t\treturn child;\n\t\t});\n\t\tdeferred.addBoth(function(r) {\n\t\t\t_this.finalizeCreateChild(parent, index, data, sync);\n\t\t\treturn r;\n\t\t});\n\t\t\/* expand parent *\/\n\t\tdeferred.addCallback(function(child) {\n\t\t\tvar d = _this.exposeCreateChild(parent, index, data, sync);\n\t\t\td.addCallback(function() { return child });\n\t\t\treturn d;\n\t\t});\n\t\tdeferred.addCallback(function(child) {\n\t\t\t\/\/dojo.debug(\"start edit\");\n\t\t\t_this.doEditLabelStart(child);\n\t\t\treturn child;\n\t\t});\n\t\treturn deferred;","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.prepareDestroyChild":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""}},"src":" \tvar deferred = this.startProcessing(node);\t\t\n\t\treturn deferred;","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.finalizeDestroyChild":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tthis.finishProcessing(node);","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.doDestroyChild":{"meta":{"summary":"","parameters":{"node":{"type":""},"sync":{"type":""}},"src":" \tvar params = {\n\t\t\tnode: this.getInfo(node),\n\t\t\ttree: this.getInfo(node.tree)\n\t\t}\n\t\tvar deferred = this.runRpc({\n\t\t\turl: this.getRpcUrl('destroyChild'),\n\t\t\tsync: sync,\n\t\t\tparams: params\t\t\t\n\t\t});\n\t\tvar _this = this;\n\t\tvar args = arguments;\n\t\tdeferred.addCallback(function() {\t\t\t\n\t\t\tdojo.widget.TreeBasicControllerV3.prototype.doDestroyChild.apply(_this,args);\n\t\t});\n\t\treturn deferred;","call_chain":["dojo.widget.TreeBasicControllerV3.prototype.doDestroyChild"],"prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.sendCreateChildRequest":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""},"sync":{"type":""}},"src":" \tvar params = {\n\t\t\ttree: this.getInfo(parent.tree),\n\t\t\tparent: this.getInfo(parent),\n\t\t\tindex: index,\n\t\t\tdata: data\n\t\t}\n\t\tvar deferred = this.runRpc({\n\t\t\turl: this.getRpcUrl('createChild'),\n\t\t\tsync: sync,\n\t\t\tparams: params\n\t\t});\n\t\treturn deferred;","prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.doCreateChild":{"meta":{"summary":"","parameters":{"parent":{"type":""},"index":{"type":""},"data":{"type":""},"sync":{"type":""}},"src":" \tif (dojo.lang.isUndefined(data.title)) {\n\t\t\tdata.title = parent.tree.defaultChildTitle;\n\t\t}\n\t\tvar deferred = this.sendCreateChildRequest(parent,index,data,sync);\n\t\tvar _this = this;\n\t\tvar args = arguments;\n\t\tdeferred.addCallback(function(server_data) {\n\t\t\tdojo.lang.mixin(data, server_data); \/\/ add my data as less priority\n\t\t\t\/\/dojo.debug(\"Create \");\n\t\t\t\/\/dojo.debug(server_data);\n\t\t\treturn dojo.widget.TreeBasicControllerV3.prototype.doCreateChild.call(_this,parent,index,data);\n\t\t});\n\t\treturn deferred;","call_chain":["dojo.widget.TreeBasicControllerV3.prototype.doCreateChild"],"prototype":"dojo.widget.TreeRpcControllerV3"}},"dojo.widget.TreeRpcControllerV3.doClone":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""},"deep":{"type":""},"sync":{"type":""}},"src":" \tvar params = {\n\t\t\tchild: this.getInfo(child),\n\t\t\toldParent: this.getInfo(child.parent),\n\t\t\toldParentTree: this.getInfo(child.parent.tree),\n\t\t\tnewParent: this.getInfo(newParent),\n\t\t\tnewParentTree: this.getInfo(newParent.tree),\n\t\t\tindex: index,\n\t\t\tdeep: deep ? true : false, \/\/ undefined -> false\n\t\t\ttree: this.getInfo(child.tree)\n\t\t}\n\t\tvar deferred = this.runRpc({\n\t\t\turl: this.getRpcUrl('clone'),\n\t\t\tsync: sync,\n\t\t\tparams: params\n\t\t});\n\t\tvar _this = this;\n\t\tvar args = arguments;\n\t\tdeferred.addCallback(function() {\t\t\t\n\t\t\tdojo.widget.TreeBasicControllerV3.prototype.doClone.apply(_this,args);\n\t\t});\n\t\treturn deferred;\t","call_chain":["dojo.widget.TreeBasicControllerV3.prototype.doClone"],"prototype":"dojo.widget.TreeRpcControllerV3"}}}}},"dojo.widget.TreeSelector":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.TreeSelector":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["widgetType","selectedNode","dieWithTree"],"variables":["widgetType","selectedNode","dieWithTree"],"instance_variables":["selectedNode","eventNames","listenedTrees"],"summary":"","src":" this.eventNames = {};\n\tthis.listenedTrees = [];"}},"dojo.widget.TreeSelector.initialize":{"meta":{"summary":"","src":" \tfor(name in this.eventNamesDefault) {\n\t\t\tif (dojo.lang.isUndefined(this.eventNames[name])) {\n\t\t\t\tthis.eventNames[name] = this.widgetId+\"\/\"+this.eventNamesDefault[name];\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.destroy":{"meta":{"summary":"","src":" \tdojo.event.topic.publish(this.eventNames.destroy, { source: this } );\n\t\treturn dojo.widget.HtmlWidget.prototype.destroy.apply(this, arguments);","call_chain":["dojo.widget.HtmlWidget.prototype.destroy"],"prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.listenTree":{"meta":{"summary":"","parameters":{"tree":{"type":""}},"src":" \tdojo.event.topic.subscribe(tree.eventNames.titleClick, this, \"select\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.iconClick, this, \"select\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.collapse, this, \"onCollapse\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.moveFrom, this, \"onMoveFrom\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.removeNode, this, \"onRemoveNode\");\n\t\tdojo.event.topic.subscribe(tree.eventNames.treeDestroy, this, \"onTreeDestroy\");\n\t\t\/* remember all my trees to deselect when element is movedFrom them *\/\n\t\tthis.listenedTrees.push(tree);","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.unlistenTree":{"meta":{"summary":"","parameters":{"tree":{"type":""}},"src":" \tdojo.event.topic.unsubscribe(tree.eventNames.titleClick, this, \"select\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.iconClick, this, \"select\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.collapse, this, \"onCollapse\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.moveFrom, this, \"onMoveFrom\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.removeNode, this, \"onRemoveNode\");\n\t\tdojo.event.topic.unsubscribe(tree.eventNames.treeDestroy, this, \"onTreeDestroy\");\n\t\tfor(var i=0; i<this.listenedTrees.length; i++){\n           if(this.listenedTrees[i] === tree){\n                   this.listenedTrees.splice(i, 1);\n                   break;\n           }\n\t\t}","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.onTreeDestroy":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.unlistenTree(message.source);\n\t\tif (this.dieWithTree) {\n\t\t\t\/\/dojo.debug(\"Killing myself \"+this.widgetId);\n\t\t\tthis.destroy();\n\t\t\t\/\/dojo.debug(\"done\");\n\t\t}","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.onCollapse":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (!this.selectedNode) return;\n\t\tvar node = message.source;\n\t\tvar parent = this.selectedNode.parent;\n\t\twhile (parent !== node && parent.isTreeNode) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t\tif (parent.isTreeNode) {\n\t\t\tthis.deselect();\n\t\t}","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.select":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar node = message.source;\n\t\tvar e = message.event;\n\t\tif (this.selectedNode === node) {\n\t\t\tif(e.ctrlKey || e.shiftKey || e.metaKey){\n\t\t\t\t\/\/ If the node is currently selected, and they select it again while holding\n\t\t\t\t\/\/ down a meta key, it deselects it\n\t\t\t\tthis.deselect();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdojo.event.topic.publish(this.eventNames.dblselect, { node: node });\n\t\t\treturn;\n\t\t}\n\t\tif (this.selectedNode) {\n\t\t\tthis.deselect();\n\t\t}\n\t\tthis.doSelect(node);\n\t\tdojo.event.topic.publish(this.eventNames.select, {node: node} );","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.onMoveFrom":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (message.child !== this.selectedNode) {\n\t\t\treturn;\n\t\t}\n\t\tif (!dojo.lang.inArray(this.listenedTrees, message.newTree)) {\n\t\t\tthis.deselect();\n\t\t}","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.onRemoveNode":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (message.child !== this.selectedNode) {\n\t\t\treturn;\n\t\t}\n\t\tthis.deselect();","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.doSelect":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tnode.markSelected();\n\t\tthis.selectedNode = node;","prototype":"dojo.widget.TreeSelector"}},"dojo.widget.TreeSelector.deselect":{"meta":{"summary":"","src":" \tvar node = this.selectedNode;\n\t\tthis.selectedNode = null;\n\t\tnode.unMarkSelected();\n\t\tdojo.event.topic.publish(this.eventNames.deselect, {node: node} );","prototype":"dojo.widget.TreeSelector"}}},"objects":{"dojo.widget.TreeSelector.eventNamesDefault":{"meta":{"variables":["dblselect"]}}}}},"dojo.widget.TreeSelectorV3":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.TreeCommon"]},"functions":{"dojo.widget.TreeSelectorV3":{"meta":{"prototype_variables":["listenTreeEvents","allowedMulti","dblselectTimeout"],"variables":["listenTreeEvents","allowedMulti","dblselectTimeout"],"instance_variables":["lastClicked","lastClicked.date","lastClicked.node","eventNames","listenedTrees","selectedNodes"],"summary":"","src":" \tthis.eventNames = {};\n\t\tthis.listenedTrees = {};\n\t\tthis.selectedNodes = [];\n\t\tthis.lastClicked = {}"}},"dojo.widget.TreeSelectorV3.listenNodeFilter":{"meta":{"summary":"","parameters":{"elem":{"type":""}},"src":" listenNodeFilter: function(elem) { return elem instanceof dojo.widget.Widget    ","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.onAfterTreeCreate":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar tree = message.source;\n\t\tdojo.event.browser.addListener(tree.domNode, \"onclick\", dojo.lang.hitch(this, this.onTreeClick));\n\t\tif (dojo.render.html.ie) {\n\t\t\tdojo.event.browser.addListener(tree.domNode, \"ondblclick\", dojo.lang.hitch(this, this.onTreeDblClick));\n\t\t}\n\t\tdojo.event.browser.addListener(tree.domNode, \"onKey\", dojo.lang.hitch(this, this.onKey));","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.onKey":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \tif (!e.key || e.ctrkKey || e.altKey) { return; }\n\t\tswitch(e.key) {\n\t\t\tcase e.KEY_ENTER:\n\t\t\t\tvar node = this.domElement2TreeNode(e.target);\n\t\t\t\tif (node) {\n\t\t\t\t\tthis.processNode(node, e);\n\t\t\t\t}\n\t\t}","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.onAfterChangeTree":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tif (!message.oldTree && message.node.selected) {\n\t\t\tthis.select(message.node);\n\t\t}\n\t\tif (!message.newTree || !this.listenedTrees[message.newTree.widgetId]) {\n\t\t\t\/\/ moving from our trfee to new one that we don't listen\n\t\t\tif (this.selectedNode && message.node.children) {\n\t\t\t\tthis.deselectIfAncestorMatch(message.node);\n\t\t\t}\t\t\t\t\t\t\n\t\t}","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""}},"src":" \tfor(name in this.eventNamesDefault) {\n\t\t\tif (dojo.lang.isUndefined(this.eventNames[name])) {\n\t\t\t\tthis.eventNames[name] = this.widgetId+\"\/\"+this.eventNamesDefault[name];\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.onBeforeTreeDestroy":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.unlistenTree(message.source);","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.onAfterCollapse":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.deselectIfAncestorMatch(message.source);\t\t","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.onTreeDblClick":{"meta":{"summary":"","parameters":{"event":{"type":""}},"src":" \tthis.onTreeClick(event);\t\t\t","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.checkSpecialEvent":{"meta":{"summary":"","parameters":{"event":{"type":""}},"src":" \treturn event.shiftKey || event.ctrlKey;","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.onTreeClick":{"meta":{"summary":"","parameters":{"event":{"type":""}},"src":" \tvar node = this.domElement2TreeNode(event.target);\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tvar checkLabelClick = function(domElement) {\n\t\t\treturn domElement === node.labelNode;\n\t\t}\n\t\tif (this.checkPathCondition(event.target, checkLabelClick)) {\n\t\t\tthis.processNode(node, event);\t\t\t\n\t\t}","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.processNode":{"meta":{"summary":"","parameters":{"node":{"type":""},"event":{"type":""}},"src":" \tif (node.actionIsDisabled(node.actions.SELECT)) {\n\t\t\treturn;\n\t\t}\n\t\t\/\/dojo.debug(\"click \"+node+ \"special \"+this.checkSpecialEvent(event));\t\t\n\t\tif (dojo.lang.inArray(this.selectedNodes, node)) {\n\t\t\tif(this.checkSpecialEvent(event)){\t\t\t\t\n\t\t\t\t\/\/ If the node is currently selected, and they select it again while holding\n\t\t\t\t\/\/ down a meta key, it deselects it\n\t\t\t\tthis.deselect(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _this = this;\n\t\t\tvar i=0;\n\t\t\tvar selectedNode;\n\t\t\t\/* remove all nodes from selection excepts this one *\/\n\t\t\twhile(this.selectedNodes.length > i) {\n\t\t\t\tselectedNode = this.selectedNodes[i];\n\t\t\t\tif (selectedNode !== node) {\n\t\t\t\t\t\/\/dojo.debug(\"Deselect \"+selectedNode);\n\t\t\t\t\tthis.deselect(selectedNode);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ti++; \/\/ skip the doubleclicked node\n\t\t\t}\n\t\t\t\/* lastClicked.node may be undefined if node was selected(before) programmatically *\/\n\t\t\tvar wasJustClicked = this.checkRecentClick(node)\n\t\t\teventName = wasJustClicked ? this.eventNames.dblselect : this.eventNames.select;\n\t\t\tif (wasJustClicked) {\n\t\t\t\teventName = this.eventNames.dblselect;\n\t\t\t\t\/* after dblselect, next select is usual select *\/\n\t\t\t\tthis.forgetLastClicked();\n\t\t\t} else {\n\t\t\t\teventName = this.eventNames.select;\n\t\t\t\tthis.setLastClicked(node)\n\t\t\t}\n\t\t\tdojo.event.topic.publish(eventName, { node: node });\n\t\t\treturn;\n\t\t}\n\t\t\/* if unselected node..\t*\/\n\t\tthis.deselectIfNoMulti(event);\n\t\t\/\/dojo.debug(\"select\");\n\t\tthis.setLastClicked(node);\n\t\tthis.select(node);","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.forgetLastClicked":{"meta":{"summary":"","src":" \tthis.lastClicked = {}","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.setLastClicked":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tthis.lastClicked.date = new Date();\t\n\t\tthis.lastClicked.node = node;","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.checkRecentClick":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar diff = new Date() - this.lastClicked.date;\n\t\t\/\/dojo.debug(new Date())\n\t\t\/\/dojo.debug(\"check old \"+this.lastClicked.node+\" now \"+(new Date())+\" diff \"+diff)\n\t\tif (this.lastClicked.node && diff < this.dblselectTimeout) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.deselectIfNoMulti":{"meta":{"summary":"","parameters":{"event":{"type":""}},"src":" \tif (!this.checkSpecialEvent(event) || !this.allowedMulti) {\n\t\t\t\/\/dojo.debug(\"deselect All\");\n\t\t\tthis.deselectAll();\n\t\t}","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.deselectIfAncestorMatch":{"meta":{"summary":"","parameters":{"ancestor":{"type":""}},"src":" \tvar _this = this;\n\t\tdojo.lang.forEach(this.selectedNodes, function(node) {\n\t\t\tvar selectedNode = node;\n\t\t\tnode = node.parent\n\t\t\twhile (node && node.isTreeNode) {\n\t\t\t\t\/\/dojo.debug(\"ancestor try \"+node);\n\t\t\t\tif (node === ancestor) {\n\t\t\t\t\t_this.deselect(selectedNode); \n\t\t\t\t\treturn;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t});","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.onAfterDetach":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tthis.deselectIfAncestorMatch(message.child);\t\t","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.select":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar index = dojo.lang.find(this.selectedNodes, node, true);\n\t\tif (index >=0 ) {\n\t\t\treturn; \/\/ already selected\n\t\t}\n\t\t\/\/dojo.debug(\"select \"+node);\n\t\tthis.selectedNodes.push(node);\n\t\tdojo.event.topic.publish(this.eventNames.select, {node: node} );","returns":"already selected","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.deselect":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":" \tvar index = dojo.lang.find(this.selectedNodes, node, true);\n\t\tif (index < 0) {\n\t\t\t\/\/dojo.debug(\"not selected\");\n\t\t\treturn; \/\/ not selected\n\t\t}\n\t\t\/\/dojo.debug(\"deselect \"+node);\n\t\t\/\/dojo.debug((new Error()).stack);\n\t\tthis.selectedNodes.splice(index, 1);\n\t\tdojo.event.topic.publish(this.eventNames.deselect, {node: node} );\n\t\t\/\/dojo.debug(\"deselect\");","returns":"not selected","prototype":"dojo.widget.TreeSelectorV3"}},"dojo.widget.TreeSelectorV3.deselectAll":{"meta":{"summary":"","src":" \twhile (this.selectedNodes.length) {\n\t\t\tthis.deselect(this.selectedNodes[0]);\n\t\t}","prototype":"dojo.widget.TreeSelectorV3"}}},"objects":{"dojo.widget.TreeSelectorV3.eventNamesDefault":{"meta":{"variables":["dblselect"]}}}}},"dojo.widget.TreeTimeoutIterator":{"meta":{"requires":{"common":["dojo.event.*","dojo.json","dojo.io.*","dojo.widget.TreeCommon"]},"functions":{"dojo.widget.TreeTimeoutIterator":{"meta":{"prototype_variables":["maxStackDepth","stack","currentParent","currentIndex"],"variables":["maxStackDepth","stack","currentParent","currentIndex"],"instance_variables":["filterFunc","filterObj","maxStackDepth","finishFunc","finishObj","currentParent","currentIndex","callFunc","callObj","stack"],"summary":"","parameters":{"elem":{"type":""},"callFunc":{"type":""},"callObj":{"type":""}},"src":" var _this = this;\n\tthis.currentParent = elem;\n\tthis.callFunc = callFunc;\n\tthis.callObj = callObj ? callObj: this;\n\tthis.stack = [];\t"}},"dojo.widget.TreeTimeoutIterator.filterFunc":{"meta":{"summary":"","src":" filterFunc: function() { return true    ","prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.finishFunc":{"meta":{"summary":"","src":" finishFunc: function() { return true    ","prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.setFilter":{"meta":{"summary":"","parameters":{"func":{"type":""},"obj":{"type":""}},"src":" \tthis.filterFunc = func;\n\t\tthis.filterObj = obj;","prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.setMaxLevel":{"meta":{"summary":"","parameters":{"level":{"type":""}},"src":" \tthis.maxStackDepth = level-2;","prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.forward":{"meta":{"summary":"","parameters":{"timeout":{"type":""}},"src":" \tvar _this = this;\n\t\tif (this.timeout) { \/\/ if timeout required between forwards\n\t\t\t\/\/ tid will be assigned at the end of outer func execution\n\t\t\tvar tid = setTimeout(function() {_this.processNext(); clearTimeout(tid); }, _this.timeout);\n\t\t} else {\n\t\t\treturn this.processNext();\n\t\t}","prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.start":{"meta":{"summary":"","parameters":{"processFirst":{"type":""}},"src":" \tif (processFirst) {\t\t\t\n\t\t\treturn this.callFunc.call(this.callObj, this.currentParent, this);\t\t\t\n\t\t}\n\t\treturn this.processNext();","call_chain":["this.callFunc"],"prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.processNext":{"meta":{"summary":"","src":" \tvar handler;\n\t\tvar _this = this;\n\t\tvar found;\n\t\tvar next;\n\t\tif (this.maxStackDepth == -2) {   \n\t\t\treturn; \/\/ process only first cause level=0, do not process children\n\t\t}\n\t\twhile (true) {\n\t\t\tvar children = this.currentParent.children;\n\t\t\tif (children && children.length) {\n\t\t\t\t\/\/ look for a node that can be the next target\n\t\t\t\tdo {\t\t\t\t\t\n\t\t\t\t\tnext = children[this.currentIndex];\n\t\t\t\t\t\/\/dojo.debug(\"check \"+next);\n\t\t\t\t} while (this.currentIndex++ < children.length && !(found = this.filterFunc.call(this.filterObj,next)));\n\t\t\t\tif (found) {\n\t\t\t\t\t\/\/dojo.debug(\"found \"+next);\n\t\t\t\t\t\/\/ move to next node as new parent if depth is fine\n\t\t\t\t\t\/\/ I can't check current children to decide whether to move it or not,\n\t\t\t\t\t\/\/ because expand may populate children\t\t\t\t\t\n\t\t\t\t\tif (next.isFolder && this.stack.length <= this.maxStackDepth) {\n\t\t\t\t\t\tthis.moveParent(next,0);\n\t\t\t\t\t}\n\t\t\t\t\t\/\/dojo.debug(\"Run callFunc on \"+next);\n\t\t\t\t\treturn this.callFunc.call(this.callObj, next, this);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.stack.length) {\n\t\t\t\tthis.popParent();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\t\/**\n\t\t * couldn't find next node to process, finish here\n\t\t *\/\n\t\treturn this.finishFunc.call(this.finishObj);","returns":"process only first cause level=0, do not process children","call_chain":["this.filterFunc","this.callFunc","this.finishFunc"],"prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.setFinish":{"meta":{"summary":"","parameters":{"func":{"type":""},"obj":{"type":""}},"src":" \tthis.finishFunc = func;\n\t\tthis.finishObj = obj;","prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.popParent":{"meta":{"summary":"","src":" \tvar p = this.stack.pop();\n\t\t\/\/dojo.debug(\"Pop \"+p[0]+\":\"+p[1]);\t\t\n\t\tthis.currentParent = p[0];\n\t\tthis.currentIndex = p[1];","prototype":"dojo.widget.TreeTimeoutIterator"}},"dojo.widget.TreeTimeoutIterator.moveParent":{"meta":{"summary":"","parameters":{"nextParent":{"type":""},"nextIndex":{"type":""}},"src":" \tthis.stack.push([this.currentParent, this.currentIndex]);\n\t\tthis.currentParent = nextParent;\n\t\tthis.currentIndex = nextIndex;","prototype":"dojo.widget.TreeTimeoutIterator"}}}}},"dojo.widget.TreeToggleOnSelect":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.TreeToggleOnSelect":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["selector","controller","selectEvent"],"variables":["selector","controller","selectEvent"],"instance_variables":["selector","controller"]}},"dojo.widget.TreeToggleOnSelect.initialize":{"meta":{"summary":"","src":" \tthis.selector = dojo.widget.byId(this.selector);\n\t\tthis.controller = dojo.widget.byId(this.controller);\n\t\tdojo.event.topic.subscribe(this.selector.eventNames[this.selectEvent], this, \"onSelectEvent\");\t","prototype":"dojo.widget.TreeToggleOnSelect"}},"dojo.widget.TreeToggleOnSelect.onSelectEvent":{"meta":{"summary":"","parameters":{"message":{"type":""}},"src":" \tvar node = message.node\n\t\tnode.isExpanded ? this.controller.collapse(node) : this.controller.expand(node)\t","prototype":"dojo.widget.TreeToggleOnSelect"}}}}},"dojo.widget.TreeV3":{"meta":{"requires":{"common":["dojo.widget.TreeWithNode","dojo.widget.*","dojo.event.*","dojo.io.*","dojo.widget.HtmlWidget","dojo.widget.TreeNodeV3"]},"functions":{"dojo.widget.TreeV3":{"meta":{"prototype_variables":["DndMode","defaultChildWidget","defaultChildTitle","eagerWidgetInstantiation","classPrefix","style","allowAddChildToLeaf","unsetFolderOnEmpty","DndAcceptTypes","templateCssPath","templateString","isExpanded","isTree"],"variables":["DndMode","defaultChildWidget","defaultChildTitle","eagerWidgetInstantiation","classPrefix","style","allowAddChildToLeaf","unsetFolderOnEmpty","DndAcceptTypes","templateCssPath","templateString","isExpanded","isTree"],"instance_variables":["nodeTemplate","expandNodeTemplate","labelNodeTemplate","contentNodeTemplate","containerNodeTemplate","DndMode","domNode.widgetId","defaultChildWidget","containerNode","eventNames","DndAcceptTypes","actionsDisabled","listeners","tree"],"summary":"","src":" \tthis.eventNames = {};\n\t\tthis.DndAcceptTypes = [];\n\t\tthis.actionsDisabled = [];\n\t\tthis.listeners = [];\n\t\tthis.tree = this;"}},"dojo.widget.TreeV3.createNode":{"meta":{"summary":"","parameters":{"data":{"type":""}},"src":" \tdata.tree = this.widgetId;\t\t\n\t\tif (data.widgetName) {\n\t\t\t\/\/ TODO: check if such widget has createSimple\t\t\t\n\t\t\treturn dojo.widget.createWidget(data.widgetName, data);\t\t\n\t\t} else if (this.defaultChildWidget.prototype.createSimple) {\t\t\t\n\t\t\treturn this.defaultChildWidget.prototype.createSimple(data);\t\t\t\t\t\n\t\t} else {\n\t\t\tvar ns = this.defaultChildWidget.prototype.ns; \n\t\t\tvar wt = this.defaultChildWidget.prototype.widgetType; \n\t\t\treturn dojo.widget.createWidget(ns + \":\" + wt, data); \n\t\t}","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.makeNodeTemplate":{"meta":{"summary":"","src":" \tvar domNode = document.createElement(\"div\");\n\t\tdojo.html.setClass(domNode, this.classPrefix+\"Node \"+this.classPrefix+\"ExpandLeaf \"+this.classPrefix+\"ChildrenNo\");\t\t\n\t\tthis.nodeTemplate = domNode;\n\t\tvar expandNode = document.createElement(\"div\");\n\t\tvar clazz = this.classPrefix+\"Expand\";\n\t\tif (dojo.render.html.ie) {\n\t\t\tclazz = clazz + ' ' + this.classPrefix+\"IEExpand\";\n\t\t}\n\t\tdojo.html.setClass(expandNode, clazz);\n\t\tthis.expandNodeTemplate = expandNode;\n\t\t\/\/ need <span> inside <div>\n\t\t\/\/ div for multiline support, span for styling exactly the text, not whole line\n\t\tvar labelNode = document.createElement(\"span\");\n\t\tdojo.html.setClass(labelNode, this.classPrefix+\"Label\");\n\t\tthis.labelNodeTemplate = labelNode;\n\t\tvar contentNode = document.createElement(\"div\");\n\t\tvar clazz = this.classPrefix+\"Content\";\n\t\t\/**\n\t\t * IE<7 does not support min-height properly so I have to rely\n\t\t * on this hack\n\t\t * FIXME: do it in CSS only\n\t\t *\/\n\t\tif (dojo.render.html.ie && !dojo.render.html.ie70) {\n\t\t\tclazz = clazz + ' ' + this.classPrefix+\"IEContent\";\n\t\t}\t\n\t\tdojo.html.setClass(contentNode, clazz);\n\t\tthis.contentNodeTemplate = contentNode;\n\t\tdomNode.appendChild(expandNode);\n\t\tdomNode.appendChild(contentNode);\n\t\tcontentNode.appendChild(labelNode);","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.makeContainerNodeTemplate":{"meta":{"summary":"","src":" \tvar div = document.createElement('div');\n\t\tdiv.style.display = 'none';\t\t\t\n\t\tdojo.html.setClass(div, this.classPrefix+\"Container\");\n\t\tthis.containerNodeTemplate = div;","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.getInfo":{"meta":{"summary":"","src":" \tvar info = {\n\t\t\twidgetId: this.widgetId,\n\t\t\tobjectId: this.objectId\n\t\t}\n\t\treturn info;","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.adjustEventNames":{"meta":{"summary":"","src":" \tfor(var name in this.eventNamesDefault) {\n\t\t\tif (dojo.lang.isUndefined(this.eventNames[name])) {\n\t\t\t\tthis.eventNames[name] = this.widgetId+\"\/\"+this.eventNamesDefault[name];\n\t\t\t}\n\t\t}","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.adjustDndMode":{"meta":{"summary":"","src":" \tvar _this = this;\n\t\tvar DndMode = 0;\n\t\tdojo.lang.forEach(this.DndMode.split(';'),\n\t\t\tfunction(elem) {\n\t\t\t\tvar mode = _this.DndModes[dojo.string.trim(elem).toUpperCase()];\n\t\t\t\tif (mode) DndMode = DndMode | mode;\n\t\t\t}\n\t\t );\n\t\tthis.DndMode = DndMode;","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.destroy":{"meta":{"summary":"","src":" \tdojo.event.topic.publish(this.tree.eventNames.beforeTreeDestroy, { source: this } );\n\t\treturn dojo.widget.HtmlWidget.prototype.destroy.apply(this, arguments);","call_chain":["dojo.widget.HtmlWidget.prototype.destroy"],"prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.initialize":{"meta":{"summary":"","parameters":{"args":{"type":""}},"src":" \tthis.domNode.widgetId = this.widgetId;\n\t\tfor(var i=0; i<this.actionsDisabled.length;i++) {\n\t\t\tthis.actionsDisabled[i] = this.actionsDisabled[i].toUpperCase();\n\t\t}\n\t\t\/\/dojo.debug(args.defaultChildWidget ? true : false)\n\t\tif (!args.defaultChildWidget) {\n\t\t\tthis.defaultChildWidget = dojo.widget.TreeNodeV3;\n\t\t} else {\n\t\t\tthis.defaultChildWidget = dojo.lang.getObjPathValue(args.defaultChildWidget);\n\t\t}\n\t\tthis.adjustEventNames();\n\t\tthis.adjustDndMode();\n\t\tthis.makeNodeTemplate();\n\t\tthis.makeContainerNodeTemplate();\n\t\tthis.containerNode = this.domNode;\n\t\tdojo.html.setClass(this.domNode, this.classPrefix+\"Container\");\n\t\tvar _this = this;\n\t\t\/\/dojo.html.disableSelection(this.domNode)\n\t\tdojo.lang.forEach(this.listeners,\n\t\t\tfunction(elem) {\n\t\t\t\tvar t = dojo.lang.isString(elem) ? dojo.widget.byId(elem) : elem;\n\t\t\t\tt.listenTree(_this)\t\t\t\t\n\t\t\t}\n\t\t);","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.postCreate":{"meta":{"summary":"","src":" \tdojo.event.topic.publish(this.eventNames.afterTreeCreate, { source: this } );","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.move":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":" \tif (!child.parent) {\n\t\t\tdojo.raise(this.widgetType+\": child can be moved only while it's attached\");\n\t\t}\n\t\tvar oldParent = child.parent;\n\t\tvar oldTree = child.tree;\n\t\tvar oldIndex = child.getParentIndex();\n\t\tvar newTree = newParent.tree;\n\t\tvar newParent = newParent;\n\t\tvar newIndex = index;\n\t\tvar message = {\n\t\t\t\toldParent: oldParent, oldTree: oldTree, oldIndex: oldIndex,\n\t\t\t\tnewParent: newParent, newTree: newTree, newIndex: newIndex,\n\t\t\t\tchild: child\n\t\t};\n\t\tdojo.event.topic.publish(oldTree.eventNames.beforeMoveFrom, message);\n\t\tdojo.event.topic.publish(newTree.eventNames.beforeMoveTo, message);\n\t\tthis.doMove.apply(this, arguments);\n\t\t\/* publish events here about structural changes for both source and target trees *\/\n\t\tdojo.event.topic.publish(oldTree.eventNames.afterMoveFrom, message);\n\t\tdojo.event.topic.publish(newTree.eventNames.afterMoveTo, message);","call_chain":["this.doMove"],"prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.doMove":{"meta":{"summary":"","parameters":{"child":{"type":""},"newParent":{"type":""},"index":{"type":""}},"src":"\t\t\/\/var parent = child.parent;\n\t\tchild.doDetach();\n\t\t\/\/dojo.debug(\"addChild \"+child+\" to \"+newParent+\" at \"+index);\n\t\tnewParent.doAddChild(child, index);","prototype":"dojo.widget.TreeV3"}},"dojo.widget.TreeV3.toString":{"meta":{"summary":"","src":" \treturn \"[\"+this.widgetType+\" ID:\"+this.widgetId\t+\"]\"","prototype":"dojo.widget.TreeV3"}}},"objects":{"dojo.widget.TreeV3.eventNamesDefault":{"meta":{"variables":["afterTreeCreate","beforeTreeDestroy","beforeNodeDestroy","afterChangeTree","afterSetFolder","afterUnsetFolder","beforeMoveFrom","beforeMoveTo","afterMoveFrom","afterMoveTo","afterAddChild","afterDetach","afterExpand","beforeExpand","afterSetTitle","afterCollapse","beforeCollapse"]}},"dojo.widget.TreeV3.DndModes":{"meta":{"variables":["BETWEEN","ONTO"]}},"dojo.widget.TreeV3.actions":{"meta":{"variables":["ADDCHILD"]}}}}},"dojo.widget.TreeWithNode":{"meta":{"requires":{"common":["dojo.lang.declare"]},"functions":{"dojo.widget.TreeWithNode":{"meta":{"prototype_variables":["state","objectId","isContainer","lockLevel","expandLevel","loadLevel"],"variables":["state","objectId","isContainer","lockLevel","expandLevel","loadLevel"],"instance_variables":["lockLevel","state","children","animationInProgress"],"summary":"","src":""}},"dojo.widget.TreeWithNode.lock":{"meta":{"summary":"","src":" \tthis.lockLevel++;","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.unlock":{"meta":{"summary":"","src":" \tif (!this.lockLevel) {\n\t\t\t\/\/dojo.debug((new Error()).stack);\n\t\t\tdojo.raise(this.widgetType+\" unlock: not locked\");\n\t\t}\n\t\tthis.lockLevel--;","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.hasLock":{"meta":{"summary":"","src":" \treturn this.lockLevel>0;","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.isLocked":{"meta":{"summary":"","src":" \tvar node = this;\n\t\twhile (true) {\n\t\t\tif (node.lockLevel) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!node.parent || node.isTree) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnode = node.parent;\n\t\t}\n\t\treturn false;","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.flushLock":{"meta":{"summary":"","src":" \tthis.lockLevel = 0;\n\t\t\/\/this.unMarkLoading();","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.actionIsDisabled":{"meta":{"summary":"","parameters":{"action":{"type":""}},"src":" \tvar disabled = false;\n\t\tif (dojo.lang.inArray(this.actionsDisabled, action)) {\n\t\t\tdisabled = true;\n\t\t}\n\t\t\/\/dojo.debug(\"Check \"+this+\" \"+disabled)\n\t\tif (this.isTreeNode) {\n\t\t\tif (!this.tree.allowAddChildToLeaf && action == this.actions.ADDCHILD && !this.isFolder) {\n\t\t\t\tdisabled = true;\n\t\t\t}\n\t\t}\n\t\treturn disabled;","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.actionIsDisabledNow":{"meta":{"summary":"","parameters":{"action":{"type":""}},"src":" \treturn this.actionIsDisabled(action) || this.isLocked();","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.setChildren":{"meta":{"summary":"","parameters":{"childrenArray":{"type":""}},"src":" \tif (this.isTreeNode && !this.isFolder) {\n\t\t\t\/\/dojo.debug(\"folder parent \"+parent+ \" isfolder \"+parent.isFolder);\n\t\t\tthis.setFolder();\n\t\t} else if (this.isTreeNode) {\n\t\t\tthis.state = this.loadStates.LOADED;\n\t\t}\n\t\tvar hadChildren = this.children.length > 0;\n        if (hadChildren && childrenArray){\n            \/\/ perf: most of time setChildren used for empty nodes, so save function call\n            this.destroyChildren()\n        }\n\t\tif (childrenArray) {\n\t\t\tthis.children = childrenArray;\n\t\t}\n\t\tvar hasChildren = this.children.length > 0;\n\t\tif (this.isTreeNode && hasChildren != hadChildren) {\n\t\t\t\/\/ call only when hasChildren state changes\n\t\t\tthis.viewSetHasChildren();\n\t\t}\n\t\tfor(var i=0; i<this.children.length; i++) {\n\t\t\tvar child = this.children[i];\n\t\t\t\/\/dojo.profile.start(\"setChildren - create \"+this);\n\t\t\tif (!(child instanceof dojo.widget.Widget)) {\n\t\t\t\tchild = this.children[i] = this.tree.createNode(child);\n\t\t\t\tvar childWidgetCreated = true;\t\n\t\t\t\t\/\/dojo.debugShallow(child)\n\t\t\t\t\/\/dojo.debug(\"setChildren creates node \"+child);\n\t\t\t} else {\n\t\t\t\tvar childWidgetCreated = false;\n\t\t\t}\n\t\t\t\/\/dojo.profile.end(\"setChildren - create \"+this);\n\t\t\t\/\/dojo.profile.start(\"setChildren - attach \"+this);\n\t\t\tif (!child.parent) { \/\/ detached child\n\t\t\t\t\/\/dojo.debug(\"detached child \"+child);\n\t\t\t\tchild.parent = this;\n\t\t\t\t\/\/dojo.profile.start(\"setChildren - updateTree \"+this);\n\t\t\t\tif (this.tree !== child.tree) {\t\t\t\t\n\t\t\t\t\tchild.updateTree(this.tree);\n\t\t\t\t}\n\t\t\t\t\/\/dojo.profile.end(\"setChildren - updateTree \"+this);\n\t\t\t\t\/\/dojo.debug(\"Add layout for \"+child);\n\t\t\t\tchild.viewAddLayout();\n\t\t\t\tthis.containerNode.appendChild(child.domNode);\n\t\t\t\tvar message = {\n\t\t\t\t\tchild: child,\n\t\t\t\t\tindex: i,\n\t\t\t\t\tparent: this,\n\t\t\t\t\tchildWidgetCreated: childWidgetCreated\n\t\t\t\t}\n\t\t\t\tdelete dojo.widget.manager.topWidgets[child.widgetId];\n\t\t\t\t\/\/dojo.profile.start(\"setChildren - event \"+this);\n\t\t\t\t\/\/dojo.debug(\"publish \"+this.tree.eventNames.afterAddChild)\n\t\t\t\tdojo.event.topic.publish(this.tree.eventNames.afterAddChild, message);\n\t\t\t\t\/\/dojo.profile.end(\"setChildren - event \"+this);\n\t\t\t}\n\t\t\tif (this.tree.eagerWidgetInstantiation) {\n\t\t\t\tdojo.lang.forEach(this.children, function(child) {\n\t\t\t\t\tchild.setChildren();\n\t\t\t\t});\n\t\t\t}\n\t\t\t\/\/dojo.profile.end(\"setChildren - attach \"+this);\n\t\t}\n\t\t\/\/dojo.profile.end(\"setChildren \"+this);","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.doAddChild":{"meta":{"summary":"","parameters":{"child":{"type":""},"index":{"type":""}},"src":" \treturn this.addChild(child, index, true);","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.addChild":{"meta":{"summary":"","parameters":{"child":{"type":""},"index":{"type":""},"dontPublishEvent":{"type":""}},"src":" \tif (dojo.lang.isUndefined(index)) {\n\t\t\tindex = this.children.length;\n\t\t}\n\t\t\/\/dojo.debug(\"doAddChild \"+index+\" called for \"+this+\" child \"+child+\" existing children \"+(this.children.length ? this.children : \"<no children>\"));\n\t\tif (!child.isTreeNode){\n\t\t\tdojo.raise(\"You can only add TreeNode widgets to a \"+this.widgetType+\" widget!\");\n\t\t\treturn;\n\t\t}\n\t\tthis.children.splice(index, 0, child);\n\t\tchild.parent = this;\n\t\tchild.addedTo(this, index, dontPublishEvent);\n\t\t\/\/ taken from DomWidget.registerChild\n\t\t\/\/ delete from widget list that are notified on resize etc (no parent)\n\t\tdelete dojo.widget.manager.topWidgets[child.widgetId];","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.onShow":{"meta":{"summary":"","src":"        this.animationInProgress=false;","prototype":"dojo.widget.TreeWithNode"}},"dojo.widget.TreeWithNode.onHide":{"meta":{"summary":"","src":"        this.animationInProgress=false;","prototype":"dojo.widget.TreeWithNode"}}},"objects":{"dojo.widget.TreeWithNode.loadStates":{"meta":{"variables":["UNCHECKED","LOADING","LOADED"]}}}}},"dojo.widget.UsTextbox":{"meta":{"requires":{"common":["dojo.widget.ValidationTextbox","dojo.validate.us"]},"functions":{"dojo.widget.UsStateTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"instance_variables":["flags.allowTerritories","flags.allowMilitary"],"summary":"a Textbox which tests for a United States state abbreviation"}},"dojo.widget.UsStateTextbox.mixInProperties":{"meta":{"summary":"see dojo.widget.Widget","parameters":{"localProperties":{"type":"Object"}},"src":"\t\t\t\/\/ Initialize properties in super-class.\n\t\t\tdojo.widget.UsStateTextbox.superclass.mixInProperties.apply(this, arguments);\n\t\t\t\/\/ Get properties from markup attributes, and assign to flags object.\n\t\t\tif(localProperties.allowterritories){\n\t\t\t\tthis.flags.allowTerritories = (localProperties.allowterritories == \"true\");\n\t\t\t}\n\t\t\tif(localProperties.allowmilitary){\n\t\t\t\tthis.flags.allowMilitary = (localProperties.allowmilitary == \"true\");\n\t\t\t}","call_chain":["dojo.widget.UsStateTextbox.superclass.mixInProperties"],"prototype":"dojo.widget.UsStateTextbox"}},"dojo.widget.UsStateTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\treturn dojo.validate.us.isState(this.textbox.value, this.flags);","prototype":"dojo.widget.UsStateTextbox"}},"dojo.widget.UsZipTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"summary":"a Textbox which tests for a United States postal code"}},"dojo.widget.UsZipTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\treturn dojo.validate.us.isZipCode(this.textbox.value);","prototype":"dojo.widget.UsZipTextbox"}},"dojo.widget.UsSocialSecurityNumberTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"summary":"a Textbox which tests for a United States Social Security number"}},"dojo.widget.UsSocialSecurityNumberTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\treturn dojo.validate.us.isSocialSecurityNumber(this.textbox.value);","prototype":"dojo.widget.UsSocialSecurityNumberTextbox"}},"dojo.widget.UsPhoneNumberTextbox":{"meta":{"prototype_chain":["dojo.widget.ValidationTextbox"],"call_chain":["dojo.widget.ValidationTextbox"],"summary":"a Textbox which tests for a United States 10-digit telephone number, extension is optional."}},"dojo.widget.UsPhoneNumberTextbox.isValid":{"meta":{"summary":"see dojo.widget.ValidationTextbox","src":" \t\treturn dojo.validate.us.isPhoneNumber(this.textbox.value);","prototype":"dojo.widget.UsPhoneNumberTextbox"}}}}},"dojo.widget.ValidationTextbox":{"meta":{"requires":{"common":["dojo.widget.Textbox","dojo.i18n.common"]},"functions":{"dojo.widget.ValidationTextbox":{"meta":{"prototype_chain":["dojo.widget.Textbox"],"call_chain":["dojo.widget.Textbox"],"prototype_variables":["required","rangeClass","invalidClass","missingClass","classPrefix","size","maxlength","promptMessage","invalidMessage","missingMessage","rangeMessage","listenOnKeyPress","htmlfloat","lastCheckedValue","templatePath","templateCssPath","invalidSpan","missingSpan","rangeSpan"],"variables":["required","rangeClass","invalidClass","missingClass","classPrefix","size","maxlength","promptMessage","invalidMessage","missingMessage","rangeMessage","listenOnKeyPress","htmlfloat","lastCheckedValue","templatePath","templateCssPath","invalidSpan","missingSpan","rangeSpan"],"instance_variables":["textbox.value","lastCheckedValue","missingSpan.style.display","invalidSpan.style.display","rangeSpan.style.display","messages","textbox.isValid","textbox.isMissing","textbox.isInRange","flags"],"summary":"A subclass of Textbox. Over-ride isValid in subclasses to perform specific kinds of validation. this property isn't a primitive and needs to be created on a per-item basis.","src":" \tthis.flags = {};"},"extra":{"variables":{"required":{"type":"default","summary":"values for new subclass properties Boolean Can be true or false, default is false."},"invalidClass":{"type":"String","summary":"Class used to format displayed text in page if necessary to override default class"},"missingClass":{"type":"String","summary":"Override default class used for missing input data"},"size":{"type":"String","summary":"Basic input tag size declaration."},"maxlength":{"type":"String","summary":"Basic input tag maxlength declaration."},"promptMessage":{"type":"String","summary":"Will not issue invalid message if field is populated with default user-prompt text"},"invalidMessage":{"type":"String","summary":"The message to display if value is invalid."},"missingMessage":{"type":"String","summary":"The message to display if value is missing."},"listenOnKeyPress":{"type":"Boolean","summary":"Updates messages on each key press. Default is true. new DOM nodes"}}}},"dojo.widget.ValidationTextbox.getValue":{"meta":{"summary":"","src":" \t\treturn this.textbox.value;","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.setValue":{"meta":{"summary":"","parameters":{"value":{"type":""}},"src":" \t\tthis.textbox.value = value;\n\t\t\tthis.update();","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.isValid":{"meta":{"summary":"Need to over-ride with your own validation code in subclasses","src":" \t\treturn true;","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.isInRange":{"meta":{"summary":"Need to over-ride with your own validation code in subclasses","src":" \t\treturn true;","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.isEmpty":{"meta":{"summary":"Checks for whitespace","src":" \t\treturn ( \/^\\s*$\/.test(this.textbox.value) ); \/\/ Boolean","returns":"Boolean","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.isMissing":{"meta":{"summary":"Checks to see if value is required and is whitespace","src":" \t\treturn ( this.required && this.isEmpty() ); \/\/ Boolean","returns":"Boolean","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.update":{"meta":{"summary":"Called by oninit, onblur, and onkeypress.","src":" \t\tthis.lastCheckedValue = this.textbox.value;\n\t\t\tthis.missingSpan.style.display = \"none\";\n\t\t\tthis.invalidSpan.style.display = \"none\";\n\t\t\tthis.rangeSpan.style.display = \"none\";\n\t\t\tvar empty = this.isEmpty();\n\t\t\tvar valid = true;\n\t\t\tif(this.promptMessage != this.textbox.value){ \n\t\t\t\tvalid = this.isValid(); \n\t\t\t}\n\t\t\tvar missing = this.isMissing();\n\t\t\t\/\/ Display at most one error message\n\t\t\tif(missing){\n\t\t\t\tthis.missingSpan.style.display = \"\";\n\t\t\t}else if( !empty && !valid ){\n\t\t\t\tthis.invalidSpan.style.display = \"\";\n\t\t\t}else if( !empty && !this.isInRange() ){\n\t\t\t\tthis.rangeSpan.style.display = \"\";\n\t\t\t}\n\t\t\tthis.highlight();","description":"Show missing or invalid messages if appropriate, and highlight textbox field.","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.updateClass":{"meta":{"summary":"used to ensure that only 1 validation class is set at a time","parameters":{"className":{"type":""}},"src":" \t\tvar pre = this.classPrefix;\n\t\t\tdojo.html.removeClass(this.textbox,pre+\"Empty\");\n\t\t\tdojo.html.removeClass(this.textbox,pre+\"Valid\");\n\t\t\tdojo.html.removeClass(this.textbox,pre+\"Invalid\");\n\t\t\tdojo.html.addClass(this.textbox,pre+className);","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.highlight":{"meta":{"summary":"by Called oninit, and onblur. highlight textbox background","src":" \t\tif (this.isEmpty()) {\n\t\t\t\tthis.updateClass(\"Empty\");\n\t\t\t}else if (this.isValid() && this.isInRange() ){\n\t\t\t\tthis.updateClass(\"Valid\");\n\t\t\t}else if(this.textbox.value != this.promptMessage){ \n\t\t\t\tthis.updateClass(\"Invalid\");\n\t\t\t}else{\n\t\t\t\tthis.updateClass(\"Empty\");\n\t\t\t}","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.onfocus":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \t\tif ( !this.listenOnKeyPress) {\n\t\t\t\tthis.updateClass(\"Empty\");\n\/\/\t\t\t    this.textbox.style.backgroundColor = \"\";\n\t\t\t}","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.onblur":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \t\tthis.filter();\n\t\t\tthis.update(); ","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.onkeyup":{"meta":{"summary":"","parameters":{"evt":{"type":""}},"src":" \t\tif(this.listenOnKeyPress){ \n\t\t\t\t\/\/this.filter();  trim is problem if you have to type two words\n\t\t\t\tthis.update(); \n\t\t\t}else if (this.textbox.value != this.lastCheckedValue){\n\t\t\t\tthis.updateClass(\"Empty\");\n\/\/\t\t\t    this.textbox.style.backgroundColor = \"\";\n\t\t\t}","prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.postMixInProperties":{"meta":{"summary":"","parameters":{"localProperties":{"type":""},"frag":{"type":""}},"src":" \t\tdojo.widget.ValidationTextbox.superclass.postMixInProperties.apply(this, arguments);\n\t\t\tthis.messages = dojo.i18n.getLocalization(\"dojo.widget\", \"validate\", this.lang);\n\t\t\tdojo.lang.forEach([\"invalidMessage\", \"missingMessage\", \"rangeMessage\"], function(prop) {\n\t\t\t\tif(this[prop]){ this.messages[prop] = this[prop]; }\n\t\t\t}, this);","call_chain":["dojo.widget.ValidationTextbox.superclass.postMixInProperties"],"prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.fillInTemplate":{"meta":{"summary":"","src":" \t\tdojo.widget.ValidationTextbox.superclass.fillInTemplate.apply(this, arguments);\n\t\t\t\/\/ Attach isMissing and isValid methods to the textbox.\n\t\t\t\/\/ We may use them later in connection with a submit button widget.\n\t\t\t\/\/ TODO: this is unorthodox; it seems better to do it another way -- Bill\n\t\t\tthis.textbox.isValid = function() { this.isValid.call(this); };\n\t\t\tthis.textbox.isMissing = function() { this.isMissing.call(this); };\n\t\t\tthis.textbox.isInRange = function() { this.isInRange.call(this); };\n\t\t\tdojo.html.setClass(this.invalidSpan,this.invalidClass);\n\t\t\tthis.update(); \n\t\t\t\/\/ apply any filters to initial value\n\t\t\tthis.filter();\n\t\t\t\/\/ set table to be inlined (technique varies by browser)\n\t\t\t\/\/ TODO: use method in dojo.html that does this\n\t\t\tif(dojo.render.html.ie){ dojo.html.addClass(this.domNode, \"ie\"); }\n\t\t\tif(dojo.render.html.moz){ dojo.html.addClass(this.domNode, \"moz\"); }\n\t\t\tif(dojo.render.html.opera){ dojo.html.addClass(this.domNode, \"opera\"); }\n\t\t\tif(dojo.render.html.safari){ dojo.html.addClass(this.domNode, \"safari\"); }","call_chain":["dojo.widget.ValidationTextbox.superclass.fillInTemplate","this.isValid","this.isMissing","this.isInRange"],"prototype":"dojo.widget.ValidationTextbox"}},"dojo.widget.ValidationTextbox.fillInTemplate.textbox.isValid":{"meta":{"summary":"","src":" \t\tthis.textbox.isValid = function() { this.isValid.call(this);    ","call_chain":["this.isValid"],"instance":"dojo.widget.ValidationTextbox.fillInTemplate"}},"dojo.widget.ValidationTextbox.fillInTemplate.textbox.isMissing":{"meta":{"summary":"","src":" \t\tthis.textbox.isMissing = function() { this.isMissing.call(this);    ","call_chain":["this.isMissing"],"instance":"dojo.widget.ValidationTextbox.fillInTemplate"}},"dojo.widget.ValidationTextbox.fillInTemplate.textbox.isInRange":{"meta":{"summary":"","src":" \t\tthis.textbox.isInRange = function() { this.isInRange.call(this);    ","call_chain":["this.isInRange"],"instance":"dojo.widget.ValidationTextbox.fillInTemplate"}}}}},"dojo.widget.Widget":{"meta":{"requires":{"common":["dojo.lang.func","dojo.lang.array","dojo.lang.extras","dojo.lang.declare","dojo.ns","dojo.widget.Manager","dojo.event.*","dojo.a11y"]},"functions":{"dojo.widget.Widget":{"meta":{"prototype_variables":["parent","isTopLevel","disabled","isContainer","widgetId","widgetType","ns"],"variables":["parent","isTopLevel","disabled","isContainer","widgetId","widgetType","ns"],"instance_variables":["disabled","ns","children","extraArgs"],"summary":"","src":"\t\t\/\/ children: Array\n\t\t\/\/\t\ta list of all of the widgets that have been added as children of\n\t\t\/\/\t\tthis component. Should only have values if isContainer is true.\n\t\tthis.children = [];\n\t\t\/\/ extraArgs: Object\n\t\t\/\/\t\ta map of properties which the widget system tried to assign from\n\t\t\/\/\t\tuser input but did not correspond to any of the properties set on\n\t\t\/\/\t\tthe class prototype. These names will also be available in all\n\t\t\/\/\t\tlower-case form in this map\n\t\tthis.extraArgs = {};"},"extra":{"variables":{"parent":{"type":"Widget","summary":"the parent of this widget"}}}},"dojo.widget.Widget.getNamespacedType":{"meta":{"summary":"get the \"full\" name of the widget. If the widget comes from the \"dojo\" namespace and is a Button, calling this method will return \"dojo:button\", all lower-case","src":" \treturn (this.ns ? this.ns + \":\" + this.widgetType : this.widgetType).toLowerCase(); \/\/ String","returns":"String","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.toString":{"meta":{"summary":"","src":" \treturn '[Widget ' + this.getNamespacedType() + ', ' + (this.widgetId || 'NO ID') + ']'; \/\/ String","returns":"String","prototype":"dojo.widget.Widget"},"extra":{"returns":"a string that represents the widget. When a widget is cast to a string, this method will be used to generate the output. Currently, it does not implement any sort of reversable serialization."}},"dojo.widget.Widget.repr":{"meta":{"summary":"returns the string representation of the widget.","src":" \treturn this.toString(); \/\/ String","returns":"String","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.enable":{"meta":{"summary":"enables the widget, usually involving unmasking inputs and turning on event handlers. Not implemented here.","src":" \tthis.disabled = false;","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.disable":{"meta":{"summary":"disables the widget, usually involves masking inputs and unsetting event handlers. Not implemented here.","src":" \tthis.disabled = true;","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.onResized":{"meta":{"summary":"A signal that widgets will call when they have been resized. Can be connected to for determining if a layout needs to be reflowed. Clients should override this function to do special processing, then call this.notifyChildrenOfResize() to notify children of resize.","src":" \tthis.notifyChildrenOfResize();","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.notifyChildrenOfResize":{"meta":{"summary":"dispatches resized events to all children of this widget","src":" \tfor(var i=0; i<this.children.length; i++){\n\t\t\tvar child = this.children[i];\n\t\t\t\/\/dojo.debug(this.widgetId + \" resizing child \" + child.widgetId);\n\t\t\tif( child.onResized ){\n\t\t\t\tchild.onResized();\n\t\t\t}\n\t\t}","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.create":{"meta":{"summary":"'create' manages the initialization part of the widget lifecycle. It's called implicitly when any widget is created. All other initialization functions for widgets, except for the constructor, are called as a result of 'create' being fired.","parameters":{"args":{"type":""},"fragment":{"type":""},"parent":{"type":""},"ns":{"type":""}},"src":"\t\t\/\/dojo.profile.start(this.widgetType + \" create\");\n\t\tif(ns){\n\t\t\tthis.ns = ns;\n\t\t}\n\t\t\/\/ dojo.debug(this.widgetType, \"create\");\n\t\t\/\/dojo.profile.start(this.widgetType + \" satisfyPropertySets\");\n\t\tthis.satisfyPropertySets(args, fragment, parent);\n\t\t\/\/dojo.profile.end(this.widgetType + \" satisfyPropertySets\");\n\t\t\/\/ dojo.debug(this.widgetType, \"-> mixInProperties\");\n\t\t\/\/dojo.profile.start(this.widgetType + \" mixInProperties\");\n\t\tthis.mixInProperties(args, fragment, parent);\n\t\t\/\/dojo.profile.end(this.widgetType + \" mixInProperties\");\n\t\t\/\/ dojo.debug(this.widgetType, \"-> postMixInProperties\");\n\t\t\/\/dojo.profile.start(this.widgetType + \" postMixInProperties\");\n\t\tthis.postMixInProperties(args, fragment, parent);\n\t\t\/\/dojo.profile.end(this.widgetType + \" postMixInProperties\");\n\t\t\/\/ dojo.debug(this.widgetType, \"-> dojo.widget.manager.add\");\n\t\tdojo.widget.manager.add(this);\n\t\t\/\/ dojo.debug(this.widgetType, \"-> buildRendering\");\n\t\t\/\/dojo.profile.start(this.widgetType + \" buildRendering\");\n\t\tthis.buildRendering(args, fragment, parent);\n\t\t\/\/dojo.profile.end(this.widgetType + \" buildRendering\");\n\t\t\/\/ dojo.debug(this.widgetType, \"-> initialize\");\n\t\t\/\/dojo.profile.start(this.widgetType + \" initialize\");\n\t\tthis.initialize(args, fragment, parent);\n\t\t\/\/dojo.profile.end(this.widgetType + \" initialize\");\n\t\t\/\/ dojo.debug(this.widgetType, \"-> postInitialize\");\n\t\t\/\/ postinitialize includes subcomponent creation\n\t\t\/\/ profile is put directly to function\n\t\tthis.postInitialize(args, fragment, parent);\n\t\t\/\/ dojo.debug(this.widgetType, \"-> postCreate\");\n\t\t\/\/dojo.profile.start(this.widgetType + \" postCreate\");\n\t\tthis.postCreate(args, fragment, parent);\n\t\t\/\/dojo.profile.end(this.widgetType + \" postCreate\");\n\t\t\/\/ dojo.debug(this.widgetType, \"done!\");\n\t\t\/\/dojo.profile.end(this.widgetType + \" create\");\n\t\treturn this;","description":"to understand the process by which widgets are instantiated, it is critical to understand what other methods 'create' calls and which of them you'll want to over-ride. Of course, adventurous developers could over-ride 'create' entirely, but this should only be done as a last resort. Below is a list of the methods that are called, in the order they are fired, along with notes about what they do and if\/when you should over-ride them in your widget: mixInProperties: takes the args and does lightweight type introspection on pre-existing object properties to initialize widget values by casting the values that are passed in args postMixInProperties: a stub function that you can over-ride to modify variables that may have been naively assigned by mixInProperties # widget is added to manager object here buildRendering subclasses use this method to handle all UI initialization initialize: a stub function that you can over-ride. postInitialize: a stub function that you can over-ride. postCreate a stub function that you can over-ride to modify take actions once the widget has been placed in the UI all of these functions are passed the same arguments as are passed to 'create'","prototype":"dojo.widget.Widget"},"extra":{"parameters":{"args":{"type":"Object","summary":"a normalized view of the parameters that the widget should take"},"fragment":{"type":"Object","summary":"if the widget is being instantiated from markup, this object"},"parent":{"type":"Widget?","summary":"the widget, if any, that this widget will be the child of. If none is passed, the global default widget is used."}},"variables":{"ns":{"type":"String?","summary":"what namespace the widget belongs to"}}}},"dojo.widget.Widget.destroy":{"meta":{"summary":"Destroy this widget and it's descendants. This is the generic \"destructor\" function that all widget users should call to clealy discard with a widget. Once a widget is destroyed, it's removed from the manager object.","parameters":{"finalize":{"type":""}},"src":"\t\t\/\/ FIXME: this is woefully incomplete\n\t\tif(this.parent){\n\t\t\tthis.parent.removeChild(this);\n\t\t}\n\t\tthis.destroyChildren();\n\t\tthis.uninitialize();\n\t\tthis.destroyRendering(finalize);\n\t\tdojo.widget.manager.removeById(this.widgetId);","prototype":"dojo.widget.Widget"},"extra":{"parameters":{"finalize":{"type":"Boolean","summary":"is this function being called part of global environment tear-down?"}}}},"dojo.widget.Widget.destroyChildren":{"meta":{"summary":"Recursively destroy the children of this widget and their descendents.","src":" \tvar widget;\n\t\tvar i=0;\n\t\twhile(this.children.length > i){\n\t\t\twidget = this.children[i];\n\t\t\tif (widget instanceof dojo.widget.Widget) { \/\/ find first widget\n\t\t\t\tthis.removeChild(widget);\n\t\t\t\twidget.destroy();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ti++; \/\/ skip data object\n\t\t}","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.getChildrenOfType":{"meta":{"summary":"return an array of descendant widgets who match the passed type","parameters":{"type":{"type":"String"},"recurse":{"type":""}},"src":" \tvar ret = [];\n\t\tvar isFunc = dojo.lang.isFunction(type);\n\t\tif(!isFunc){\n\t\t\ttype = type.toLowerCase();\n\t\t}\n\t\tfor(var x=0; x<this.children.length; x++){\n\t\t\tif(isFunc){\n\t\t\t\tif(this.children[x] instanceof type){\n\t\t\t\t\tret.push(this.children[x]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(this.children[x].widgetType.toLowerCase() == type){\n\t\t\t\t\tret.push(this.children[x]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(recurse){\n\t\t\t\tret = ret.concat(this.children[x].getChildrenOfType(type, recurse));\n\t\t\t}\n\t\t}\n\t\treturn ret; \/\/ Array","returns":"Array","prototype":"dojo.widget.Widget"},"extra":{"parameters":{"recurse":{"type":"Boolean","summary":"should we try to get all descendants that match? Defaults to false."}}}},"dojo.widget.Widget.getDescendants":{"meta":{"summary":"","src":" \tvar result = [];\n\t\tvar stack = [this];\n\t\tvar elem;\n\t\twhile ((elem = stack.pop())){\n\t\t\tresult.push(elem);\n\t\t\t\/\/ a child may be data object without children field set (not widget)\n\t\t\tif (elem.children) {\n\t\t\t\tdojo.lang.forEach(elem.children, function(elem) { stack.push(elem); });\n\t\t\t}\n\t\t}\n\t\treturn result; \/\/ Array","returns":"Array","prototype":"dojo.widget.Widget"},"extra":{"returns":"a flattened array of all direct descendants including self"}},"dojo.widget.Widget.isFirstChild":{"meta":{"summary":"","src":" \treturn this === this.parent.children[0]; \/\/ Boolean","returns":"Boolean","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.isLastChild":{"meta":{"summary":"","src":" \treturn this === this.parent.children[this.parent.children.length-1]; \/\/ Boolean","returns":"Boolean","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.satisfyPropertySets":{"meta":{"summary":"not implemented!","parameters":{"args":{"type":""}},"src":"\t\t\/\/ dojo.profile.start(\"satisfyPropertySets\");\n\t\t\/\/ get the default propsets for our component type\n\t\t\/*\n\t\tvar typePropSets = []; \/\/ FIXME: need to pull these from somewhere!\n\t\tvar localPropSets = []; \/\/ pull out propsets from the parser's return structure\n\t\t\/\/ for(var x=0; x<args.length; x++){\n\t\t\/\/ }\n\t\tfor(var x=0; x<typePropSets.length; x++){\n\t\t}\n\t\tfor(var x=0; x<localPropSets.length; x++){\n\t\t}\n\t\t*\/\n\t\t\/\/ dojo.profile.end(\"satisfyPropertySets\");\n\t\treturn args;","returns":"pull out propsets from the parser's return structure","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.mixInProperties":{"meta":{"summary":"takes the list of properties listed in args and sets values of the current object based on existence of properties with the same name (case insensitive) and the type of the pre-existing property. This is a lightweight conversion and is not intended to capture custom type semantics.","parameters":{"args":{"type":""},"frag":{"type":"Object"}},"src":" \tif((args[\"fastMixIn\"])||(frag[\"fastMixIn\"])){\n\t\t\t\/\/ dojo.profile.start(\"mixInProperties_fastMixIn\");\n\t\t\t\/\/ fast mix in assumes case sensitivity, no type casting, etc...\n\t\t\t\/\/ dojo.lang.mixin(this, args);\n\t\t\tfor(var x in args){\n\t\t\t\tthis[x] = args[x];\n\t\t\t}\n\t\t\t\/\/ dojo.profile.end(\"mixInProperties_fastMixIn\");\n\t\t\treturn;\n\t\t}\n\t\t\/\/ dojo.profile.start(\"mixInProperties\");\n\t\tvar undef;\n\t\t\/\/ NOTE: we cannot assume that the passed properties are case-correct\n\t\t\/\/ (esp due to some browser bugs). Therefore, we attempt to locate\n\t\t\/\/ properties for assignment regardless of case. This may cause\n\t\t\/\/ problematic assignments and bugs in the future and will need to be\n\t\t\/\/ documented with big bright neon lights.\n\t\t\/\/ FIXME: fails miserably if a mixin property has a default value of null in \n\t\t\/\/ a widget\n\t\t\/\/ NOTE: caching lower-cased args in the prototype is only \n\t\t\/\/ acceptable if the properties are invariant.\n\t\t\/\/ if we have a name-cache, get it\n\t\tvar lcArgs = dojo.widget.lcArgsCache[this.widgetType];\n\t\tif ( lcArgs == null ){\n\t\t\t\/\/ build a lower-case property name cache if we don't have one\n\t\t\tlcArgs = {};\n\t\t\tfor(var y in this){\n\t\t\t\tlcArgs[((new String(y)).toLowerCase())] = y;\n\t\t\t}\n\t\t\tdojo.widget.lcArgsCache[this.widgetType] = lcArgs;\n\t\t}\n\t\tvar visited = {};\n\t\tfor(var x in args){\n\t\t\tif(!this[x]){ \/\/ check the cache for properties\n\t\t\t\tvar y = lcArgs[(new String(x)).toLowerCase()];\n\t\t\t\tif(y){\n\t\t\t\t\targs[y] = args[x];\n\t\t\t\t\tx = y; \n\t\t\t\t}\n\t\t\t}\n\t\t\tif(visited[x]){ continue; }\n\t\t\tvisited[x] = true;\n\t\t\tif((typeof this[x]) != (typeof undef)){\n\t\t\t\tif(typeof args[x] != \"string\"){\n\t\t\t\t\tthis[x] = args[x];\n\t\t\t\t}else{\n\t\t\t\t\tif(dojo.lang.isString(this[x])){\n\t\t\t\t\t\tthis[x] = args[x];\n\t\t\t\t\t}else if(dojo.lang.isNumber(this[x])){\n\t\t\t\t\t\tthis[x] = new Number(args[x]); \/\/ FIXME: what if NaN is the result?\n\t\t\t\t\t}else if(dojo.lang.isBoolean(this[x])){\n\t\t\t\t\t\tthis[x] = (args[x].toLowerCase()==\"false\") ? false : true;\n\t\t\t\t\t}else if(dojo.lang.isFunction(this[x])){\n\t\t\t\t\t\t\/\/ FIXME: need to determine if always over-writing instead\n\t\t\t\t\t\t\/\/ of attaching here is appropriate. I suspect that we\n\t\t\t\t\t\t\/\/ might want to only allow attaching w\/ action items.\n\t\t\t\t\t\t\/\/ RAR, 1\/19\/05: I'm going to attach instead of\n\t\t\t\t\t\t\/\/ over-write here. Perhaps function objects could have\n\t\t\t\t\t\t\/\/ some sort of flag set on them? Or mixed-into objects\n\t\t\t\t\t\t\/\/ could have some list of non-mutable properties\n\t\t\t\t\t\t\/\/ (although I'm not sure how that would alleviate this\n\t\t\t\t\t\t\/\/ particular problem)? \n\t\t\t\t\t\t\/\/ this[x] = new Function(args[x]);\n\t\t\t\t\t\t\/\/ after an IRC discussion last week, it was decided\n\t\t\t\t\t\t\/\/ that these event handlers should execute in the\n\t\t\t\t\t\t\/\/ context of the widget, so that the \"this\" pointer\n\t\t\t\t\t\t\/\/ takes correctly.\n\t\t\t\t\t\t\/\/ argument that contains no punctuation other than . is \n\t\t\t\t\t\t\/\/ considered a function spec, not code\n\t\t\t\t\t\tif(args[x].search(\/[^\\w\\.]+\/i) == -1){\n\t\t\t\t\t\t\tthis[x] = dojo.evalObjPath(args[x], false);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tvar tn = dojo.lang.nameAnonFunc(new Function(args[x]), this);\n\t\t\t\t\t\t\tdojo.event.kwConnect({\n\t\t\t\t\t\t\t\tsrcObj: this, \n\t\t\t\t\t\t\t\tsrcFunc: x, \n\t\t\t\t\t\t\t\tadviceObj: this, \n\t\t\t\t\t\t\t\tadviceFunc: tn\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(dojo.lang.isArray(this[x])){ \/\/ typeof [] == \"object\"\n\t\t\t\t\t\tthis[x] = args[x].split(\";\");\n\t\t\t\t\t} else if (this[x] instanceof Date) {\n\t\t\t\t\t\tthis[x] = new Date(Number(args[x])); \/\/ assume timestamp\n\t\t\t\t\t}else if(typeof this[x] == \"object\"){ \n\t\t\t\t\t\t\/\/ FIXME: should we be allowing extension here to handle\n\t\t\t\t\t\t\/\/ other object types intelligently?\n\t\t\t\t\t\t\/\/ if a plain string is passed to a property of type dojo.uri.Uri,\n\t\t\t\t\t\t\/\/ we assume it is relative to root of dojo\n\t\t\t\t\t\tif (this[x] instanceof dojo.uri.Uri){\n\t\t\t\t\t\t\tthis[x] = dojo.uri.dojoUri(args[x]);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\/\/ FIXME: unlike all other types, we do not replace the\n\t\t\t\t\t\t\t\/\/ object with a new one here. Should we change that?\n\t\t\t\t\t\t\tvar pairs = args[x].split(\";\");\n\t\t\t\t\t\t\tfor(var y=0; y<pairs.length; y++){\n\t\t\t\t\t\t\t\tvar si = pairs[y].indexOf(\":\");\n\t\t\t\t\t\t\t\tif((si != -1)&&(pairs[y].length>si)){\n\t\t\t\t\t\t\t\t\tthis[x][pairs[y].substr(0, si).replace(\/^\\s+|\\s+$\/g, \"\")] = pairs[y].substr(si+1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\t\/\/ the default is straight-up string assignment. When would\n\t\t\t\t\t\t\/\/ we ever hit this?\n\t\t\t\t\t\tthis[x] = args[x];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t\/\/ collect any extra 'non mixed in' args\n\t\t\t\tthis.extraArgs[x.toLowerCase()] = args[x];\n\t\t\t}\n\t\t}\n\t\t\/\/ dojo.profile.end(\"mixInProperties\");","description":"The mix-in code attempts to do some type-assignment based on PRE-EXISTING properties of the \"this\" object. When a named property of args is located, it is first tested to make sure that the current object already \"has one\". Properties which are undefined in the base widget are NOT settable here. The next step is to try to determine type of the pre-existing property. If it's a string, the property value is simply assigned. If a function, it is first cast using \"new Function()\" and the execution scope modified such that it always evaluates in the context of the current object. This listener is then added to the original function via dojo.event.connect(). If an Array, the system attempts to split the string value on \";\" chars, and no further processing is attempted (conversion of array elements to a integers, for instance). If the property value is an Object (testObj.constructor === Object), the property is split first on \";\" chars, secondly on \":\" chars, and the resulting key\/value pairs are assigned to an object in a map style. The onus is on the property user to ensure that all property values are converted to the expected type before usage. Properties which do not occur in the \"this\" object are assigned to the this.extraArgs map using both the original name and the lower-case name of the property. This allows for consistent access semantics regardless of the case preservation of the source of the property names.","prototype":"dojo.widget.Widget"},"extra":{"parameters":{"args":{"type":"Object","summary":"A map of properties and values to set on the current object. By default it is assumed that properties in args are in string form and need to be converted. However, if there is a 'fastMixIn' property with the value 'true' in the args param, this assumption is ignored and all values in args are copied directly to the current object without any form of type casting."}}}},"dojo.widget.Widget.postMixInProperties":{"meta":{"summary":"Called after the parameters to the widget have been read-in, but before the widget template is instantiated. Especially useful to set properties that are referenced in the widget template.","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"},"parent":{"type":"Widget"}},"src":"\t\t\/\/ summary\n\t\t\/\/\tCalled after the parameters to the widget have been read-in,\n\t\t\/\/\tbut before the widget template is instantiated.\n\t\t\/\/\tEspecially useful to set properties that are referenced in the widget template.","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.initialize":{"meta":{"summary":"stub function.","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"},"parent":{"type":"Widget"}},"src":" \treturn false;\n\t\t\/\/ dojo.unimplemented(\"dojo.widget.Widget.initialize\");","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.postInitialize":{"meta":{"summary":"stub function.","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"},"parent":{"type":"Widget"}},"src":" \treturn false;","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.postCreate":{"meta":{"summary":"stub function.","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"},"parent":{"type":"Widget"}},"src":" \treturn false;","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.uninitialize":{"meta":{"summary":"stub function. Over-ride to implement custom widget tear-down behavior.","src":" \treturn false;","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.buildRendering":{"meta":{"summary":"stub function. SUBCLASSES MUST IMPLEMENT","parameters":{"args":{"type":"Object"},"frag":{"type":"Object"},"parent":{"type":"Widget"}},"src":" \tdojo.unimplemented(\"dojo.widget.Widget.buildRendering, on \"+this.toString()+\", \");\n\t\treturn false;","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.destroyRendering":{"meta":{"summary":"stub function. SUBCLASSES MUST IMPLEMENT","src":" \tdojo.unimplemented(\"dojo.widget.Widget.destroyRendering\");\n\t\treturn false;","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.addedTo":{"meta":{"summary":"stub function this is just a signal that can be caught","parameters":{"parent":{"type":""}},"src":"\t\t\/\/ summary:\n\t\t\/\/\t\tstub function this is just a signal that can be caught\n\t\t\/\/ parent: Widget\n\t\t\/\/\t\tinstance of dojo.widget.Widget that we were added to","prototype":"dojo.widget.Widget"},"extra":{"parameters":{"parent":{"type":"Widget","summary":"instance of dojo.widget.Widget that we were added to"}}}},"dojo.widget.Widget.addChild":{"meta":{"summary":"stub function. SUBCLASSES MUST IMPLEMENT","parameters":{"child":{"type":""}},"src":" \tdojo.unimplemented(\"dojo.widget.Widget.addChild\");\n\t\treturn false;","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.removeChild":{"meta":{"summary":"removes the passed widget instance from this widget but does not destroy it","parameters":{"widget":{"type":"Widget"}},"src":" \tfor(var x=0; x<this.children.length; x++){\n\t\t\tif(this.children[x] === widget){\n\t\t\t\tthis.children.splice(x, 1);\n\t\t\t\twidget.parent=null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn widget; \/\/ Widget","returns":"Widget","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.getPreviousSibling":{"meta":{"summary":"","src":" \tvar idx = this.getParentIndex();\n\t\t \/\/ first node is idx=0 not found is idx<0\n\t\tif (idx<=0) return null;\n\t\treturn this.parent.children[idx-1]; \/\/ Widget","returns":"Widget","prototype":"dojo.widget.Widget"},"extra":{"returns":"null if this is the first child of the parent, otherwise returns the next sibling to the \"left\"."}},"dojo.widget.Widget.getSiblings":{"meta":{"summary":"gets an array of all children of our parent, including \"this\"","src":" \treturn this.parent.children; \/\/ Array","returns":"Array","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.getParentIndex":{"meta":{"summary":"what index are we at in the parent's children array?","src":" \treturn dojo.lang.indexOf(this.parent.children, this, true); \/\/ int","returns":"int","prototype":"dojo.widget.Widget"}},"dojo.widget.Widget.getNextSibling":{"meta":{"summary":"","src":" \tvar idx = this.getParentIndex();\n\t\tif (idx == this.parent.children.length-1){return null;} \/\/ last node\n\t\tif (idx < 0){return null;} \/\/ not found\n\t\treturn this.parent.children[idx+1]; \/\/ Widget","returns":"mixed","prototype":"dojo.widget.Widget"},"extra":{"returns":"null if this is the last child of the parent, otherwise returns the next sibling to the \"right\"."}},"":{"meta":{"prototype_chain":["superclasses"],"call_chain":["superclasses"]}},"dojo.widget.tags.addParseTreeHandler":{"meta":{"summary":"deprecated!","parameters":{"type":{"type":"String"}},"src":" dojo.deprecated(\"addParseTreeHandler\", \". ParseTreeHandlers are now reserved for components. Any unfiltered DojoML tag without a ParseTreeHandler is assumed to be a widget\", \"0.5\");\n\t\/*\n\tvar ltype = type.toLowerCase();\n\tthis[ltype] = function(fragment, widgetParser, parentComp, insertionIndex, localProps){\n\t\tvar _ltype = ltype;\n\t\tdojo.profile.start(_ltype);\n\t\tvar n = dojo.widget.buildWidgetFromParseTree(ltype, fragment, widgetParser, parentComp, insertionIndex, localProps);\n\t\tdojo.profile.end(_ltype);\n\t\treturn n;\n\t}\n\t*\/"}},"dojo.widget.buildWidgetFromParseTree":{"meta":{"summary":"creates a tree of widgets from the data structure produced by the first-pass parser (frag) test for accessibility mode","parameters":{"type":{"type":"String"},"frag":{"type":"Object"},"parser":{"type":"dojo.widget.Parse"},"parentComp":{"type":"Widget, optional"},"insertionIndex":{"type":"int, optional"},"localProps":{"type":"Object"}},"src":" dojo.a11y.setAccessibleMode();\n\t\/\/dojo.profile.start(\"buildWidgetFromParseTree\");\n\t\/\/ FIXME: for codepath from createComponentFromScript, we are now splitting a path \n\t\/\/ that we already split and then joined\n\tvar stype = type.split(\":\");\n\tstype = (stype.length == 2) ? stype[1] : type;\n\t\/\/ FIXME: we don't seem to be doing anything with this!\n\t\/\/ var propertySets = parser.getPropertySets(frag);\n\tvar localProperties = localProps || parser.parseProperties(frag[frag[\"ns\"]+\":\"+stype]);\n\tvar twidget = dojo.widget.manager.getImplementation(stype,null,null,frag[\"ns\"]);\n\tif(!twidget){\n\t\tthrow new Error('cannot find \"' + type + '\" widget');\n\t}else if (!twidget.create){\n\t\tthrow new Error('\"' + type + '\" widget object has no \"create\" method and does not appear to implement *Widget');\n\t}\n\tlocalProperties[\"dojoinsertionindex\"] = insertionIndex;\n\t\/\/ FIXME: we lose no less than 5ms in construction!\n\tvar ret = twidget.create(localProperties, frag, parentComp, frag[\"ns\"]);\n\t\/\/ dojo.profile.end(\"buildWidgetFromParseTree\");\n\treturn ret;"}},"dojo.widget.defineWidget":{"meta":{"summary":"Create a widget constructor function (aka widgetClass)","parameters":{"widgetClass":{"type":""},"renderer":{"type":""},"superclasses":{"type":""},"init":{"type":""},"props":{"type":""}},"src":"\t\/\/ This meta-function does parameter juggling for backward compat and overloading\n\t\/\/ if 4th argument is a string, we are using the old syntax\n\t\/\/ old sig: widgetClass, superclasses, props (object), renderer (string), init (function)\n\tif(dojo.lang.isString(arguments[3])){\n\t\tdojo.widget._defineWidget(arguments[0], arguments[3], arguments[1], arguments[4], arguments[2]);\n\t}else{\n\t\t\/\/ widgetClass\n\t\tvar args = [ arguments[0] ], p = 3;\n\t\tif(dojo.lang.isString(arguments[1])){\n\t\t\t\/\/ renderer, superclass\n\t\t\targs.push(arguments[1], arguments[2]);\n\t\t}else{\n\t\t\t\/\/ superclass\n\t\t\targs.push('', arguments[1]);\n\t\t\tp = 2;\n\t\t}\n\t\tif(dojo.lang.isFunction(arguments[p])){\n\t\t\t\/\/ init (function), props (object) \n\t\t\targs.push(arguments[p], arguments[p+1]);\n\t\t}else{\n\t\t\t\/\/ props (object) \n\t\t\targs.push(null, arguments[p]);\n\t\t}\n\t\tdojo.widget._defineWidget.apply(this, args);\n\t}","call_chain":["dojo.widget._defineWidget"]},"extra":{"parameters":{"widgetClass":{"type":"String","summary":"the location in the object hierarchy to place the new widget class constructor"},"renderer":{"type":"String","summary":"usually \"html\", determines when this delcaration will be used"},"superclasses":{"type":"Function||Function[","summary":"can be either a single function or an array of functions to be mixed in as superclasses. If an array, only the first will be used to set prototype inheritance."},"init":{"type":"Function","summary":"an optional constructor function. Will be called after superclasses are mixed in."},"props":{"type":"Object","summary":"a map of properties and functions to extend the class prototype with"}}}},"dojo.widget._defineWidget":{"meta":{"summary":"","parameters":{"widgetClass":{"type":"string"},"renderer":{"type":"string"},"superclasses":{"type":"function||array"},"init":{"type":"function"},"props":{"type":"object"}},"src":" var module = widgetClass.split(\".\");\n\tvar type = module.pop(); \/\/ type <= WidgetName, module <= foo.bar.baz<.renderer>\n\tvar regx = \"\\\\.(\" + (renderer ? renderer + '|' : '') + dojo.widget.defineWidget.renderers + \")\\\\.\";\n\tvar r = widgetClass.search(new RegExp(regx));\n\tmodule = (r < 0 ? module.join(\".\") : widgetClass.substr(0, r));\n\t\/\/ deprecated in favor of namespace system, remove for 0.5\n\tdojo.widget.manager.registerWidgetPackage(module);\n\tvar pos = module.indexOf(\".\");\n\tvar nsName = (pos > -1) ? module.substring(0,pos) : module;\n\t\/\/ FIXME: hrm, this might make things simpler\n\t\/\/dojo.widget.tags.addParseTreeHandler(nsName+\":\"+type.toLowerCase());\n\tprops=(props)||{};\n\tprops.widgetType = type;\n\tif((!init)&&(props[\"classConstructor\"])){\n\t\tinit = props.classConstructor;\n\t\tdelete props.classConstructor;\n\t}\n\tdojo.declare(widgetClass, superclasses, init, props);"},"extra":{"parameters":{"widgetClass":{"type":"FIXME","summary":"uncomment next line to test parameter juggling ... remove when confidence improves dojo.debug('(c:)' + widgetClass + '\\n\\n(r:)' + renderer + '\\n\\n(i:)' + init + '\\n\\n(p:)' + props); takes the form foo.bar.baz<.renderer>.WidgetName (e.g. foo.bar.baz.WidgetName or foo.bar.baz.html.WidgetName)"}}}}}}},"dojo.widget.Wizard":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.LayoutContainer","dojo.widget.ContentPane","dojo.event.*","dojo.html.style"]},"functions":{"dojo.widget.WizardContainer":{"meta":{"prototype_chain":["dojo.widget.LayoutContainer"],"call_chain":["dojo.widget.LayoutContainer"],"prototype_variables":["templatePath","templateCssPath","selected","nextButtonLabel","previousButtonLabel","cancelButtonLabel","doneButtonLabel","cancelFunction","hideDisabledButtons"],"variables":["templatePath","templateCssPath","selected","nextButtonLabel","previousButtonLabel","cancelButtonLabel","doneButtonLabel","cancelFunction","hideDisabledButtons"],"instance_variables":["cancelButton.style.display","nextButton.value","previousButton.value","cancelButton.value","doneButton.value","nextButton.disabled","doneButton.style.display","nextButton.style.display","previousButton.disabled","selected"],"summary":"A set of panels that display sequentially, typically notating a step-by-step procedure like an install"}},"dojo.widget.WizardContainer.fillInTemplate":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tdojo.event.connect(this.nextButton, \"onclick\", this, \"_onNextButtonClick\");\n\t\tdojo.event.connect(this.previousButton, \"onclick\", this, \"_onPreviousButtonClick\");\n\t\tif (this.cancelFunction){\n\t\t\tdojo.event.connect(this.cancelButton, \"onclick\", this.cancelFunction);\n\t\t}else{\n\t\t\tthis.cancelButton.style.display = \"none\";\n\t\t}\n\t\tdojo.event.connect(this.doneButton, \"onclick\", this, \"done\");\n\t\tthis.nextButton.value = this.nextButtonLabel;\n\t\tthis.previousButton.value = this.previousButtonLabel;\n\t\tthis.cancelButton.value = this.cancelButtonLabel;\n\t\tthis.doneButton.value = this.doneButtonLabel;","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer._checkButtons":{"meta":{"summary":"","src":" \tvar lastStep = !this.hasNextPanel();\n\t\tthis.nextButton.disabled = lastStep;\n\t\tthis._setButtonClass(this.nextButton);\n\t\tif(this.selected.doneFunction){\n\t\t\tthis.doneButton.style.display = \"\";\n\t\t\t\/\/ hide the next button if this is the last one and we have a done function\n\t\t\tif(lastStep){\n\t\t\t\tthis.nextButton.style.display = \"none\";\n\t\t\t}\n\t\t}else{\n\t\t\tthis.doneButton.style.display = \"none\";\n\t\t}\n\t\tthis.previousButton.disabled = ((!this.hasPreviousPanel()) || (!this.selected.canGoBack));\n\t\tthis._setButtonClass(this.previousButton);","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer._setButtonClass":{"meta":{"summary":"","parameters":{"button":{"type":""}},"src":" \tif(!this.hideDisabledButtons){\n\t\t\tbutton.style.display = \"\";\n\t\t\tdojo.html.setClass(button, button.disabled ? \"WizardButtonDisabled\" : \"WizardButton\");\n\t\t}else{\n\t\t\tbutton.style.display = button.disabled ? \"none\" : \"\";\n\t\t}","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer.registerChild":{"meta":{"summary":"","parameters":{"panel":{"type":""},"insertionIndex":{"type":""}},"src":" \tdojo.widget.WizardContainer.superclass.registerChild.call(this, panel, insertionIndex);\n\t\tthis.wizardPanelContainerNode.appendChild(panel.domNode);\n\t\tpanel.hide();\n\t\tif(!this.selected){\n\t\t\tthis.onSelected(panel);\n\t\t}\n\t\tthis._checkButtons();","call_chain":["dojo.widget.WizardContainer.superclass.registerChild"],"prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer.onSelected":{"meta":{"summary":"Callback when new panel is selected.. Deselect old panel and select new one","parameters":{"panel":{"type":"WizardPanel"}},"src":" \tif(this.selected ){\n\t\t\tif (this.selected._checkPass()) {\n\t\t\t\tthis.selected.hide();\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tpanel.show();\n\t\tthis.selected = panel;","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer.getPanels":{"meta":{"summary":"returns array of WizardPane children","src":" \treturn this.getChildrenOfType(\"WizardPane\", false);\t\t\/\/ WizardPane[]","returns":"WizardPane[]","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer.selectedIndex":{"meta":{"summary":"Returns index (into this.children[]) for currently selected child.","src":" \tif (this.selected) {\n\t\t\treturn dojo.lang.indexOf(this.getPanels(), this.selected);\t\/\/ Integer\n\t\t}\n\t\treturn -1;","returns":"Integer","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer._onNextButtonClick":{"meta":{"summary":"callback when next button is clicked","src":" \tvar selectedIndex = this.selectedIndex();\n\t\tif ( selectedIndex > -1 ) {\n\t\t\tvar childPanels = this.getPanels();\n\t\t\tif (childPanels[selectedIndex + 1]) {\n\t\t\t\tthis.onSelected(childPanels[selectedIndex + 1]);\n\t\t\t}\n\t\t}\n\t\tthis._checkButtons();","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer._onPreviousButtonClick":{"meta":{"summary":"callback when previous button is clicked","src":" \tvar selectedIndex = this.selectedIndex();\n\t\tif ( selectedIndex > -1 ) {\n\t\t\tvar childPanels = this.getPanels();\n\t\t\tif (childPanels[selectedIndex - 1]) {\n\t\t\t\tthis.onSelected(childPanels[selectedIndex - 1]);\n\t\t\t}\n\t\t}\n\t\tthis._checkButtons();","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer.hasNextPanel":{"meta":{"summary":"Returns true if there's a another panel after the current panel","src":" \tvar selectedIndex = this.selectedIndex();\n\t\treturn (selectedIndex < (this.getPanels().length - 1));","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer.hasPreviousPanel":{"meta":{"summary":"Returns true if there's a panel before the current panel","src":" \tvar selectedIndex = this.selectedIndex();\n\t\treturn (selectedIndex > 0);","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardContainer.done":{"meta":{"summary":"Finish the wizard's operation","src":" \tthis.selected.done();","prototype":"dojo.widget.WizardContainer"}},"dojo.widget.WizardPane":{"meta":{"prototype_chain":["dojo.widget.ContentPane"],"call_chain":["dojo.widget.ContentPane"],"prototype_variables":["canGoBack","passFunction","doneFunction"],"variables":["canGoBack","passFunction","doneFunction"],"instance_variables":["passFunction","doneFunction"],"summary":"a panel in a WizardContainer"},"extra":{"variables":{"doneFunction":{"type":"String","summary":"Name of function that is run if you press the \"Done\" button from this panel"}}}},"dojo.widget.WizardPane.postMixInProperties":{"meta":{"summary":"","parameters":{"args":{"type":""},"frag":{"type":""}},"src":" \tif (this.passFunction) {\n\t\t\tthis.passFunction = dj_global[this.passFunction];\n\t\t}\n\t\tif (this.doneFunction) {\n\t\t\tthis.doneFunction = dj_global[this.doneFunction];\n\t\t}\n\t\tdojo.widget.WizardPane.superclass.postMixInProperties.apply(this, arguments);","call_chain":["dojo.widget.WizardPane.superclass.postMixInProperties"],"prototype":"dojo.widget.WizardPane"}},"dojo.widget.WizardPane._checkPass":{"meta":{"summary":"Called when the user presses the \"next\" button. Calls passFunction to see if it's OK to advance to next panel, and if it isn't, then display error. Returns true to advance, false to not advance.","src":" \tif (this.passFunction && dojo.lang.isFunction(this.passFunction)) {\n\t\t\tvar failMessage = this.passFunction();\n\t\t\tif (failMessage) {\n\t\t\t\talert(failMessage);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;","prototype":"dojo.widget.WizardPane"}},"dojo.widget.WizardPane.done":{"meta":{"summary":"","src":" \tif (this.doneFunction && dojo.lang.isFunction(this.doneFunction)) {\n\t\t\tthis.doneFunction();\n\t\t}","prototype":"dojo.widget.WizardPane"}}}}},"dojo.widget.YahooMap":{"meta":{"requires":{"common":["dojo.event.*","dojo.math","dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"dojo.widget.YahooMap":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["isContainer","templatePath","templateCssPath","findCenter","setControls","parse","render","initialize","postCreate"],"variables":["isContainer","templatePath","templateCssPath","findCenter","setControls","parse","render","initialize","postCreate"],"summary":"Creates a widget that wraps the Yahoo Map API.","src":" \tthis.map=null;\n\t\tthis.datasrc=\"\";\n\t\tthis.data=[];\n\t\tthis.width=0;\n\t\tthis.height=0;\n\t\tthis.controls=[\"zoomlong\",\"maptype\",\"pan\"];","instance_variables":["map","datasrc","data","width","height","controls"],"description":"Widget wrapper for the Yahoo Map API; it allows you to easily embed a Yahoo Map within your Dojo application. map: YMap Reference to the Yahoo Map object. datasrc: String Reference to an external (to the widget) source for point data. data: Object[] Array of point information objects. width: Number Width of the map control. height: Number Height of the map control controls: String[] Array of strings that map to corresponding controls on a Yahoo Map."}}}}},"dojo.widget._":{"meta":{"requires":{"common":["dojo.xml.Parse","dojo.widget.Widget","dojo.widget.Parse","dojo.widget.Manager"],"browser":["dojo.widget.DomWidget","dojo.widget.HtmlWidget"],"dashboard":["dojo.widget.DomWidget","dojo.widget.HtmlWidget"],"svg":["dojo.widget.SvgWidget"],"rhino":["dojo.widget.SwtWidget"]}}},"dojo.widget.demoEngine.DemoContainer":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.widget.demoEngine.DemoPane","dojo.widget.demoEngine.SourcePane","dojo.widget.TabContainer"]},"functions":{"my.widget.demoEngine.DemoContainer":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath"],"variables":["templatePath","templateCssPath"],"instance_variables":["returnImageNode.src","tabContainer","demoTab","sourceTab"]}},"my.widget.demoEngine.DemoContainer.postCreate":{"meta":{"summary":"","src":" \t\tdojo.html.addClass(this.domNode,this.domNodeClass);\n\t\t\tdojo.html.addClass(this.tabNode, this.tabClass);\n\t\t\tdojo.html.addClass(this.returnImageNode, this.returnClass);\n\t\t\tthis.returnImageNode.src=this.returnImage;\n\t\t\tthis.tabContainer = dojo.widget.createWidget(\"TabContainer\",{},this.tabNode);\n\t\t\tthis.demoTab = dojo.widget.createWidget(\"DemoPane\",{});\n\t\t\tthis.tabContainer.addChild(this.demoTab);\n\t\t\tthis.sourceTab= dojo.widget.createWidget(\"SourcePane\",{});\n\t\t\tthis.tabContainer.addChild(this.sourceTab);\n\t\t\tdojo.html.setOpacity(this.domNode,0);\n\t\t\tdojo.html.hide(this.domNode);","prototype":"my.widget.demoEngine.DemoContainer"}},"my.widget.demoEngine.DemoContainer.loadDemo":{"meta":{"summary":"","parameters":{"url":{"type":""}},"src":" \t\tthis.demoTab.setHref(url);\n\t\t\tthis.sourceTab.setHref(url);\n\t\t\tthis.showDemo();","prototype":"my.widget.demoEngine.DemoContainer"}},"my.widget.demoEngine.DemoContainer.setName":{"meta":{"summary":"","parameters":{"name":{"type":""}},"src":" \t\tdojo.html.removeChildren(this.demoNameNode);\n\t\t\tthis.demoNameNode.appendChild(document.createTextNode(name));","prototype":"my.widget.demoEngine.DemoContainer"}},"my.widget.demoEngine.DemoContainer.setSummary":{"meta":{"summary":"","parameters":{"summary":{"type":""}},"src":" \t\tdojo.html.removeChildren(this.summaryNode);\n\t\t\tthis.summaryNode.appendChild(document.createTextNode(summary));","prototype":"my.widget.demoEngine.DemoContainer"}},"my.widget.demoEngine.DemoContainer.showSource":{"meta":{"summary":"","src":" \t\tdojo.html.removeClass(this.demoButtonNode,this.selectedButtonClass);\n\t\t\tdojo.html.addClass(this.sourceButtonNode,this.selectedButtonClass);\n\t\t\tthis.tabContainer.selectTab(this.sourceTab);\t","prototype":"my.widget.demoEngine.DemoContainer"}},"my.widget.demoEngine.DemoContainer.showDemo":{"meta":{"summary":"","src":" \t\tdojo.html.removeClass(this.sourceButtonNode,this.selectedButtonClass);\n\t\t\tdojo.html.addClass(this.demoButtonNode,this.selectedButtonClass);\n\t\t\tthis.tabContainer.selectTab(this.demoTab);","prototype":"my.widget.demoEngine.DemoContainer"}},"my.widget.demoEngine.DemoContainer.returnToDemos":{"meta":{"summary":"","src":" \t\tdojo.debug(\"Return To Demos\");","prototype":"my.widget.demoEngine.DemoContainer"}},"my.widget.demoEngine.DemoContainer.show":{"meta":{"summary":"","src":" \t\tdojo.html.setOpacity(this.domNode,1);\n\t\t\tdojo.html.show(this.domNode);\n\t\t\tthis.tabContainer.checkSize();","prototype":"my.widget.demoEngine.DemoContainer"}}}}},"dojo.widget.demoEngine.DemoItem":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"my.widget.demoEngine.DemoItem":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath"],"variables":["templatePath","templateCssPath"],"instance_variables":["thumbnailImageNode.src","thumbnailImageNode.name","viewDemoImageNode.src","viewDemoImageNode.name"]}},"my.widget.demoEngine.DemoItem.postCreate":{"meta":{"summary":"","src":" \t\tdojo.html.addClass(this.domNode,this.domNodeClass);\n\t\t\tdojo.html.addClass(this.summaryBoxNode, this.summaryBoxClass);\n\t\t\tdojo.html.addClass(this.screenshotTdNode, this.screenshotTdClass);\n\t\t\tdojo.html.addClass(this.summaryContainerNode, this.summaryContainerClass);\n\t\t\tdojo.html.addClass(this.summaryNode, this.summaryClass);\n\t\t\tdojo.html.addClass(this.viewDemoLinkNode, this.viewDemoLinkClass);\n\t\t\tthis.nameNode.appendChild(document.createTextNode(this.name));\n\t\t\tthis.descriptionNode.appendChild(document.createTextNode(this.description));\n\t\t\tthis.thumbnailImageNode.src = this.thumbnail;\n\t\t\tthis.thumbnailImageNode.name=this.name;\n\t\t\tthis.viewDemoImageNode.src = this.viewDemoImage;\n\t\t\tthis.viewDemoImageNode.name=this.name;","prototype":"my.widget.demoEngine.DemoItem"}},"my.widget.demoEngine.DemoItem.onSelectDemo":{"meta":{"summary":"","src":"\t\t\t\/\/Attach to this to do something when a demo is selected","prototype":"my.widget.demoEngine.DemoItem"}}}}},"dojo.widget.demoEngine.DemoNavigator":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.widget.Button","dojo.widget.demoEngine.DemoItem","dojo.io.*","dojo.lfx.*","dojo.lang.common"]},"functions":{"my.widget.demoEngine.DemoNavigator":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath"],"variables":["templatePath","templateCssPath"],"instance_variables":["demoContainer","registry","demoListChildren"]}},"my.widget.demoEngine.DemoNavigator.postCreate":{"meta":{"summary":"","src":" \t\tdojo.html.addClass(this.domNode,this.domNodeClass);\n\t\t\tdojo.html.addClass(this.demoListWrapperNode,this.demoListWrapperClass);\n\t\t\tdojo.html.addClass(this.demoListContainerNode,this.demoListContainerClass);\n\t\t\tif (dojo.render.html.ie) {\n\t\t\t\tdojo.debug(\"render ie\");\n\t\t\t\tdojo.html.hide(this.demoListWrapperNode); \n\t\t\t} else {\n\t\t\t\tdojo.debug(\"render non-ie\");\n\t\t\t\tdojo.lfx.html.fadeHide(this.demoListWrapperNode, 0).play();\t\n\t\t\t}\n\t\t\tthis.getRegistry(this.demoRegistryUrl);\n\t\t\tthis.demoContainer = dojo.widget.createWidget(\"DemoContainer\",{returnImage: this.returnImage},this.demoNode);\n\t\t\tdojo.event.connect(this.demoContainer,\"returnToDemos\", this, \"returnToDemos\");\n\t\t\tthis.demoContainer.hide();","prototype":"my.widget.demoEngine.DemoNavigator"}},"my.widget.demoEngine.DemoNavigator.returnToDemos":{"meta":{"summary":"","src":" \t\tthis.demoContainer.hide();\n\t\t\tif (dojo.render.html.ie) {\n\t\t\t\tdojo.debug(\"render ie\");\n\t\t\t\tdojo.html.show(this.navigationContainer) ;\n\t\t\t} else {\t\n\t\t\t\tdojo.debug(\"render non-ie\");\n\t\t\t\tdojo.lfx.html.fadeShow(this.navigationContainer,250).play();\n\t\t\t}\n\t\t\t\/\/if (dojo.render.html.ie) {\n\t\t\t\/\/\tdojo.html.setOpacity(this.navigationContainer);\n\t\t\t\/\/}\n\t\t\tdojo.lang.forEach(this.categoriesChildren, dojo.lang.hitch(this, function(child){\n\t\t\t\tchild.checkSize();\n\t\t\t}));\n\t\t\tdojo.lang.forEach(this.demoListChildren, dojo.lang.hitch(this, function(child){\n\t\t\t\tchild.checkSize();\n\t\t\t}));","prototype":"my.widget.demoEngine.DemoNavigator"}},"my.widget.demoEngine.DemoNavigator.show":{"meta":{"summary":"","src":" \t\tdojo.html.show(this.domNode);\n\t\t\tdojo.html.setOpacity(this.domNode,1);\n\t\t\t\/\/dojo.html.setOpacity(this.navigationContainer);\t\n\t\t\t\/\/dojo.html.show(this.navigationContainer);\n\t\t\tdojo.html.setOpacity(this.navigationContainer,1);\n\t\t\tdojo.lang.forEach(this.categoriesChildren, dojo.lang.hitch(this, function(child){\n\t\t\t\tchild.checkSize();\n\t\t\t}));\n\t\t\tdojo.lang.forEach(this.demoListChildren, dojo.lang.hitch(this, function(child){\n\t\t\t\tchild.checkSize();\n\t\t\t}));","prototype":"my.widget.demoEngine.DemoNavigator"}},"my.widget.demoEngine.DemoNavigator.getRegistry":{"meta":{"summary":"","parameters":{"url":{"type":""}},"src":" \t\tdojo.io.bind({\n\t\t\t\turl: url,\n\t\t\t\tload: dojo.lang.hitch(this,this.processRegistry),\n\t\t\t\tmimetype: \"text\/json\"\n\t\t\t});","prototype":"my.widget.demoEngine.DemoNavigator"}},"my.widget.demoEngine.DemoNavigator.processRegistry":{"meta":{"summary":"","parameters":{"type":{"type":""},"registry":{"type":""},"e":{"type":""}},"src":" \t\tdojo.debug(\"Processing Registry\");\n\t\t\tthis.registry = registry;\n\t\t\tdojo.lang.forEach(this.registry.navigation, dojo.lang.hitch(this,this.addCategory)); ","prototype":"my.widget.demoEngine.DemoNavigator"}},"my.widget.demoEngine.DemoNavigator.addCategory":{"meta":{"summary":"","parameters":{"category":{"type":""}},"src":" \t\t\tvar newCat = dojo.widget.createWidget(\"Button\",{caption: category.name});\n\t\t\t\tif(!dojo.lang.isObject(this.registry.categories)) {\n\t\t\t\t\tthis.registry.categories=function(){};\n\t\t\t\t}\n\t\t\t\tthis.registry.categories[category.name] = category;\n\t\t\t\tthis.categoriesChildren.push(newCat);\n\t\t\t\tthis.categoriesButtonsNode.appendChild(newCat.domNode);\t\n\t\t\t\tnewCat.domNode.categoryName = category.name;\n\t\t\t\tdojo.event.connect(newCat,\"onClick\", this, \"onSelectCategory\");","prototype":"my.widget.demoEngine.DemoNavigator"}},"my.widget.demoEngine.DemoNavigator.addCategory.registry.categories":{"meta":{"summary":"","src":"","instance":"my.widget.demoEngine.DemoNavigator.addCategory"}},"my.widget.demoEngine.DemoNavigator.addDemo":{"meta":{"summary":"","parameters":{"demoName":{"type":""}},"src":" \t\tvar demo = this.registry.definitions[demoName];\n\t\t\tif (dojo.render.html.ie) {\n\t\t\t\tdojo.html.show(this.demoListWrapperNode) \n\t\t\t} else {\n\t\t\t\tdojo.lfx.html.fadeShow(this.demoListWrapperNode, 250).play();\n\t\t\t}\n\t\t\tvar newDemo = dojo.widget.createWidget(\"DemoItem\",{viewDemoImage: this.viewDemoImage, name: demoName, description: demo.description, thumbnail: demo.thumbnail});\n\t\t\tthis.demoListChildren.push(newDemo);\n\t\t\tthis.demoListContainerNode.appendChild(newDemo.domNode);\t\n\t\t\tdojo.event.connect(newDemo,\"onSelectDemo\",this,\"onSelectDemo\");","prototype":"my.widget.demoEngine.DemoNavigator"}},"my.widget.demoEngine.DemoNavigator.onSelectCategory":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \t\tcatName = e.currentTarget.categoryName;\t\n\t\t\tdojo.debug(\"Selected Category: \" + catName);\n\t\t\t\/\/Remove current list of demos\n\t\t\tdojo.lang.forEach(this.demoListChildren, function(child) {\n\t\t\t\t\tchild.destroy();\n\t\t\t});\n\t\t\tthis.demoListChildren=[];\n\t\t\t\/\/add demos from this cat\n\t\t\tdojo.lang.forEach(this.registry.categories[catName].demos, dojo.lang.hitch(this,function(demoName){\n\t\t\t\tthis.addDemo(demoName);\n\t\t\t}));","prototype":"my.widget.demoEngine.DemoNavigator"}},"my.widget.demoEngine.DemoNavigator.onSelectDemo":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" \t\tdojo.debug(\"Demo Selected: \" + e.target.name);\n\t\t\tif (dojo.render.html.ie) {\n\t\t\t\tdojo.debug(\"render ie\");\n\t\t\t\tdojo.html.hide(this.navigationContainer) ;\n\t\t\t\tthis.demoContainer.show();\n\t\t\t\tthis.demoContainer.showDemo();\n\t\t\t} else {\n\t\t\t\tdojo.debug(\"render non-ie\");\n\t\t\t\tdojo.lfx.html.fadeHide(this.navigationContainer,250,null,dojo.lang.hitch(this, function() {\n\t\t\t\t\tthis.demoContainer.show();\t\n\t\t\t\t\tthis.demoContainer.showDemo();\n\t\t\t\t})).play();\n\t\t\t}\n\t\t\tthis.demoContainer.loadDemo(this.registry.definitions[e.target.name].url);\n\t\t\tthis.demoContainer.setName(e.target.name);\n\t\t\tthis.demoContainer.setSummary(this.registry.definitions[e.target.name].description);","prototype":"my.widget.demoEngine.DemoNavigator"}}}}},"dojo.widget.demoEngine.DemoPane":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget"]},"functions":{"my.widget.demoEngine.DemoPane":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath"],"variables":["templatePath","templateCssPath"],"instance_variables":["demoNode.src","href"]}},"my.widget.demoEngine.DemoPane.postCreate":{"meta":{"summary":"","src":" \t\tdojo.html.addClass(this.domNode,this.domNodeClass);\n\t\t\tdojo.debug(\"PostCreate\");\n\t\t\tthis._launchDemo();","prototype":"my.widget.demoEngine.DemoPane"}},"my.widget.demoEngine.DemoPane._launchDemo":{"meta":{"summary":"","src":" \t\tdojo.debug(\"Launching Demo\");\n\t\t\tdojo.debug(this.demoNode);\n\t\t\tthis.demoNode.src=this.href;","prototype":"my.widget.demoEngine.DemoPane"}},"my.widget.demoEngine.DemoPane.setHref":{"meta":{"summary":"","parameters":{"url":{"type":""}},"src":" \t\tthis.href = url;\n\t\t\tthis._launchDemo();","prototype":"my.widget.demoEngine.DemoPane"}}}}},"dojo.widget.demoEngine.SourcePane":{"meta":{"requires":{"common":["dojo.widget.*","dojo.widget.HtmlWidget","dojo.io.*"]},"functions":{"my.widget.demoEngine.SourcePane":{"meta":{"prototype_chain":["dojo.widget.HtmlWidget"],"call_chain":["dojo.widget.HtmlWidget"],"prototype_variables":["templatePath","templateCssPath"],"variables":["templatePath","templateCssPath"],"instance_variables":["sourceNode.value","href"]}},"my.widget.demoEngine.SourcePane.postCreate":{"meta":{"summary":"","src":" \t\tdojo.html.addClass(this.domNode,this.domNodeClass);\n\t\t\tdojo.debug(\"PostCreate\");","prototype":"my.widget.demoEngine.SourcePane"}},"my.widget.demoEngine.SourcePane.getSource":{"meta":{"summary":"","src":" \t\tif (this.href) {\n\t\t\t\tdojo.io.bind({\n\t\t\t\t\turl: this.href,\n\t\t\t\t\tload: dojo.lang.hitch(this, \"fillInSource\"),\n\t\t\t\t\tmimetype: \"text\/plain\"\n\t\t\t\t});\n\t\t\t}","prototype":"my.widget.demoEngine.SourcePane"}},"my.widget.demoEngine.SourcePane.fillInSource":{"meta":{"summary":"","parameters":{"type":{"type":""},"source":{"type":""},"e":{"type":""}},"src":" \t\tthis.sourceNode.value=source;","prototype":"my.widget.demoEngine.SourcePane"}},"my.widget.demoEngine.SourcePane.setHref":{"meta":{"summary":"","parameters":{"url":{"type":""}},"src":" \t\tthis.href = url;\n\t\t\tthis.getSource();","prototype":"my.widget.demoEngine.SourcePane"}}}}},"dojo.widget.demoEngine._":{"meta":{"requires":{"browser":["dojo.widget.demoEngine.DemoItem","dojo.widget.demoEngine.DemoNavigator","dojo.widget.demoEngine.DemoPane","dojo.widget.demoEngine.SourcePane","dojo.widget.demoEngine.DemoContainer"]}}},"dojo.widget.html.layout":{"meta":{"requires":{"common":["dojo.lang.common","dojo.string.extras","dojo.html.style","dojo.html.layout"]},"functions":{"dojo.widget.html.layout":{"meta":{"summary":"","parameters":{"container":{"type":"DomNode"},"children":{"type":"Object[]"},"layoutPriority":{"type":"String"}},"src":"\tdojo.html.addClass(container, \"dojoLayoutContainer\");\n\t\/\/ Copy children array and remove elements w\/out layout.\n\t\/\/ Also record each child's position in the input array, for sorting purposes.\n\tchildren = dojo.lang.filter(children, function(child, idx){\n\t\tchild.idx = idx;\n\t\treturn dojo.lang.inArray([\"top\",\"bottom\",\"left\",\"right\",\"client\",\"flood\"], child.layoutAlign)\n\t});\n\t\/\/ Order the children according to layoutPriority.\n\t\/\/ Multiple children w\/the same layoutPriority will be sorted by their position in the input array.\n\tif(layoutPriority && layoutPriority!=\"none\"){\n\t\tvar rank = function(child){\n\t\t\tswitch(child.layoutAlign){\n\t\t\t\tcase \"flood\":\n\t\t\t\t\treturn 1;\n\t\t\t\tcase \"left\":\n\t\t\t\tcase \"right\":\n\t\t\t\t\treturn (layoutPriority==\"left-right\") ? 2 : 3;\n\t\t\t\tcase \"top\":\n\t\t\t\tcase \"bottom\":\n\t\t\t\t\treturn (layoutPriority==\"left-right\") ? 3 : 2;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 4;\n\t\t\t}\n\t\t};\n\t\tchildren.sort(function(a,b){\n\t\t\treturn (rank(a)-rank(b)) || (a.idx - b.idx);\n\t\t});\n\t}\n\t\/\/ remaining space (blank area where nothing has been written)\n\tvar f={\n\t\ttop: dojo.html.getPixelValue(container, \"padding-top\", true),\n\t\tleft: dojo.html.getPixelValue(container, \"padding-left\", true)\n\t};\n\tdojo.lang.mixin(f, dojo.html.getContentBox(container));\n\t\/\/ set positions\/sizes\n\tdojo.lang.forEach(children, function(child){\n\t\tvar elm=child.domNode;\n\t\tvar pos=child.layoutAlign;\n\t\t\/\/ set elem to upper left corner of unused space; may move it later\n\t\twith(elm.style){\n\t\t\tleft = f.left+\"px\";\n\t\t\ttop = f.top+\"px\";\n\t\t\tbottom = \"auto\";\n\t\t\tright = \"auto\";\n\t\t}\n\t\tdojo.html.addClass(elm, \"dojoAlign\" + dojo.string.capitalize(pos));\n\t\t\/\/ set size && adjust record of remaining space.\n\t\t\/\/ note that setting the width of a <div> may affect it's height.\n\t\t\/\/ TODO: same is true for widgets but need to implement API to support that\n\t\tif ( (pos==\"top\")||(pos==\"bottom\") ) {\n\t\t\tdojo.html.setMarginBox(elm, { width: f.width });\n\t\t\tvar h = dojo.html.getMarginBox(elm).height;\n\t\t\tf.height -= h;\n\t\t\tif(pos==\"top\"){\n\t\t\t\tf.top += h;\n\t\t\t}else{\n\t\t\t\telm.style.top = f.top + f.height + \"px\";\n\t\t\t}\n\t\t\t\/\/ TODO: for widgets I want to call resizeTo(), but I can't because\n\t\t\t\/\/ I only want to set the width, and have the height determined\n\t\t\t\/\/ dynamically.  (The thinner you make a div, the more height it consumes.)\n\t\t\tif(child.onResized){\n\t\t\t\tchild.onResized();\n\t\t\t}\n\t\t}else if(pos==\"left\" || pos==\"right\"){\n\t\t\tvar w = dojo.html.getMarginBox(elm).width;\n\t\t\t\/\/ TODO: I only want to set the height, not the width, but see bug#941 (FF),\n\t\t\t\/\/ and also the resizeTo() function demands both height and width arguments\n\t\t\tif(child.resizeTo){\n\t\t\t\tchild.resizeTo(w, f.height);\n\t\t\t}else{\n\t\t\t\tdojo.html.setMarginBox(elm, { width: w, height: f.height });\n\t\t\t}\t\n\t\t\tf.width -= w;\n\t\t\tif(pos==\"left\"){\n\t\t\t\tf.left += w;\n\t\t\t}else{\n\t\t\t\telm.style.left = f.left + f.width + \"px\";\n\t\t\t}\n\t\t} else if(pos==\"flood\" || pos==\"client\"){\n\t\t\tif(child.resizeTo){\n\t\t\t\tchild.resizeTo(f.width, f.height);\n\t\t\t}else{\n\t\t\t\tdojo.html.setMarginBox(elm, { width: f.width, height: f.height });\n\t\t\t}\n\t\t}\n\t});"}}}}},"dojo.widget.html.loader":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.io.*","dojo.lang.common","dojo.lang.extras","dojo.experimental"]},"functions":{".toString":{"meta":{"summary":"","src":" this.toString = function(){ return \"dojo.widget.html.loader\";   "}},"trackerObj":{"meta":{"summary":"","parameters":{"id":{"type":""},"data":{"type":""}},"src":" \tthis.id = id;\n\t\tthis.data = data","instance_variables":["id","data"]}},"trackerObj.handle":{"meta":{"summary":"","parameters":{"type":{"type":""}},"src":" \tif(typeof dojo == 'undefined'){ return; } \/\/ wtf? how can dojo become undef?\n\t\tvar wg = dojo.widget.byId(this.id);\n\t\tif(wg){ wg.setContent(this.data, true); }","returns":"wtf? how can dojo become undef?","prototype":"trackerObj"}},"._log":{"meta":{"summary":"","parameters":{"widget":{"type":""},"data":{"type":""}},"src":" \tif(widget.trackHistory){\n\t\t\tif(!logger[widget.widgetId]){\n\t\t\t\tlogger[widget.widgetId] = { childrenIds: [], stack:[data] };\n\t\t\t}var children = logger[widget.widgetId].childrenIds;\n\t\t\twhile(children && children.length){\n\t\t\t\tdelete logger[children.pop()];\n\t\t\t}\n\t\t\tfor(var child in widget.children){\n\t\t\t\tlogger[widget.widgetId].childrenIds = child.widgetId;\n\t\t\t}\n\t\t\tdojo.undo.browser.addToHistory(new trackerObj(widget.widgetId, dojo.lang.shallowCopy(data, true)));\n\t\t}"}},"handleDefaults":{"meta":{"summary":"","parameters":{"e":{"type":""},"handler":{"type":""},"useAlert":{"type":""}},"src":" \tif(!handler){ handler = \"onContentError\"; }\n\t\tif(dojo.lang.isString(e)){ e = {_text: e}; }\n\t\tif(!e._text){ e._text = e.toString(); }\n\t\te.toString = function(){ return this._text; };\n\t\tif(typeof e.returnValue != \"boolean\"){\n\t\t\te.returnValue = true; \n\t\t}\n\t\tif(typeof e.preventDefault != \"function\"){\n\t\t\te.preventDefault = function(){ this.returnValue = false; };\n\t\t}\n\t\t\/\/ call our handler\n\t\tthis[handler](e);\n\t\tif(e.returnValue){\n\t\t\tif(useAlert){\n\t\t\t\talert(e.toString());\n\t\t\t}else{\n\t\t\t\tthis.loader.callOnUnLoad.call(this, false);\n\t\t\t\tthis.onSetContent(e.toString());\n\t\t\t}\n\t\t}","instance_variables":["returnValue"],"call_chain":["this.loader.callOnUnLoad"]}},"downloader":{"meta":{"summary":"","parameters":{"bindArgs":{"type":""}},"src":" \tfor(var x in this.bindArgs){\n\t\t\tbindArgs[x] = (undef(bindArgs[x]) ? this.bindArgs[x] : undefined);\n\t\t}\n\t\tvar cache = this.cacheContent;\n\t\tif(undef(bindArgs.useCache)){ bindArgs.useCache = cache; }\n\t\tif(undef(bindArgs.preventCache)){ bindArgs.preventCache = !cache; }\n\t\tif(undef(bindArgs.mimetype)){ bindArgs.mimetype = \"text\/html\"; }\n\t\tthis.loader.bindObj = dojo.io.bind(bindArgs);","instance_variables":["loader.bindObj"]}},"stackRunner":{"meta":{"summary":"","parameters":{"st":{"type":""}},"src":" \tvar err = \"\", func = null;\n\t\tvar scope = this.scriptScope || dojo.global();\n\t\twhile(st.length){\n\t\t\tfunc = st.shift();\n\t\t\ttry{\n\t\t\t\tfunc.call(scope);\n\t\t\t}catch(e){\n\t\t\t\terr += \"\\n\"+func+\" failed: \"+e;\n\t\t\t}\n\t\t}\n\t\tif(err.length){\n\t\t\tvar name = (st== this.loader.addOnLoads) ? \"addOnLoad\" : \"addOnUnLoad\";\n\t\t\thandleDefaults.call(this, name+\" failure\\n \"+err, \"onExecError\", true);\n\t\t}","call_chain":["func","handleDefaults"]}},"stackPusher":{"meta":{"summary":"","parameters":{"st":{"type":""},"obj":{"type":""},"func":{"type":""}},"src":" \tif(typeof func == 'undefined') {\n\t\t\tst.push(obj);\n\t\t}else{\n\t\t\tst.push(function(){ obj[func](); });\n\t\t}"}},"refreshed":{"meta":{"summary":"","src":" \tthis.onResized();\n\t\tthis.onLoad();\n\t\tthis.isLoaded = true;","instance_variables":["isLoaded"]}},"asyncParse":{"meta":{"summary":"","parameters":{"data":{"type":""}},"src":" \tif(this.executeScripts){\n\t\t\tthis.onExecScript.call(this, data.scripts);\n\t\t}\n\t\tif(this.parseContent){\n\t\t\tthis.onContentParse.call(this);\n\t\t}\n\t\trefreshed.call(this);","call_chain":["this.onExecScript","this.onContentParse","refreshed"]}},"runHandler":{"meta":{"summary":"","src":" \tif(dojo.lang.isFunction(this.handler)) {\n\t\t\tthis.handler(this, this.containerNode||this.domNode);\n\t\t\trefreshed.call(this);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;","call_chain":["refreshed"]}},".htmlContentBasicFix":{"meta":{"summary":"strips out <style, <link rel=stylesheet and <title tags intended to take out tags that might cause DOM faults","parameters":{"s":{"type":"string"},"url":{"type":"string||dojo.uri.Uri"}},"src":" \tvar titles = [], styles = [];\n\t\t\/************** <title> ***********\/\n\t\t\/\/ khtml can't attach a <style> or <title> node as child of body\n\t\tvar regex = \/<title[^>]*>([\\s\\S]*?)<\\\/title>\/i;\n\t\tvar match, attr;\n\t\twhile(match = regex.exec(s)){\n\t\t\ttitles.push(match[1]);\n\t\t\ts = s.substring(0, match.index) + s.substr(match.index + match[0].length);\n\t\t};\n\t\t\/****************  cut out all <style> and <link rel=\"stylesheet\" href=\"..\"> **************\/\n\t\tregex = \/(?:<(style)[^>]*>([\\s\\S]*?)<\\\/style>|<link ([^>]*rel=['\"]?stylesheet['\"]?[^>]*)>)\/i;\n\t\twhile(match = regex.exec(s)){\n\t\t\tif(match[1] && match[1].toLowerCase() == \"style\"){\n\t\t\t\tstyles.push(dojo.html.fixPathsInCssText(match[2],url));\n\t\t\t}else if(attr = match[3].match(\/href=(['\"]?)([^'\">]*)\\1\/i)){\n\t\t\t\tstyles.push({path: attr[2]});\n\t\t\t}\n\t\t\ts = s.substring(0, match.index) + s.substr(match.index + match[0].length);\n\t\t};\n\t\treturn {'s': s, 'titles': titles, 'styles': styles};\/\/object","returns":"object"}},".htmlContentAdjustPaths":{"meta":{"summary":"adjusts relative paths in content to be relative to current page","parameters":{"s":{"type":"string"},"url":{"type":"string||dojo.uri.Uri"}},"src":" \tvar tag = \"\", str = \"\", tagFix = \"\", path = \"\";\n\t\tvar attr = [], origPath = \"\", fix = \"\";\n\t\t\/\/ attributepaths one tag can have multiple paths example:\n\t\t\/\/ <input src=\"...\" style=\"url(..)\"\/> or <a style=\"url(..)\" href=\"..\">\n\t\t\/\/ strip out the tag and run fix on that.\n\t\t\/\/ this guarantees that we won't run replace on another tag's attribute + it was easier do\n\t\tvar regexFindTag = \/<[a-z][a-z0-9]*[^>]*\\s(?:(?:src|href|style)=[^>])+[^>]*>\/i;\n\t\tvar regexFindAttr = \/\\s(src|href|style)=(['\"]?)([\\w()\\[\\]\\\/.,\\\\'\"-:;#=&?\\s@]+?)\\2\/i;\n\t\t\/\/ these are the supported protocols, all other is considered relative\n\t\tvar regexProtocols = \/^(?:[#]|(?:(?:https?|ftps?|file|javascript|mailto|news):))\/;\n\t\twhile(tag = regexFindTag.exec(s)){\n\t\t\tstr += s.substring(0, tag.index);\n\t\t\ts = s.substring((tag.index + tag[0].length), s.length);\n\t\t\ttag = tag[0];\n\t\t\t\/\/ loop through attributes\n\t\t\ttagFix = '';\n\t\t\twhile(attr = regexFindAttr.exec(tag)){\n\t\t\t\tpath = \"\"; origPath = attr[3];\n\t\t\t\tswitch(attr[1].toLowerCase()){\n\t\t\t\t\tcase \"src\":\/\/ falltrough\n\t\t\t\t\tcase \"href\":\n\t\t\t\t\t\tif(regexProtocols.exec(origPath)){\n\t\t\t\t\t\t\tpath = origPath;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpath = (new dojo.uri.Uri(url, origPath).toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"style\":\/\/ style\n\t\t\t\t\t\tpath = dojo.html.fixPathsInCssText(origPath, url);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tpath = origPath;\n\t\t\t\t}\n\t\t\t\tfix = \" \" + attr[1] + \"=\" + attr[2] + path + attr[2];\n\t\t\t\t\/\/ slices up tag before next attribute check\n\t\t\t\ttagFix += tag.substring(0, attr.index) + fix;\n\t\t\t\ttag = tag.substring((attr.index + attr[0].length), tag.length);\n\t\t\t}\n\t\t\tstr += tagFix + tag;\n\t\t}\n\t\treturn str+s; \/\/ string","returns":"string"}},".htmlContentScripts":{"meta":{"summary":"handles scripts and dojo .require(...) etc calls NOTE: we need to go through here even if we have executeScripts=false and if we have parseWidgets true","parameters":{"s":{"type":"string"},"collectScripts":{"type":"boolean"}},"src":" \tvar scripts = [], requires = [], match = [];\n\t\tvar attr = \"\", tmp = null, tag = \"\", sc = \"\", str = \"\";\n\t\t\/***************** cut out all <script> tags, push them into scripts array ***************\/\n\t\tvar regex = \/<script([^>]*)>([\\s\\S]*?)<\\\/script>\/i;\n\t\tvar regexSrc = \/src=(['\"]?)([^\"']*)\\1\/i;\n\t\tvar regexDojoJs = \/.*(\\bdojo\\b\\.js(?:\\.uncompressed\\.js)?)$\/;\n\t\tvar regexInvalid = \/(?:var )?\\bdjConfig\\b(?:[\\s]*=[\\s]*\\{[^}]+\\}|\\.[\\w]*[\\s]*=[\\s]*[^;\\n]*)?;?|dojo\\.hostenv\\.writeIncludes\\(\\s*\\);?\/g;\n\t\tvar regexRequires = \/dojo\\.(?:(?:require(?:After)?(?:If)?)|(?:widget\\.(?:manager\\.)?registerWidgetPackage)|(?:(?:hostenv\\.)?setModulePrefix)|defineNamespace)\\((['\"]).*?\\1\\)\\s*;?\/;\n\t\twhile(match = regex.exec(s)){\n\t\t\tif(this.executeScripts && match[1]){\n\t\t\t\tif(attr = regexSrc.exec(match[1])){\n\t\t\t\t\t\/\/ remove a dojo.js or dojo.js.uncompressed.js from remoteScripts\n\t\t\t\t\t\/\/ we declare all files named dojo.js as bad, regardless of path\n\t\t\t\t\tif(regexDojoJs.exec(attr[2])){\n\t\t\t\t\t\tdojo.debug(\"Security note! inhibit:\"+attr[2]+\" from  beeing loaded again.\");\n\t\t\t\t\t}else{\n\t\t\t\t\t\tscripts.push({path: attr[2]});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(match[2]){\n\t\t\t\t\/\/ remove all invalid variables etc like djConfig and dojo.hostenv.writeIncludes()\n\t\t\t\tsc = match[2].replace(regexInvalid, \"\");\n\t\t\t\tif(!sc){ continue; }\n\t\t\t\t\/\/ cut out all dojo .require (...) calls, if we have execute \n\t\t\t\t\/\/ scripts false widgets don't get their require calls\n\t\t\t\t\/\/ takes out possible widgetpackage registration as well\n\t\t\t\twhile(tmp = regexRequires.exec(sc)){\n\t\t\t\t\trequires.push(tmp[0]);\n\t\t\t\t\tsc = sc.substring(0, tmp.index) + sc.substr(tmp.index + tmp[0].length);\n\t\t\t\t}\n\t\t\t\tif(collectScripts){\n\t\t\t\t\tscripts.push(sc);\n\t\t\t\t}\n\t\t\t}\n\t\t\ts = s.substr(0, match.index) + s.substr(match.index + match[0].length);\n\t\t}\n\t\t\/******** scan for scriptScope in html eventHandlers \n\t\t\t\t\tand replace with link to this widget *********\/\n\t\tif(collectScripts){\n\t\t\tvar regex = \/(<[a-zA-Z][a-zA-Z0-9]*\\s[^>]*\\S=(['\"])[^>]*[^\\.\\]])scriptScope([^>]*>)\/;\n\t\t\tstr = \"\";\n\t\t\twhile(tag = regex.exec(s)){\n\t\t\t\ttmp = ((tag[2]==\"'\") ? '\"': \"'\");\n\t\t\t\tstr += s.substring(0, tag.index);\n\t\t\t\ts = s.substr(tag.index).replace(regex, \"$1dojo.widget.byId(\"+ tmp + this.widgetId + tmp + \").scriptScope$3\");\n\t\t\t}\n\t\t\ts = str + s;\n\t\t}\n\t\treturn {'s': s, 'requires': requires, 'scripts': scripts}; \/\/ object","returns":"object"}},".splitAndFixPaths":{"meta":{"summary":"pathfixes, require calls, css stuff and neccesary content clean","parameters":{"args":{"type":"object"}},"src":"\t\t\/\/ return:\t\t\t{xml: string,\n\t\t\/\/\t\t\t\t\tstyles: array, remote style get object {path: \/*string*\/url}\n\t\t\/\/\t\t\t\t\trequires: array,\n\t\t\/\/\t\t\t\t\tscripts: array, remote scripts get object {path: \/*string*\/url}\n\t\t\/\/\t\t\t\t\turl: string}\n\t\tif(!args.url) { args.url = \".\/\"; } \/\/ point to this page if not set\n\t\t\/\/ make sure back\/forward buttons don't mess up url.\n\t\turl = new dojo.uri.Uri(location, args.url).toString();\n\t\tvar ret = {'xml': \t\"\",\n\t\t\t\t'styles':\t[],\n\t\t\t\t'titles':\t[],\n\t\t\t\t'requires':\t[],\n\t\t\t\t'scripts':\t[],\n\t\t\t\t'url':\t\turl };\n\t\tif(args.content){ \/\/ make sure we don't run regexes on empty content\n\t\t\tvar tmp = null, content = args.content;\n\t\t\tif(args.adjustPaths){\n\t\t\t\tcontent = _loader.htmlContentAdjustPaths.call(this, content, url);\n\t\t\t}\n\t\t\ttmp = _loader.htmlContentBasicFix.call(this, content, url);\n\t\t\tcontent = tmp.s;\n\t\t\tret.styles = tmp.styles;\n\t\t\tret.titles = tmp.titles;\n\t\t\tif(args.collectRequires || args.collectScripts){\n\t\t\t\ttmp = _loader.htmlContentScripts.call(this, content, args.collectScripts);\n\t\t\t\tcontent = tmp.s;\n\t\t\t\tret.requires = tmp.requires;\n\t\t\t\tret.scripts = tmp.scripts;\n\t\t\t}\n\t\t\t\/********* extract content *********\/\n\t\t\tvar match = [];\n\t\t\tif(args.bodyExtract){\n\t\t\t\tmatch = content.match(\/<body[^>]*>\\s*([\\s\\S]+)\\s*<\\\/body>\/im);\n\t\t\t\tif(match) { content = match[1]; }\n\t\t\t}\n\t\t\tret.xml = content;\n\t\t}\n\t\treturn ret;\/\/ object ","returns":"object","call_chain":["_loader.htmlContentAdjustPaths","_loader.htmlContentBasicFix","_loader.htmlContentScripts"]},"extra":{"parameters":{"args":{"type":"content","summary":"string url string? or dojo.uri.Uri that that pulled the content in, for path adjust adjustPaths boolean, if true adjust relative paths in content to match this page collectScripts boolean, if true it takes out all <script and <script src=.. tags and collects dojo.require calls in a separate array, useful for eval collectRequires boolean, if true and collectScripts is false it still collects scripts along with dojo.require calls bodyExtract boolean, if true only return content inside of the body tag"}}}},".hookUp":{"meta":{"summary":"mixin or extend loader into a widget","parameters":{"args":{"type":"object"}},"src":" \tvar widget = args.widget;\n\t\tif(dojo.lang.isString(widget)){\n\t\t\tif(args.mixin){\t\n\t\t\t\tdojo.raise(this.toString()+\", cant use mixin when widget is a string\");\n\t\t\t }\n\t\t\twidget = dojo.evalObjPath(widget);\n\t\t}\n\t\tif(!widget || !(widget instanceof dojo.widget.HtmlWidget)){\n\t\t\tdojo.raise(this.toString()+\" Widget isn't defined or isn't a HtmlWidget instance\"); \n\t\t}\n\t\t\/\/ make sure we don't mixin more than once\n\t\tif(widget.loader && widget.setUrl){ return; }\n\t\t\/\/ extend widget prototype or mixin this widget instance\n\t\tvar widgetProto = (args.mixin) ? widget : widget.constructor.prototype;\n\t\t\/********************************************\n\t\t** per widgetImpl variables, mixin into widget \n\t\t********************************************\/\n\t\t\/\/ stuff it into a loader obj\n\t\twidget.loader = {\n\t\t\tisLoaded: false,\n\t\t\tstyleNodes:  [],\n\t\t\taddOnLoads: [],\n\t\t\taddOnUnLoads: [],\n\t\t\tcallOnUnLoad:(function(canCall){\n\t\t\t\t\t\t\treturn function(after){ this.abort();\n\t\t\t\t\t\t\t\tif(canCall){ this.onUnLoad(); }\n\t\t\t\t\t\t\t\tcanCall = after;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})(false),\n\t\t\tbindObj: null,\n\t\t\t\/\/ to disconnect widget\n\t\t\tunHook: (function(w, wg){\n\t\t\t\tvar oldProps = {\n\t\t\t\t\tisContainer: w.isContainer,\n\t\t\t\t\tadjustPats: w.adjustPaths,\n\t\t\t\t\thref: w.href,\n\t\t\t\t\textractContent: w.extractContent,\n\t\t\t\t\tparseContent: w.parseContent,\n\t\t\t\t\tcacheContent: w.cacheContent,\n\t\t\t\t\tbindArgs: w.bindArgs,\n\t\t\t\t\tpreload: w.preload,\n\t\t\t\t\trefreshOnShow: w.refreshOnShow,\n\t\t\t\t\thandler: w.handler,\n\t\t\t\t\ttrackHistory: w.trackHistory,\n\t\t\t\t\texecuteScripts: w.executeScripts,\n\t\t\t\t\tscriptScope: w.scriptScope,\n\t\t\t\t\t\/\/ functions\n\t\t\t\t\tpostCreate: w.postCreate,\n\t\t\t\t\tshow: w.show,\n\t\t\t\t\trefresh: w.refresh,\n\t\t\t\t\tloadContents: w.loadContents,\n\t\t\t\t\tabort: w.abort,\n\t\t\t\t\tdestroy: w.destroy,\n\t\t\t\t\tonLoad: w.onLoad,\n\t\t\t\t\tonUnLoad: w.onUnLoad,\n\t\t\t\t\taddOnLoad: w.addOnLoad,\n\t\t\t\t\taddOnUnLoad: w.addOnUnLoad,\n\t\t\t\t\tonDownloadStart: w.onDownloadStart,\n\t\t\t\t\tonDownloadEnd: w.onDownloadEnd,\n\t\t\t\t\tonDownloadError: w.onDownloadError,\n\t\t\t\t\tonContentError: w.onContentError,\n\t\t\t\t\tonExecError: w.onExecError,\n\t\t\t\t\tonSetContent: w.onSetContent,\n\t\t\t\t\tsetUrl: w.setUrl,\n\t\t\t\t\tsetContent: w.setContent,\n\t\t\t\t\tonContentParse: w.onContentParse,\n\t\t\t\t\tonExecScript: w.onExecScript,\n\t\t\t\t\tsetHandler: w.setHandler\n\t\t\t\t};\n\t\t\t\treturn function(){\n\t\t\t\t\tif(wg.abort){ wg.abort(); }\n\t\t\t\t\t\/\/ make sure we don't unhook prototype if there are more widgets of this type left\n\t\t\t\t\tif((w != wg) && (dojo.widget.byType(wg.widgetType).length>1)){ return; }\n\t\t\t\t\tfor(var x in oldProps){\n\t\t\t\t\t\tif(oldProps[x]===undefined){\n\t\t\t\t\t\t\tdelete w[x]; continue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tw[x] = oldProps[x];\n\t\t\t\t\t}\n\t\t\t\t\tdelete wg._loader_defined;\n\t\t\t\t\tdelete wg.loader;\n\t\t\t\t};\n\t\t\t})(widgetProto, widget)\n\t\t};\n\t\t\/\/ make sure we don't do this more than once per widget\/widgetprototype\n\t\tif(widgetProto._loader_defined || widget._loader_defined){ return; }\t\t\n\t\t\/**************** private variables *********************\/\n\t\t\/\/ loading options, prototype parts of widget's mixin to prototype\n\t\tdojo.mixin(widgetProto, {\n\t\t\t\/\/ always set to a containerwidget\n\t\t\tisContainer: true,\n\t\t\t\/\/ fix relative paths in content to fit into this page\n\t\t\tadjustPaths: \tundef(widgetProto.adjustPaths) ? true : widgetProto.adjustPaths,\n\t\t\t\/\/ only usable on construction, use setUrl or setContent after that\n\t\t\thref: \t\t\tundef(widgetProto.href) ? \"\" : widgetProto.href,\n\t\t\t\/\/ extract visible content from inside of <body> .... <\/body>\n\t\t\textractContent: undef(widgetProto.extractContent) ? true : widgetProto.extractContent,\n\t\t\t\/\/ construct all widgets that is in content\n\t\t\t\/\/ FIXME: rename to parseWidgets?\n\t\t\tparseContent: \tundef(widgetProto.parseContent) ? true : widgetProto.parseContent,\n\t\t\t\/\/ use io binds javascript cache, or if false, prevent browsercache\n\t\t\tcacheContent: \tundef(widgetProto.cacheContent) ? true : widgetProto.cacheContent,\n\t\t\t\/\/ specify  specific  io.bind arguments such as transport and useCache\n\t\t\tbindArgs:\t\tundef(widgetProto.bindArgs) ? {} : widgetProto.bindArgs,\n\t\t\t\/\/ force load even if widget isn't shown (lazyload setting)\n\t\t\tpreload: \t\tundef(widgetProto.preload) ? false : widgetProto.preload,\n\t\t\t\/\/ reload content automatically onShow, use with cacheContent = flase\n\t\t\trefreshOnShow:\tundef(widgetProto.refreshOnShow) ? false : widgetProto.refreshOnShow,\n\t\t\t\/\/ name of java function which should generate content\n\t\t\thandler: \t\tundef(widgetProto.handler) ? \"\" : widgetProto.handler,\n\t\t\t\/\/ if true scripts in content will be evaled after content is innerHTML'ed\n\t\t\texecuteScripts: undef(widgetProto.executeScripts) ? false : widgetProto.executeScripts,\n\t\t\t\/\/ log contents (back\/forward support)\n\t\t\ttrackHistory:\tundef(widgetProto.tracHistory) ? false : widgetProto.trackHistory,\n\t\t\tscriptScope: null \/\/ always overwrite\n\t\t});\n\t\t\/****************************************************\n\t\t******* public functions, becomes part of widget's API\n\t\t*****************************************************\/\n\t\t\/*********** Public functions that wigets cant overide **********\/\n\t\t\/\/ set up postCreate, call originalcode before our own\n\t\twidgetProto.postCreate = (function(postCreate){\n\t\t\treturn function(){\n\t\t\t\tif(widgetProto.constructor.superclass.postCreate != postCreate){\n\t\t\t\t\tpostCreate.apply(this, arguments);\n\t\t\t\t}else{\n\t\t\t\t\twidgetProto.constructor.superclass.postCreate.apply(this, arguments);\n\t\t\t\t}\n\t\t\t\tif(this.handler!==\"\"){ this.setHandler(this.handler); }\n\t\t\t\tif(this.isShowing() || this.preload){ \n\t\t\t\t\tthis.loadContents();\n\t\t\t\t\tif(!this.href){ \/\/ back\/forward save initial state\n\t\t\t\t\t\t_loader._log(this,(this.domNode||this.containerNode).innerHTML);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})(widgetProto.postCreate);\n\t\t\/\/ set up onShow listener, call original code after this block\n\t\twidgetProto.show = (function(show){\n\t\t\treturn function(){\n\t\t\t\t\/\/ if refreshOnShow is true, reload the contents every time; otherwise, load only the first time\n\t\t\t\tif(this.refreshOnShow){\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}else{ \n\t\t\t\t\tthis.loadContents();\n\t\t\t\t}\n\t\t\t\tif((widgetProto.constructor.superclass.show == show) || !isFunc(show)){\n\t\t\t\t\twidgetProto.constructor.superclass.show.apply(this, arguments);\n\t\t\t\t}else{\n\t\t\t\t\tshow.apply(this, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t})(widgetProto.show);\n\t\t\/\/ destroy cleanups, original code in the middle\n\t\twidgetProto.destroy = (function(destroy){\n\t\t\treturn function(destroy){\n\t\t\t\tthis.onUnLoad();\n\t\t\t\tthis.abort();\n\t\t\t\tthis.loader.unHook();\n\t\t\t\tif((widgetProto.constructor.superclass.destroy != destroy) && isFunc(destroy)){\n\t\t\t\t\tdestroy.apply(this, arguments);\n\t\t\t\t}else{\n\t\t\t\t\twidgetProto.constructor.superclass.destroy.apply(this, arguments);\n\t\t\t\t}\n\t\t\t}\n\t\t})(widgetProto.destroy);\n\t\t\/******* Public functions that widgets can overide *****\/\n\t\t\/\/ set up a refresh function\n\t\tif(!widgetProto.refresh){\n\t\t\twidgetProto.refresh = function(){\n\t\t\t\tthis.loader.isLoaded = false;\n\t\t\t\tthis.loadContents();\n\t\t\t};\n\t\t}\n\t\t\/\/ set up html loading contents\n\t\tif(!widgetProto.loadContents){\n\t\t\twidgetProto.loadContents = function(){\n\t\t\t\tif(this.loader.isLoaded){ return; }\n\t\t\t\t\/\/ javafunction\n\t\t\t\tif(isFunc(this.handler)){\n\t\t\t\t\trunHandler.call(this);\n\t\t\t\t}else if(this.href !== \"\"){\n\t\t\t\t\thandleDefaults.call(this, \"Loading...\", \"onDownloadStart\");\n\t\t\t\t\tvar self = this, url = this.href;\n\t\t\t\t\tdownloader.call(this, {\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tload: function(type, data, xhr){\n\t\t\t\t\t\t\tself.onDownloadEnd.call(self, url, data);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function(type, err, xhr){\n\t\t\t\t\t\t\t\/\/ XHR insnt a normal JS object, copy esentials\n\t\t\t\t\t\t\tvar e = {\n\t\t\t\t\t\t\t\tresponseText: xhr.responseText,\n\t\t\t\t\t\t\t\tstatus: xhr.status,\n\t\t\t\t\t\t\t\tstatusText: xhr.statusText,\n\t\t\t\t\t\t\t\tresponseHeaders: (xhr.getAllResponseHeaders) ? xhr.getAllResponseHeaders():[],\n\t\t\t\t\t\t\t\t_text: \"Error loading '\" + url + \"' (\" + xhr.status + \" \"+  xhr.statusText + \")\"\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\thandleDefaults.call(self, e, \"onDownloadError\");\n\t\t\t\t\t\t\tself.onLoad();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t\/\/ set up abort\n\t\tif(!widgetProto.abort){\n\t\t\twidgetProto.abort = function(){\n\t\t\t\tif(!this.loader || !this.loader.bindObj || !this.loader.bindObj.abort){ return; }\n\t\t\t\tthis.loader.bindObj.abort();\n\t\t\t\tthis.loader.bindObj = null;\n\t\t\t};\n\t\t}\n\t\t\/\/ onLoad\n\t\tif(!widgetProto.onLoad){\n\t\t\twidgetProto.onLoad = function(){\n\t\t\t\tstackRunner.call(this, this.loader.addOnLoads);\n\t\t\t\tthis.loader.isLoaded = true;\n\t\t\t};\n\t\t}\n\t\t\/\/ onUnLoad, original code in the middle\n\t\tif(!widgetProto.onUnLoad){\n\t\t\twidgetProto.onUnLoad = function(){\n\t\t\t\tstackRunner.call(this, this.loader.addOnUnLoads);\n\t\t\t\tdelete this.scriptScope;\n\t\t\t}\n\t\t}\n\t\t\/\/ add to onLoad queue\n\t\tif(!widgetProto.addOnLoad){\n\t\t\twidgetProto.addOnLoad = function(obj, func){\n\t\t\t\tstackPusher.call(this, this.loader.addOnLoads, obj, func);\n\t\t\t};\n\t\t}\n\t\t\/\/ add to onUnLoad queue \n\t\tif(!widgetProto.addOnUnLoad){\n\t\t\twidgetProto.addOnUnLoad = function(obj, func){\n\t\t\t\tstackPusher.call(this, this.loader.addOnUnLoads, obj, func);\n\t\t\t}\n\t\t}\n\t\t\/\/ script or java errors, preventDefault-able\n\t\tif(!widgetProto.onExecError){\n\t\t\twidgetProto.onExecError = function(){\/*stub*\/};\n\t\t}\n\t\t\/\/ called on DOM faults, require fault etc in content, preventDefault-able\n\t\tif(!widgetProto.onContentError){\n\t\t\twidgetProto.onContentError = function(){\/*stub*\/};\n\t\t}\n\t\t\/\/ called when download error occurs, preventDefault-able\n\t\tif(!widgetProto.onDownloadError){\n\t\t\twidgetProto.onDownloadError = function(){\/*stub*\/};\n\t\t}\n\t\t\/\/ called before download starts, preventDefault-able\n\t\tif(!widgetProto.onDownloadStart){\n\t\t\twidgetProto.onDownloadStart = function(onDownloadStart){\/*stub*\/};\n\t\t}\n\t\t\/\/ called when download is finished successfully\n\t\tif(!widgetProto.onDownloadEnd){\n\t\t\twidgetProto.onDownloadEnd = function(url, data){\n\t\t\t\tvar args =  {content: data,\n\t\t\t\t\t\t\turl: url,\n\t\t\t\t\t\t\tadjustPaths: this.adjustPaths,\n\t\t\t\t\t\t\tcollectScripts: this.executeScripts,\n\t\t\t\t\t\t\tcollectRequires: this.parseContent,\n\t\t\t\t\t\t\tbodyExtract: this.extractContent };\n\t\t\t\tdata = _loader.splitAndFixPaths.call(this, args);\n\t\t\t\tthis.setContent(data);\n\t\t\t}\n\t\t}\n\t\t\/\/ previously called _setContent, widget defined onSetContent can modify content or cancel\n\t\tif(!widgetProto.onSetContent){\n\t\t\twidgetProto.onSetContent = function(cont){\n\t\t\t\tthis.destroyChildren();\n\t\t\t\t\/\/ remove old stylenodes from HEAD\n\t\t\t\tvar styleNodes = this.loader.styleNodes;\n\t\t\t\twhile(styleNodes.length){\n\t\t\t\t\tvar st = styleNodes.pop();\n\t\t\t\t\tif(st && st.parentNode){\n\t\t\t\t\t\tst.parentNode.removeChild(st);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar node = this.containerNode || this.domNode;\n\t\t\t\twhile(node.firstChild){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tdojo.event.browser.clean(node.firstChild);\n\t\t\t\t\t}catch(e){}\n\t\t\t\t\tnode.removeChild(node.firstChild);\n\t\t\t\t}\n\t\t\t\ttry{\n\t\t\t\t\tif(typeof cont != \"string\"){\n\t\t\t\t\t\tnode.appendChild(cont);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttry{\/\/ hack to deal with domfaults, ie. appending div to tablenodes\n\t\t\t\t\t\t\tnode.innerHTML = cont;\n\t\t\t\t\t\t}catch(e){var tmp;\n\t\t\t\t\t\t\t(tmp = dojo.doc().createElement(\"div\")).innerHTML = cont;\n\t\t\t\t\t\t\twhile(tmp.firstChild){\n\t\t\t\t\t\t\t\tnode.appendChild(tmp.removeChild(tmp.firstChild));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}catch(e){\n\t\t\t\t\te._text = \"Could'nt load content: \"+e;\n\t\t\t\t\tvar useAlert = (this.loader._onSetContent_err == e._text); \/\/ make sure we don't loop\n\t\t\t\t\tthis.loader._onSetContent_err = e._text;\n\t\t\t\t\thandleDefaults.call(this, e, \"onContentError\", useAlert);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif(!widgetProto.setUrl){\n\t\t\twidgetProto.setUrl = function(url){\n\t\t\t\tthis.href = url;\n\t\t\t\tthis.loader.isLoaded = false;\n\t\t\t\tif ( this.preload || this.isShowing() ){\n\t\t\t\t\tthis.loadContents();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!widgetProto.setContent){\n\t\t\twidgetProto.setContent = function(data, dontLog){\n\t\t\t\tthis.loader.callOnUnLoad.call(this, true);\n\t\t\t\tif(!data||dojo.html.isNode(data)){\n\t\t\t\t\tthis.onSetContent(data);\n\t\t\t\t\trefreshed.call(this);\n\t\t\t\t}else{\n\t\t\t\t\t\/\/ need to run splitAndFixPaths? ie. manually setting content\n\t\t\t\t\t\/\/ adjustPaths is taken care of inside splitAndFixPaths\n\t\t\t\t\tif(typeof data.xml != 'string'){\n\t\t\t\t\t\tthis.href = \"\"; \/\/ so we can refresh safely\n\t\t\t\t\t\tvar args =  {content: data,\n\t\t\t\t\t\t\turl: this.href,\n\t\t\t\t\t\t\tadjustPaths: this.adjustPaths,\n\t\t\t\t\t\t\tcollectScripts: this.executeScripts,\n\t\t\t\t\t\t\tcollectRequires: this.parseContent,\n\t\t\t\t\t\t\tbodyExtract: this.extractContent };\n\t\t\t\t\t\tdata = _loader.splitAndFixPaths.call(this, args); \n\t\t\t\t\t}else if(data.url!=\".\/\"){\n\t\t\t\t\t\t this.url = data.url;\/\/ backbutton thing\n\t\t\t\t\t}\n\t\t\t\t\tthis.onSetContent(data.xml);\n\t\t\t\t\t\/\/ insert styles from content (in same order they came in)\n\t\t\t\t\tfor(var i = 0, styles = data.styles; i < styles.length; i++){\n\t\t\t\t\t\tif(styles[i].path){\n\t\t\t\t\t\t\tthis.loader.styleNodes.push(dojo.html.insertCssFile(styles[i].path));\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.loader.styleNodes.push(dojo.html.insertCssText(styles[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(this.parseContent){\n\t\t\t\t\t\tfor(var i = 0, requires = data.requires; i < requires.length; i++){\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\teval(requires[i]);\n\t\t\t\t\t\t\t} catch(e){\n\t\t\t\t\t\t\t\te._text = \"dojo.widget.html.loader.hookUp: error in package loading calls, \"+(e.description||e);\n\t\t\t\t\t\t\t\thandleDefaults.call(this, e, \"onContentError\", true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\/\/ need to allow async load, Xdomain uses it\n\t\t\t\t\t\/\/ NOTE: on Xdomain loads this can break the sync thread of setContent\n\t\t\t\t\t\/\/ \t\tif you you do any dojo. require(...) etc\n\t\t\t\t\tif(dojo.hostenv.isXDomain && data.requires.length){\n\t\t\t\t\t\tdojo.addOnLoad(function(){ \n\t\t\t\t\t\t\tasyncParse.call(this, data);\n\t\t\t\t\t\t\tif(!dontLog){\n\t\t\t\t\t\t\t\t_loader._log(this, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\/\/ this opens a thread need abort undo\n\t\t\t\t\t\tdontLog = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tasyncParse.call(this, data);\n\t\t\t\t\t}\n\t\t\t\t}if(!dontLog){\n\/\/ \t\t\t\t\t_loader._log(this, data);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif(!widgetProto.onContentParse){\n\t\t\twidgetProto.onContentParse = function(){\n\t\t\t\tvar node = this.containerNode || this.domNode;\n\t\t\t\tvar parser = new dojo.xml.Parse();\n\t\t\t\tvar frag = parser.parseElement(node, null, true);\n\t\t\t\tdojo.widget.getParser().createSubComponents(frag, this);\n\t\t\t};\n\t\t}\n\t\t\/\/ previously called _executeScripts\n\t\tif(!widgetProto.onExecScript){\n\t\t\twidgetProto.onExecScript = function(scripts){\n\t\t\t\t\/\/ loop through the scripts in the order they came in\n\t\t\t\tvar self = this, tmp = \"\", code = \"\";\n\t\t\t\tfor(var i = 0; i < scripts.length; i++){ \/\/ remotescript\n\t\t\t\t\tif(scripts[i].path){\n\t\t\t\t\t\tvar url = scripts[i].path;\n\t\t\t\t\t\tdownloader.call(this,{\n\t\t\t\t\t\t\t'url': \t\turl,\n\t\t\t\t\t\t\t'load': function(type, scriptStr){\n\t\t\t\t\t\t\t\t(function(){tmp = scriptStr; scripts[i] = scriptStr;}).call(self);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'error': function(type, error){\n\t\t\t\t\t\t\t\terror._text = type + \" downloading remote script\";\n\t\t\t\t\t\t\t\thandleDefaults.call(self, error, \"onExecError\", true);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'mimetype': \"text\/plain\",\n\t\t\t\t\t\t\t'sync':     true\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcode += tmp;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcode += scripts[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttry{\n\t\t\t\t\t\/\/ initialize a new anonymous container for our script, don't make it part of this widget's scope chain\n\t\t\t\t\t\/\/ instead send in a variable that points to this widget, useful to connect events to onLoad, onUnLoad etc..\n\t\t\t\t\tdelete this.scriptScope;\n\t\t\t\t\tthis.scriptScope = new (new Function('_container_', code+'; return this;'))(self);\n\t\t\t\t}catch(e){\n\t\t\t\t\te._text = \"Error running scripts from content:\\n\"+(e.description||e.toString());\n\t\t\t\t\thandleDefaults.call(this, e, \"onExecError\", true);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t\/\/ Generate content from given java function\n\t\tif(!widgetProto.setHandler){\n\t\t\twidgetProto.setHandler = function(handler) {\n\t\t\t\tvar fcn = dojo.lang.isFunction(handler) ? handler : window[handler];\n\t\t\t\tif(!isFunc(fcn)) {\n\t\t\t\t\t\/\/ FIXME: needs testing! somebody with java knowledge needs to try this\n\t\t\t\t\thandleDefaults.call(this, \"Unable to set handler, '\" + handler + \"' not a function.\", \"onExecError\", true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.handler = function() {\n\t\t\t\t\treturn fcn.apply(this, arguments);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\t\t\/\/ make sure we extend this widget only once\n\t\twidgetProto._loader_defined = true;","instance_variables":["loader.isLoaded","loader.bindObj","loader._onSetContent_err","href","url","scriptScope","handler"],"call_chain":{"0":"postCreate","1":"widgetProto.constructor.superclass.postCreate","2":"widgetProto.constructor.superclass.show","3":"show","4":"destroy","5":"widgetProto.constructor.superclass.destroy","6":"runHandler","7":"handleDefaults","8":"downloader","9":"self.onDownloadEnd","11":"stackRunner","13":"stackPusher","15":"_loader.splitAndFixPaths","17":"this.loader.callOnUnLoad","18":"refreshed","21":"asyncParse","27":"fcn"}},"extra":{"parameters":{"args":{"type":"widget","summary":"widget reference mixin: boolean, default false if mixin true, it will only extend the current widget, not its prototype"}}}},".hookUp.handler":{"meta":{"summary":"","src":" \t\t\t\treturn fcn.apply(this, arguments);","call_chain":["fcn"],"instance":".hookUp"}},"widgetProto":{"meta":{"variables":["isContainer","adjustPaths","href","extractContent","parseContent","cacheContent","bindArgs","preload","refreshOnShow","handler","executeScripts","trackHistory","scriptScope"]}}}}},"dojo.widget.html.stabile":{"meta":{"functions":{"dojo.widget.html.stabile.getState":{"meta":{"summary":"Get the state stored for the widget with the given ID, or undefined if none.","parameters":{"id":{"type":""}},"src":"\tdojo.widget.html.stabile.setup();\n\treturn dojo.widget.html.stabile.widgetState[id];"}},"dojo.widget.html.stabile.setState":{"meta":{"summary":"Set the state stored for the widget with the given ID. If isCommit is true, commits all widget state to more stable storage.","parameters":{"id":{"type":""},"state":{"type":""},"isCommit":{"type":""}},"src":"\tdojo.widget.html.stabile.setup();\n\tdojo.widget.html.stabile.widgetState[id] = state;\n\tif(isCommit){\n\t\tdojo.widget.html.stabile.commit(dojo.widget.html.stabile.widgetState);\n\t}"}},"dojo.widget.html.stabile.setup":{"meta":{"summary":"Sets up widgetState: a hash keyed by widgetId, maps to an object or array writable with \"describe\". If there is data in the widget storage area, use it, otherwise initialize an empty object.","src":"\tif(!dojo.widget.html.stabile.widgetState){\n\t\tvar text = dojo.widget.html.stabile._getStorage().value;\n\t\tdojo.widget.html.stabile.widgetState = text ? dj_eval(\"(\"+text+\")\") : {};\n\t}"}},"dojo.widget.html.stabile.commit":{"meta":{"summary":"Commits all widget state to more stable storage, so if the user navigates away and returns, it can be restored.","parameters":{"state":{"type":""}},"src":"\tdojo.widget.html.stabile._getStorage().value = dojo.widget.html.stabile.description(state);"}},"dojo.widget.html.stabile.description":{"meta":{"summary":"Return a JSON \"description string\" for the given value. Supports only core JavaScript types with literals, plus Date, and cyclic structures are unsupported.","parameters":{"v":{"type":""},"showAll":{"type":""}},"src":"\t\/\/ Save and later restore dojo.widget.html.stabile._depth;\n\tvar depth = dojo.widget.html.stabile._depth;\n\tvar describeThis = function() {\n\t\t return this.description(this, true);\n\t} \n\ttry {\n\t\tif(v===void(0)){\n\t\t\treturn \"undefined\";\n\t\t}\n\t\tif(v===null){\n\t\t\treturn \"null\";\n\t\t}\n\t\tif(typeof(v)==\"boolean\" || typeof(v)==\"number\"\n\t\t    || v instanceof Boolean || v instanceof Number){\n\t\t\treturn v.toString();\n\t\t}\n\t\tif(typeof(v)==\"string\" || v instanceof String){\n\t\t\t\/\/ Quote strings and their contents as required.\n\t\t\t\/\/ Replacing by $& fails in IE 5.0\n\t\t\tvar v1 = v.replace(dojo.widget.html.stabile._sqQuotables, \"\\\\$1\"); \n\t\t\tv1 = v1.replace(\/\\n\/g, \"\\\\n\");\n\t\t\tv1 = v1.replace(\/\\r\/g, \"\\\\r\");\n\t\t\t\/\/ Any other important special cases?\n\t\t\treturn \"'\"+v1+\"'\";\n\t\t}\n\t\tif(v instanceof Date){\n\t\t\t\/\/ Create a data constructor.\n\t\t\treturn \"new Date(\"+d.getFullYear+\",\"+d.getMonth()+\",\"+d.getDate()+\")\";\n\t\t}\n\t\tvar d;\n\t\tif(v instanceof Array || v.push){\n\t\t\t\/\/ \"push\" test needed for KHTML\/Safari, don't know why -cp\n\t\t\tif(depth>=dojo.widget.html.stabile.depthLimit)\n\t\t\t  return \"[ ... ]\";\n\t\t\td = \"[\";\n\t\t\tvar first = true;\n\t\t\tdojo.widget.html.stabile._depth++;\n\t\t\tfor(var i=0; i<v.length; i++){\n\t\t\t\t\/\/ Skip functions and undefined values\n\t\t\t\t\/\/ if(v[i]==undef || typeof(v[i])==\"function\")\n\t\t\t\t\/\/   continue;\n\t\t\t\tif(first){\n\t\t\t\t\tfirst = false;\n\t\t\t\t}else{\n\t\t\t\t\td += \",\";\n\t\t\t\t}\n\t\t\t\td+=arguments.callee(v[i], showAll);\n\t\t\t}\n\t\t\treturn d+\"]\";\n\t\t}\n\t\tif(v.constructor==Object\n\t\t    || v.toString==describeThis){\n\t\t\tif(depth>=dojo.widget.html.stabile.depthLimit)\n\t\t\t  return \"{ ... }\";\n\t\t\t\/\/ Instanceof Hash is good, or if we just use Objects,\n\t\t\t\/\/ we can say v.constructor==Object.\n\t\t\t\/\/ IE (5?) lacks hasOwnProperty, but perhaps objects do not always\n\t\t\t\/\/ have prototypes??\n\t\t\tif(typeof(v.hasOwnProperty)!=\"function\" && v.prototype){\n\t\t\t\tthrow new Error(\"description: \"+v+\" not supported by script engine\");\n\t\t\t}\n\t\t\tvar first = true;\n\t\t\td = \"{\";\n\t\t\tdojo.widget.html.stabile._depth++;\n\t\t\tfor(var key in v){\n\t\t\t\t\/\/ Skip values that are functions or undefined.\n\t\t\t\tif(v[key]==void(0) || typeof(v[key])==\"function\")\n\t\t\t\t\tcontinue;\n\t\t\t\tif(first){\n\t\t\t\t\tfirst = false;\n\t\t\t\t}else{\n\t\t\t\t\td += \", \";\n\t\t\t\t}\n\t\t\t\tvar kd = key;\n\t\t\t\t\/\/ If the key is not a legal identifier, use its description.\n\t\t\t\t\/\/ For strings this will quote the stirng.\n\t\t\t\tif(!kd.match(\/^[a-zA-Z_][a-zA-Z0-9_]*$\/)){\n\t\t\t\t\tkd = arguments.callee(key, showAll);\n\t\t\t\t}\n\t\t\t\td += kd+\": \"+arguments.callee(v[key], showAll);\n\t\t\t}\n\t\t\treturn d+\"}\";\n\t\t}\n\t\tif(showAll){\n\t\t\tif(dojo.widget.html.stabile._recur){\n\t\t\t\t\/\/ Save the original definitions of toString;\n\t\t\t\tvar objectToString = Object.prototype.toString;\n\t\t\t\treturn objectToString.apply(v, []);\n\t\t\t}else{\n\t\t\t\tdojo.widget.html.stabile._recur = true;\n\t\t\t\treturn v.toString();\n\t\t\t}\n\t\t}else{\n\t\t\t\/\/ log(\"Description? \"+v.toString()+\", \"+typeof(v));\n\t\t\tthrow new Error(\"Unknown type: \"+v);\n\t\t\treturn \"'unknown'\";\n\t\t}\n\t} finally {\n\t\t\/\/ Always restore the global current depth.\n\t\tdojo.widget.html.stabile._depth = depth;\n\t}","call_chain":["objectToString"]},"extra":{"parameters":{"showAll":{"type":"defaults","summary":"to false -- if true, this becomes a simple symbolic object dumper, but you cannot \"eval\" the output."}}}},"dojo.widget.html.stabile._getStorage":{"meta":{"summary":"Gets an object (form field) with a read\/write \"value\" property.","src":"\tif (dojo.widget.html.stabile.dataField) {\n\t\treturn dojo.widget.html.stabile.dataField;\n\t}\n\tvar form = document.forms._dojo_form;\n\treturn dojo.widget.html.stabile.dataField = form ? form.stabile : {value: \"\"};"}}},"objects":{"dojo.widget.html.stabile":{"meta":{"variables":["_sqQuotables","_depth","_recur","depthLimit"],"summary":"Maintain state of widgets when user hits back\/forward button"}}}}},"dojo.widget.svg.Chart":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.Chart","dojo.html.layout","dojo.math","dojo.svg","dojo.gfx.color","dojo.json"]},"functions":{"dojo.widget.svg.Chart":{"meta":{"prototype_variables":["parseProperties","setAxesPlot","drawVectorNode","drawPlotArea","drawDataGroup","drawAxes","init","destroy","render","postCreate"],"variables":["parseProperties","setAxesPlot","drawVectorNode","drawPlotArea","drawDataGroup","drawAxes","init","destroy","render","postCreate"],"summary":"Creates a chart based on the passed data and plotter choice, using SVG.","src":" \tthis.templatePath=null;\n\t\tthis.templateCssPath=null;\n\t\tthis._isInitialize=false;\n\t\tthis.hasData=false;\n\t\tthis.vectorNode=null;\n\t\tthis.plotArea=null;\n\t\tthis.dataGroup=null;\n\t\tthis.axisGroup=null;\n\t\tthis.properties={\n\t\t\theight:0,\t\/\/\tdefaults, will resize to the domNode.\n\t\t\twidth:0,\n\t\t\tdefaultWidth:600,\n\t\t\tdefaultHeight:400,\n\t\t\tplotType:null,\n\t\t\tpadding:{\n\t\t\t\ttop:10,\n\t\t\t\tbottom:2,\n\t\t\t\tleft:60,\n\t\t\t\tright:30\n\t\t\t},\n\t\t\taxes:{\n\t\t\t\tx:{\n\t\t\t\t\tplotAt:0,\n\t\t\t\t\tlabel:\"\",\n\t\t\t\t\tunitLabel:\"\",\n\t\t\t\t\tunitType:Number,\n\t\t\t\t\tnUnitsToShow:10,\n\t\t\t\t\trange:{\n\t\t\t\t\t\tmin:0,\n\t\t\t\t\t\tmax:200\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ty:{\n\t\t\t\t\tplotAt:0,\n\t\t\t\t\tlabel:\"\",\n\t\t\t\t\tunitLabel:\"\",\n\t\t\t\t\tunitType:Number,\n\t\t\t\t\tnUnitsToShow:10,\n\t\t\t\t\trange:{\n\t\t\t\t\t\tmin:0,\n\t\t\t\t\t\tmax:200\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};","instance_variables":["templatePath","templateCssPath","_isInitialize","hasData","vectorNode","plotArea","dataGroup","axisGroup","properties"],"description":"Renders a basic chart set based on the chosen data source and plotter, using SVG. Note that a lot of the public properties are not meant to be altered, and that some usable attributes passed with the HTML widget definition do not correspond to equivilent properties that are used."}},"dojo.widget.svg.Chart.Plotter":{"meta":{"initialized":true,"summary":"Singleton for plotting series of data.","src":" var self=this;\n\tvar plotters = {};\n\tvar types=dojo.widget.Chart.PlotTypes;\n\tthis.getX=function(\/* string||number *\/value, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tCalculate the x coord on the passed chart for the passed value\n\t\tvar v=parseFloat(value);\n\t\tvar min=chart.properties.axes.x.range.min;\n\t\tvar max=chart.properties.axes.x.range.max;\n\t\tvar ofst=0-min;\n\t\tmin+=ofst; max+=ofst; v+=ofst;\n\t\tvar xmin=chart.properties.padding.left;\n\t\tvar xmax=chart.properties.width-chart.properties.padding.right;\n\t\tvar x=(v*((xmax-xmin)\/max))+xmin;\n\t\treturn x;\t\/\/ float\n\t};\n\tthis.getY=function(\/* string||number *\/value, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tCalculate the y coord on the passed chart for the passed value\n\t\tvar v=parseFloat(value);\n\t\tvar max=chart.properties.axes.y.range.max;\n\t\tvar min=chart.properties.axes.y.range.min;\n\t\tvar ofst=0;\n\t\tif(min<0)ofst+=Math.abs(min);\n\t\tmin+=ofst; max+=ofst; v+=ofst;\n\t\tvar ymin=chart.properties.height-chart.properties.padding.bottom;\n\t\tvar ymax=chart.properties.padding.top;\n\t\tvar y=(((ymin-ymax)\/(max-min))*(max-v))+ymax;\n\t\treturn y;\t\/\/ float\n\t};\n\tthis.addPlotter=function(\/* string *\/name, \/* function *\/func){\n\t\t\/\/\tsummary\n\t\t\/\/\tadd a custom plotter function to this object.\n\t\tplotters[name]=func;\n\t};\n\tthis.plot=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series.\n\t\tif (series.values.length==0) return;\t\/\/\tvoid\n\t\tif (series.plotType && plotters[series.plotType]){\n\t\t\treturn plotters[series.plotType](series, chart);\t\/\/\tvoid\n\t\t}\n\t\telse if (chart.plotType && plotters[chart.plotType]){\n\t\t\treturn plotters[chart.plotType](series, chart);\t\t\/\/\tvoid\n\t\t}\n\t};\n\t\/\/\tplotting\n\tplotters[\"bar\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as a set of bars.\n\t\tvar space=1;\n\t\tvar lastW = 0;\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar x=self.getX(series.values[i].x, chart);\n\t\t\tvar w;\n\t\t\tif (i==series.values.length-1){\n\t\t\t\tw=lastW;\n\t\t\t} else{\n\t\t\t\tw=self.getX(series.values[i+1].x, chart)-x-space;\n\t\t\t\tlastW=w;\n\t\t\t}\n\t\t\tx-=(w\/2);\n\t\t\tvar yA=self.getY(chart.properties.axes.x.plotAt, chart);\n\t\t\tvar y=self.getY(series.values[i].value, chart);\n\t\t\tvar h=Math.abs(yA-y);\n\t\t\tif (parseFloat(series.values[i].value)<chart.properties.axes.x.plotAt){\n\t\t\t\tvar oy=yA;\n\t\t\t\tyA=y;\n\t\t\t\ty=oy;\n\t\t\t}\n\t\t\tvar bar=document.createElementNS(dojo.svg.xmlns.svg, \"rect\");\n\t\t\tbar.setAttribute(\"fill\", series.color);\n\t\t\tbar.setAttribute(\"title\", series.label + \": \" + series.values[i].value);\n\t\t\tbar.setAttribute(\"stroke-width\", \"0\");\n\t\t\tbar.setAttribute(\"x\", x);\n\t\t\tbar.setAttribute(\"y\", y);\n\t\t\tbar.setAttribute(\"width\", w);\n\t\t\tbar.setAttribute(\"height\", h);\n\t\t\tbar.setAttribute(\"fill-opacity\", \"0.9\");\n\t\t\tchart.dataGroup.appendChild(bar);\n\t\t}\n\t};\n\tplotters[\"line\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as a line with tensioning\n\t\tvar tension=1.5;\n\t\tvar line = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\n\t\tline.setAttribute(\"fill\", \"none\");\n\t\tline.setAttribute(\"stroke\", series.color);\n\t\tline.setAttribute(\"stroke-width\", \"2\");\n\t\tline.setAttribute(\"stroke-opacity\", \"0.85\");\n\t\tline.setAttribute(\"title\", series.label);\n\t\tchart.dataGroup.appendChild(line);\n\t\tvar path = [];\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar x = self.getX(series.values[i].x, chart)\n\t\t\tvar y = self.getY(series.values[i].value, chart);\n\t\t\tvar dx = chart.properties.padding.left+1;\n\t\t\tvar dy = chart.properties.height-chart.properties.padding.bottom;\n\t\t\tif (i>0){\n\t\t\t\tdx=x-self.getX(series.values[i-1].x, chart);\n\t\t\t\tdy=self.getY(series.values[i-1].value, chart);\n\t\t\t}\n\t\t\tif (i==0) path.push(\"M\");\n\t\t\telse {\n\t\t\t\tpath.push(\"C\");\n\t\t\t\tvar cx=x-(tension-1)*(dx\/tension);\n\t\t\t\tpath.push(cx+\",\"+dy);\n\t\t\t\tcx=x-(dx\/tension);\n\t\t\t\tpath.push(cx+\",\"+y);\n\t\t\t}\n\t\t\tpath.push(x+\",\"+y);\n\t\t}\n\t\tline.setAttribute(\"d\", path.join(\" \"));\n\t};\n\tplotters[\"area\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as an area with tensioning.\n\t\tvar tension=1.5;\n\t\tvar line = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\n\t\tline.setAttribute(\"fill\", series.color);\n\t\tline.setAttribute(\"fill-opacity\", \"0.4\");\n\t\tline.setAttribute(\"stroke\", series.color);\n\t\tline.setAttribute(\"stroke-width\", \"1\");\n\t\tline.setAttribute(\"stroke-opacity\", \"0.8\");\n\t\tline.setAttribute(\"title\", series.label);\n\t\tchart.dataGroup.appendChild(line);\n\t\tvar path = [];\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar x = self.getX(series.values[i].x, chart)\n\t\t\tvar y = self.getY(series.values[i].value, chart);\n\t\t\tvar dx = chart.properties.padding.left+1;\n\t\t\tvar dy = chart.properties.height-chart.properties.padding.bottom;\n\t\t\tif (i>0){\n\t\t\t\tdx=x-self.getX(series.values[i-1].x, chart);\n\t\t\t\tdy=self.getY(series.values[i-1].value, chart);\n\t\t\t}\n\t\t\tif (i==0) path.push(\"M\");\n\t\t\telse {\n\t\t\t\tpath.push(\"C\");\n\t\t\t\tvar cx=x-(tension-1)*(dx\/tension);\n\t\t\t\tpath.push(cx+\",\"+dy);\n\t\t\t\tcx=x-(dx\/tension);\n\t\t\t\tpath.push(cx+\",\"+y);\n\t\t\t}\n\t\t\tpath.push(x+\",\"+y);\n\t\t}\n\t\t\/\/\tfinish it off\n\t\tpath.push(\"L\");\n\t\tpath.push(x + \",\" + self.getY(0, chart));\n\t\tpath.push(\"L\");\n\t\tpath.push(self.getX(0, chart) + \",\" + self.getY(0, chart));\n\t\tpath.push(\"Z\");\n\t\tline.setAttribute(\"d\", path.join(\" \"));\n\t},\n\tplotters[\"scatter\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as a scatter chart\n\t\tvar r=7;\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar x=self.getX(series.values[i].x, chart);\n\t\t\tvar y=self.getY(series.values[i].value, chart);\n\t\t\tvar point = document.createElementNS(dojo.svg.xmlns.svg, \"path\");\n\t\t\tpoint.setAttribute(\"fill\", series.color);\n\t\t\tpoint.setAttribute(\"stroke-width\", \"0\");\n\t\t\tpoint.setAttribute(\"title\", series.label + \": \" + series.values[i].value);\n\t\t\tpoint.setAttribute(\"d\",\n\t\t\t\t\"M \" + x + \",\" + (y-r) + \" \" +\n\t\t\t\t\"Q \" + x + \",\" + y + \" \" + (x+r) + \",\" + y + \" \" +\n\t\t\t\t\"Q \" + x + \",\" + y + \" \" + x + \",\" + (y+r) + \" \" +\n\t\t\t\t\"Q \" + x + \",\" + y + \" \" + (x-r) + \",\" + y + \" \" +\n\t\t\t\t\"Q \" + x + \",\" + y + \" \" + x + \",\" + (y-r) + \" \" +\n\t\t\t\t\"Z\"\n\t\t\t);\n\t\t\tchart.dataGroup.appendChild(point);\n\t\t}\n\t};\n\tplotters[\"bubble\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as a series of bubbles (scatter with 3rd dimension)\n\t\t\/\/\tadded param for series[n].value: size\n\t\tvar minR=1;\n\t\t\/\/\tdo this off the x axis?\n\t\tvar min=chart.properties.axes.x.range.min;\n\t\tvar max=chart.properties.axes.x.range.max;\n\t\tvar ofst=0-min;\n\t\tmin+=ofst; max+=ofst;\n\t\tvar xmin=chart.properties.padding.left;\n\t\tvar xmax=chart.properties.width-chart.properties.padding.right;\n\t\tvar factor=(max-min)\/(xmax-xmin)*25;\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar size = series.values[i].size;\n\t\t\tif (isNaN(parseFloat(size))) size=minR;\n\t\t\tvar point=document.createElementNS(dojo.svg.xmlns.svg, \"circle\");\n\t\t\tpoint.setAttribute(\"stroke-width\", 0);\n\t\t\tpoint.setAttribute(\"fill\", series.color);\n\t\t\tpoint.setAttribute(\"fill-opacity\", \"0.8\");\n\t\t\tpoint.setAttribute(\"r\", (parseFloat(size)*factor)\/2);\n\t\t\tpoint.setAttribute(\"cx\", self.getX(series.values[i].x, chart));\n\t\t\tpoint.setAttribute(\"cy\", self.getY(series.values[i].value, chart));\n\t\t\tpoint.setAttribute(\"title\", series.label + \": \" + series.values[i].value + \" (\" + size + \")\");\n\t\t\tchart.dataGroup.appendChild(point);\n\t\t}\n\t};","returns":"mixed"}},"dojo.widget.svg.Chart.Plotter.getX":{"meta":{"summary":"Calculate the x coord on the passed chart for the passed value","parameters":{"value":{"type":"string||number"},"chart":{"type":"dojo.widget.Chart"}},"src":" \tvar v=parseFloat(value);\n\t\tvar min=chart.properties.axes.x.range.min;\n\t\tvar max=chart.properties.axes.x.range.max;\n\t\tvar ofst=0-min;\n\t\tmin+=ofst; max+=ofst; v+=ofst;\n\t\tvar xmin=chart.properties.padding.left;\n\t\tvar xmax=chart.properties.width-chart.properties.padding.right;\n\t\tvar x=(v*((xmax-xmin)\/max))+xmin;\n\t\treturn x;\t\/\/ float","returns":"float","instance":"dojo.widget.svg.Chart.Plotter"}},"dojo.widget.svg.Chart.Plotter.getY":{"meta":{"summary":"Calculate the y coord on the passed chart for the passed value","parameters":{"value":{"type":"string||number"},"chart":{"type":"dojo.widget.Chart"}},"src":" \tvar v=parseFloat(value);\n\t\tvar max=chart.properties.axes.y.range.max;\n\t\tvar min=chart.properties.axes.y.range.min;\n\t\tvar ofst=0;\n\t\tif(min<0)ofst+=Math.abs(min);\n\t\tmin+=ofst; max+=ofst; v+=ofst;\n\t\tvar ymin=chart.properties.height-chart.properties.padding.bottom;\n\t\tvar ymax=chart.properties.padding.top;\n\t\tvar y=(((ymin-ymax)\/(max-min))*(max-v))+ymax;\n\t\treturn y;\t\/\/ float","returns":"float","instance":"dojo.widget.svg.Chart.Plotter"}},"dojo.widget.svg.Chart.Plotter.addPlotter":{"meta":{"summary":"add a custom plotter function to this object.","parameters":{"name":{"type":"string"},"func":{"type":"function"}},"src":" \tplotters[name]=func;","instance":"dojo.widget.svg.Chart.Plotter"}},"dojo.widget.svg.Chart.Plotter.plot":{"meta":{"summary":"plot the passed series.","parameters":{"series":{"type":"dojo.widget.Chart.DataSeries"},"chart":{"type":"dojo.widget.Chart"}},"src":" \tif (series.values.length==0) return;\t\/\/\tvoid\n\t\tif (series.plotType && plotters[series.plotType]){\n\t\t\treturn plotters[series.plotType](series, chart);\t\/\/\tvoid\n\t\t}\n\t\telse if (chart.plotType && plotters[chart.plotType]){\n\t\t\treturn plotters[chart.plotType](series, chart);\t\t\/\/\tvoid\n\t\t}","returns":"void","instance":"dojo.widget.svg.Chart.Plotter"}}}}},"dojo.widget.vml.Chart":{"meta":{"requires":{"common":["dojo.widget.HtmlWidget","dojo.widget.Chart","dojo.math","dojo.html.layout","dojo.gfx.color"]},"functions":{"dojo.widget.vml.Chart":{"meta":{"prototype_variables":["parseProperties","setAxesPlot","drawVectorNode","drawPlotArea","drawDataGroup","drawAxes","init","destroy","render","postCreate"],"variables":["parseProperties","setAxesPlot","drawVectorNode","drawPlotArea","drawDataGroup","drawAxes","init","destroy","render","postCreate"],"summary":"Creates a chart based on the passed data and plotter choice, using VML.","src":" \tthis.templatePath=null;\n\t\tthis.templateCssPath=null;\n\t\tthis._isInitialize=false;\n\t\tthis.hasData=false;\n\t\tthis.vectorNode=null;\n\t\tthis.plotArea=null;\n\t\tthis.dataGroup=null;\n\t\tthis.axisGroup=null;\n\t\tthis.properties={\n\t\t\theight:0,\t\/\/\tdefaults, will resize to the domNode.\n\t\t\twidth:0,\n\t\t\tdefaultWidth:600,\n\t\t\tdefaultHeight:400,\n\t\t\tplotType:null,\n\t\t\tpadding:{\n\t\t\t\ttop:10,\n\t\t\t\tbottom:2,\n\t\t\t\tleft:60,\n\t\t\t\tright:30\n\t\t\t},\n\t\t\taxes:{\n\t\t\t\tx:{\n\t\t\t\t\tplotAt:0,\n\t\t\t\t\tlabel:\"\",\n\t\t\t\t\tunitLabel:\"\",\n\t\t\t\t\tunitType:Number,\n\t\t\t\t\tnUnitsToShow:10,\n\t\t\t\t\trange:{\n\t\t\t\t\t\tmin:0,\n\t\t\t\t\t\tmax:200\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ty:{\n\t\t\t\t\tplotAt:0,\n\t\t\t\t\tlabel:\"\",\n\t\t\t\t\tunitLabel:\"\",\n\t\t\t\t\tunitType:Number,\n\t\t\t\t\tnUnitsToShow:10,\n\t\t\t\t\trange:{\n\t\t\t\t\t\tmin:0,\n\t\t\t\t\t\tmax:200\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};","instance_variables":["templatePath","templateCssPath","_isInitialize","hasData","vectorNode","plotArea","dataGroup","axisGroup","properties"],"description":"Renders a basic chart set based on the chosen data source and plotter, using VML. Note that a lot of the public properties are not meant to be altered, and that some usable attributes passed with the HTML widget definition do not correspond to equivilent properties that are used."}},"dojo.widget.vml.Chart.Plotter":{"meta":{"initialized":true,"summary":"Singleton for plotting series of data.","src":" var self=this;\n\tvar plotters = {};\n\tvar types=dojo.widget.Chart.PlotTypes;\n\tthis.getX=function(\/* string||number *\/value, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tCalculate the x coord on the passed chart for the passed value\n\t\tvar v=parseFloat(value);\n\t\tvar min=chart.properties.axes.x.range.min;\n\t\tvar max=chart.properties.axes.x.range.max;\n\t\tvar ofst=0-min;\n\t\tmin+=ofst; max+=ofst; v+=ofst;\n\t\tvar xmin = 0;\n\t\tvar xmax=chart.properties.width-chart.properties.padding.left-chart.properties.padding.right;\n\t\tvar x=(v*((xmax-xmin)\/max))+xmin;\n\t\treturn x;\n\t};\n\tthis.getY=function(\/* string||number *\/value, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tCalculate the y coord on the passed chart for the passed value\n\t\tvar v=parseFloat(value);\n\t\tvar max=chart.properties.axes.y.range.max;\n\t\tvar min=chart.properties.axes.y.range.min;\n\t\tvar ofst=0;\n\t\tif(min<0)ofst+=Math.abs(min);\n\t\tmin+=ofst; max+=ofst; v+=ofst;\n\t\tvar ymin=chart.properties.height-chart.properties.padding.top-chart.properties.padding.bottom;\n\t\tvar ymax = 0;\n\t\tvar y=(((ymin-ymax)\/(max-min))*(max-v))+ymax;\n\t\treturn y;\n\t};\n\tthis.addPlotter=function(\/* string *\/name, \/* function *\/func){\n\t\t\/\/\tsummary\n\t\t\/\/\tadd a custom plotter function to this object.\n\t\tplotters[name]=func;\n\t};\n\tthis.plot=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series.\n\t\tif (series.values.length==0) return;\t\/\/\tvoid\n\t\tif (series.plotType && plotters[series.plotType]){\n\t\t\treturn plotters[series.plotType](series, chart);\t\/\/\tvoid\n\t\t}\n\t\telse if (chart.plotType && plotters[chart.plotType]){\n\t\t\treturn plotters[chart.plotType](series, chart);\t\t\/\/\tvoid\n\t\t}\n\t};\n\t\/\/\tplotting\n\tplotters[\"bar\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as a set of bars.\n\t\tvar space=1;\n\t\tvar lastW = 0;\n\t\tvar ys = [];\n\t\tvar yAxis=self.getY(chart.properties.axes.x.plotAt, chart);\n\t\tvar yA = yAxis;\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar x=self.getX(series.values[i].x, chart);\n\t\t\tvar w;\n\t\t\tif (i==series.values.length-1){\n\t\t\t\tw=lastW;\n\t\t\t} else{\n\t\t\t\tw=self.getX(series.values[i+1].x, chart)-x-space;\n\t\t\t\tlastW=w;\n\t\t\t}\n\t\t\tx-=(w\/2);\n\t\t\tvar y=self.getY(series.values[i].value, chart);\n\t\t\tvar h=Math.abs(yA-y);\n\t\t\tif (parseFloat(series.values[i].value) < chart.properties.axes.x.plotAt){\n\t\t\t\ty=yA;\n\t\t\t}\n\t\t\tvar bar=document.createElement(\"v:rect\");\n\t\t\tbar.style.position=\"absolute\";\n\t\t\tbar.style.top=y+\"px\";\n\t\t\tbar.style.left=x+\"px\";\n\t\t\tbar.style.width=w+\"px\";\n\t\t\tbar.style.height=h+\"px\";\n\t\t\tbar.setAttribute(\"fillColor\", series.color);\n\t\t\tbar.setAttribute(\"stroked\", \"false\");\n\t\t\tbar.style.antialias=\"false\";\n\t\t\tbar.setAttribute(\"title\", series.label + \" (\" + i + \"): \" + series.values[i].value);\n\t\t\tvar fill=document.createElement(\"v:fill\");\n\t\t\tfill.setAttribute(\"opacity\", \"0.9\");\n\t\t\tbar.appendChild(fill);\n\t\t\tchart.dataGroup.appendChild(bar);\n\t\t}\n\t};\t\n\tplotters[\"line\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as a line with tensioning\n\t\tvar tension=1.5;\n\t\tvar line=document.createElement(\"v:shape\");\n\t\tline.setAttribute(\"strokeweight\", \"2px\");\n\t\tline.setAttribute(\"strokecolor\", series.color);\n\t\tline.setAttribute(\"fillcolor\", \"none\");\n\t\tline.setAttribute(\"filled\", \"false\");\n\t\tline.setAttribute(\"title\", series.label);\n\t\tline.setAttribute(\"coordsize\", chart.properties.width + \",\" + chart.properties.height);\n\t\tline.style.position=\"absolute\";\n\t\tline.style.top=\"0px\";\n\t\tline.style.left=\"0px\";\n\t\tline.style.width= chart.properties.width+\"px\";\n\t\tline.style.height=chart.properties.height+\"px\";\n\t\tvar stroke=document.createElement(\"v:stroke\");\n\t\tstroke.setAttribute(\"opacity\", \"0.85\");\n\t\tline.appendChild(stroke);\n\t\tvar path = [];\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar x = Math.round(self.getX(series.values[i].x, chart));\n\t\t\tvar y = Math.round(self.getY(series.values[i].value, chart));\n\t\t\tif (i==0){\n\t\t\t\tpath.push(\"m\");\n\t\t\t\tpath.push(x+\",\"+y);\n\t\t\t}else{\n\t\t\t\tvar lastx=Math.round(self.getX(series.values[i-1].x, chart));\n\t\t\t\tvar lasty=Math.round(self.getY(series.values[i-1].value, chart));\n\t\t\t\tvar dx=x-lastx;\n\t\t\t\tvar dy=y-lasty;\n\t\t\t\tpath.push(\"c\");\n\t\t\t\tvar cx=Math.round((x-(tension-1)*(dx\/tension)));\n\t\t\t\tpath.push(cx+\",\"+lasty);\n\t\t\t\tcx=Math.round((x-(dx\/tension)));\n\t\t\t\tpath.push(cx+\",\"+y);\n\t\t\t\tpath.push(x+\",\"+y);\n\t\t\t}\n\t\t}\n\t\tline.setAttribute(\"path\", path.join(\" \")+\" e\");\n\t\tchart.dataGroup.appendChild(line);\n\t};\n\tplotters[\"area\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as an area with tensioning.\n\t\tvar tension=1.5;\n\t\tvar line=document.createElement(\"v:shape\");\n\t\tline.setAttribute(\"strokeweight\", \"1px\");\n\t\tline.setAttribute(\"strokecolor\", series.color);\n\t\tline.setAttribute(\"fillcolor\", series.color);\n\t\tline.setAttribute(\"title\", series.label);\n\t\tline.setAttribute(\"coordsize\", chart.properties.width + \",\" + chart.properties.height);\n\t\tline.style.position=\"absolute\";\n\t\tline.style.top=\"0px\";\n\t\tline.style.left=\"0px\";\n\t\tline.style.width= chart.properties.width+\"px\";\n\t\tline.style.height=chart.properties.height+\"px\";\n\t\tvar stroke=document.createElement(\"v:stroke\");\n\t\tstroke.setAttribute(\"opacity\", \"0.8\");\n\t\tline.appendChild(stroke);\n\t\tvar fill=document.createElement(\"v:fill\");\n\t\tfill.setAttribute(\"opacity\", \"0.4\");\n\t\tline.appendChild(fill);\n\t\tvar path = [];\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar x = Math.round(self.getX(series.values[i].x, chart));\n\t\t\tvar y = Math.round(self.getY(series.values[i].value, chart));\n\t\t\tif (i==0){\n\t\t\t\tpath.push(\"m\");\n\t\t\t\tpath.push(x+\",\"+y);\n\t\t\t}else{\n\t\t\t\tvar lastx=Math.round(self.getX(series.values[i-1].x, chart));\n\t\t\t\tvar lasty=Math.round(self.getY(series.values[i-1].value, chart));\n\t\t\t\tvar dx=x-lastx;\n\t\t\t\tvar dy=y-lasty;\n\t\t\t\tpath.push(\"c\");\n\t\t\t\tvar cx=Math.round((x-(tension-1)*(dx\/tension)));\n\t\t\t\tpath.push(cx+\",\"+lasty);\n\t\t\t\tcx=Math.round((x-(dx\/tension)));\n\t\t\t\tpath.push(cx+\",\"+y);\n\t\t\t\tpath.push(x+\",\"+y);\n\t\t\t}\n\t\t}\n\t\tpath.push(\"l\");\n\t\tpath.push(x + \",\" + self.getY(0, chart));\n\t\tpath.push(\"l\");\n\t\tpath.push(self.getX(0, chart) + \",\" + self.getY(0,chart));\n\t\tline.setAttribute(\"path\", path.join(\" \")+\" x e\");\n\t\tchart.dataGroup.appendChild(line);\n\t};\n\tplotters[\"scatter\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as a scatter chart\n\t\tvar r=6;\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar x=self.getX(series.values[i].x, chart);\n\t\t\tvar y=self.getY(series.values[i].value, chart);\n\t\t\tvar mod=r\/2;\n\t\t\tvar point=document.createElement(\"v:rect\");\n\t\t\tpoint.setAttribute(\"fillcolor\", series.color);\n\t\t\tpoint.setAttribute(\"strokecolor\", series.color);\n\t\t\tpoint.setAttribute(\"title\", series.label + \": \" + series.values[i].value);\n\t\t\tpoint.style.position=\"absolute\";\n\t\t\tpoint.style.rotation=\"45\";\n\t\t\tpoint.style.top=(y-mod)+\"px\";\n\t\t\tpoint.style.left=(x-mod)+\"px\";\n\t\t\tpoint.style.width=r+\"px\";\n\t\t\tpoint.style.height=r+\"px\";\n\t\t\tvar fill=document.createElement(\"v:fill\");\n\t\t\tfill.setAttribute(\"opacity\", \"0.6\");\n\t\t\tpoint.appendChild(fill);\n\t\t\tchart.dataGroup.appendChild(point);\n\t\t}\n\t};\t\n\tplotters[\"bubble\"]=function(\/* dojo.widget.Chart.DataSeries *\/series, \/* dojo.widget.Chart *\/chart){\n\t\t\/\/\tsummary\n\t\t\/\/\tplot the passed series as a series of bubbles (scatter with 3rd dimension)\n\t\t\/\/\tadded param for series[n].value: size\n\t\tvar minR=1;\n\t\t\/\/\tdo this off the x axis?\n\t\tvar min=chart.properties.axes.x.range.min;\n\t\tvar max=chart.properties.axes.x.range.max;\n\t\tvar ofst=0-min;\n\t\tmin+=ofst; max+=ofst;\n\t\tvar xmin=chart.properties.padding.left;\n\t\tvar xmax=chart.properties.width-chart.properties.padding.right;\n\t\tvar factor=(max-min)\/(xmax-xmin)*25;\n\t\tfor (var i=0; i<series.values.length; i++){\n\t\t\tvar size = series.values[i].size;\n\t\t\tif (isNaN(parseFloat(size))) size=minR;\n\t\t\tvar radius=(parseFloat(size)*factor)\/2;\n\t\t\tvar diameter=radius * 2;\n\t\t\tvar cx=self.getX(series.values[i].x, chart);\n\t\t\tvar cy=self.getY(series.values[i].value, chart);\n\t\t\tvar top=cy-radius;\n\t\t\tvar left=cx-radius;\n\t\t\tvar point=document.createElement(\"v:oval\");\n\t\t\tpoint.setAttribute(\"fillcolor\", series.color);\n\t\t\tpoint.setAttribute(\"title\", series.label + \": \" + series.values[i].value + \" (\" + size + \")\");\n\t\t\tpoint.setAttribute(\"stroked\", \"false\");\n\t\t\tpoint.style.position=\"absolute\";\n\t\t\tpoint.style.top=top+\"px\";\n\t\t\tpoint.style.left=left+\"px\";\n\t\t\tpoint.style.width=diameter+\"px\";\n\t\t\tpoint.style.height=diameter+\"px\";\n\t\t\tvar fill=document.createElement(\"v:fill\");\n\t\t\tfill.setAttribute(\"opacity\", \"0.8\");\n\t\t\tpoint.appendChild(fill);\n\t\t\tchart.dataGroup.appendChild(point);\n\t\t}\n\t};","returns":"void"}},"dojo.widget.vml.Chart.Plotter.getX":{"meta":{"summary":"Calculate the x coord on the passed chart for the passed value","parameters":{"value":{"type":"string||number"},"chart":{"type":"dojo.widget.Chart"}},"src":" \tvar v=parseFloat(value);\n\t\tvar min=chart.properties.axes.x.range.min;\n\t\tvar max=chart.properties.axes.x.range.max;\n\t\tvar ofst=0-min;\n\t\tmin+=ofst; max+=ofst; v+=ofst;\n\t\tvar xmin = 0;\n\t\tvar xmax=chart.properties.width-chart.properties.padding.left-chart.properties.padding.right;\n\t\tvar x=(v*((xmax-xmin)\/max))+xmin;\n\t\treturn x;","instance":"dojo.widget.vml.Chart.Plotter"}},"dojo.widget.vml.Chart.Plotter.getY":{"meta":{"summary":"Calculate the y coord on the passed chart for the passed value","parameters":{"value":{"type":"string||number"},"chart":{"type":"dojo.widget.Chart"}},"src":" \tvar v=parseFloat(value);\n\t\tvar max=chart.properties.axes.y.range.max;\n\t\tvar min=chart.properties.axes.y.range.min;\n\t\tvar ofst=0;\n\t\tif(min<0)ofst+=Math.abs(min);\n\t\tmin+=ofst; max+=ofst; v+=ofst;\n\t\tvar ymin=chart.properties.height-chart.properties.padding.top-chart.properties.padding.bottom;\n\t\tvar ymax = 0;\n\t\tvar y=(((ymin-ymax)\/(max-min))*(max-v))+ymax;\n\t\treturn y;","instance":"dojo.widget.vml.Chart.Plotter"}},"dojo.widget.vml.Chart.Plotter.addPlotter":{"meta":{"summary":"add a custom plotter function to this object.","parameters":{"name":{"type":"string"},"func":{"type":"function"}},"src":" \tplotters[name]=func;","instance":"dojo.widget.vml.Chart.Plotter"}},"dojo.widget.vml.Chart.Plotter.plot":{"meta":{"summary":"plot the passed series.","parameters":{"series":{"type":"dojo.widget.Chart.DataSeries"},"chart":{"type":"dojo.widget.Chart"}},"src":" \tif (series.values.length==0) return;\t\/\/\tvoid\n\t\tif (series.plotType && plotters[series.plotType]){\n\t\t\treturn plotters[series.plotType](series, chart);\t\/\/\tvoid\n\t\t}\n\t\telse if (chart.plotType && plotters[chart.plotType]){\n\t\t\treturn plotters[chart.plotType](series, chart);\t\t\/\/\tvoid\n\t\t}","returns":"void","instance":"dojo.widget.vml.Chart.Plotter"}}}}}}