{"dojo.crypto.Blowfish":{"meta":{"requires":{"common":["dojo.crypto"]},"functions":{"dojo.crypto.Blowfish":{"meta":{"initialized":true,"summary":"Object for doing Blowfish encryption\/decryption.","src":" var POW2=Math.pow(2,2);\n\tvar POW3=Math.pow(2,3);\n\tvar POW4=Math.pow(2,4);\n\tvar POW8=Math.pow(2,8);\n\tvar POW16=Math.pow(2,16);\n\tvar POW24=Math.pow(2,24);\n\tvar iv=null;\t\/\/\tCBC mode initialization vector\n\tvar boxes={\n\t\tp:[\n\t\t\t0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89, \n\t\t\t0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c, 0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, \n\t\t\t0x9216d5d9, 0x8979fb1b\n\t\t],\n\t\ts0:[\n\t\t\t0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96, 0xba7c9045, 0xf12c7f99,\n\t\t\t0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16, 0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e,\n\t\t\t0x0d95748f, 0x728eb658, 0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\n\t\t\t0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e, 0x6c9e0e8b, 0xb01e8a3e,\n\t\t\t0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60, 0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440,\n\t\t\t0x55ca396a, 0x2aab10b6, 0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\n\t\t\t0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c, 0x7a325381, 0x28958677,\n\t\t\t0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193, 0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032,\n\t\t\t0xef845d5d, 0xe98575b1, 0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\n\t\t\t0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a, 0x670c9c61, 0xabd388f0,\n\t\t\t0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3, 0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98, \n\t\t\t0xa1f1651d, 0x39af0176, 0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe, \n\t\t\t0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706, 0x1bfedf72, 0x429b023d, \n\t\t\t0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b, 0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7,\n\t\t\t0xe3fe501a, 0xb6794c3b, 0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\n\t\t\t0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c, 0xcc814544, 0xaf5ebd09,\n\t\t\t0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3, 0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb, \n\t\t\t0x5579c0bd, 0x1a60320a, 0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8, \n\t\t\t0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760, 0x53317b48, 0x3e00df82, \n\t\t\t0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db, 0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573, \n\t\t\t0x695b27b0, 0xbbca58c8, 0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\n\t\t\t0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33, 0x62fb1341, 0xcee4c6e8, \n\t\t\t0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4, 0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0,\n\t\t\t0xd08ed1d0, 0xafc725e0, 0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c, \n\t\t\t0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777, 0xea752dfe, 0x8b021fa1,\n\t\t\t0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299, 0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9,\n\t\t\t0x165fa266, 0x80957705, 0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\n\t\t\t0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e, 0x226800bb, 0x57b8e0af,\n\t\t\t0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa, 0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5,\n\t\t\t0x83260376, 0x6295cfa9, 0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\n\t\t\t0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f, 0xf296ec6b, 0x2a0dd915,\n\t\t\t0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664, 0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a\n\t\t],\n\t\ts1:[\n\t\t\t0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,\n\t\t\t0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29, 0xa0591340, 0xe4183a3e,\n\t\t\t0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6, 0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,\n\t\t\t0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,\n\t\t\t0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c, 0x8e7d44ec, 0x5716f2b8,\n\t\t\t0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff, 0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd,\n\t\t\t0xd19113f9, 0x7ca92ff6, 0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,\n\t\t\t0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41, 0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331, \n\t\t\t0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf, 0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af, \n\t\t\t0xde9a771f, 0xd9930810, 0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,\n\t\t\t0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c, 0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2, \n\t\t\t0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16, 0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd,\n\t\t\t0x71dff89e, 0x10314e55, 0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509, \n\t\t\t0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570, 0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3, \n\t\t\t0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f, 0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a,\n\t\t\t0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960, \n\t\t\t0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883, 0xb17f37d1, 0x018cff28,\n\t\t\t0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802, 0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84, \n\t\t\t0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,\n\t\t\t0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7, 0x9cab5cab, 0xb2f3846e, \n\t\t\t0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50, 0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, \n\t\t\t0x9b540b19, 0x875fa099, 0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281, \n\t\t\t0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99, 0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696,\n\t\t\t0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128, 0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73,\n\t\t\t0x5d4a14d9, 0xe864b7e3, 0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0, \n\t\t\t0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105, 0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250,\n\t\t\t0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3, 0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285,\n\t\t\t0x095bbf00, 0xad19489d, 0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\n\t\t\t0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759, 0xcbee7460, 0x4085f2a7, 0xce77326e,\n\t\t\t0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735, 0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc,\n\t\t\t0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,\n\t\t\t0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a, 0xe6e39f2b, 0xdb83adf7\n\t\t],\n\t\ts2:[\n\t\t\t0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934, 0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068,\n\t\t\t0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af, 0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,\n\t\t\t0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785, 0x7fac6dd0, 0x31cb8504,\n\t\t\t0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a, 0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb,\n\t\t\t0x68dc1462, 0xd7486900, 0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,\n\t\t\t0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,\n\t\t\t0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2, 0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb,\n\t\t\t0xfb0af54e, 0xd8feb397, 0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,\n\t\t\t0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c,\n\t\t\t0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3, 0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc,\n\t\t\t0x07f9c9ee, 0x41041f0f, 0x404779a4, 0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\n\t\t\t0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e, 0xaf664fd1, 0xcad18115,\n\t\t\t0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922, 0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728,\n\t\t\t0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0, 0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,\n\t\t\t0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8, 0x991be14c, 0xdb6e6b0d,\n\t\t\t0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804, 0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b,\n\t\t\t0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3, 0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,\n\t\t\t0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b, 0x12754ccc, 0x782ef11c,\n\t\t\t0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350, 0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9,\n\t\t\t0x44421659, 0x0a121386, 0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,\n\t\t\t0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc, \n\t\t\t0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f, 0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61,\n\t\t\t0x4e58f48f, 0xf2ddfda2, 0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,\n\t\t\t0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c, \n\t\t\t0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e, 0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633, \n\t\t\t0xe85a1f02, 0x09f0be8c, 0x4a99a025, 0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169, \n\t\t\t0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa, 0xa002b5c4, 0x0de6d027, \n\t\t\t0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5, 0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62,\n\t\t\t0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634, 0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,\n\t\t\t0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9, 0x1ac15bb4, 0xd39eb8fc, \n\t\t\t0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4, 0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c,\n\t\t\t0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837, 0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0\n\t\t],\n\t\ts3:[\n\t\t\t0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742, 0xd3822740, 0x99bc9bbe,\n\t\t\t0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b, 0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4,\n\t\t\t0x5748ab2f, 0xbc946e79, 0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6, \n\t\t\t0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a, 0x63ef8ce2, 0x9a86ee22,\n\t\t\t0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4, 0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6, \n\t\t\t0x2826a2f9, 0xa73a3ae1, 0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59, \n\t\t\t0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797, 0x2cf0b7d9, 0x022b8b51,\n\t\t\t0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28, 0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c, \n\t\t\t0xe029ac71, 0xe019a5e6, 0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28, \n\t\t\t0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba, 0x03a16125, 0x0564f0bd, \n\t\t\t0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a, 0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319,\n\t\t\t0x7533d928, 0xb155fdf5, 0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f, \n\t\t\t0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce, 0x5121ce64, 0x774fbe32, \n\t\t\t0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680, 0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166, \n\t\t\t0xb39a460a, 0x6445c0dd, 0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\n\t\t\t0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb, 0x8d6612ae, 0xbf3c6f47,\n\t\t\t0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370, 0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, \n\t\t\t0x4040cb08, 0x4eb4e2cc, 0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\n\t\t\t0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc, 0xbb3a792b, 0x344525bd, \n\t\t\t0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9, 0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, \n\t\t\t0x1a908749, 0xd44fbd9a, 0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f, \n\t\t\t0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a, 0x0f91fc71, 0x9b941525, \n\t\t\t0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1, 0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442,\n\t\t\t0xe0ec6e0e, 0x1698db3b, 0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e, \n\t\t\t0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e, 0xe60b6f47, 0x0fe3f11d,\n\t\t\t0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f, 0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299, \n\t\t\t0xf523f357, 0xa6327623, 0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc, \n\t\t\t0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a, 0x45e1d006, 0xc3f27b9a, \n\t\t\t0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6, 0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b, \n\t\t\t0x53113ec0, 0x1640e3d3, 0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\n\t\t\t0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c, 0x01c36ae4, 0xd6ebe1f9,\n\t\t\t0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f, 0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6\n\t\t]\n\t}\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\tfunction add(x,y){\n\t\tvar sum=(x+y)&0xffffffff;\n\t\tif (sum<0){\n\t\t\tsum=-sum;\n\t\t\treturn (0x10000*((sum>>16)^0xffff))+(((sum&0xffff)^0xffff)+1);\n\t\t}\n\t\treturn sum;\n\t}\n\tfunction split(x){\n\t\tvar r=x&0xffffffff;\n\t\tif(r<0) {\n\t\t\tr=-r;\n\t\t\treturn [((r&0xffff)^0xffff)+1,(r>>16)^0xffff];\n\t\t}\n\t\treturn [r&0xffff,(r>>16)];\n\t}\n\tfunction xor(x,y){\n\t\tvar xs=split(x);\n\t\tvar ys=split(y);\n\t\treturn (0x10000*(xs[1]^ys[1]))+(xs[0]^ys[0]);\n\t}\n\tfunction $(v, box){\n\t\tvar d=v&0xff; v>>=8;\n\t\tvar c=v&0xff; v>>=8;\n\t\tvar b=v&0xff; v>>=8;\n\t\tvar a=v&0xff;\n\t\tvar r=add(box.s0[a],box.s1[b]);\n\t\tr=xor(r,box.s2[c]);\n\t\treturn add(r,box.s3[d]);\n\t}\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\tfunction eb(o, box){\n\t\tvar l=o.left;\n\t\tvar r=o.right;\n\t\tl=xor(l,box.p[0]);\n\t\tr=xor(r,xor($(l,box),box.p[1]));\n\t\tl=xor(l,xor($(r,box),box.p[2]));\n\t\tr=xor(r,xor($(l,box),box.p[3]));\n\t\tl=xor(l,xor($(r,box),box.p[4]));\n\t\tr=xor(r,xor($(l,box),box.p[5]));\n\t\tl=xor(l,xor($(r,box),box.p[6]));\n\t\tr=xor(r,xor($(l,box),box.p[7]));\n\t\tl=xor(l,xor($(r,box),box.p[8]));\n\t\tr=xor(r,xor($(l,box),box.p[9]));\n\t\tl=xor(l,xor($(r,box),box.p[10]));\n\t\tr=xor(r,xor($(l,box),box.p[11]));\n\t\tl=xor(l,xor($(r,box),box.p[12]));\n\t\tr=xor(r,xor($(l,box),box.p[13]));\n\t\tl=xor(l,xor($(r,box),box.p[14]));\n\t\tr=xor(r,xor($(l,box),box.p[15]));\n\t\tl=xor(l,xor($(r,box),box.p[16]));\n\t\to.right=l;\n\t\to.left=xor(r,box.p[17]);\n\t}\n\tfunction db(o, box){\n\t\tvar l=o.left;\n\t\tvar r=o.right;\n\t\tl=xor(l,box.p[17]);\n\t\tr=xor(r,xor($(l,box),box.p[16]));\n\t\tl=xor(l,xor($(r,box),box.p[15]));\n\t\tr=xor(r,xor($(l,box),box.p[14]));\n\t\tl=xor(l,xor($(r,box),box.p[13]));\n\t\tr=xor(r,xor($(l,box),box.p[12]));\n\t\tl=xor(l,xor($(r,box),box.p[11]));\n\t\tr=xor(r,xor($(l,box),box.p[10]));\n\t\tl=xor(l,xor($(r,box),box.p[9]));\n\t\tr=xor(r,xor($(l,box),box.p[8]));\n\t\tl=xor(l,xor($(r,box),box.p[7]));\n\t\tr=xor(r,xor($(l,box),box.p[6]));\n\t\tl=xor(l,xor($(r,box),box.p[5]));\n\t\tr=xor(r,xor($(l,box),box.p[4]));\n\t\tl=xor(l,xor($(r,box),box.p[3]));\n\t\tr=xor(r,xor($(l,box),box.p[2]));\n\t\tl=xor(l,xor($(r,box),box.p[1]));\n\t\to.right=l;\n\t\to.left=xor(r,box.p[0]);\n\t}\n\t\/\/\tNote that we aren't caching contexts here; it might take a little longer\n\t\/\/\tbut we should be more secure this way.\n\tfunction init(key){\n\t\tvar k=key;\n\t\tif (typeof(k)==\"string\"){\n\t\t\tvar a=[];\n\t\t\tfor(var i=0; i<k.length; i++) \n\t\t\t\ta.push(k.charCodeAt(i)&0xff);\n\t\t\tk=a;\n\t\t}\n\t\t\/\/\tinit the boxes\n\t\tvar box = { p:[], s0:[], s1:[], s2:[], s3:[] };\n\t\tfor(var i=0; i<boxes.p.length; i++) box.p.push(boxes.p[i]);\n\t\tfor(var i=0; i<boxes.s0.length; i++) box.s0.push(boxes.s0[i]);\n\t\tfor(var i=0; i<boxes.s1.length; i++) box.s1.push(boxes.s1[i]);\n\t\tfor(var i=0; i<boxes.s2.length; i++) box.s2.push(boxes.s2[i]);\n\t\tfor(var i=0; i<boxes.s3.length; i++) box.s3.push(boxes.s3[i]);\n\t\t\/\/\tinit p with the key\n\t\tvar pos=0;\n\t\tvar data=0;\n\t\tfor(var i=0; i < box.p.length; i++){\n\t\t\tfor (var j=0; j<4; j++){\n\t\t\t\tdata = (data*POW8) | k[pos];\n\t\t\t\tif(++pos==k.length) pos=0;\n\t\t\t}\n\t\t\tbox.p[i] = xor(box.p[i], data);\n\t\t}\n\t\t\/\/\tencrypt p and the s boxes\n\t\tvar res={ left:0, right:0 };\n\t\tfor(var i=0; i<box.p.length;){\n\t\t\teb(res, box);\n\t\t\tbox.p[i++]=res.left;\n\t\t\tbox.p[i++]=res.right;\n\t\t}\n\t\tfor (var i=0; i<4; i++){\n\t\t\tfor(var j=0; j<box[\"s\"+i].length;){\n\t\t\t\teb(res, box);\n\t\t\t\tbox[\"s\"+i][j++]=res.left;\n\t\t\t\tbox[\"s\"+i][j++]=res.right;\n\t\t\t}\n\t\t}\n\t\treturn box;\n\t}\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\tCONVERSION FUNCTIONS\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\t\/\/\tthese operate on byte arrays, NOT word arrays.\n\tfunction toBase64(ba){ \n\t\tvar p=\"=\";\n\t\tvar tab=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/\";\n\t\tvar s=[];\n\t\tvar l=ba.length;\n\t\tvar rm=l%3;\n\t\tvar x=l-rm;\n\t\tfor (var i=0; i<x;){\n\t\t\tvar t=ba[i++]<<16|ba[i++]<<8|ba[i++];\n\t\t\ts.push(tab.charAt((t>>>18)&0x3f)); \n\t\t\ts.push(tab.charAt((t>>>12)&0x3f));\n\t\t\ts.push(tab.charAt((t>>>6)&0x3f));\n\t\t\ts.push(tab.charAt(t&0x3f));\n\t\t}\n\t\t\/\/\tdeal with trailers, based on patch from Peter Wood.\n\t\tswitch(rm){\n\t\t\tcase 2:{\n\t\t\t\tvar t=ba[i++]<<16|ba[i++]<<8;\n\t\t\t\ts.push(tab.charAt((t>>>18)&0x3f));\n\t\t\t\ts.push(tab.charAt((t>>>12)&0x3f));\n\t\t\t\ts.push(tab.charAt((t>>>6)&0x3f));\n\t\t\t\ts.push(p);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1:{\n\t\t\t\tvar t=ba[i++]<<16;\n\t\t\t\ts.push(tab.charAt((t>>>18)&0x3f));\n\t\t\t\ts.push(tab.charAt((t>>>12)&0x3f));\n\t\t\t\ts.push(p);\n\t\t\t\ts.push(p);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn s.join(\"\");\n\t}\n\tfunction fromBase64(str){\n\t\tvar s=str.split(\"\");\n\t\tvar p=\"=\";\n\t\tvar tab=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/\";\n\t\tvar out=[];\n\t\tvar l=s.length;\n\t\twhile(s[--l]==p){ }\n\t\tfor (var i=0; i<l;){\n\t\t\tvar t=tab.indexOf(s[i++])<<18|tab.indexOf(s[i++])<<12|tab.indexOf(s[i++])<<6|tab.indexOf(s[i++]);\n\t\t\tout.push((t>>>16)&0xff);\n\t\t\tout.push((t>>>8)&0xff);\n\t\t\tout.push(t&0xff);\n\t\t}\n\t\treturn out;\n\t}\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\/\/\tPUBLIC FUNCTIONS\n\/\/\t0.2: Only supporting ECB mode for now.\n\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n\tthis.getIV=function(\/* dojo.crypto.outputTypes? *\/ outputType){\n\t\t\/\/\tsummary\n\t\t\/\/\treturns the initialization vector in the output format specified by outputType\n\t\tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\tvar s=[];\n\t\t\t\tfor(var i=0; i<iv.length; i++)\n\t\t\t\t\ts.push((iv[i]).toString(16));\n\t\t\t\treturn s.join(\"\");\t\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn iv.join(\"\");\t\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Raw:{\n\t\t\t\treturn iv;\t\t\t\t\/\/\tarray\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(iv); \t\/\/\t string\n\t\t\t}\n\t\t}\n\t};\n\tthis.setIV=function(\/* string *\/data, \/* dojo.crypto.outputTypes? *\/inputType){\n\t\t\/\/\tsummary\n\t\t\/\/\tsets the initialization vector to data (as interpreted as inputType)\n\t\tvar ip=inputType||dojo.crypto.outputTypes.Base64;\n\t\tvar ba=null;\n\t\tswitch(ip){\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\tba=[];\n\t\t\t\tfor (var i=0; i<data.length; i++){\n\t\t\t\t\tba.push(data.charCodeAt(i));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\tba=[];\n\t\t\t\tvar i=0;\n\t\t\t\twhile (i+1<data.length){\n\t\t\t\t\tba.push(parseInt(data.substr(i,2),16));\n\t\t\t\t\ti+=2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Raw:{\n\t\t\t\tba=data;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\tba=fromBase64(data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\/\/\tmake it a pair of words now\n\t\tiv={};\n\t\tiv.left=ba[0]*POW24|ba[1]*POW16|ba[2]*POW8|ba[3];\n\t\tiv.right=ba[4]*POW24|ba[5]*POW16|ba[6]*POW8|ba[7];\n\t}\n\tthis.encrypt = function(\/* string *\/plaintext, \/* string *\/key, \/* object? *\/ao){\n\t\t\/\/\tsummary\n\t\t\/\/\tencrypts plaintext using key; allows user to specify output type and cipher mode via keyword object \"ao\"\n\t\tvar out=dojo.crypto.outputTypes.Base64;\n\t\tvar mode=dojo.crypto.cipherModes.EBC;\n\t\tif (ao){\n\t\t\tif (ao.outputType) out=ao.outputType;\n\t\t\tif (ao.cipherMode) mode=ao.cipherMode;\n\t\t}\n\t\tvar bx = init(key);\n\t\tvar padding = 8-(plaintext.length&7);\n\t\tfor (var i=0; i<padding; i++) plaintext+=String.fromCharCode(padding);\n\t\tvar cipher=[];\n\t\tvar count=plaintext.length >> 3;\n\t\tvar pos=0;\n\t\tvar o={};\n\t\tvar isCBC=(mode==dojo.crypto.cipherModes.CBC);\n\t\tvar vector={left:iv.left||null, right:iv.right||null};\n\t\tfor(var i=0; i<count; i++){\n\t\t\to.left=plaintext.charCodeAt(pos)*POW24\n\t\t\t\t|plaintext.charCodeAt(pos+1)*POW16\n\t\t\t\t|plaintext.charCodeAt(pos+2)*POW8\n\t\t\t\t|plaintext.charCodeAt(pos+3);\n\t\t\to.right=plaintext.charCodeAt(pos+4)*POW24\n\t\t\t\t|plaintext.charCodeAt(pos+5)*POW16\n\t\t\t\t|plaintext.charCodeAt(pos+6)*POW8\n\t\t\t\t|plaintext.charCodeAt(pos+7);\n\t\t\tif(isCBC){\n\t\t\t\to.left=xor(o.left, vector.left);\n\t\t\t\to.right=xor(o.right, vector.right);\n\t\t\t}\n\t\t\teb(o, bx);\t\/\/\tencrypt the block\n\t\t\tif(isCBC){\n\t\t\t\tvector.left=o.left;\n\t\t\t\tvector.right=o.right;dojo.crypto.outputTypes.Hex\n\t\t\t}\n\t\t\tcipher.push((o.left>>24)&0xff); \n\t\t\tcipher.push((o.left>>16)&0xff); \n\t\t\tcipher.push((o.left>>8)&0xff);\n\t\t\tcipher.push(o.left&0xff);\n\t\t\tcipher.push((o.right>>24)&0xff); \n\t\t\tcipher.push((o.right>>16)&0xff); \n\t\t\tcipher.push((o.right>>8)&0xff);\n\t\t\tcipher.push(o.right&0xff);\n\t\t\tpos+=8;\n\t\t}\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\tvar s=[];\n\t\t\t\tfor(var i=0; i<cipher.length; i++)\n\t\t\t\t\ts.push((cipher[i]).toString(16));\n\t\t\t\treturn s.join(\"\");\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn cipher.join(\"\");\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Raw:{\n\t\t\t\treturn cipher;\t\/\/\tarray\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(cipher);\t\/\/\tstring\n\t\t\t}\n\t\t}\n\t};\n\tthis.decrypt = function(\/* string *\/ciphertext, \/* string *\/key, \/* object? *\/ao){\n\t\t\/\/\tsummary\n\t\t\/\/\tdecrypts ciphertext using key; allows specification of how ciphertext is encoded via ao.\n\t\tvar ip=dojo.crypto.outputTypes.Base64;\n\t\tvar mode=dojo.crypto.cipherModes.EBC;\n\t\tif (ao){\n\t\t\tif (ao.outputType) ip=ao.outputType;\n\t\t\tif (ao.cipherMode) mode=ao.cipherMode;\n\t\t}\n\t\tvar bx = init(key);\n\t\tvar pt=[];\n\t\tvar c=null;\n\t\tswitch(ip){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\tc=[];\n\t\t\t\tvar i=0;\n\t\t\t\twhile (i+1<ciphertext.length){\n\t\t\t\t\tc.push(parseInt(ciphertext.substr(i,2),16));\n\t\t\t\t\ti+=2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\tc=[];\n\t\t\t\tfor (var i=0; i<ciphertext.length; i++){\n\t\t\t\t\tc.push(ciphertext.charCodeAt(i));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Raw:{\n\t\t\t\tc=ciphertext;\t\/\/\tshould be a byte array\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\tc=fromBase64(ciphertext);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar count=c.length >> 3;\n\t\tvar pos=0;\n\t\tvar o={};\n\t\tvar isCBC=(mode==dojo.crypto.cipherModes.CBC);\n\t\tvar vector={left:iv.left||null, right:iv.right||null};\n\t\tfor(var i=0; i<count; i++){\n\t\t\to.left=c[pos]*POW24|c[pos+1]*POW16|c[pos+2]*POW8|c[pos+3];\n\t\t\to.right=c[pos+4]*POW24|c[pos+5]*POW16|c[pos+6]*POW8|c[pos+7];\n\t\t\tif(isCBC){\n\t\t\t\tvar left=o.left;\n\t\t\t\tvar right=o.right;\n\t\t\t}\n\t\t\tdb(o, bx);\t\/\/\tdecrypt the block\n\t\t\tif(isCBC){\n\t\t\t\to.left=xor(o.left, vector.left);\n\t\t\t\to.right=xor(o.right, vector.right);\n\t\t\t\tvector.left=left;\n\t\t\t\tvector.right=right;\n\t\t\t}\n\t\t\tpt.push((o.left>>24)&0xff);\n\t\t\tpt.push((o.left>>16)&0xff);\n\t\t\tpt.push((o.left>>8)&0xff);\n\t\t\tpt.push(o.left&0xff);\n\t\t\tpt.push((o.right>>24)&0xff);\n\t\t\tpt.push((o.right>>16)&0xff);\n\t\t\tpt.push((o.right>>8)&0xff);\n\t\t\tpt.push(o.right&0xff);\n\t\t\tpos+=8;\n\t\t}\n\t\t\/\/\tcheck for padding, and remove.\n\t\tif(pt[pt.length-1]==pt[pt.length-2]||pt[pt.length-1]==0x01){\n\t\t\tvar n=pt[pt.length-1];\n\t\t\tpt.splice(pt.length-n, n);\n\t\t}\n\t\t\/\/\tconvert to string\n\t\tfor(var i=0; i<pt.length; i++)\n\t\t\tpt[i]=String.fromCharCode(pt[i]);\n\t\treturn pt.join(\"\");\t\t\/\/\tstring\n\t};\n\tthis.setIV(\"0000000000000000\", dojo.crypto.outputTypes.Hex);","instance_variables":["encrypt","decrypt"],"returns":"mixed"}},"dojo.crypto.Blowfish.getIV":{"meta":{"summary":"","parameters":{"outputType":{"type":"dojo.crypto.outputTypes?"}},"src":" \tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\tvar s=[];\n\t\t\t\tfor(var i=0; i<iv.length; i++)\n\t\t\t\t\ts.push((iv[i]).toString(16));\n\t\t\t\treturn s.join(\"\");\t\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn iv.join(\"\");\t\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Raw:{\n\t\t\t\treturn iv;\t\t\t\t\/\/\tarray\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(iv); \t\/\/\t string\n\t\t\t}\n\t\t}","returns":"mixed","instance":"dojo.crypto.Blowfish"},"extra":{"returns":"the initialization vector in the output format specified by outputType"}},"dojo.crypto.Blowfish.setIV":{"meta":{"summary":"sets the initialization vector to data (as interpreted as inputType)","parameters":{"data":{"type":"string"},"inputType":{"type":"dojo.crypto.outputTypes?"}},"src":" \tvar ip=inputType||dojo.crypto.outputTypes.Base64;\n\t\tvar ba=null;\n\t\tswitch(ip){\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\tba=[];\n\t\t\t\tfor (var i=0; i<data.length; i++){\n\t\t\t\t\tba.push(data.charCodeAt(i));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\tba=[];\n\t\t\t\tvar i=0;\n\t\t\t\twhile (i+1<data.length){\n\t\t\t\t\tba.push(parseInt(data.substr(i,2),16));\n\t\t\t\t\ti+=2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Raw:{\n\t\t\t\tba=data;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\tba=fromBase64(data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\/\/\tmake it a pair of words now\n\t\tiv={};\n\t\tiv.left=ba[0]*POW24|ba[1]*POW16|ba[2]*POW8|ba[3];\n\t\tiv.right=ba[4]*POW24|ba[5]*POW16|ba[6]*POW8|ba[7];","instance":"dojo.crypto.Blowfish"}},"dojo.crypto.Blowfish.encrypt":{"meta":{"summary":"encrypts plaintext using key; allows user to specify output type and cipher mode via keyword object \"ao\"","parameters":{"plaintext":{"type":"string"},"key":{"type":"string"},"ao":{"type":"object?"}},"src":" \tvar out=dojo.crypto.outputTypes.Base64;\n\t\tvar mode=dojo.crypto.cipherModes.EBC;\n\t\tif (ao){\n\t\t\tif (ao.outputType) out=ao.outputType;\n\t\t\tif (ao.cipherMode) mode=ao.cipherMode;\n\t\t}\n\t\tvar bx = init(key);\n\t\tvar padding = 8-(plaintext.length&7);\n\t\tfor (var i=0; i<padding; i++) plaintext+=String.fromCharCode(padding);\n\t\tvar cipher=[];\n\t\tvar count=plaintext.length >> 3;\n\t\tvar pos=0;\n\t\tvar o={};\n\t\tvar isCBC=(mode==dojo.crypto.cipherModes.CBC);\n\t\tvar vector={left:iv.left||null, right:iv.right||null};\n\t\tfor(var i=0; i<count; i++){\n\t\t\to.left=plaintext.charCodeAt(pos)*POW24\n\t\t\t\t|plaintext.charCodeAt(pos+1)*POW16\n\t\t\t\t|plaintext.charCodeAt(pos+2)*POW8\n\t\t\t\t|plaintext.charCodeAt(pos+3);\n\t\t\to.right=plaintext.charCodeAt(pos+4)*POW24\n\t\t\t\t|plaintext.charCodeAt(pos+5)*POW16\n\t\t\t\t|plaintext.charCodeAt(pos+6)*POW8\n\t\t\t\t|plaintext.charCodeAt(pos+7);\n\t\t\tif(isCBC){\n\t\t\t\to.left=xor(o.left, vector.left);\n\t\t\t\to.right=xor(o.right, vector.right);\n\t\t\t}\n\t\t\teb(o, bx);\t\/\/\tencrypt the block\n\t\t\tif(isCBC){\n\t\t\t\tvector.left=o.left;\n\t\t\t\tvector.right=o.right;dojo.crypto.outputTypes.Hex\n\t\t\t}\n\t\t\tcipher.push((o.left>>24)&0xff); \n\t\t\tcipher.push((o.left>>16)&0xff); \n\t\t\tcipher.push((o.left>>8)&0xff);\n\t\t\tcipher.push(o.left&0xff);\n\t\t\tcipher.push((o.right>>24)&0xff); \n\t\t\tcipher.push((o.right>>16)&0xff); \n\t\t\tcipher.push((o.right>>8)&0xff);\n\t\t\tcipher.push(o.right&0xff);\n\t\t\tpos+=8;\n\t\t}\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\tvar s=[];\n\t\t\t\tfor(var i=0; i<cipher.length; i++)\n\t\t\t\t\ts.push((cipher[i]).toString(16));\n\t\t\t\treturn s.join(\"\");\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn cipher.join(\"\");\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Raw:{\n\t\t\t\treturn cipher;\t\/\/\tarray\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(cipher);\t\/\/\tstring\n\t\t\t}\n\t\t}","returns":"mixed","instance":"dojo.crypto.Blowfish"}},"dojo.crypto.Blowfish.decrypt":{"meta":{"summary":"decrypts ciphertext using key; allows specification of how ciphertext is encoded via ao.","parameters":{"ciphertext":{"type":"string"},"key":{"type":"string"},"ao":{"type":"object?"}},"src":" \tvar ip=dojo.crypto.outputTypes.Base64;\n\t\tvar mode=dojo.crypto.cipherModes.EBC;\n\t\tif (ao){\n\t\t\tif (ao.outputType) ip=ao.outputType;\n\t\t\tif (ao.cipherMode) mode=ao.cipherMode;\n\t\t}\n\t\tvar bx = init(key);\n\t\tvar pt=[];\n\t\tvar c=null;\n\t\tswitch(ip){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\tc=[];\n\t\t\t\tvar i=0;\n\t\t\t\twhile (i+1<ciphertext.length){\n\t\t\t\t\tc.push(parseInt(ciphertext.substr(i,2),16));\n\t\t\t\t\ti+=2;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\tc=[];\n\t\t\t\tfor (var i=0; i<ciphertext.length; i++){\n\t\t\t\t\tc.push(ciphertext.charCodeAt(i));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.Raw:{\n\t\t\t\tc=ciphertext;\t\/\/\tshould be a byte array\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\tc=fromBase64(ciphertext);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar count=c.length >> 3;\n\t\tvar pos=0;\n\t\tvar o={};\n\t\tvar isCBC=(mode==dojo.crypto.cipherModes.CBC);\n\t\tvar vector={left:iv.left||null, right:iv.right||null};\n\t\tfor(var i=0; i<count; i++){\n\t\t\to.left=c[pos]*POW24|c[pos+1]*POW16|c[pos+2]*POW8|c[pos+3];\n\t\t\to.right=c[pos+4]*POW24|c[pos+5]*POW16|c[pos+6]*POW8|c[pos+7];\n\t\t\tif(isCBC){\n\t\t\t\tvar left=o.left;\n\t\t\t\tvar right=o.right;\n\t\t\t}\n\t\t\tdb(o, bx);\t\/\/\tdecrypt the block\n\t\t\tif(isCBC){\n\t\t\t\to.left=xor(o.left, vector.left);\n\t\t\t\to.right=xor(o.right, vector.right);\n\t\t\t\tvector.left=left;\n\t\t\t\tvector.right=right;\n\t\t\t}\n\t\t\tpt.push((o.left>>24)&0xff);\n\t\t\tpt.push((o.left>>16)&0xff);\n\t\t\tpt.push((o.left>>8)&0xff);\n\t\t\tpt.push(o.left&0xff);\n\t\t\tpt.push((o.right>>24)&0xff);\n\t\t\tpt.push((o.right>>16)&0xff);\n\t\t\tpt.push((o.right>>8)&0xff);\n\t\t\tpt.push(o.right&0xff);\n\t\t\tpos+=8;\n\t\t}\n\t\t\/\/\tcheck for padding, and remove.\n\t\tif(pt[pt.length-1]==pt[pt.length-2]||pt[pt.length-1]==0x01){\n\t\t\tvar n=pt[pt.length-1];\n\t\t\tpt.splice(pt.length-n, n);\n\t\t}\n\t\t\/\/\tconvert to string\n\t\tfor(var i=0; i<pt.length; i++)\n\t\t\tpt[i]=String.fromCharCode(pt[i]);\n\t\treturn pt.join(\"\");\t\t\/\/\tstring","returns":"string","instance":"dojo.crypto.Blowfish"}}}}},"dojo.crypto.MD5":{"meta":{"requires":{"common":["dojo.crypto"]},"functions":{"dojo.crypto.MD5":{"meta":{"initialized":true,"summary":"object for creating digests using the MD5 algorithm","src":" var chrsz=8;\n\tvar mask=(1<<chrsz)-1;\n\tfunction toWord(s) {\n\t  var wa=[];\n\t  for(var i=0; i<s.length*chrsz; i+=chrsz)\n\t\twa[i>>5]|=(s.charCodeAt(i\/chrsz)&mask)<<(i%32);\n\t  return wa;\n\t}\n\tfunction toString(wa){\n\t\tvar s=[];\n\t\tfor(var i=0; i<wa.length*32; i+=chrsz)\n\t\t\ts.push(String.fromCharCode((wa[i>>5]>>>(i%32))&mask));\n\t\treturn s.join(\"\");\n\t}\n\tfunction toHex(wa) {\n\t\tvar h=\"0123456789abcdef\";\n\t\tvar s=[];\n\t\tfor(var i=0; i<wa.length*4; i++){\n\t\t\ts.push(h.charAt((wa[i>>2]>>((i%4)*8+4))&0xF)+h.charAt((wa[i>>2]>>((i%4)*8))&0xF));\n\t\t}\n\t\treturn s.join(\"\");\n\t}\n\tfunction toBase64(wa){\n\t\tvar p=\"=\";\n\t\tvar tab=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/\";\n\t\tvar s=[];\n\t\tfor(var i=0; i<wa.length*4; i+=3){\n\t\t\tvar t=(((wa[i>>2]>>8*(i%4))&0xFF)<<16)|(((wa[i+1>>2]>>8*((i+1)%4))&0xFF)<<8)|((wa[i+2>>2]>>8*((i+2)%4))&0xFF);\n\t\t\tfor(var j=0; j<4; j++){\n\t\t\t\tif(i*8+j*6>wa.length*32) s.push(p);\n\t\t\t\telse s.push(tab.charAt((t>>6*(3-j))&0x3F));\n\t\t\t}\n\t\t}\n\t\treturn s.join(\"\");\n\t}\n\tfunction add(x,y) {\n\t\tvar l=(x&0xFFFF)+(y&0xFFFF);\n\t\tvar m=(x>>16)+(y>>16)+(l>>16);\n\t\treturn (m<<16)|(l&0xFFFF);\n\t}\n\tfunction R(n,c){ return (n<<c)|(n>>>(32-c)); }\n\tfunction C(q,a,b,x,s,t){ return add(R(add(add(a,q),add(x,t)),s),b); }\n\tfunction FF(a,b,c,d,x,s,t){ return C((b&c)|((~b)&d),a,b,x,s,t); }\n\tfunction GG(a,b,c,d,x,s,t){ return C((b&d)|(c&(~d)),a,b,x,s,t); }\n\tfunction HH(a,b,c,d,x,s,t){ return C(b^c^d,a,b,x,s,t); }\n\tfunction II(a,b,c,d,x,s,t){ return C(c^(b|(~d)),a,b,x,s,t); }\n\tfunction core(x,len){\n\t\tx[len>>5]|=0x80<<((len)%32);\n\t\tx[(((len+64)>>>9)<<4)+14]=len;\n\t\tvar a= 1732584193;\n\t\tvar b=-271733879;\n\t\tvar c=-1732584194;\n\t\tvar d= 271733878;\n\t\tfor(var i=0; i<x.length; i+=16){\n\t\t\tvar olda=a;\n\t\t\tvar oldb=b;\n\t\t\tvar oldc=c;\n\t\t\tvar oldd=d;\n\t\t\ta=FF(a,b,c,d,x[i+ 0],7 ,-680876936);\n\t\t\td=FF(d,a,b,c,x[i+ 1],12,-389564586);\n\t\t\tc=FF(c,d,a,b,x[i+ 2],17, 606105819);\n\t\t\tb=FF(b,c,d,a,x[i+ 3],22,-1044525330);\n\t\t\ta=FF(a,b,c,d,x[i+ 4],7 ,-176418897);\n\t\t\td=FF(d,a,b,c,x[i+ 5],12, 1200080426);\n\t\t\tc=FF(c,d,a,b,x[i+ 6],17,-1473231341);\n\t\t\tb=FF(b,c,d,a,x[i+ 7],22,-45705983);\n\t\t\ta=FF(a,b,c,d,x[i+ 8],7 , 1770035416);\n\t\t\td=FF(d,a,b,c,x[i+ 9],12,-1958414417);\n\t\t\tc=FF(c,d,a,b,x[i+10],17,-42063);\n\t\t\tb=FF(b,c,d,a,x[i+11],22,-1990404162);\n\t\t\ta=FF(a,b,c,d,x[i+12],7 , 1804603682);\n\t\t\td=FF(d,a,b,c,x[i+13],12,-40341101);\n\t\t\tc=FF(c,d,a,b,x[i+14],17,-1502002290);\n\t\t\tb=FF(b,c,d,a,x[i+15],22, 1236535329);\n\t\t\ta=GG(a,b,c,d,x[i+ 1],5 ,-165796510);\n\t\t\td=GG(d,a,b,c,x[i+ 6],9 ,-1069501632);\n\t\t\tc=GG(c,d,a,b,x[i+11],14, 643717713);\n\t\t\tb=GG(b,c,d,a,x[i+ 0],20,-373897302);\n\t\t\ta=GG(a,b,c,d,x[i+ 5],5 ,-701558691);\n\t\t\td=GG(d,a,b,c,x[i+10],9 , 38016083);\n\t\t\tc=GG(c,d,a,b,x[i+15],14,-660478335);\n\t\t\tb=GG(b,c,d,a,x[i+ 4],20,-405537848);\n\t\t\ta=GG(a,b,c,d,x[i+ 9],5 , 568446438);\n\t\t\td=GG(d,a,b,c,x[i+14],9 ,-1019803690);\n\t\t\tc=GG(c,d,a,b,x[i+ 3],14,-187363961);\n\t\t\tb=GG(b,c,d,a,x[i+ 8],20, 1163531501);\n\t\t\ta=GG(a,b,c,d,x[i+13],5 ,-1444681467);\n\t\t\td=GG(d,a,b,c,x[i+ 2],9 ,-51403784);\n\t\t\tc=GG(c,d,a,b,x[i+ 7],14, 1735328473);\n\t\t\tb=GG(b,c,d,a,x[i+12],20,-1926607734);\n\t\t\ta=HH(a,b,c,d,x[i+ 5],4 ,-378558);\n\t\t\td=HH(d,a,b,c,x[i+ 8],11,-2022574463);\n\t\t\tc=HH(c,d,a,b,x[i+11],16, 1839030562);\n\t\t\tb=HH(b,c,d,a,x[i+14],23,-35309556);\n\t\t\ta=HH(a,b,c,d,x[i+ 1],4 ,-1530992060);\n\t\t\td=HH(d,a,b,c,x[i+ 4],11, 1272893353);\n\t\t\tc=HH(c,d,a,b,x[i+ 7],16,-155497632);\n\t\t\tb=HH(b,c,d,a,x[i+10],23,-1094730640);\n\t\t\ta=HH(a,b,c,d,x[i+13],4 , 681279174);\n\t\t\td=HH(d,a,b,c,x[i+ 0],11,-358537222);\n\t\t\tc=HH(c,d,a,b,x[i+ 3],16,-722521979);\n\t\t\tb=HH(b,c,d,a,x[i+ 6],23, 76029189);\n\t\t\ta=HH(a,b,c,d,x[i+ 9],4 ,-640364487);\n\t\t\td=HH(d,a,b,c,x[i+12],11,-421815835);\n\t\t\tc=HH(c,d,a,b,x[i+15],16, 530742520);\n\t\t\tb=HH(b,c,d,a,x[i+ 2],23,-995338651);\n\t\t\ta=II(a,b,c,d,x[i+ 0],6 ,-198630844);\n\t\t\td=II(d,a,b,c,x[i+ 7],10, 1126891415);\n\t\t\tc=II(c,d,a,b,x[i+14],15,-1416354905);\n\t\t\tb=II(b,c,d,a,x[i+ 5],21,-57434055);\n\t\t\ta=II(a,b,c,d,x[i+12],6 , 1700485571);\n\t\t\td=II(d,a,b,c,x[i+ 3],10,-1894986606);\n\t\t\tc=II(c,d,a,b,x[i+10],15,-1051523);\n\t\t\tb=II(b,c,d,a,x[i+ 1],21,-2054922799);\n\t\t\ta=II(a,b,c,d,x[i+ 8],6 , 1873313359);\n\t\t\td=II(d,a,b,c,x[i+15],10,-30611744);\n\t\t\tc=II(c,d,a,b,x[i+ 6],15,-1560198380);\n\t\t\tb=II(b,c,d,a,x[i+13],21, 1309151649);\n\t\t\ta=II(a,b,c,d,x[i+ 4],6 ,-145523070);\n\t\t\td=II(d,a,b,c,x[i+11],10,-1120210379);\n\t\t\tc=II(c,d,a,b,x[i+ 2],15, 718787259);\n\t\t\tb=II(b,c,d,a,x[i+ 9],21,-343485551);\n\t\t\ta = add(a,olda);\n\t\t\tb = add(b,oldb);\n\t\t\tc = add(c,oldc);\n\t\t\td = add(d,oldd);\n\t\t}\n\t\treturn [a,b,c,d];\n\t}\n\tfunction hmac(data,key){\n\t\tvar wa=toWord(key);\n\t\tif(wa.length>16) wa=core(wa,key.length*chrsz);\n\t\tvar l=[], r=[];\n\t\tfor(var i=0; i<16; i++){\n\t\t\tl[i]=wa[i]^0x36363636;\n\t\t\tr[i]=wa[i]^0x5c5c5c5c;\n\t\t}\n\t\tvar h=core(l.concat(toWord(data)),512+data.length*chrsz);\n\t\treturn core(r.concat(h),640);\n\t}\n\t\/\/\tPublic functions\n\tthis.compute=function(\/* string *\/data, \/* dojo.crypto.outputTypes *\/outputType){\n\t\t\/\/\tsummary\n\t\t\/\/\tcomputes the digest of data, and returns the result as a string of type outputType\n\t\tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\treturn toHex(core(toWord(data),data.length*chrsz));\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn toString(core(toWord(data),data.length*chrsz));\t\/\/\tstring\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(core(toWord(data),data.length*chrsz));\t\/\/\tstring\n\t\t\t}\n\t\t}\n\t};\n\tthis.getHMAC=function(\/* string *\/data, \/* string *\/key, \/* dojo.crypto.outputTypes *\/outputType){\n\t\t\/\/\tsummary\n\t\t\/\/\tcomputes a digest of data using key, and returns the result as a string of outputType\n\t\tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\treturn toHex(hmac(data,key));\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn toString(hmac(data,key));\t\/\/\tstring\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(hmac(data,key));\t\/\/\tstring\n\t\t\t}\n\t\t}\n\t};","returns":"string"}},"dojo.crypto.MD5.compute":{"meta":{"summary":"computes the digest of data, and returns the result as a string of type outputType","parameters":{"data":{"type":"string"},"outputType":{"type":"dojo.crypto.outputTypes"}},"src":" \tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\treturn toHex(core(toWord(data),data.length*chrsz));\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn toString(core(toWord(data),data.length*chrsz));\t\/\/\tstring\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(core(toWord(data),data.length*chrsz));\t\/\/\tstring\n\t\t\t}\n\t\t}","returns":"string","instance":"dojo.crypto.MD5"}},"dojo.crypto.MD5.getHMAC":{"meta":{"summary":"computes a digest of data using key, and returns the result as a string of outputType","parameters":{"data":{"type":"string"},"key":{"type":"string"},"outputType":{"type":"dojo.crypto.outputTypes"}},"src":" \tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\treturn toHex(hmac(data,key));\t\/\/\tstring\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn toString(hmac(data,key));\t\/\/\tstring\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(hmac(data,key));\t\/\/\tstring\n\t\t\t}\n\t\t}","returns":"string","instance":"dojo.crypto.MD5"}}}}},"dojo.crypto.Rijndael":{"meta":{"requires":{"common":["dojo.crypto","dojo.experimental"]},"functions":{"dojo.crypto.Rijndael":{"meta":{"initialized":true,"summary":"","src":" this.encrypt=function(plaintext, key){\n\t};\n\tthis.decrypt=function(ciphertext, key){\n\t};"}},"dojo.crypto.Rijndael.encrypt":{"meta":{"summary":"","parameters":{"plaintext":{"type":""},"key":{"type":""}},"src":"","instance":"dojo.crypto.Rijndael"}},"dojo.crypto.Rijndael.decrypt":{"meta":{"summary":"","parameters":{"ciphertext":{"type":""},"key":{"type":""}},"src":"","instance":"dojo.crypto.Rijndael"}}}}},"dojo.crypto.SHA1":{"meta":{"requires":{"common":["dojo.crypto","dojo.experimental"]},"functions":{"dojo.crypto.SHA1":{"meta":{"initialized":true,"summary":"","src":" var chrsz=8;\n\tvar mask=(1<<chrsz)-1;\n\tfunction toWord(s) {\n\t  var wa=[];\n\t  for(var i=0; i<s.length*chrsz; i+=chrsz)\n\t\twa[i>>5]|=(s.charCodeAt(i\/chrsz)&mask)<<(i%32);\n\t  return wa;\n\t}\n\tfunction toString(wa){\n\t\tvar s=[];\n\t\tfor(var i=0; i<wa.length*32; i+=chrsz)\n\t\t\ts.push(String.fromCharCode((wa[i>>5]>>>(i%32))&mask));\n\t\treturn s.join(\"\");\n\t}\n\tfunction toHex(wa) {\n\t\tvar h=\"0123456789abcdef\";\n\t\tvar s=[];\n\t\tfor(var i=0; i<wa.length*4; i++){\n\t\t\ts.push(h.charAt((wa[i>>2]>>((i%4)*8+4))&0xF)+h.charAt((wa[i>>2]>>((i%4)*8))&0xF));\n\t\t}\n\t\treturn s.join(\"\");\n\t}\n\tfunction toBase64(wa){\n\t\tvar p=\"=\";\n\t\tvar tab=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/\";\n\t\tvar s=[];\n\t\tfor(var i=0; i<wa.length*4; i+=3){\n\t\t\tvar t=(((wa[i>>2]>>8*(i%4))&0xFF)<<16)|(((wa[i+1>>2]>>8*((i+1)%4))&0xFF)<<8)|((wa[i+2>>2]>>8*((i+2)%4))&0xFF);\n\t\t\tfor(var j=0; j<4; j++){\n\t\t\t\tif(i*8+j*6>wa.length*32) s.push(p);\n\t\t\t\telse s.push(tab.charAt((t>>6*(3-j))&0x3F));\n\t\t\t}\n\t\t}\n\t\treturn s.join(\"\");\n\t}\n\t\/\/\tmath\n\tfunction add(x,y){\n\t\tvar l=(x&0xffff)+(y&0xffff);\n\t\tvar m=(x>>16)+(y>>16)+(l>>16);\n\t\treturn (m<<16)|(l&0xffff);\n\t}\n\tfunction r(x,n){  return (x<<n)|(x>>>(32-n)); }\n\t\/\/\tSHA rounds\n\tfunction f(u,v,w){ return ((u&v)|(~u&w)); }\n\tfunction g(u,v,w){ return ((u&v)|(u&w)|(v&w)); }\n\tfunction h(u,v,w){ return (u^v^w); }\n\tfunction fn(i,u,v,w){\n\t\tif(i<20) return f(u,v,w);\n\t\tif(i<40) return h(u,v,w);\n\t\tif(i<60) return g(u,v,w);\n\t\treturn h(u,v,w);\n\t}\n\tfunction cnst(i){\n\t\tif(i<20) return 1518500249;\n\t\tif(i<40) return 1859775393;\n\t\tif(i<60) return -1894007588;\n\t\treturn -899497514;\n\t}\n\tfunction core(x,len){\n\t\tx[len>>5]|=0x80<<(24-len%32);\n\t\tx[((len+64>>9)<<4)+15]=len;\n\t\tvar w=[];\n\t\tvar a= 1732584193;\t\t\/\/\t0x67452301\n\t\tvar b=-271733879;\t\t\/\/\t0xefcdab89\n\t\tvar c=-1732584194;\t\t\/\/\t0x98badcfe\n\t\tvar d= 271733878;\t\t\/\/\t0x10325476\n\t\tvar e=-1009589776;\t\t\/\/\t0xc3d2e1f0\n\t\tfor(var i=0; i<x.length; i+=16){\n\t\t\tvar olda=a;\n\t\t\tvar oldb=b;\n\t\t\tvar oldc=c;\n\t\t\tvar oldd=d;\n\t\t\tvar olde=e;\n\t\t\tfor(var j=0; j<80; j++){\n\t\t\t\tif(j<16) w[j]=x[i+j];\n\t\t\t\telse w[j]=r(w[j-3]^w[j-8]^w[j-14]^w[j-16],1);\n\t\t\t\tvar t=add(add(r(a,5),fn(j,b,c,d)),add(add(e,w[j]),cnst(j)));\n\t\t\t\te=d; d=c; c=r(b,30); b=a; a=t;\n\t\t\t}\n\t\t\ta=add(a,olda);\n\t\t\tb=add(b,oldb);\n\t\t\tc=add(c,oldc);\n\t\t\td=add(d,oldd);\n\t\t\te=add(e,olde);\n\t\t}\n\t\treturn [a,b,c,d,e];\n\t}\n\tfunction hmac(data,key){\n\t\tvar wa=toWord(key);\n\t\tif(wa.length>16) wa=core(wa,key.length*chrsz);\n\t\tvar l=[], r=[];\n\t\tfor(var i=0; i<16; i++){\n\t\t\tl[i]=wa[i]^0x36363636;\n\t\t\tr[i]=wa[i]^0x5c5c5c5c;\n\t\t}\n\t\tvar h=core(l.concat(toWord(data)),512+data.length*chrsz);\n\t\treturn core(r.concat(h),640);\n\t}\n\tthis.compute=function(data,outputType){\n\t\tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\treturn toHex(core(toWord(data),data.length*chrsz));\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn toString(core(toWord(data),data.length*chrsz));\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(core(toWord(data),data.length*chrsz));\n\t\t\t}\n\t\t}\n\t};\n\tthis.getHMAC=function(data,key,outputType){\n\t\tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\treturn toHex(hmac(data,key));\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn toString(hmac(data,key));\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(hmac(data,key));\n\t\t\t}\n\t\t}\n\t};"}},"dojo.crypto.SHA1.compute":{"meta":{"summary":"","parameters":{"data":{"type":""},"outputType":{"type":""}},"src":" \tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\treturn toHex(core(toWord(data),data.length*chrsz));\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn toString(core(toWord(data),data.length*chrsz));\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(core(toWord(data),data.length*chrsz));\n\t\t\t}\n\t\t}","instance":"dojo.crypto.SHA1"}},"dojo.crypto.SHA1.getHMAC":{"meta":{"summary":"","parameters":{"data":{"type":""},"key":{"type":""},"outputType":{"type":""}},"src":" \tvar out=outputType||dojo.crypto.outputTypes.Base64;\n\t\tswitch(out){\n\t\t\tcase dojo.crypto.outputTypes.Hex:{\n\t\t\t\treturn toHex(hmac(data,key));\n\t\t\t}\n\t\t\tcase dojo.crypto.outputTypes.String:{\n\t\t\t\treturn toString(hmac(data,key));\n\t\t\t}\n\t\t\tdefault:{\n\t\t\t\treturn toBase64(hmac(data,key));\n\t\t\t}\n\t\t}","instance":"dojo.crypto.SHA1"}}}}},"dojo.crypto.SHA256":{"meta":{"requires":{"common":["dojo.crypto","dojo.experimental"]},"functions":{"dojo.crypto.SHA256":{"meta":{"initialized":true,"summary":"","src":" this.compute=function(s){\n\t};"}},"dojo.crypto.SHA256.compute":{"meta":{"summary":"","parameters":{"s":{"type":""}},"src":"","instance":"dojo.crypto.SHA256"}}}}},"dojo.crypto._":{"meta":{"requires":{"common":["dojo.crypto","dojo.crypto.MD5"]}}},"dojo.crypto":{"meta":{"objects":{"dojo.crypto.cipherModes":{"meta":{"variables":["ECB","CBC","PCBC","CFB","OFB","CTR"],"summary":"Enumeration for various cipher modes."}},"dojo.crypto.outputTypes":{"meta":{"variables":["Base64","Hex","String","Raw"],"summary":"Enumeration for input and output encodings."}}}}}}