if(dojo.lang.isArray(type)){
	 type: Array
	var arrayOfTypes = type;
	for(var i in arrayOfTypes){
		var aType = arrayOfTypes[i];
		if(dojo.lang.isOfType(value, aType)) {
			return true;  
		}
	}
	return false;  
}else{
	if(dojo.lang.isString(type)){
		 type: String
		type = type.toLowerCase();
	}
	switch (type) {
		case Array:
		case "array":
			return dojo.lang.isArray(value);
			break;
		case Function:
		case "function":
			return dojo.lang.isFunction(value);
			break;
		case String:
		case "string":
			return dojo.lang.isString(value);
			break;
		case Number:
		case "number":
			return dojo.lang.isNumber(value);
			break;
		case "numeric":
			return dojo.lang.isNumeric(value);
			break;
		case Boolean:
		case "ean":
			return dojo.lang.isBoolean(value);
			break;
		case Object:
		case "object":
			return dojo.lang.isObject(value);
			break;
		case "pureobject":
			return dojo.lang.isPureObject(value);
			break;
		case "builtin":
			return dojo.lang.isBuiltIn(value);
			break;
		case "alien":
			return dojo.lang.isAlien(value);
			break;
		case "undefined":
			return dojo.lang.isUndefined(value);
			break;
		case null:
		case "null":
			return (value === null);
			break;
		case "optional":
			return ((value === null) || dojo.lang.isUndefined(value));
			break;
		default:
			if (dojo.lang.isFunction(type)) {
				return (value instanceof type);  
			} else {
				dojo.raise("dojo.lang.isOfType() was passed an invalid type");
			}
			break;
	}
}
dojo.raise("If we get here, it means a bug was introduced above.");