this.canTimeout = dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);

 FIXME: where should we put this method (not here!)?
function interpolateArgs(args){
	var dl = dojo.lang;
	var ao = {
		srcObj: dj_global,
		srcFunc: null,
		adviceObj: dj_global,
		adviceFunc: null,
		aroundObj: null,
		aroundFunc: null,
		adviceType: (args.length>2) ? args[0] : "after",
		precedence: "last",
		once: false,
		delay: null,
		rate: 0,
		adviceMsg: false
	};

	switch(args.length){
		case 0: return;
		case 1: return;
		case 2:
			ao.srcFunc = args[0];
			ao.adviceFunc = args[1];
			break;
		case 3:
			if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
				ao.adviceType = "after";
				ao.srcObj = args[0];
				ao.srcFunc = args[1];
				ao.adviceFunc = args[2];
			}else if((dl.isString(args[1]))&&(dl.isString(args[2]))){
				ao.srcFunc = args[1];
				ao.adviceFunc = args[2];
			}else if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
				ao.adviceType = "after";
				ao.srcObj = args[0];
				ao.srcFunc = args[1];
				var tmpName  = dojo.lang.nameAnonFunc(args[2], ao.adviceObj);
				ao.adviceFunc = tmpName;
			}else if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
				ao.adviceType = "after";
				ao.srcObj = dj_global;
				var tmpName  = dojo.lang.nameAnonFunc(args[0], ao.srcObj);
				ao.srcFunc = tmpName;
				ao.adviceObj = args[1];
				ao.adviceFunc = args[2];
			}
			break;
		case 4:
			if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
				 we can assume that we've got an old-style "connect" from
				 the sigslot school of event attachment. We therefore
				 assume after-advice.
				ao.adviceType = "after";
				ao.srcObj = args[0];
				ao.srcFunc = args[1];
				ao.adviceObj = args[2];
				ao.adviceFunc = args[3];
			}else if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
				ao.adviceType = args[0];
				ao.srcObj = dj_global;
				ao.srcFunc = args[1];
				ao.adviceObj = args[2];
				ao.adviceFunc = args[3];
			}else if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
				ao.adviceType = args[0];
				ao.srcObj = dj_global;
				var tmpName  = dojo.lang.nameAnonFunc(args[1], dj_global);
				ao.srcFunc = tmpName;
				ao.adviceObj = args[2];
				ao.adviceFunc = args[3];
			}else if(dl.isObject(args[1])){
				ao.srcObj = args[1];
				ao.srcFunc = args[2];
				ao.adviceObj = dj_global;
				ao.adviceFunc = args[3];
			}else if(dl.isObject(args[2])){
				ao.srcObj = dj_global;
				ao.srcFunc = args[1];
				ao.adviceObj = args[2];
				ao.adviceFunc = args[3];
			}else{
				ao.srcObj = ao.adviceObj = ao.aroundObj = dj_global;
				ao.srcFunc = args[1];
				ao.adviceFunc = args[2];
				ao.aroundFunc = args[3];
			}
			break;
		case 6:
			ao.srcObj = args[1];
			ao.srcFunc = args[2];
			ao.adviceObj = args[3]
			ao.adviceFunc = args[4];
			ao.aroundFunc = args[5];
			ao.aroundObj = dj_global;
			break;
		default:
			ao.srcObj = args[1];
			ao.srcFunc = args[2];
			ao.adviceObj = args[3]
			ao.adviceFunc = args[4];
			ao.aroundObj = args[5];
			ao.aroundFunc = args[6];
			ao.once = args[7];
			ao.delay = args[8];
			ao.rate = args[9];
			ao.adviceMsg = args[10];
			break;
	}

	if((typeof ao.srcFunc).toLowerCase() != "string"){
		ao.srcFunc = dojo.lang.getNameInObj(ao.srcObj, ao.srcFunc);
	}

	if((typeof ao.adviceFunc).toLowerCase() != "string"){
		ao.adviceFunc = dojo.lang.getNameInObj(ao.adviceObj, ao.adviceFunc);
	}

	if((ao.aroundObj)&&((typeof ao.aroundFunc).toLowerCase() != "string")){
		ao.aroundFunc = dojo.lang.getNameInObj(ao.aroundObj, ao.aroundFunc);
	}

	if(!ao.srcObj){
		dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
	}
	if(!ao.adviceObj){
		dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
	}
	return ao;
}
