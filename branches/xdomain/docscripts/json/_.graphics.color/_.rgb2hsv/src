if (dojo.lang.isArray(r)) {
	b = r[2] || 0;
	g = r[1] || 0;
	r = r[0] || 0;
}

 r,g,b, each 0 to 255, to HSV.
 h = 0.0 to 360.0 (corresponding to 0..360.0 degrees around hexcone)
 s = 0.0 (shade of gray) to 1.0 (pure color)
 v = 0.0 (black) to 1.0 {white)
 Based on C Code in "Computer Graphics -- Principles and Practice,"
 Foley et al, 1996, p. 592. 
 our calculatuions are based on 'regular' values (0-360, 0-1, 0-1) 
 but we return bytes values (0-255, 0-255, 0-255)

var h = null;
var s = null;
var v = null;

var min = Math.min(r, g, b);
v = Math.max(r, g, b);

var delta = v - min;

 calculate saturation (0 if r, g and b are all 0)

s = (v == 0) ? 0 : delta/v;

if (s == 0){
	 achromatic: when saturation is, hue is undefined
	h = 0;
}else{
	 chromatic
	if (r == v){
		 between yellow and magenta
		h = 60 * (g - b) / delta;
	}else{
		if (g == v){
			 between cyan and yellow
			h = 120 + 60 * (b - r) / delta;
		}else{
			if (b == v){
				 between magenta and cyan
				h = 240 + 60 * (r - g) / delta;
			}
		}
	}
	if (h < 0){
		h += 360;
	}
}

h = (h == 0) ? 360 : Math.ceil((h / 360) * 255);
s = Math.ceil(s * 255);

return [h, s, v];