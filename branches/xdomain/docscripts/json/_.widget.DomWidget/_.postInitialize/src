var sourceNodeRef = this.getFragNodeRef(frag);
 Stick my generated dom into the output tree
alert(this.widgetId + ": replacing " + sourceNodeRef + " with " + this.domNode.innerHTML);
if (parentComp && (parentComp.snarfChildDomOutput || !sourceNodeRef)){
	 Add my generated dom as a direct child of my parent widget
	 This is important for generated widgets, and also cases where I am generating an
	 <li> node that can't be inserted back into the original DOM tree
	parentComp.addWidgetAsDirectChild(this, "", "insertAtIndex", "",  args["dojoinsertionindex"], sourceNodeRef);
} else if (sourceNodeRef){
	 Do in-place replacement of the my source node with my generated dom
	if(this.domNode && (this.domNode !== sourceNodeRef)){
		var oldNode = sourceNodeRef.parentNode.replaceChild(this.domNode, sourceNodeRef);
	}
}

 Register myself with my parent, or with the widget manager if
 I have no parent
 TODO: the code below erroneously adds all programatically generated widgets
 to topWidgets (since we don't know who the parent is until after creation finishes)
if ( parentComp ) {
	parentComp.registerChild(this, args.dojoinsertionindex);
} else {
	dojo.widget.manager.topWidgets[this.widgetId]=this;
}

 Expand my children widgets
if(this.isContainer){
	alert("recurse from " + this.widgetId);
	 build any sub-components with us as the parent
	var fragParser = dojo.widget.getParser();
	fragParser.createComponents(frag, this);
}