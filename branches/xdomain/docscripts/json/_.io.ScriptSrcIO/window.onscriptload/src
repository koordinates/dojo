var state = null;
var transport = dojo.io.ScriptSrcTransport;

Find the matching state object for event ID.
if(transport._state[event.id]){
	state = transport._state[event.id];
}else{
	The ID did not match directly to an entry in the state list.
	Try searching the state objects for a matching original URL.
	var tempState;
	for(var param in transport._state){
		tempState = transport._state[param];
		if(tempState.finalUrl && tempState.finalUrl == event.id){
			state = tempState;
			break;
		}
	}

	If no matching original URL is found, then use the URL that was actually used
	in the SCRIPT SRC attribute.
	if(state == null){
		var scripts = document.getElementsByTagName("script");
		for(var i = 0; scripts && i < scripts.length; i++){
			var scriptTag = scripts[i];
			if(scriptTag.getAttribute("class") == "ScriptSrcTransport"
				&& scriptTag.src == event.id){
				state = transport._state[scriptTag.id];
				break;
			}
		}
	}
	
	If state is still null, then throw an error.
	if(state == null){
		throw "No matching state for onscriptload event.id: " + event.id;
	}
}

var callbackName = "error";
switch(event.status){
	case dojo.io.ScriptSrcTransport.DsrStatusCodes.Continue:
		A part of a multipart request.
		callbackName = "partOk";
		break;
	case dojo.io.ScriptSrcTransport.DsrStatusCodes.Ok:
		Successful reponse.
		callbackName = "load";
		break;
}

transport._finish(state, callbackName, event);