var dragObject = dojo.dnd.HtmlDragSource.prototype.onDragStart.call(this);
dojo.debugShallow(dragObject)

dragObject.treeNode = this.treeNode;

dragObject.onDragStart = dojo.lang.hitch(dragObject, function(e) {

	 save selection 
	this.savedSelectedNode = this.treeNode.tree.selector.selectedNode;
	if (this.savedSelectedNode) {
		this.savedSelectedNode.unMarkSelected();
	}

	var result = dojo.dnd.HtmlDragObject.prototype.onDragStart.apply(this, arguments);

	 remove background grid from cloned object 
	dojo.lang.forEach(
		this.dragClone.getElementsByTagName('img'),
		function(elem) { elem.style.backgroundImage='url()' }
	);

	return result;

});

dragObject.onDragEnd = function(e) {

	 restore selection 
	if (this.savedSelectedNode) {
		this.savedSelectedNode.markSelected();
	}
	dojo.debug(e.dragStatus);

	return dojo.dnd.HtmlDragObject.prototype.onDragEnd.apply(this, arguments);
}
dojo.debug(dragObject.domNode.outerHTML)

return dragObject;