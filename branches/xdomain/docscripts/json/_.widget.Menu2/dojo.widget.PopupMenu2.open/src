if (this.isShowing){    return; }

if ( !parentMenu ) {
	 record whenever a top level menu is opened
	dojo.widget.html.Menu2Manager.opened(this, explodeSrc);
}

dojo.debug("open called for animation "+this.animationInProgress)

 if I click  right button and menu is opened, then it gets 2 commands: close -> open
 so close enables animation and next "open" is put to queue to occur at new location
if(this.animationInProgress){
	this.queueOnAnimationFinish.push(this.open, arguments);
	return;
}

var viewport = dojo.html.getViewportSize();
var scrolloffset = dojo.html.getScrollOffset();

var clientRect = {
	'left'  : scrolloffset[0],
	'right' : scrolloffset[0] + viewport[0],
	'top'   : scrolloffset[1],
	'bottom': scrolloffset[1] + viewport[1]
};

if (parentMenu){
	 submenu is opening

	if (x + this.menuWidth > clientRect.right){ x = x - (this.menuWidth + parentMenu.menuWidth - (2 * this.submenuOverlap)); }

	if (y + this.menuHeight > clientRect.bottom){ y = y -
	(this.menuHeight - (this.itemHeight + 5)); }  TODO: why 5?

}else{
	 top level menu is opening
	x+=scrolloffset[0];
	y+=scrolloffset[1];
	explodeSrc[0] += scrolloffset[0];
	explodeSrc[1] += scrolloffset[1];

	if (x < clientRect.left){ x = clientRect.left; }
	if (x + this.menuWidth > clientRect.right){ x = x - this.menuWidth; }

	if (y < clientRect.top){ y = clientRect.top; }
	if (y + this.menuHeight > clientRect.bottom){ y = y - this.menuHeight; }
}

this.parentMenu = parentMenu;
this.explodeSrc = explodeSrc;
this.menuIndex = parentMenu ? parentMenu.menuIndex + 1 : 1;

this.menuX = x;
this.menuY = y;

 move the menu into position but make it invisible
 (because when menus are initially constructed they are visible but off-screen)
this.domNode.style.zIndex = 200 + this.menuIndex;
this.domNode.style.left = x + 'px';
this.domNode.style.top = y + 'px';
this.domNode.style.display='none';
this.domNode.style.position='absolute';

 then use the user defined method to display it
this.show();

this.isShowing = true;