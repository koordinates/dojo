
Property changes on: .
___________________________________________________________________
Name: svn:ignore
   + release


Index: __package__.js
===================================================================
--- __package__.js	(revision 1199)
+++ __package__.js	(working copy)
@@ -1,43 +0,0 @@
-(function(){
-	var isRhino = ((typeof this["load"] == "function")&&(typeof this["Packages"] == "function"));
-	var tmps = ["bootstrap1.js", "hostenv_"+((isRhino) ? "rhino" : "browser")+".js", "bootstrap2.js"];
-
-	if( (this["djConfig"])&&(djConfig["baseScriptUri"]) ){
-		var root = djConfig["baseScriptUri"];
-	}else if((this["djConfig"])&&(djConfig["baseRelativePath"])){
-		var root = djConfig["baseRelativePath"];
-	}else{
-		var root = ".";
-		if(!this["djConfig"]){
-			djConfig = { baseRelativePath: "." };
-		}
-
-		// attempt to figure out the path to dojo if it isn't set in the config
-		if((this["document"])&&(this["document"]["getElementsByTagName"])){
-			var scripts = document.getElementsByTagName("script");
-			var rePkg = /__package__\.js$/i;
-			for(var i = 0; i < scripts.length; i++) {
-				var src = scripts[i].getAttribute("src");
-				if( rePkg.test(src) ) {
-					root = src.replace(rePkg, "");
-					if(!this["djConfig"]) { djConfig = {}; }
-					djConfig["baseScriptUri"] = djConfig["baseRelativePath"] = root;
-					break;
-				}
-			}
-		}
-	}
-
-	if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!isRhino)){
-		tmps.push("browser_debug.js");
-	}
-
-	for(var x in tmps){
-		var spath = root+"src/"+tmps[x];
-		if(isRhino){
-			load(spath);
-		}else{
-			document.write("<script type='text/javascript' src='"+spath+"'></script>");
-		}
-	}
-})();
Index: dojo.js
===================================================================
--- dojo.js	(revision 1199)
+++ dojo.js	(working copy)
@@ -15,7 +15,7 @@
 		// attempt to figure out the path to dojo if it isn't set in the config
 		if((this["document"])&&(this["document"]["getElementsByTagName"])){
 			var scripts = document.getElementsByTagName("script");
-			var rePkg = /__package__\.js$/i;
+			var rePkg = /(__package__|dojo)\.js$/i;
 			for(var i = 0; i < scripts.length; i++) {
 				var src = scripts[i].getAttribute("src");
 				if( rePkg.test(src) ) {
Index: buildscripts/buildUtil.py
===================================================================
--- buildscripts/buildUtil.py	(revision 1199)
+++ buildscripts/buildUtil.py	(working copy)
@@ -23,8 +23,12 @@
 		    out.append(instr[x])
 	return string.join(out, "")
 
-def internTemplateStrings(packageFile="../release/dojo/__package__.js", srcRoot="../"):
-	pfd = open(packageFile)
+def internTemplateStrings(packageFile="../release/dojo/dojo.js", srcRoot="../"):
+	try:
+		pfd = open(packageFile)
+	except:
+		packageFile = packageFile.replace("dojo.js", "__package__.js")
+		pfd = open(packageFile)
 	pkgString = pfd.read()
 	pfd.close()
 	# "Now they have two problems" -- jwz
Index: buildscripts/build.xml
===================================================================
--- buildscripts/build.xml	(revision 1199)
+++ buildscripts/build.xml	(working copy)
@@ -431,12 +431,12 @@
 
 		<antcall target="-rhino-compress">
 			<param name="srcFile" value="${release_dir}/source.__package__.js" />
-			<param name="dstFile" value="${release_dir}/__package__.js" />
+			<param name="dstFile" value="${release_dir}/dojo.js" />
 		</antcall>
 
 		<antcall target="-no-rhino-compress">
 			<param name="srcFile" value="${release_dir}/source.__package__.js" />
-			<param name="dstFile" value="${release_dir}/__package__.js" />
+			<param name="dstFile" value="${release_dir}/dojo.js" />
 		</antcall>
 
 		<!--
Index: src/hostenv_browser.js
===================================================================
--- src/hostenv_browser.js	(revision 1199)
+++ src/hostenv_browser.js	(working copy)
@@ -45,7 +45,7 @@
 	if((dojo.hostenv["base_script_uri_"] == "" || dojo.hostenv["base_relative_path_"] == "")
 		&& document && document.getElementsByTagName) {
 		var scripts = document.getElementsByTagName("script");
-		var rePkg = /__package__\.js$/i;
+		var rePkg = /(__package__|dojo)\.js$/i;
 		for(var i = 0; i < scripts.length; i++) {
 			var src = scripts[i].getAttribute("src");
 			if( rePkg.test(src) ) {
