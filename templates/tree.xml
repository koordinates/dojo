<?xml version="1.0" encoding="utf-8"?>
<dojo:application xmlns:dojo="http://www.dojotoolkit.org/2004/dojoml">
	<dojo:tree cssFileName="tree.css" cssClassName="dojoTree" id="dojoTreeExample" dataProvider="treeExampleDataModel" definitionProvider="treeDefinitions" />
	<dojo:componentDefinitionModel id="treeDefinitions" componentClass="default">
		<!-- componentClass is used to describe types of components
		meaning not a type of component, but a subtype... for example,
		a specific type of a tree component
		-->
		<!-- presentational attributes , may be specified in css, as attributes in the tree component, or here in the componentDefinitionModel; most css properties are allowed, express in lowerCamelCase -->
		<indentation>0.5em</indentation>
		<!-- indentation for each tree level, css dimensions allowed -->
		<treeItems>
			<cssClassList>className1,className2,className3</cssClassList>
			<!--
				seems better than mxml's way of just specifying a list of
				background colors to use for alteration
			-->
			<repetitionFrequency>1,3,1</repetitionFrequency>
			<!-- these names aren't very good... trying to replicate some of
				svg's capabilities for specifying declarative repetition without
				having to use more complex css selectors... -->
			<!-- presentational attributes , may be specified in css, as attributes in the tree component, or here in the componentDefinitionModel; most css properties may be specified, however, there needs to be a way to specify at the tree level inline that they apply to the treeItems and not the tree itself -->
			<rowHeight>1.2em</rowHeight>
		</treeItems>
		<treeIconItems><!-- dataProvider attriute could be used here to add textual
			content instead of an icon -->
			<icon type="folderClosed" cssClassName="folderClosed" svgDefsElement="" src="folderClosedIcon.png" />
			<icon type="folderOpen" cssClassName="folderOpen" svgDefsElement="" src="folderOpenIcon.png" />
			<icon type="leaf" cssClassName="leaf" svgDefsElement="" src="leafIcon.png" />
			<!-- idea is that in html, you'd usually want to use graphics for icons,
				 but with svg, you'd probably want to specify either a class name, or
				 a defs element
			-->
		</treeIconItems>
		<!-- TODO: what about state?  is that defined somewhere in here? -->
		<!-- TODO: how to describe transition effects specific to trees...
		I'm thinking this might be handled by whatever animation model we use -->
		<!-- TODO:
			tree state... define what state the tree is in upon initialization?
			preserve state of what's open and what's closed across user sessions?
			expand all?
			collapse all?
		-->
	</dojo:componentDefinitionModel>
	<dojo:dataModel id="treeExampleDataModel" src="#staticExampleModel" type="xml">
		<label elementName="name" />
		<treeItem elementName="structure">
			<label elementName="name" />
			<objectRelation elementName="uniqueId" />
		</treeItem>
	</dojo:dataModel>

	<arbitraryDataStructure id="staticExampleModel">
		<name>testTree</name>
		<structure>
			<name>item1</name>
			<uniqueId>record1</uniqueId>
		</structure>
		<structure>
			<name>item2</name>
			<uniqueId>record2</uniqueId>
		</structure>
		<structure>
			<name>item3</name>
			<uniqueId>record3</uniqueId>
		</structure>
		<structure>
			<name>item4</name>
			<uniqueId>record4</uniqueId>
		</structure>
	</arbitraryDataStructure>
</dojo:application>
