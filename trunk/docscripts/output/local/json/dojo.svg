{"dojo.svg":{"meta":{"requires":{"common":["dojo.lang.common","dojo.dom"]},"functions":{"dojo.svg.graphics":{"meta":{"is":"dojo.svg.g"}},"dojo.svg.g":{"meta":{"initialized":true,"summary":"Singleton to encapsulate SVG rendering functions.","parameters":{"d":{"type":"DOMDocument"}},"src":" this.suspend=function(){\n\t\t\/\/\tsummary\n\t\t\/\/\tSuspend the rendering engine\n\t\ttry { d.documentElement.suspendRedraw(0); } catch(e){ }\n\t};\n\tthis.resume=function(){\n\t\t\/\/\tsummary\n\t\t\/\/\tResume the rendering engine\n\t\ttry { d.documentElement.unsuspendRedraw(0); } catch(e){ }\n\t};\n\tthis.force=function(){\n\t\t\/\/\tsummary\n\t\t\/\/\tForce the render engine to redraw\n\t\ttry { d.documentElement.forceRedraw(); } catch(e){ }\n\t};"}},"dojo.svg.g.suspend":{"meta":{"summary":"Suspend the rendering engine","src":" \ttry { d.documentElement.suspendRedraw(0); } catch(e){ }","instance":"dojo.svg.g"}},"dojo.svg.g.resume":{"meta":{"summary":"Resume the rendering engine","src":" \ttry { d.documentElement.unsuspendRedraw(0); } catch(e){ }","instance":"dojo.svg.g"}},"dojo.svg.g.force":{"meta":{"summary":"Force the render engine to redraw","src":" \ttry { d.documentElement.forceRedraw(); } catch(e){ }","instance":"dojo.svg.g"}},"dojo.svg.animations":{"meta":{"is":"dojo.svg.anim"}},"dojo.svg.anim":{"meta":{"initialized":true,"summary":"Singleton to encapsulate SVG animation functionality.","parameters":{"d":{"type":"DOMDocument"}},"src":" this.arePaused=function(){\n\t\t\/\/\tsummary\n\t\t\/\/\tcheck to see if all animations are paused\n\t\ttry {\n\t\t\treturn d.documentElement.animationsPaused();\t\/\/\tbool\n\t\t} catch(e){\n\t\t\treturn false;\t\/\/\tbool\n\t\t}\n\t} ;\n\tthis.pause=function(){\n\t\t\/\/\tsummary\n\t\t\/\/\tpause all animations\n\t\ttry { d.documentElement.pauseAnimations(); } catch(e){ }\n\t};\n\tthis.resume=function(){\n\t\t\/\/\tsummary\n\t\t\/\/\tresume all animations\n\t\ttry { d.documentElement.unpauseAnimations(); } catch(e){ }\n\t};","returns":"bool"}},"dojo.svg.anim.arePaused":{"meta":{"summary":"check to see if all animations are paused","src":" \ttry {\n\t\t\treturn d.documentElement.animationsPaused();\t\/\/\tbool\n\t\t} catch(e){\n\t\t\treturn false;\t\/\/\tbool\n\t\t}","returns":"bool","instance":"dojo.svg.anim"}},"dojo.svg.anim.pause":{"meta":{"summary":"pause all animations","src":" \ttry { d.documentElement.pauseAnimations(); } catch(e){ }","instance":"dojo.svg.anim"}},"dojo.svg.anim.resume":{"meta":{"summary":"resume all animations","src":" \ttry { d.documentElement.unpauseAnimations(); } catch(e){ }","instance":"dojo.svg.anim"}},"dojo.svg.toCamelCase":{"meta":{"summary":"converts a CSS-style selector to a camelCased one","parameters":{"selector":{"type":"string"}},"src":" var arr=selector.split('-'), cc=arr[0];\n\tfor(var i=1; i < arr.length; i++) {\n\t\tcc += arr[i].charAt(0).toUpperCase() + arr[i].substring(1);\n\t}\n\treturn cc;\t\/\/ string","returns":"string"}},"dojo.svg.toSelectorCase":{"meta":{"summary":"converts a camelCased selector to a CSS style one","parameters":{"selector":{"type":"string"}},"src":" return selector.replace(\/([A-Z])\/g, \"-$1\" ).toLowerCase();\t\/\/\tstring","returns":"string"}},"dojo.svg.getStyle":{"meta":{"summary":"get the computed style of selector for node.","parameters":{"node":{"type":"SVGElement"},"cssSelector":{"type":"string"}},"src":" return document.defaultView.getComputedStyle(node, cssSelector);\t\/\/\tobject","returns":"object"}},"dojo.svg.getNumericStyle":{"meta":{"summary":"return the numeric version of the computed style of selector on node.","parameters":{"node":{"type":"SVGElement"},"cssSelector":{"type":"string"}},"src":" return parseFloat(dojo.svg.getStyle(node, cssSelector));"}},"dojo.svg.getOpacity":{"meta":{"summary":"Return the opacity of the passed element","parameters":{"node":{"type":"SVGElement"}},"src":" return Math.min(1.0, dojo.svg.getNumericStyle(node, \"fill-opacity\"));\t\/\/\tfloat","returns":"float"}},"dojo.svg.setOpacity":{"meta":{"summary":"set the opacity of node using attributes.","parameters":{"node":{"type":"SVGElement"},"opacity":{"type":"float"}},"src":" node.setAttributeNS(this.xmlns.svg, \"fill-opacity\", opacity);\n\tnode.setAttributeNS(this.xmlns.svg, \"stroke-opacity\", opacity);"}},"dojo.svg.clearOpacity":{"meta":{"summary":"Set any attributes setting opacity to opaque (1.0)","parameters":{"node":{"type":"SVGElement"}},"src":" node.setAttributeNS(this.xmlns.svg, \"fill-opacity\", \"1.0\");\n\tnode.setAttributeNS(this.xmlns.svg, \"stroke-opacity\", \"1.0\");"}},"dojo.svg.getCoords":{"meta":{"summary":"Returns the x\/y coordinates of the passed node, if available.","parameters":{"node":{"type":"SVGElement"}},"src":" if (node.getBBox) {\n\t\tvar box=node.getBBox();\n\t\treturn { x: box.x, y: box.y };\t\/\/\tobject\n\t}\n\treturn null;\t\/\/\tobject","returns":"object"}},"dojo.svg.setCoords":{"meta":{"summary":"Set the x\/y coordinates of the passed node","parameters":{"node":{"type":"SVGElement"},"coords":{"type":"object"}},"src":" var p=dojo.svg.getCoords();\n\tif (!p) return;\n\tvar dx=p.x - coords.x;\n\tvar dy=p.y - coords.y;\n\tdojo.svg.translate(node, dx, dy);"}},"dojo.svg.getDimensions":{"meta":{"summary":"Get the height and width of the passed node.","parameters":{"node":{"type":"SVGElement"}},"src":" if (node.getBBox){\n\t\tvar box=node.getBBox();\n\t\treturn { width: box.width, height : box.height };\t\/\/\tobject\n\t}\n\treturn null;\t\/\/\tobject","returns":"object"}},"dojo.svg.setDimensions":{"meta":{"summary":"Set the dimensions of the passed element if possible. will only support shape-based and container elements; path-based elements are ignored.","parameters":{"node":{"type":"SVGElement"},"dim":{"type":"object"}},"src":" if (node.width){\n\t\tnode.width.baseVal.value=dim.width;\n\t\tnode.height.baseVal.value=dim.height;\n\t}\n\telse if (node.r){\n\t\tnode.r.baseVal.value=Math.min(dim.width, dim.height)\/2;\n\t}\n\telse if (node.rx){\n\t\tnode.rx.baseVal.value=dim.width\/2;\n\t\tnode.ry.baseVal.value=dim.height\/2;\n\t}"}},"dojo.svg.translate":{"meta":{"summary":"Translates the passed node by dx and dy","parameters":{"node":{"type":"SVGElement"},"dx":{"type":"int"},"dy":{"type":"int"}},"src":" if (node.transform && node.ownerSVGElement && node.ownerSVGElement.createSVGTransform){\n\t\tvar t=node.ownerSVGElement.createSVGTransform();\n\t\tt.setTranslate(dx, dy);\n\t\tnode.transform.baseVal.appendItem(t);\n\t}"}},"dojo.svg.scale":{"meta":{"summary":"Scales the passed element by factor scaleX and scaleY. If scaleY not passed, scaleX is used.","parameters":{"node":{"type":"SVGElement"},"scaleX":{"type":"float"},"scaleY":{"type":"float?"}},"src":" if (!scaleY) var scaleY=scaleX;\n\tif (node.transform && node.ownerSVGElement && node.ownerSVGElement.createSVGTransform){\n\t\tvar t=node.ownerSVGElement.createSVGTransform();\n\t\tt.setScale(scaleX, scaleY);\n\t\tnode.transform.baseVal.appendItem(t);\n\t}"}},"dojo.svg.rotate":{"meta":{"summary":"rotate the passed node by ang, with optional cx\/cy as the rotation point.","parameters":{"node":{"type":"SVGElement"},"ang":{"type":"float"},"cx":{"type":"int?"},"cy":{"type":"int?"}},"src":" if (node.transform && node.ownerSVGElement && node.ownerSVGElement.createSVGTransform){\n\t\tvar t=node.ownerSVGElement.createSVGTransform();\n\t\tif (cx == null) t.setMatrix(t.matrix.rotate(ang));\n\t\telse t.setRotate(ang, cx, cy);\n\t\tnode.transform.baseVal.appendItem(t);\n\t}"}},"dojo.svg.skew":{"meta":{"summary":"skew the passed node by ang over axis.","parameters":{"node":{"type":"SVGElement"},"ang":{"type":"float"},"axis":{"type":"string?"}},"src":" var dir=axis || \"x\";\n\tif (node.transform && node.ownerSVGElement && node.ownerSVGElement.createSVGTransform){\n\t\tvar t=node.ownerSVGElement.createSVGTransform();\n\t\tif (dir != \"x\") t.setSkewY(ang);\n\t\telse t.setSkewX(ang);\n\t\tnode.transform.baseVal.appendItem(t);\n\t}"}},"dojo.svg.flip":{"meta":{"summary":"flip the passed element over axis","parameters":{"node":{"type":"SVGElement"},"axis":{"type":"string?"}},"src":" var dir=axis || \"x\";\n\tif (node.transform && node.ownerSVGElement && node.ownerSVGElement.createSVGTransform){\n\t\tvar t=node.ownerSVGElement.createSVGTransform();\n\t\tt.setMatrix((dir != \"x\") ? t.matrix.flipY() : t.matrix.flipX());\n\t\tnode.transform.baseVal.appendItem(t);\n\t}"}},"dojo.svg.invert":{"meta":{"summary":"transform the passed node by the inverse of the current matrix","parameters":{"node":{"type":"SVGElement"}},"src":" if (node.transform && node.ownerSVGElement && node.ownerSVGElement.createSVGTransform){\n\t\tvar t=node.ownerSVGElement.createSVGTransform();\n\t\tt.setMatrix(t.matrix.inverse());\n\t\tnode.transform.baseVal.appendItem(t);\n\t}"}},"dojo.svg.applyMatrix":{"meta":{"summary":"apply the passed matrix to node. If params b - f are passed, a matrix will be created.","parameters":{"node":{"type":"SVGElement"},"a":{"type":"int || SVGMatrix"},"b":{"type":"int?"},"c":{"type":"int?"},"d":{"type":"int?"},"e":{"type":"int?"},"f":{"type":"int?"}},"src":" if (node.transform && node.ownerSVGElement && node.ownerSVGElement.createSVGTransform){\n\t\tvar m;\n\t\tif (b){\n\t\t\tvar m=node.ownerSVGElement.createSVGMatrix();\n\t\t\tm.a=a;\n\t\t\tm.b=b;\n\t\t\tm.c=c;\n\t\t\tm.d=d;\n\t\t\tm.e=e;\n\t\t\tm.f=f;\n\t\t} else m=a;\n\t\tvar t=node.ownerSVGElement.createSVGTransform();\n\t\tt.setMatrix(m);\n\t\tnode.transform.baseVal.appendItem(t);\n\t}"}},"dojo.svg.group":{"meta":{"summary":"expect an array of nodes, attaches the group to the parent of the first node.","parameters":{"nodes":{"type":"Nodelist || array"}},"src":" var p=nodes.item(0).parentNode;\n\tvar g=document.createElementNS(this.xmlns.svg, \"g\");\n\tfor (var i=0; i < nodes.length; i++) g.appendChild(nodes.item(i));\n\tp.appendChild(g);\n\treturn g;"}},"dojo.svg.ungroup":{"meta":{"summary":"puts the children of the group on the same level as group was.","parameters":{"g":{"type":"SVGGElement"}},"src":" var p=g.parentNode;\n\twhile (g.childNodes.length > 0) p.appendChild(g.childNodes.item(0));\n\tp.removeChild(g);"}},"dojo.svg.getGroup":{"meta":{"summary":"if the node is part of a group, return the group, else return null.","parameters":{"node":{"type":"SVGElement"}},"src":" var a=this.getAncestors(node);\n\tfor (var i=0; i < a.length; i++){\n\t\tif (a[i].nodeType == this.ELEMENT_NODE && a[i].nodeName.toLowerCase() == \"g\")\n\t\t\treturn a[i];\n\t}\n\treturn null;"}},"dojo.svg.bringToFront":{"meta":{"summary":"move the passed node the to top of the group (i.e. last child)","parameters":{"node":{"type":"SVGElement"}},"src":" var n=this.getGroup(node) || node;\n\tn.ownerSVGElement.appendChild(n);"}},"dojo.svg.sendToBack":{"meta":{"summary":"move the passed node to the bottom of the group (i.e. first child)","parameters":{"node":{"type":"SVGElement"}},"src":" var n=this.getGroup(node) || node;\n\tn.ownerSVGElement.insertBefore(n, n.ownerSVGElement.firstChild);"}},"dojo.svg.bringForward":{"meta":{"summary":"move the passed node up one in the child node chain","parameters":{"node":{"type":"SVGElement"}},"src":" var n=this.getGroup(node) || node;\n\tif (this.getLastChildElement(n.parentNode) != n){\n\t\tthis.insertAfter(n, this.getNextSiblingElement(n), true);\n\t}"}},"dojo.svg.sendBackward":{"meta":{"summary":"move the passed node down one in the child node chain","parameters":{"node":{"type":"SVGElement"}},"src":" var n=this.getGroup(node) || node;\n\tif (this.getFirstChildElement(n.parentNode) != n){\n\t\tthis.insertBefore(n, this.getPreviousSiblingElement(n), true);\n\t}"}},"dojo.svg.createNodesFromText":{"meta":{"summary":"Create a list of nodes from text","parameters":{"txt":{"type":"string"},"wrap":{"type":"bool?"}},"src":" var docFrag=(new DOMParser()).parseFromString(txt, \"text\/xml\").normalize();\n\tif(wrap){ \n\t\treturn [docFrag.firstChild.cloneNode(true)];\t\/\/\tarray\n\t}\n\tvar nodes=[];\n\tfor(var x=0; x<docFrag.childNodes.length; x++){\n\t\tnodes.push(docFrag.childNodes.item(x).cloneNode(true));\n\t}\n\treturn nodes;\t\/\/ array","returns":"array"}}}}}}