{"dojo.hostenv_browser":{"meta":{"functions":{"dojo.hostenv.getXmlhttpObject":{"meta":{"summary":"","src":"    var http = null;\n\tvar last_e = null;\n\ttry{ http = new XMLHttpRequest(); }catch(e){}\n    if(!http){\n\t\tfor(var i=0; i<3; ++i){\n\t\t\tvar progid = dojo.hostenv._XMLHTTP_PROGIDS[i];\n\t\t\ttry{\n\t\t\t\thttp = new ActiveXObject(progid);\n\t\t\t}catch(e){\n\t\t\t\tlast_e = e;\n\t\t\t}\n\t\t\tif(http){\n\t\t\t\tdojo.hostenv._XMLHTTP_PROGIDS = [progid];  \/\/ so faster next time\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\/*if(http && !http.toString) {\n\t\t\thttp.toString = function() { \"[object XMLHttpRequest]\"; }\n\t\t}*\/\n\t}\n\tif(!http){\n\t\treturn dojo.raise(\"XMLHTTP not available\", last_e);\n\t}\n\treturn http;"}},"dojo.hostenv.getText":{"meta":{"summary":"","parameters":{"uri":{"type":""},"async_cb":{"type":""},"fail_ok":{"type":""}},"src":" if(!async_cb){ this._blockAsync = true; }\n\tvar http = this.getXmlhttpObject();\n\tfunction isDocumentOk(http){\n\t\tvar stat = http[\"status\"];\n\t\t\/\/ allow a 304 use cache, needed in konq (is this compliant with the http spec?)\n\t\treturn Boolean((!stat)||((200 <= stat)&&(300 > stat))||(stat==304));\n\t}\n\tif(async_cb){\n\t\tvar _this = this, timer = null, gbl = dojo.global();\n\t\tvar xhr = dojo.evalObjPath(\"dojo.io.XMLHTTPTransport\");\n\t\thttp.onreadystatechange = function(){\n\t\t\tif(timer){ gbl.clearTimeout(timer); timer = null; }\n\t\t\tif(_this._blockAsync || (xhr && xhr._blockAsync)){\n\t\t\t\ttimer = gbl.setTimeout(function () { http.onreadystatechange.apply(this); }, 10);\n\t\t\t}else{\n\t\t\t\tif(4==http.readyState){\n\t\t\t\t\tif(isDocumentOk(http)){\n\t\t\t\t\t\t\/\/ dojo.debug(\"LOADED URI: \"+uri);\n\t\t\t\t\t\tasync_cb(http.responseText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\thttp.open('GET', uri, async_cb ? true : false);\n\ttry{\n\t\thttp.send(null);\n\t\tif(async_cb){\n\t\t\treturn null;\n\t\t}\n\t\tif(!isDocumentOk(http)){\n\t\t\tvar err = Error(\"Unable to load \"+uri+\" status:\"+ http.status);\n\t\t\terr.status = http.status;\n\t\t\terr.responseText = http.responseText;\n\t\t\tthrow err;\n\t\t}\n\t}catch(e){\n\t\tthis._blockAsync = false;\n\t\tif((fail_ok)&&(!async_cb)){\n\t\t\treturn null;\n\t\t}else{\n\t\t\tthrow e;\n\t\t}\n\t}\n\tthis._blockAsync = false;\n\treturn http.responseText;","instance_variables":["_blockAsync"],"call_chain":["http.onreadystatechange"]}},"dojo.hostenv.println":{"meta":{"summary":"","parameters":{"line":{"type":""}},"src":" if(!dojo.hostenv._println_safe){\n\t\tdojo.hostenv._println_buffer.push(line);\n\t}else{\n\t\ttry {\n\t\t\tvar console = document.getElementById(djConfig.debugContainerId ?\n\t\t\t\tdjConfig.debugContainerId : dojo.hostenv.defaultDebugContainerId);\n\t\t\tif(!console) { console = dojo.body(); }\n\t\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.appendChild(document.createTextNode(line));\n\t\t\tconsole.appendChild(div);\n\t\t} catch (e) {\n\t\t\ttry{\n\t\t\t\t\/\/ safari needs the output wrapped in an element for some reason\n\t\t\t\tdocument.write(\"<div>\" + line + \"<\/div>\");\n\t\t\t}catch(e2){\n\t\t\t\twindow.status = line;\n\t\t\t}\n\t\t}\n\t}"}},"dj_addNodeEvtHdlr":{"meta":{"summary":"","parameters":{"node":{"type":""},"evtName":{"type":""},"fp":{"type":""},"capture":{"type":""}},"src":" var oldHandler = node[\"on\"+evtName] || function(){};\n\tnode[\"on\"+evtName] = function(){\n\t\tfp.apply(node, arguments);\n\t\toldHandler.apply(node, arguments);\n\t}\n\treturn true;","call_chain":["fp","oldHandler"]}},"dj_load_init":{"meta":{"summary":"","parameters":{"e":{"type":""}},"src":" var type = (e && e.type) ? e.type.toLowerCase() : \"load\";\n\tif(arguments.callee.initialized || (type!=\"domcontentloaded\" && type!=\"load\")){ return; }\n\targuments.callee.initialized = true;\n\tif(typeof(_timer) != 'undefined'){\n\t\tclearInterval(_timer);\n\t\tdelete _timer;\n\t}\n\tvar initFunc = function(){\n\t\t\/\/perform initialization\n\t\tif(dojo.render.html.ie){\n\t\t\tdojo.hostenv.makeWidgets();\n\t\t}\n\t};\n\tif(dojo.hostenv.inFlightCount == 0){\n\t\tinitFunc();\n\t\tdojo.hostenv.modulesLoaded();\n\t}else{\n\t\t\/\/This else case should be xdomain loading.\n\t\t\/\/Make sure this is the first thing in the load listener array.\n\t\t\/\/Part of the dojo.addOnLoad guarantee is that when the listeners are notified,\n\t\t\/\/It means the DOM (or page) has loaded and that widgets have been parsed.\n\t\tdojo.hostenv.modulesLoadedListeners.unshift(initFunc);\n\t}"}},"dojo.hostenv.makeWidgets":{"meta":{"summary":"","src":" var sids = [];\n\tif(djConfig.searchIds && djConfig.searchIds.length > 0) {\n\t\tsids = sids.concat(djConfig.searchIds);\n\t}\n\tif(dojo.hostenv.searchIds && dojo.hostenv.searchIds.length > 0) {\n\t\tsids = sids.concat(dojo.hostenv.searchIds);\n\t}\n\tif((djConfig.parseWidgets)||(sids.length > 0)){\n\t\tif(dojo.evalObjPath(\"dojo.widget.Parse\")){\n\t\t\t\/\/ we must do this on a delay to avoid:\n\t\t\t\/\/\thttp:\/\/www.shaftek.org\/blog\/archives\/000212.html\n\t\t\t\/\/ (IE bug)\n\t\t\t\tvar parser = new dojo.xml.Parse();\n\t\t\t\tif(sids.length > 0){\n\t\t\t\t\tfor(var x=0; x<sids.length; x++){\n\t\t\t\t\t\tvar tmpNode = document.getElementById(sids[x]);\n\t\t\t\t\t\tif(!tmpNode){ continue; }\n\t\t\t\t\t\tvar frag = parser.parseElement(tmpNode, null, true);\n\t\t\t\t\t\tdojo.widget.getParser().createComponents(frag);\n\t\t\t\t\t}\n\t\t\t\t}else if(djConfig.parseWidgets){\n\t\t\t\t\tvar frag  = parser.parseElement(dojo.body(), null, true);\n\t\t\t\t\tdojo.widget.getParser().createComponents(frag);\n\t\t\t\t}\n\t\t}\n\t}"}},"dojo.hostenv.writeIncludes":{"meta":{"summary":"","src":""}},"dojo.doc":{"meta":{"summary":"return the document object associated with the dojo.global()","src":" return dj_currentDocument;"}},"dojo.body":{"meta":{"summary":"return the body object associated with dojo.doc() Note: document.body is not defined for a strict xhtml document","src":" return dojo.doc().body || dojo.doc().getElementsByTagName(\"body\")[0];"}},"dojo.byId":{"meta":{"summary":"","parameters":{"id":{"type":""},"doc":{"type":""}},"src":" if((id)&&((typeof id == \"string\")||(id instanceof String))){\n\t\tif (!doc) { doc = dj_currentDocument; }\n\t\tvar ele = doc.getElementById(id);\n\t\t\/\/ workaround bug in IE and Opera 8.2 where getElementById returns wrong element\n\t\tif (ele && (ele.id != id) && doc.all) {\n\t\t\tele = null;\n\t\t\t\/\/ get all matching elements with this id\n\t\t\teles = doc.all[id];\n\t\t\tif (eles) {\n\t\t\t\t\/\/ if more than 1, choose first with the correct id\n\t\t\t\tif (eles.length) {\n\t\t\t\t\tfor (var i=0; i < eles.length; i++) {\n\t\t\t\t\t\tif (eles[i].id == id) {\n\t\t\t\t\t\t\tele = eles[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\/\/ return 1 and only element\n\t\t\t\t} else { ele = eles; }\n\t\t\t}\n\t\t}\n\t\treturn ele;\n\t}\n\treturn id; \/\/ assume it's a node","returns":"assume it's a node"}},"dojo.setContext":{"meta":{"summary":"","parameters":{"globalObject":{"type":"Object"},"globalDocument":{"type":"Object"}},"src":" dj_currentContext = globalObject;\n\tdj_currentDocument = globalDocument;"}},"dojo._fireCallback":{"meta":{"summary":"","parameters":{"callback":{"type":""},"context":{"type":""},"cbArguments":{"type":""}},"src":" if((context)&&((typeof callback == \"string\")||(callback instanceof String))){\n\t\tcallback=context[callback];\n\t}\n\treturn (context ? callback.apply(context, cbArguments || [ ]) : callback());","call_chain":["callback"]}},"dojo.withGlobal":{"meta":{"summary":"Call callback with globalObject as dojo.global() and globalObject.document as dojo.doc(). If provided, globalObject will be executed in the context of object thisObject","parameters":{"globalObject":{"type":"Object"},"callback":{"type":"Function"},"thisObject":{"type":"Object?"},"cbArguments":{"type":"Array?"}},"src":" var rval;\n\tvar oldGlob = dj_currentContext;\n\tvar oldDoc = dj_currentDocument;\n\ttry{\n\t\tdojo.setContext(globalObject, globalObject.document);\n\t\trval = dojo._fireCallback(callback, thisObject, cbArguments);\n\t}finally{\n\t\tdojo.setContext(oldGlob, oldDoc);\n\t}\n\treturn rval;","description":"When callback() returns or throws an error, the dojo.global() and dojo.doc() will be restored to its previous state."}},"dojo.withDoc":{"meta":{"summary":"Call callback with documentObject as dojo.doc(). If provided, callback will be executed in the context of object thisObject","parameters":{"documentObject":{"type":"Object"},"callback":{"type":"Function"},"thisObject":{"type":"Object?"},"cbArguments":{"type":"Array?"}},"src":" var rval;\n\tvar oldDoc = dj_currentDocument;\n\ttry{\n\t\tdj_currentDocument = documentObject;\n\t\trval = dojo._fireCallback(callback, thisObject, cbArguments);\n\t}finally{\n\t\tdj_currentDocument = oldDoc;\n\t}\n\treturn rval;","description":"When callback() returns or throws an error, the dojo.doc() will be restored to its previous state."}}}}}}