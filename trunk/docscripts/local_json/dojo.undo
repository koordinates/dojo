{"dojo.undo.Manager":{"meta":{"requires":{"common":["dojo.lang"]},"methods":{"dojo.undo.Manager":{"_":{"meta":{"summary":"","parameters":{"parent":{"type":""}},"src":"\tthis.clear();\n\tthis._parent = parent;","this_variables":["_parent","canUndo","canRedo","_undoStack","_redoStack","_currentManager","isUndoing","isRedoing","_redoStack","_redoStack","_redoStack","_redoStack","_redoStack","_currentManager","_parent._currentManager","_currentManager"],"protovariables":{"_parent":"","_undoStack":"","_redoStack":"","_currentManager":"","canUndo":"","canRedo":"","isUndoing":"","isRedoing":""}}}},"dojo.undo.Manager.onUndo":{"_":{"meta":{"summary":"","parameters":{"manager":{"type":""},"item":{"type":""}},"src":"","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.onRedo":{"_":{"meta":{"summary":"","parameters":{"manager":{"type":""},"item":{"type":""}},"src":"","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.onUndoAny":{"_":{"meta":{"summary":"","parameters":{"manager":{"type":""},"item":{"type":""}},"src":"","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.onRedoAny":{"_":{"meta":{"summary":"","parameters":{"manager":{"type":""},"item":{"type":""}},"src":"","this":"dojo.undo.Manager"}}},"dojo.undo.Manager._updateStatus":{"_":{"meta":{"summary":"","src":"\t\tthis.canUndo = this._undoStack.length > 0;\n\t\tthis.canRedo = this._redoStack.length > 0;","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.clear":{"_":{"meta":{"summary":"","src":"\t\tthis._undoStack = [];\n\t\tthis._redoStack = [];\n\t\tthis._currentManager = this;\n\n\t\tthis.isUndoing = false;\n\t\tthis.isRedoing = false;\n\n\t\tthis._updateStatus();","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.undo":{"_":{"meta":{"summary":"","parameters":{"undo":{"type":""},"redo":{"type":"optional"},"description":{"type":"optional"}},"src":"\t\tif(!undo) { return; }\n\n\t\tif(this._currentManager == this) {\n\t\t\tthis._undoStack.push({\n\t\t\t\tundo: undo,\n\t\t\t\tredo: redo,\n\t\t\t\tdescription: description\n\t\t\t});\n\t\t} else {\n\t\t\tthis._currentManager.push.apply(this._currentManager, arguments);\n\t\t}\n\t\t\/\/ adding a new undo-able item clears out the redo stack\n\t\tthis._redoStack = [];\n\t\tthis._updateStatus();","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.redo":{"_":{"meta":{"summary":"","parameters":{"undo":{"type":""},"redo":{"type":"optional"},"description":{"type":"optional"}},"src":"\t\tif(!undo) { return; }\n\n\t\tif(this._currentManager == this) {\n\t\t\tthis._undoStack.push({\n\t\t\t\tundo: undo,\n\t\t\t\tredo: redo,\n\t\t\t\tdescription: description\n\t\t\t});\n\t\t} else {\n\t\t\tthis._currentManager.push.apply(this._currentManager, arguments);\n\t\t}\n\t\t\/\/ adding a new undo-able item clears out the redo stack\n\t\tthis._redoStack = [];\n\t\tthis._updateStatus();","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.undoAll":{"_":{"meta":{"summary":"","src":"\t\twhile(this._undoStack.length > 0) {\n\t\t\tthis.undo();\n\t\t}","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.redoAll":{"_":{"meta":{"summary":"","src":"\t\twhile(this._redoStack.length > 0) {\n\t\t\tthis.redo();\n\t\t}","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.push":{"_":{"meta":{"summary":"","parameters":{"undo":{"type":""},"redo":{"type":"optional"},"description":{"type":"optional"}},"src":"\t\tif(!undo) { return; }\n\n\t\tif(this._currentManager == this) {\n\t\t\tthis._undoStack.push({\n\t\t\t\tundo: undo,\n\t\t\t\tredo: redo,\n\t\t\t\tdescription: description\n\t\t\t});\n\t\t} else {\n\t\t\tthis._currentManager.push.apply(this._currentManager, arguments);\n\t\t}\n\t\t\/\/ adding a new undo-able item clears out the redo stack\n\t\tthis._redoStack = [];\n\t\tthis._updateStatus();","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.description":{"_":{"meta":{"summary":"","parameters":{"undo":{"type":""},"redo":{"type":"optional"},"description":{"type":"optional"}},"src":"\t\tif(!undo) { return; }\n\n\t\tif(this._currentManager == this) {\n\t\t\tthis._undoStack.push({\n\t\t\t\tundo: undo,\n\t\t\t\tredo: redo,\n\t\t\t\tdescription: description\n\t\t\t});\n\t\t} else {\n\t\t\tthis._currentManager.push.apply(this._currentManager, arguments);\n\t\t}\n\t\t\/\/ adding a new undo-able item clears out the redo stack\n\t\tthis._redoStack = [];\n\t\tthis._updateStatus();","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.concat":{"_":{"meta":{"summary":"","parameters":{"manager":{"type":""}},"src":"\t\tif ( !manager ) { return; }\n\n\t\tif (this._currentManager == this ) {\n\t\t\tfor(var x=0; x < manager._undoStack.length; x++) {\n\t\t\t\tthis._undoStack.push(manager._undoStack[x]);\n\t\t\t}\n\t\t\t\/\/ adding a new undo-able item clears out the redo stack\n\t\t\tif (manager._undoStack.length > 0) {\n\t\t\t\tthis._redoStack = [];\n\t\t\t}\n\t\t\tthis._updateStatus();\n\t\t} else {\n\t\t\tthis._currentManager.concat.apply(this._currentManager, arguments);\n\t\t}","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.beginTransaction":{"_":{"meta":{"summary":"","parameters":{"description":{"type":"optional"}},"src":"\t\tif(this._currentManager == this) {\n\t\t\tvar mgr = new dojo.undo.Manager(this);\n\t\t\tmgr.description = description ? description : \"\";\n\t\t\tthis._undoStack.push(mgr);\n\t\t\tthis._currentManager = mgr;\n\t\t\treturn mgr;\n\t\t} else {\n\t\t\t\/\/for nested transactions need to make sure the top level _currentManager is set\n\t\t\tthis._currentManager = this._currentManager.beginTransaction.apply(this._currentManager, arguments);\n\t\t}","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.endTransaction":{"_":{"meta":{"summary":"","parameters":{"flatten":{"type":"optional"}},"src":"\t\tif(this._currentManager == this) {\n\t\t\tif(this._parent) {\n\t\t\t\tthis._parent._currentManager = this._parent;\n\t\t\t\t\/\/ don't leave empty transactions hangin' around\n\t\t\t\tif(this._undoStack.length == 0 || flatten) {\n\t\t\t\t\tvar idx = dojo.lang.find(this._parent._undoStack, this);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tthis._parent._undoStack.splice(idx, 1);\n\t\t\t\t\t\t\/\/add the current transaction to parents undo stack\n\t\t\t\t\t\tif (flatten) {\n\t\t\t\t\t\t\tfor(var x=0; x < this._undoStack.length; x++){\n\t\t\t\t\t\t\t\tthis._parent._undoStack.splice(idx++, 0, this._undoStack[x]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis._updateStatus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this._parent;\n\t\t\t}\n\t\t} else {\n\t\t\t\/\/for nested transactions need to make sure the top level _currentManager is set\n\t\t\tthis._currentManager = this._currentManager.endTransaction.apply(this._currentManager, arguments);\n\t\t}","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.endAllTransactions":{"_":{"meta":{"summary":"","src":"\t\twhile(this._currentManager != this) {\n\t\t\tthis.endTransaction();\n\t\t}","this":"dojo.undo.Manager"}}},"dojo.undo.Manager.getTop":{"_":{"meta":{"summary":"","src":"\t\tif(this._parent) {\n\t\t\treturn this._parent.getTop();\n\t\t} else {\n\t\t\treturn this;\n\t\t}","this":"dojo.undo.Manager"}}}}}},"dojo.undo.browser":{"meta":{"requires":{"common":["dojo.io"]},"methods":{"tcb":{"_":{"meta":{"summary":"","parameters":{"handleName":{"type":""}},"src":"\t\t\t\t\tif(window.location.hash != \"\"){\n\t\t\t\t\t\tsetTimeout(\"window.location.href = '\"+hash+\"';\", 1);\n\t\t\t\t\t}\n\t\t\t\t\t\/\/Use apply to set \"this\" to args, and to try to avoid memory leaks.\n\t\t\t\t\toldCB.apply(this, [handleName]);"}}},"tfw":{"_":{"meta":{"summary":"","parameters":{"handleName":{"type":""}},"src":"\t\t\t\t\tif(window.location.hash != \"\"){\n\t\t\t\t\t\twindow.location.href = hash;\n\t\t\t\t\t}\n\t\t\t\t\tif(oldFW){ \/\/ we might not actually have one\n\t\t\t\t\t\t\/\/Use apply to set \"this\" to args, and to try to avoid memory leaks.\n\t\t\t\t\t\toldFW.apply(this, [handleName]);\n\t\t\t\t\t}"}}}}}}}