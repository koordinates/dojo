{"dojo.gfx.Colorspace":{"meta":{"requires":{"common":["dojo.lang.common","dojo.math.matrix"]},"functions":{"dojo.gfx.Colorspace":{"_":{"meta":{"summary":" An object for dealing with colorspace conversions.","src":"\tthis.stdObserver = '10';\r\n\tthis.chromaticAdaptationAlg = 'bradford';\r\n\tthis.RGBWorkingSpace = 's_rgb';\r\n\tthis.useApproxCIELabMapping = 1; \/\/ see http:\/\/www.brucelindbloom.com\/LContinuity.html\r\n\r\n\tthis.chainMaps = {\r\n\t\t'RGB_to_xyY'  : ['XYZ'],\r\n\t\t'xyY_to_RGB'  : ['XYZ'],\r\n\t\t'RGB_to_Lab'  : ['XYZ'],\r\n\t\t'Lab_to_RGB'  : ['XYZ'],\r\n\t\t'RGB_to_LCHab': ['XYZ', 'Lab'],\r\n\t\t'LCHab_to_RGB': ['Lab'],\r\n\t\t'xyY_to_Lab'  : ['XYZ'],\r\n\t\t'Lab_to_xyY'  : ['XYZ'],\r\n\t\t'XYZ_to_LCHab': ['Lab'],\r\n\t\t'LCHab_to_XYZ': ['Lab'],\r\n\t\t'xyY_to_LCHab': ['XYZ', 'Lab'],\r\n\t\t'LCHab_to_xyY': ['Lab', 'XYZ'],\r\n\t\t'RGB_to_Luv'  : ['XYZ'],\r\n\t\t'Luv_to_RGB'  : ['XYZ'],\r\n\t\t'xyY_to_Luv'  : ['XYZ'],\r\n\t\t'Luv_to_xyY'  : ['XYZ'],\r\n\t\t'Lab_to_Luv'  : ['XYZ'],\r\n\t\t'Luv_to_Lab'  : ['XYZ'],\r\n\t\t'LCHab_to_Luv': ['Lab', 'XYZ'],\r\n\t\t'Luv_to_LCHab': ['XYZ', 'Lab'],\r\n\t\t'RGB_to_LCHuv'  : ['XYZ', 'Luv'],\r\n\t\t'LCHuv_to_RGB'  : ['Luv', 'XYZ'],\r\n\t\t'XYZ_to_LCHuv'  : ['Luv'],\r\n\t\t'LCHuv_to_XYZ'  : ['Luv'],\r\n\t\t'xyY_to_LCHuv'  : ['XYZ', 'Luv'],\r\n\t\t'LCHuv_to_xyY'  : ['Luv', 'XYZ'],\r\n\t\t'Lab_to_LCHuv'  : ['XYZ', 'Luv'],\r\n\t\t'LCHuv_to_Lab'  : ['Luv', 'XYZ'],\r\n\t\t'LCHab_to_LCHuv': ['Lab', 'XYZ', 'Luv'],\r\n\t\t'LCHuv_to_LCHab': ['Luv', 'XYZ', 'Lab'],\r\n\t\t'XYZ_to_CMY'    : ['RGB'],\r\n\t\t'CMY_to_XYZ'    : ['RGB'],\r\n\t\t'xyY_to_CMY'    : ['RGB'],\r\n\t\t'CMY_to_xyY'    : ['RGB'],\r\n\t\t'Lab_to_CMY'    : ['RGB'],\r\n\t\t'CMY_to_Lab'    : ['RGB'],\r\n\t\t'LCHab_to_CMY'  : ['RGB'],\r\n\t\t'CMY_to_LCHab'  : ['RGB'],\r\n\t\t'Luv_to_CMY'    : ['RGB'],\r\n\t\t'CMY_to_Luv'    : ['RGB'],\r\n\t\t'LCHuv_to_CMY'  : ['RGB'],\r\n\t\t'CMY_to_LCHuv'  : ['RGB'],\r\n\t\t'XYZ_to_HSL'    : ['RGB'],\r\n\t\t'HSL_to_XYZ'    : ['RGB'],\r\n\t\t'xyY_to_HSL'    : ['RGB'],\r\n\t\t'HSL_to_xyY'    : ['RGB'],\r\n\t\t'Lab_to_HSL'    : ['RGB'],\r\n\t\t'HSL_to_Lab'    : ['RGB'],\r\n\t\t'LCHab_to_HSL'  : ['RGB'],\r\n\t\t'HSL_to_LCHab'  : ['RGB'],\r\n\t\t'Luv_to_HSL'    : ['RGB'],\r\n\t\t'HSL_to_Luv'    : ['RGB'],\r\n\t\t'LCHuv_to_HSL'  : ['RGB'],\r\n\t\t'HSL_to_LCHuv'  : ['RGB'],\r\n\t\t'CMY_to_HSL'    : ['RGB'],\r\n\t\t'HSL_to_CMY'    : ['RGB'],\r\n\t\t'CMYK_to_HSL'   : ['RGB'],\r\n\t\t'HSL_to_CMYK'   : ['RGB'],\r\n\t\t'XYZ_to_HSV'    : ['RGB'],\r\n\t\t'HSV_to_XYZ'    : ['RGB'],\r\n\t\t'xyY_to_HSV'    : ['RGB'],\r\n\t\t'HSV_to_xyY'    : ['RGB'],\r\n\t\t'Lab_to_HSV'    : ['RGB'],\r\n\t\t'HSV_to_Lab'    : ['RGB'],\r\n\t\t'LCHab_to_HSV'  : ['RGB'],\r\n\t\t'HSV_to_LCHab'  : ['RGB'],\r\n\t\t'Luv_to_HSV'    : ['RGB'],\r\n\t\t'HSV_to_Luv'    : ['RGB'],\r\n\t\t'LCHuv_to_HSV'  : ['RGB'],\r\n\t\t'HSV_to_LCHuv'  : ['RGB'],\r\n\t\t'CMY_to_HSV'    : ['RGB'],\r\n\t\t'HSV_to_CMY'    : ['RGB'],\r\n\t\t'CMYK_to_HSV'   : ['RGB'],\r\n\t\t'HSV_to_CMYK'   : ['RGB'],\r\n\t\t'HSL_to_HSV'    : ['RGB'],\r\n\t\t'HSV_to_HSL'    : ['RGB'],\r\n\t\t'XYZ_to_CMYK'   : ['RGB'],\r\n\t\t'CMYK_to_XYZ'   : ['RGB'],\r\n\t\t'xyY_to_CMYK'   : ['RGB'],\r\n\t\t'CMYK_to_xyY'   : ['RGB'],\r\n\t\t'Lab_to_CMYK'   : ['RGB'],\r\n\t\t'CMYK_to_Lab'   : ['RGB'],\r\n\t\t'LCHab_to_CMYK' : ['RGB'],\r\n\t\t'CMYK_to_LCHab' : ['RGB'],\r\n\t\t'Luv_to_CMYK'   : ['RGB'],\r\n\t\t'CMYK_to_Luv'   : ['RGB'],\r\n\t\t'LCHuv_to_CMYK' : ['RGB'],\r\n\t\t'CMYK_to_LCHuv' : ['RGB']\r\n\t};\r\n\treturn this;\r","this_variables":["whitePoint","stdObserver","chromaticAdaptationAlg","RGBWorkingSpace","useApproxCIELabMapping","chainMaps","RGBWorkingSpace","RGBWorkingSpace","whitePoint"]}}},"dojo.gfx.Colorspace.convert":{"_":{"meta":{"summary":"","parameters":{"col":{"type":""},"model_from":{"type":""},"model_to":{"type":""}},"src":"\tvar k = model_from+'_to_'+model_to;\r\n\tif (this[k]){\r\n\t\treturn this[k](col);\r\n\t}else{\r\n\t\tif (this.chainMaps[k]){\r\n\t\t\tvar cur = model_from;\r\n\t\t\tvar models = this.chainMaps[k].concat();\r\n\t\t\tmodels.push(model_to);\r\n\t\t\tfor(var i=0; i<models.length; i++){\r\n\t\t\t\tcol = this.convert(col, cur, models[i]);\r\n\t\t\t\tcur = models[i];\r\n\t\t\t}\r\n\t\t\treturn col;\r\n\t\t}else{\r\n\t\t\tdojo.debug(\"Can't convert from \"+model_from+' to '+model_to);\r\n\t\t}\r\n\t}\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.munge":{"_":{"meta":{"summary":"","parameters":{"keys":{"type":""},"args":{"type":""}},"src":"\tif (dojo.lang.isArray(args[0])){\r\n\t\targs = args[0];\r\n\t}\r\n\tvar out = new Array();\r\n\tfor (var i=0; i<keys.length; i++){\r\n\t\tout[keys.charAt(i)] = args[i];\r\n\t}\r\n\treturn out;\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.getWhitePoint":{"_":{"meta":{"summary":"","src":"\tvar x = 0;\r\n\tvar y = 0;\r\n\tvar t = 0;\r\n\r\n\t\/\/ ref: http:\/\/en.wikipedia.org\/wiki\/White_point\r\n\t\/\/ TODO: i need some good\/better white point values\r\n\r\n\tswitch(this.stdObserver){\r\n\t\tcase '2' :\r\n\t\t\tswitch(this.whitePoint){\r\n\t\t\t\tcase 'E'   : x=1\/3    ; y=1\/3    ; t=5400; break; \/\/Equal energy\r\n\t\t\t\tcase 'D50' : x=0.34567; y=0.35850; t=5000; break;\r\n\t\t\t\tcase 'D55' : x=0.33242; y=0.34743; t=5500; break;\r\n\t\t\t\tcase 'D65' : x=0.31271; y=0.32902; t=6500; break;\r\n\t\t\t\tcase 'D75' : x=0.29902; y=0.31485; t=7500; break;\r\n\t\t\t\tcase 'A'   : x=0.44757; y=0.40745; t=2856; break; \/\/Incandescent tungsten\r\n\t\t\t\tcase 'B'   : x=0.34842; y=0.35161; t=4874; break;\r\n\t\t\t\tcase 'C'   : x=0.31006; y=0.31616; t=6774; break;\r\n\t\t\t\tcase '9300': x=0.28480; y=0.29320; t=9300; break; \/\/Blue phosphor monitors\r\n\t\t\t\tcase 'F2'  : x=0.37207; y=0.37512; t=4200; break; \/\/Cool White Fluorescent\r\n\t\t\t\tcase 'F7'  : x=0.31285; y=0.32918; t=6500; break; \/\/Narrow Band Daylight Fluorescent\r\n\t\t\t\tcase 'F11' : x=0.38054; y=0.37691; t=4000; break; \/\/Narrow Band White Fluorescent\r\n\t\t\t\tdefault: dojo.debug('White point '+this.whitePoint+\" isn't defined for Std. Observer \"+this.strObserver);\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase '10' :\r\n\t\t\tswitch(this.whitePoint){\r\n\t\t\t\tcase 'E'   : x=1\/3    ; y=1\/3    ; t=5400; break; \/\/Equal energy\r\n\t\t\t\tcase 'D50' : x=0.34773; y=0.35952; t=5000; break;\r\n\t\t\t\tcase 'D55' : x=0.33411; y=0.34877; t=5500; break;\r\n\t\t\t\tcase 'D65' : x=0.31382; y=0.33100; t=6500; break;\r\n\t\t\t\tcase 'D75' : x=0.29968; y=0.31740; t=7500; break;\r\n\t\t\t\tcase 'A'   : x=0.45117; y=0.40594; t=2856; break; \/\/Incandescent tungsten\r\n\t\t\t\tcase 'B'   : x=0.3498 ; y=0.3527 ; t=4874; break;\r\n\t\t\t\tcase 'C'   : x=0.31039; y=0.31905; t=6774; break;\r\n\t\t\t\tcase 'F2'  : x=0.37928; y=0.36723; t=4200; break; \/\/Cool White Fluorescent\r\n\t\t\t\tcase 'F7'  : x=0.31565; y=0.32951; t=6500; break; \/\/Narrow Band Daylight Fluorescent\r\n\t\t\t\tcase 'F11' : x=0.38543; y=0.37110; t=4000; break; \/\/Narrow Band White Fluorescent\r\n\t\t\t\tdefault: dojo.debug('White point '+this.whitePoint+\" isn't defined for Std. Observer \"+this.strObserver);\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tdojo.debug(\"Std. Observer \"+this.strObserver+\" isn't defined\");\r\n\t}\r\n\r\n\tvar z = 1 - x - y;\r\n\tvar wp = {'x':x, 'y':y, 'z':z, 't':t};\r\n\twp.Y = 1;\r\n\r\n\tvar XYZ = this.xyY_to_XYZ([wp.x, wp.y, wp.Y]);\r\n\twp.X = XYZ[0];\r\n\twp.Y = XYZ[1];\r\n\twp.Z = XYZ[2];\r\n\treturn wp;\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.getPrimaries":{"_":{"meta":{"summary":"","src":"\tswitch(this.RGBWorkingSpace){\r\n\t\tcase 'adobe_rgb_1998'\t: m = [2.2, 'D65', 0.6400, 0.3300, 0.297361, 0.2100, 0.7100, 0.627355, 0.1500, 0.0600, 0.075285]; break;\r\n\t\tcase 'apple_rgb'\t: m = [1.8, 'D65', 0.6250, 0.3400, 0.244634, 0.2800, 0.5950, 0.672034, 0.1550, 0.0700, 0.083332]; break;\r\n\t\tcase 'best_rgb'\t\t: m = [2.2, 'D50', 0.7347, 0.2653, 0.228457, 0.2150, 0.7750, 0.737352, 0.1300, 0.0350, 0.034191]; break;\r\n\t\tcase 'beta_rgb'\t\t: m = [2.2, 'D50', 0.6888, 0.3112, 0.303273, 0.1986, 0.7551, 0.663786, 0.1265, 0.0352, 0.032941]; break;\r\n\t\tcase 'bruce_rgb'\t: m = [2.2, 'D65', 0.6400, 0.3300, 0.240995, 0.2800, 0.6500, 0.683554, 0.1500, 0.0600, 0.075452]; break;\r\n\t\tcase 'cie_rgb'\t\t: m = [2.2, 'E'  , 0.7350, 0.2650, 0.176204, 0.2740, 0.7170, 0.812985, 0.1670, 0.0090, 0.010811]; break;\r\n\t\tcase 'color_match_rgb'\t: m = [1.8, 'D50', 0.6300, 0.3400, 0.274884, 0.2950, 0.6050, 0.658132, 0.1500, 0.0750, 0.066985]; break;\r\n\t\tcase 'don_rgb_4'\t: m = [2.2, 'D50', 0.6960, 0.3000, 0.278350, 0.2150, 0.7650, 0.687970, 0.1300, 0.0350, 0.033680]; break;\r\n\t\tcase 'eci_rgb'\t\t: m = [1.8, 'D50', 0.6700, 0.3300, 0.320250, 0.2100, 0.7100, 0.602071, 0.1400, 0.0800, 0.077679]; break;\r\n\t\tcase 'ekta_space_ps5'\t: m = [2.2, 'D50', 0.6950, 0.3050, 0.260629, 0.2600, 0.7000, 0.734946, 0.1100, 0.0050, 0.004425]; break;\r\n\t\tcase 'ntsc_rgb'\t\t: m = [2.2, 'C'  , 0.6700, 0.3300, 0.298839, 0.2100, 0.7100, 0.586811, 0.1400, 0.0800, 0.114350]; break;\r\n\t\tcase 'pal_secam_rgb'\t: m = [2.2, 'D65', 0.6400, 0.3300, 0.222021, 0.2900, 0.6000, 0.706645, 0.1500, 0.0600, 0.071334]; break;\r\n\t\tcase 'pro_photo_rgb'\t: m = [1.8, 'D50', 0.7347, 0.2653, 0.288040, 0.1596, 0.8404, 0.711874, 0.0366, 0.0001, 0.000086]; break;\r\n\t\tcase 'smpte-c_rgb'\t: m = [2.2, 'D65', 0.6300, 0.3400, 0.212395, 0.3100, 0.5950, 0.701049, 0.1550, 0.0700, 0.086556]; break;\r\n\t\tcase 's_rgb'\t\t: m = [2.2, 'D65', 0.6400, 0.3300, 0.212656, 0.3000, 0.6000, 0.715158, 0.1500, 0.0600, 0.072186]; break;\r\n\t\tcase 'wide_gamut_rgb'\t: m = [2.2, 'D50', 0.7350, 0.2650, 0.258187, 0.1150, 0.8260, 0.724938, 0.1570, 0.0180, 0.016875]; break;\r\n\t\tdefault: dojo.debug(\"RGB working space \"+this.RGBWorkingSpace+\" isn't defined\");\r\n\t}\r\n\r\n\tvar p = {\r\n\t\tname: this.RGBWorkingSpace,\r\n\t\tgamma:m[0],\r\n\t\twp:m[1],\r\n\t\txr:m[2],\r\n\t\tyr:m[3],\r\n\t\tYr:m[4],\r\n\t\txg:m[5],\r\n\t\tyg:m[6],\r\n\t\tYg:m[7],\r\n\t\txb:m[8],\r\n\t\tyb:m[9],\r\n\t\tYb:m[10]\r\n\t};\r\n\r\n\t\/\/ if WP doesn't match current WP, convert the primaries over\r\n\tif (p.wp != this.whitePoint){\r\n\t\tvar r = this.XYZ_to_xyY( this.chromaticAdaptation( this.xyY_to_XYZ([p.xr, p.yr, p.Yr]), p.wp, this.whitePoint ) );\r\n\t\tvar g = this.XYZ_to_xyY( this.chromaticAdaptation( this.xyY_to_XYZ([p.xg, p.yg, p.Yg]), p.wp, this.whitePoint ) );\r\n\t\tvar b = this.XYZ_to_xyY( this.chromaticAdaptation( this.xyY_to_XYZ([p.xb, p.yb, p.Yb]), p.wp, this.whitePoint ) );\r\n\r\n\t\tp.xr = r[0];\r\n\t\tp.yr = r[1];\r\n\t\tp.Yr = r[2];\r\n\r\n\t\tp.xg = g[0];\r\n\t\tp.yg = g[1];\r\n\t\tp.Yg = g[2];\r\n\r\n\t\tp.xb = b[0];\r\n\t\tp.yb = b[1];\r\n\t\tp.Yb = b[2];\r\n\r\n\t\tp.wp = this.whitePoint;\r\n\t}\r\n\r\n\tp.zr = 1 - p.xr - p.yr;\r\n\tp.zg = 1 - p.xg - p.yg;\r\n\tp.zb = 1 - p.xb - p.yb;\r\n\treturn p;\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.epsilon":{"_":{"meta":{"summary":"","src":"\treturn this.useApproxCIELabMapping ? 0.008856 : 216 \/ 24289;\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.kappa":{"_":{"meta":{"summary":"","src":"\treturn this.useApproxCIELabMapping ? 903.3 : 24389 \/ 27;\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.XYZ_to_xyY":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('XYZ', arguments);\r\n\tvar sum = src.X + src.Y + src.Z;\r\n\tif (sum == 0){\r\n\t\tvar wp = this.getWhitePoint();\r\n\t\tvar x = wp.x;\r\n\t\tvar y = wp.y;\r\n\t}else{\r\n\t\tvar x = src.X \/ sum;\r\n\t\tvar y = src.Y \/ sum;\r\n\t}\r\n\r\n\tvar Y = src.Y;\r\n\treturn [x, y, Y];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.xyY_to_XYZ":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('xyY', arguments);\r\n\tif (src.y == 0){\r\n\t\tvar X = 0;\r\n\t\tvar Y = 0;\r\n\t\tvar Z = 0;\r\n\t}else{\r\n\t\tvar X = (src.x * src.Y) \/ src.y;\r\n\t\tvar Y = src.Y;\r\n\t\tvar Z = ((1 - src.x - src.y) * src.Y) \/ src.y;\r\n\t}\r\n\r\n\treturn [X, Y, Z];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.RGB_to_XYZ":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('RGB', arguments);\r\n\tvar m = this.getRGB_XYZ_Matrix();\r\n\tvar pr = this.getPrimaries();\r\n\r\n\tif (this.RGBWorkingSpace == 's_rgb'){\r\n\t\tvar r = (src.R > 0.04045) ? Math.pow(((src.R + 0.055) \/ 1.055), 2.4) : src.R \/ 12.92;\r\n\t\tvar g = (src.G > 0.04045) ? Math.pow(((src.G + 0.055) \/ 1.055), 2.4) : src.G \/ 12.92;\r\n\t\tvar b = (src.B > 0.04045) ? Math.pow(((src.B + 0.055) \/ 1.055), 2.4) : src.B \/ 12.92;\r\n\t}else{\r\n\t\tvar r = Math.pow(src.R, pr.gamma);\r\n\t\tvar g = Math.pow(src.G, pr.gamma);\r\n\t\tvar b = Math.pow(src.B, pr.gamma);\r\n\t}\r\n\r\n\tvar XYZ = dojo.math.matrix.multiply([[r, g, b]], m);\r\n\treturn [XYZ[0][0], XYZ[0][1], XYZ[0][2]];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.XYZ_to_RGB":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('XYZ', arguments);\r\n\tvar mi = this.getXYZ_RGB_Matrix();\r\n\tvar pr = this.getPrimaries();\r\n\r\n\tvar rgb = dojo.math.matrix.multiply([[src.X, src.Y, src.Z]], mi);\r\n\tvar r = rgb[0][0];\r\n\tvar g = rgb[0][1];\r\n\tvar b = rgb[0][2];\r\n\r\n\tif (this.RGBWorkingSpace == 's_rgb'){\r\n\t\tvar R = (r > 0.0031308) ? (1.055 * Math.pow(r, 1.0\/2.4)) - 0.055 : 12.92 * r;\r\n\t\tvar G = (g > 0.0031308) ? (1.055 * Math.pow(g, 1.0\/2.4)) - 0.055 : 12.92 * g;\r\n\t\tvar B = (b > 0.0031308) ? (1.055 * Math.pow(b, 1.0\/2.4)) - 0.055 : 12.92 * b;\r\n\t}else{\r\n\t\tvar R = Math.pow(r, 1\/pr.gamma);\r\n\t\tvar G = Math.pow(g, 1\/pr.gamma);\r\n\t\tvar B = Math.pow(b, 1\/pr.gamma);\r\n\t}\r\n\treturn [R, G, B];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.XYZ_to_Lab":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('XYZ', arguments);\r\n\tvar wp = this.getWhitePoint();\r\n\r\n\tvar xr = src.X \/ wp.X;\r\n\tvar yr = src.Y \/ wp.Y;\r\n\tvar zr = src.Z \/ wp.Z;\r\n\r\n\tvar fx = (xr > this.epsilon()) ? Math.pow(xr, 1\/3) : (this.kappa() * xr + 16) \/ 116;\r\n\tvar fy = (yr > this.epsilon()) ? Math.pow(yr, 1\/3) : (this.kappa() * yr + 16) \/ 116;\r\n\tvar fz = (zr > this.epsilon()) ? Math.pow(zr, 1\/3) : (this.kappa() * zr + 16) \/ 116;\r\n\r\n\tvar L = 116 * fy - 16;\r\n\tvar a = 500 * (fx - fy);\r\n\tvar b = 200 * (fy - fz);\r\n\r\n\treturn [L, a, b];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.Lab_to_XYZ":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('Lab', arguments);\r\n\tvar wp = this.getWhitePoint();\r\n\tvar yr = (src.L > (this.kappa() * this.epsilon())) ? Math.pow((src.L + 16) \/ 116, 3) : src.L \/ this.kappa();\r\n\r\n\tvar fy = (yr > this.epsilon()) ? (src.L + 16) \/ 116 : (this.kappa() * yr + 16) \/ 116;\r\n\tvar fx = (src.a \/ 500) + fy;\r\n\tvar fz = fy - (src.b \/ 200);\r\n\r\n\tvar fxcube = Math.pow(fx, 3);\r\n\tvar fzcube = Math.pow(fz, 3);\r\n\r\n\tvar xr = (fxcube > this.epsilon()) ? fxcube : (116 * fx - 16) \/ this.kappa();\r\n\tvar zr = (fzcube > this.epsilon()) ? fzcube : (116 * fz - 16) \/ this.kappa();\r\n\r\n\tvar X = xr * wp.X;\r\n\tvar Y = yr * wp.Y;\r\n\tvar Z = zr * wp.Z;\r\n\r\n\treturn [X, Y, Z];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.Lab_to_LCHab":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('Lab', arguments);\r\n\r\n\tvar L = src.L;\r\n\tvar C = Math.pow(src.a * src.a + src.b * src.b, 0.5);\r\n\tvar H = Math.atan2(src.b, src.a) * (180 \/ Math.PI);\r\n\r\n\tif (H < 0){ H += 360; }\r\n\tif (H > 360){ H -= 360; }\r\n\r\n\treturn [L, C, H];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.LCHab_to_Lab":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('LCH', arguments);\r\n\r\n\tvar H_rad = src.H * (Math.PI \/ 180);\r\n\tvar L = src.L;\r\n\tvar a = src.C \/ Math.pow(Math.pow(Math.tan(H_rad), 2) + 1, 0.5);\r\n\tif ((90 < src.H) && (src.H < 270)){ a= -a; }\r\n\r\n\tvar b = Math.pow(Math.pow(src.C, 2) - Math.pow(a, 2), 0.5);\r\n\tif (src.H > 180){ b = -b; }\r\n\r\n\treturn [L, a, b];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.chromaticAdaptation":{"_":{"meta":{"summary":"","parameters":{"col":{"type":""},"src_w":{"type":""},"dst_w":{"type":""}},"src":"\tcol = this.munge('XYZ', [col]);\r\n\tvar old_wp = this.whitePoint;\r\n\r\n\tthis.whitePoint = src_w;\r\n\tvar wp_src = this.getWhitePoint();\r\n\r\n\tthis.whitePoint = dst_w;\r\n\tvar wp_dst = this.getWhitePoint();\r\n\r\n\tthis.whitePoint = old_wp;\r\n\r\n\tswitch(this.chromaticAdaptationAlg){\r\n\t\tcase 'xyz_scaling':\r\n\t\t\tvar ma = [[1,0,0],[0,1,0],[0,0,1]];\r\n\t\t\tvar mai = [[1,0,0],[0,1,0],[0,0,1]];\r\n\t\t\tbreak;\r\n\t\tcase 'bradford':\r\n\t\t\tvar ma = [[0.8951, -0.7502, 0.0389],[0.2664, 1.7135, -0.0685],[-0.1614, 0.0367, 1.0296]];\r\n\t\t\tvar mai = [[0.986993, 0.432305, -0.008529],[-0.147054, 0.518360, 0.040043],[0.159963, 0.049291, 0.968487]];\r\n\t\t\tbreak;\r\n\t\tcase 'von_kries':\r\n\t\t\tvar ma = [[0.40024, -0.22630, 0.00000],[0.70760, 1.16532, 0.00000],[-0.08081, 0.04570, 0.91822]]\r\n\t\t\tvar mai = [[1.859936, 0.361191, 0.000000],[-1.129382, 0.638812, 0.000000],[0.219897, -0.000006, 1.089064]]\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tdojo.debug(\"The \"+this.chromaticAdaptationAlg+\" chromatic adaptation algorithm matricies are not defined\");\r\n\t}\r\n\r\n\tvar domain_src = dojo.math.matrix.multiply( [[wp_src.x, wp_src.y, wp_src.z]], ma);\r\n\tvar domain_dst = dojo.math.matrix.multiply( [[wp_dst.x, wp_dst.y, wp_dst.z]], ma);\r\n\r\n\tvar centre = [\r\n\t\t[domain_dst[0][0]\/domain_src[0][0], 0, 0],\r\n\t\t[0, domain_dst[0][1]\/domain_src[0][1], 0],\r\n\t\t[0, 0, domain_dst[0][2]\/domain_src[0][2]]\r\n\t];\r\n\r\n\tvar m = dojo.math.matrix.multiply( dojo.math.matrix.multiply( ma, centre ), mai );\r\n\tvar dst = dojo.math.matrix.multiply( [[ col.X, col.Y, col.Z ]], m );\r\n\treturn dst[0];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.getRGB_XYZ_Matrix":{"_":{"meta":{"summary":"","src":"\tvar wp = this.getWhitePoint();\r\n\tvar pr = this.getPrimaries();\r\n\r\n\tvar Xr = pr.xr \/ pr.yr;\r\n\tvar Yr = 1;\r\n\tvar Zr = (1 - pr.xr - pr.yr) \/ pr.yr;\r\n\r\n\tvar Xg = pr.xg \/ pr.yg;\r\n\tvar Yg = 1;\r\n\tvar Zg = (1 - pr.xg - pr.yg) \/ pr.yg;\r\n\r\n\tvar Xb = pr.xb \/ pr.yb;\r\n\tvar Yb = 1;\r\n\tvar Zb = (1 - pr.xb - pr.yb) \/ pr.yb;\r\n\r\n\tvar m1 = [[Xr, Yr, Zr],[Xg, Yg, Zg],[Xb, Yb, Zb]];\r\n\tvar m2 = [[wp.X, wp.Y, wp.Z]];\r\n\tvar sm = dojo.math.matrix.multiply(m2, dojo.math.matrix.inverse(m1));\r\n\r\n\tvar Sr = sm[0][0];\r\n\tvar Sg = sm[0][1];\r\n\tvar Sb = sm[0][2];\r\n\r\n\tvar m4 = [[Sr*Xr, Sr*Yr, Sr*Zr],\r\n\t\t  [Sg*Xg, Sg*Yg, Sg*Zg],\r\n\t\t  [Sb*Xb, Sb*Yb, Sb*Zb]];\r\n\r\n\treturn m4;\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.getXYZ_RGB_Matrix":{"_":{"meta":{"summary":"","src":"\tvar m = this.getRGB_XYZ_Matrix();\r\n\treturn dojo.math.matrix.inverse(m);\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.XYZ_to_Luv":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('XYZ', arguments);\r\n\r\n\tvar wp = this.getWhitePoint();\r\n\tvar ud = (4 * src.X) \/ (src.X + 15 * src.Y + 3 * src.Z);\r\n\tvar vd = (9 * src.Y) \/ (src.X + 15 * src.Y + 3 * src.Z);\r\n\r\n\tvar udr = (4 * wp.X) \/ (wp.X + 15 * wp.Y + 3 * wp.Z);\r\n\tvar vdr = (9 * wp.Y) \/ (wp.X + 15 * wp.Y + 3 * wp.Z);\r\n\tvar yr = src.Y \/ wp.Y;\r\n\r\n\tvar L = (yr > this.epsilon()) ? 116 * Math.pow(yr, 1\/3) - 16 : this.kappa() * yr;\r\n\tvar u = 13 * L * (ud-udr);\r\n\tvar v = 13 * L * (vd-vdr);\r\n\r\n\treturn [L, u, v];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.Luv_to_XYZ":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('Luv', arguments);\r\n\r\n\tvar wp = this.getWhitePoint();\r\n\tvar uz = (4 * wp.X) \/ (wp.X + 15 * wp.Y + 3 * wp.Z);\r\n\tvar vz = (9 * wp.Y) \/ (wp.X + 15 * wp.Y + 3 * wp.Z);\r\n\tvar Y = (src.L > this.kappa() * this.epsilon()) ? Math.pow((src.L + 16) \/ 116, 3) : src.L \/ this.kappa();\r\n\r\n\tvar a = (1 \/ 3) * (((52 * src.L) \/ (src.u + 13 * src.L * uz)) - 1);\r\n\tvar b = -5 * Y;\r\n\tvar c = - (1 \/ 3);\r\n\tvar d = Y * (((39 * src.L) \/ (src.v + 13 * src.L * vz)) - 5);\r\n\r\n\tvar X = (d - b) \/ (a - c);\r\n\tvar Z = X * a + b;\r\n\r\n\treturn [X, Y, Z];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.Luv_to_LCHuv":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('Luv', arguments);\r\n\r\n\tvar L = src.L;\r\n\tvar C = Math.pow(src.u * src.u + src.v * src.v, 0.5);\r\n\tvar H = Math.atan2(src.v, src.u) * (180 \/ Math.PI);\r\n\r\n\tif (H < 0){ H += 360; }\r\n\tif (H > 360){ H -= 360; }\r\n\r\n\treturn [L, C, H];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.LCHuv_to_Luv":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('LCH', arguments);\r\n\r\n\tvar H_rad = src.H * (Math.PI \/ 180);\r\n\tvar L = src.L;\r\n\tvar u = src.C \/ Math.pow(Math.pow(Math.tan(H_rad), 2) + 1, 0.5);\r\n\tvar v = Math.pow(src.C * src.C - u * u, 0.5);\r\n\r\n\tif ((90 < src.H) && (src.H < 270)){ u *= -1; }\r\n\tif (src.H > 180){ v *= -1; }\r\n\r\n\treturn [L, u, v];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.colorTemp_to_whitePoint":{"_":{"meta":{"summary":"","parameters":{"T":{"type":""}},"src":"\tif (T < 4000){\r\n\t\tdojo.debug(\"Can't find a white point for temperatures under 4000K\");\r\n\t\treturn [0,0];\r\n\t}\r\n\r\n\tif (T > 25000){\r\n\t\tdojo.debug(\"Can't find a white point for temperatures over 25000K\");\r\n\t\treturn [0,0];\r\n\t}\r\n\r\n\tvar T1 = T;\r\n\tvar T2 = T * T;\r\n\tvar T3 = T2 * T;\r\n\r\n\tvar ten9 = Math.pow(10, 9);\r\n\tvar ten6 = Math.pow(10, 6);\r\n\tvar ten3 = Math.pow(10, 3);\r\n\r\n\tif (T <= 7000){\r\n\t\tvar x = (-4.6070 * ten9 \/ T3) + (2.9678 * ten6 \/ T2) + (0.09911 * ten3 \/ T) + 0.244063;\r\n\t}else{\r\n\t\tvar x = (-2.0064 * ten9 \/ T3) + (1.9018 * ten6 \/ T2) + (0.24748 * ten3 \/ T) + 0.237040;\r\n\t}\r\n\tvar y = -3.000 * x * x + 2.870 * x - 0.275;\r\n\r\n\treturn [x, y];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.RGB_to_CMY":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('RGB', arguments);\r\n\r\n\tvar C = 1 - src.R;\r\n\tvar M = 1 - src.G;\r\n\tvar Y = 1 - src.B;\r\n\r\n\treturn [C, M, Y];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.CMY_to_RGB":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('CMY', arguments);\r\n\r\n\tvar R = 1 - src.C;\r\n\tvar G = 1 - src.M;\r\n\tvar B = 1 - src.Y;\r\n\r\n\treturn [R, G, B];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.RGB_to_CMYK":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('RGB', arguments);\r\n\r\n\tvar K = Math.min(1-src.R, 1-src.G, 1-src.B);\r\n\tvar C = (1 - src.R - K) \/ (1 - K);\r\n\tvar M = (1 - src.G - K) \/ (1 - K);\r\n\tvar Y = (1 - src.B - K) \/ (1 - K);\r\n\r\n\treturn [C, M, Y, K];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.CMYK_to_RGB":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('CMYK', arguments);\r\n\r\n\tvar R = 1 - Math.min(1, src.C * (1-src.K) + src.K);\r\n\tvar G = 1 - Math.min(1, src.M * (1-src.K) + src.K);\r\n\tvar B = 1 - Math.min(1, src.Y * (1-src.K) + src.K);\r\n\r\n\treturn [R, G, B];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.CMY_to_CMYK":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('CMY', arguments);\r\n\r\n\tvar K = Math.min(src.C, src.M, src.Y);\r\n\tvar C = (src.C - K) \/ (1 - K);\r\n\tvar M = (src.M - K) \/ (1 - K);\r\n\tvar Y = (src.Y - K) \/ (1 - K);\r\n\r\n\treturn [C, M, Y, K];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.CMYK_to_CMY":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('CMYK', arguments);\r\n\r\n\tvar C = Math.min(1, src.C * (1-src.K) + src.K);\r\n\tvar M = Math.min(1, src.M * (1-src.K) + src.K);\r\n\tvar Y = Math.min(1, src.Y * (1-src.K) + src.K);\r\n\r\n\treturn [C, M, Y];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.RGB_to_HSV":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('RGB', arguments);\r\n\r\n\t\/\/ Based on C Code in \"Computer Graphics -- Principles and Practice,\"\r\n\t\/\/ Foley et al, 1996, p. 592. \r\n\r\n\tvar min = Math.min(src.R, src.G, src.B);\r\n\tvar V = Math.max(src.R, src.G, src.B);\r\n\r\n\tvar delta = V - min;\r\n\r\n\tvar H = null;\r\n\tvar S = (V == 0) ? 0 : delta \/ V;\r\n\r\n\tif (S == 0){\r\n\t\tH = 0;\r\n\t}else{\r\n\t\tif (src.R == V){\r\n\t\t\tH = 60 * (src.G - src.B) \/ delta;\r\n\t\t}else{\r\n\t\t\tif (src.G == V){\r\n\t\t\t\tH = 120 + 60 * (src.B - src.R) \/ delta;\r\n\t\t\t}else{\r\n\t\t\t\tif (src.B == V){\r\n\t\t\t\t\t\/\/ between magenta and cyan\r\n\t\t\t\t\tH = 240 + 60 * (src.R - src.G) \/ delta;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (H < 0){\r\n\t\t\tH += 360;\r\n\t\t}\r\n\t}\r\n\r\n\tH = (H == 0) ? 360 : H;\r\n\r\n\treturn [H, S, V];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.HSV_to_RGB":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('HSV', arguments);\r\n\tif (src.H == 360){ src.H = 0;}\r\n\r\n\t\/\/ Based on C Code in \"Computer Graphics -- Principles and Practice,\"\r\n\t\/\/ Foley et al, 1996, p. 593.\r\n\tvar r = null;\r\n\tvar g = null;\r\n\tvar b = null;\r\n\r\n\tif (src.S == 0){\r\n\t\t\/\/ color is on black-and-white center line\r\n\t\t\/\/ achromatic: shades of gray\r\n\t\tvar R = src.V;\r\n\t\tvar G = src.V;\r\n\t\tvar B = src.V;\r\n\t}else{\r\n\t\t\/\/ chromatic color\r\n\t\tvar hTemp = src.H \/ 60;\t\t\/\/ h is now IN [0,6]\r\n\t\tvar i = Math.floor(hTemp);\t\/\/ largest integer <= h\r\n\t\tvar f = hTemp - i;\t\t\/\/ fractional part of h\r\n\r\n\t\tvar p = src.V * (1 - src.S);\r\n\t\tvar q = src.V * (1 - (src.S * f));\r\n\t\tvar t = src.V * (1 - (src.S * (1 - f)));\r\n\r\n\t\tswitch(i){\r\n\t\t\tcase 0: R = src.V; G = t    ; B = p    ; break;\r\n\t\t\tcase 1: R = q    ; G = src.V; B = p    ; break;\r\n\t\t\tcase 2: R = p    ; G = src.V; B = t    ; break;\r\n\t\t\tcase 3: R = p    ; G = q    ; B = src.V; break;\r\n\t\t\tcase 4: R = t    ; G = p    ; B = src.V; break;\r\n\t\t\tcase 5: R = src.V; G = p    ; B = q    ; break;\r\n\t\t}\r\n\t}\r\n\r\n\treturn [R, G, B];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.RGB_to_HSL":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('RGB', arguments);\r\n\r\n\t\/\/ based on C code from http:\/\/astronomy.swin.edu.au\/~pbourke\/colour\/hsl\/\r\n\tvar min = Math.min(src.R, src.G, src.B);\r\n\tvar max = Math.max(src.R, src.G, src.B);\r\n\tvar delta = max - min;\r\n\r\n\tvar H = 0;\r\n\tvar S = 0;\r\n\tvar L = (min + max) \/ 2;\r\n\r\n\tif ((L > 0) && (L < 1)){\r\n\t\tS = delta \/ ((L < 0.5) ? (2 * L) : (2 - 2 * L));\r\n\t}\r\n\r\n\tif (delta > 0) {\r\n\t\tif ((max == src.R) && (max != src.G)){\r\n\t\t\tH += (src.G - src.B) \/ delta;\r\n\t\t}\r\n\t\tif ((max == src.G) && (max != src.B)){\r\n\t\t\tH += (2 + (src.B - src.R) \/ delta);\r\n\t\t}\r\n\t\tif ((max == src.B) && (max != src.R)){\r\n\t\t\tH += (4 + (src.R - src.G) \/ delta);\r\n\t\t}\r\n\t\tH *= 60;\r\n\t}\r\n\tH = (H == 0) ? 360 : H;\r\n\treturn [H, S, L];\r","this":"dojo.gfx.Colorspace"}}},"dojo.gfx.Colorspace.HSL_to_RGB":{"_":{"meta":{"summary":"","src":"\tvar src = this.munge('HSL', arguments);\r\n\r\n\t\/\/ based on C code from http:\/\/astronomy.swin.edu.au\/~pbourke\/colour\/hsl\/\r\n\twhile (src.H < 0){ src.H += 360; }\r\n\twhile (src.H >= 360){ src.H -= 360; }\r\n\r\n\tvar R = 0;\r\n\tvar G = 0;\r\n\tvar B = 0;\r\n\r\n\tif (src.H < 120){\r\n\t\tR = (120 - src.H) \/ 60;\r\n\t\tG = src.H \/ 60;\r\n\t\tB = 0;\r\n\t}else if (src.H < 240){\r\n\t\tR = 0;\r\n\t\tG = (240 - src.H) \/ 60;\r\n\t\tB = (src.H - 120) \/ 60;\r\n\t}else{\r\n\t\tR = (src.H - 240) \/ 60;\r\n\t\tG = 0;\r\n\t\tB = (360 - src.H) \/ 60;\r\n\t}\r\n\r\n\tR = 2 * src.S * Math.min(R, 1) + (1 - src.S);\r\n\tG = 2 * src.S * Math.min(G, 1) + (1 - src.S);\r\n\tB = 2 * src.S * Math.min(B, 1) + (1 - src.S);\r\n\r\n\tif (src.L < 0.5){\r\n\t\tR = src.L * R;\r\n\t\tG = src.L * G;\r\n\t\tB = src.L * B;\r\n\t}else{\r\n\t\tR = (1 - src.L) * R + 2 * src.L - 1;\r\n\t\tG = (1 - src.L) * G + 2 * src.L - 1;\r\n\t\tB = (1 - src.L) * B + 2 * src.L - 1;\r\n\t}\r\n\treturn [R, G, B];\r","this":"dojo.gfx.Colorspace"}}}}}},"dojo.gfx._":{"meta":{"requires":{"common":["dojo.gfx.color","dojo.gfx.matrix","dojo.gfx.common"]}}},"dojo.gfx.color.hsl":{"meta":{"requires":{"common":["dojo.lang.array"]},"functions":{"dojo.gfx.color.rgb2hsl":{"_":{"meta":{"summary":"","parameters":{"r":{"type":""},"g":{"type":""},"b":{"type":""}},"src":"\tif (dojo.lang.isArray(r)) {\r\n\t\tb = r[2] || 0;\r\n\t\tg = r[1] || 0;\r\n\t\tr = r[0] || 0;\r\n\t}\r\n\r\n\tr \/= 255;\r\n\tg \/= 255;\r\n\tb \/= 255;\r\n\r\n\t\/\/\r\n\t\/\/ based on C code from http:\/\/astronomy.swin.edu.au\/~pbourke\/colour\/hsl\/\r\n\t\/\/\r\n\r\n\tvar h = null;\r\n\tvar s = null;\r\n\tvar l = null;\r\n\r\n\tvar min = Math.min(r, g, b);\r\n\tvar max = Math.max(r, g, b);\r\n\tvar delta = max - min;\r\n\r\n\tl = (min + max) \/ 2;\r\n\ts = 0;\r\n\r\n\tif ((l > 0) && (l < 1)){\r\n\t\ts = delta \/ ((l < 0.5) ? (2 * l) : (2 - 2 * l));\r\n\t}\r\n\r\n\th = 0;\r\n\r\n\tif (delta > 0) {\r\n\t\tif ((max == r) && (max != g)){\r\n\t\t\th += (g - b) \/ delta;\r\n\t\t}\r\n\t\tif ((max == g) && (max != b)){\r\n\t\t\th += (2 + (b - r) \/ delta);\r\n\t\t}\r\n\t\tif ((max == b) && (max != r)){\r\n\t\t\th += (4 + (r - g) \/ delta);\r\n\t\t}\r\n\t\th *= 60;\r\n\t}\r\n\r\n\th = (h == 0) ? 360 : Math.ceil((h \/ 360) * 255);\r\n\ts = Math.ceil(s * 255);\r\n\tl = Math.ceil(l * 255);\r\n\r\n\treturn [h, s, l];\r"}}},"dojo.gfx.color.hsl2rgb":{"_":{"meta":{"summary":"","parameters":{"h":{"type":""},"s":{"type":""},"l":{"type":""}},"src":"\tif (dojo.lang.isArray(h)) {\r\n\t\tl = h[2] || 0;\r\n\t\ts = h[1] || 0;\r\n\t\th = h[0] || 0;\r\n\t}\r\n\r\n\th = (h \/ 255) * 360;\r\n\tif (h == 360){ h = 0;}\r\n\ts = s \/ 255;\r\n\tl = l \/ 255;\r\n\r\n\t\/\/\r\n\t\/\/ based on C code from http:\/\/astronomy.swin.edu.au\/~pbourke\/colour\/hsl\/\r\n\t\/\/\r\n\r\n\r\n\twhile (h < 0){ h += 360; }\r\n\twhile (h > 360){ h -= 360; }\r\n\tvar r, g, b;\r\n\tif (h < 120){\r\n\t\tr = (120 - h) \/ 60;\r\n\t\tg = h \/ 60;\r\n\t\tb = 0;\r\n\t}else if (h < 240){\r\n\t\tr = 0;\r\n\t\tg = (240 - h) \/ 60;\r\n\t\tb = (h - 120) \/ 60;\r\n\t}else{\r\n\t\tr = (h - 240) \/ 60;\r\n\t\tg = 0;\r\n\t\tb = (360 - h) \/ 60;\r\n\t}\r\n\r\n\tr = Math.min(r, 1);\r\n\tg = Math.min(g, 1);\r\n\tb = Math.min(b, 1);\r\n\r\n\tr = 2 * s * r + (1 - s);\r\n\tg = 2 * s * g + (1 - s);\r\n\tb = 2 * s * b + (1 - s);\r\n\r\n\tif (l < 0.5){\r\n\t\tr = l * r;\r\n\t\tg = l * g;\r\n\t\tb = l * b;\r\n\t}else{\r\n\t\tr = (1 - l) * r + 2 * l - 1;\r\n\t\tg = (1 - l) * g + 2 * l - 1;\r\n\t\tb = (1 - l) * b + 2 * l - 1;\r\n\t}\r\n\r\n\tr = Math.ceil(r * 255);\r\n\tg = Math.ceil(g * 255);\r\n\tb = Math.ceil(b * 255);\r\n\r\n\treturn [r, g, b];\r"}}},"dojo.gfx.color.hsl2hex":{"_":{"meta":{"summary":"","parameters":{"h":{"type":""},"s":{"type":""},"l":{"type":""}},"src":"\tvar rgb = dojo.gfx.color.hsl2rgb(h, s, l);\r\n\treturn dojo.gfx.color.rgb2hex(rgb[0], rgb[1], rgb[2]);\r"}}},"dojo.gfx.color.hex2hsl":{"_":{"meta":{"summary":"","parameters":{"hex":{"type":""}},"src":"\tvar rgb = dojo.gfx.color.hex2rgb(hex);\r\n\treturn dojo.gfx.color.rgb2hsl(rgb[0], rgb[1], rgb[2]);\r"}}},"dojo.gfx.color.Color.toHsl":{"_":{"meta":{"summary":"","src":"\t\treturn dojo.gfx.color.rgb2hsl(this.toRgb());\r","this":"dojo.gfx.color.Color"}}}}}},"dojo.gfx.color.hsv":{"meta":{"requires":{"common":["dojo.lang.array"]},"functions":{"dojo.gfx.color.rgb2hsv":{"_":{"meta":{"summary":"","parameters":{"r":{"type":""},"g":{"type":""},"b":{"type":""}},"src":"\tif (dojo.lang.isArray(r)) {\r\n\t\tb = r[2] || 0;\r\n\t\tg = r[1] || 0;\r\n\t\tr = r[0] || 0;\r\n\t}\r\n\r\n\t\/\/ r,g,b, each 0 to 255, to HSV.\r\n\t\/\/ h = 0.0 to 360.0 (corresponding to 0..360.0 degrees around hexcone)\r\n\t\/\/ s = 0.0 (shade of gray) to 1.0 (pure color)\r\n\t\/\/ v = 0.0 (black) to 1.0 {white)\r\n\t\/\/\r\n\t\/\/ Based on C Code in \"Computer Graphics -- Principles and Practice,\"\r\n\t\/\/ Foley et al, 1996, p. 592. \r\n\t\/\/\r\n\t\/\/ our calculatuions are based on 'regular' values (0-360, 0-1, 0-1) \r\n\t\/\/ but we return bytes values (0-255, 0-255, 0-255)\r\n\r\n\tvar h = null;\r\n\tvar s = null;\r\n\tvar v = null;\r\n\r\n\tvar min = Math.min(r, g, b);\r\n\tv = Math.max(r, g, b);\r\n\r\n\tvar delta = v - min;\r\n\r\n\t\/\/ calculate saturation (0 if r, g and b are all 0)\r\n\r\n\ts = (v == 0) ? 0 : delta\/v;\r\n\tif (s == 0){\r\n\t\t\/\/ achromatic: when saturation is, hue is undefined\r\n\t\th = 0;\r\n\t}else{\r\n\t\t\/\/ chromatic\r\n\t\tif (r == v){\r\n\t\t\t\/\/ between yellow and magenta\r\n\t\t\th = 60 * (g - b) \/ delta;\r\n\t\t}else{\r\n\t\t\tif (g == v){\r\n\t\t\t\t\/\/ between cyan and yellow\r\n\t\t\t\th = 120 + 60 * (b - r) \/ delta;\r\n\t\t\t}else{\r\n\t\t\t\tif (b == v){\r\n\t\t\t\t\t\/\/ between magenta and cyan\r\n\t\t\t\t\th = 240 + 60 * (r - g) \/ delta;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (h < 0){\r\n\t\t\th += 360;\r\n\t\t}\r\n\t}\r\n\r\n\th = (h == 0) ? 360 : Math.ceil((h \/ 360) * 255);\r\n\ts = Math.ceil(s * 255);\r\n\treturn [h, s, v];\r"}}},"dojo.gfx.color.hsv2rgb":{"_":{"meta":{"summary":"","parameters":{"h":{"type":""},"s":{"type":""},"v":{"type":""}},"src":"\tif (dojo.lang.isArray(h)) {\r\n\t\tv = h[2] || 0;\r\n\t\ts = h[1] || 0;\r\n\t\th = h[0] || 0;\r\n\t}\r\n\r\n\th = (h \/ 255) * 360;\r\n\tif (h == 360){ h = 0;}\r\n\r\n\ts = s \/ 255;\r\n\tv = v \/ 255;\r\n\r\n\t\/\/ Based on C Code in \"Computer Graphics -- Principles and Practice,\"\r\n\t\/\/ Foley et al, 1996, p. 593.\r\n\t\/\/\r\n\t\/\/ H = 0.0 to 360.0 (corresponding to 0..360 degrees around hexcone) 0 for S = 0\r\n\t\/\/ S = 0.0 (shade of gray) to 1.0 (pure color)\r\n\t\/\/ V = 0.0 (black) to 1.0 (white)\r\n\r\n\tvar r = null;\r\n\tvar g = null;\r\n\tvar b = null;\r\n\r\n\tif (s == 0){\r\n\t\t\/\/ color is on black-and-white center line\r\n\t\t\/\/ achromatic: shades of gray\r\n\t\tr = v;\r\n\t\tg = v;\r\n\t\tb = v;\r\n\t}else{\r\n\t\t\/\/ chromatic color\r\n\t\tvar hTemp = h \/ 60;\t\t\/\/ h is now IN [0,6]\r\n\t\tvar i = Math.floor(hTemp);\t\/\/ largest integer <= h\r\n\t\tvar f = hTemp - i;\t\t\/\/ fractional part of h\r\n\r\n\t\tvar p = v * (1 - s);\r\n\t\tvar q = v * (1 - (s * f));\r\n\t\tvar t = v * (1 - (s * (1 - f)));\r\n\r\n\t\tswitch(i){\r\n\t\t\tcase 0: r = v; g = t; b = p; break;\r\n\t\t\tcase 1: r = q; g = v; b = p; break;\r\n\t\t\tcase 2: r = p; g = v; b = t; break;\r\n\t\t\tcase 3: r = p; g = q; b = v; break;\r\n\t\t\tcase 4: r = t; g = p; b = v; break;\r\n\t\t\tcase 5: r = v; g = p; b = q; break;\r\n\t\t}\r\n\t}\r\n\r\n\tr = Math.ceil(r * 255);\r\n\tg = Math.ceil(g * 255);\r\n\tb = Math.ceil(b * 255);\r\n\r\n\treturn [r, g, b];\r"}}},"dojo.gfx.color.Color.toHsv":{"_":{"meta":{"summary":"","src":"\t\treturn dojo.gfx.color.rgb2hsv(this.toRgb());\r","this":"dojo.gfx.color.Color"}}}}}},"dojo.gfx.color":{"meta":{"requires":{"common":["dojo.lang.common","dojo.lang.array"]},"functions":{"dojo.gfx.color.Color":{"_":{"meta":{"summary":"","parameters":{"r":{"type":""},"g":{"type":""},"b":{"type":""},"a":{"type":""}},"src":"\t\tthis.r = r[0];\r\n\t\tthis.g = r[1];\r\n\t\tthis.b = r[2];\r\n\t\tthis.a = r[3]||1.0;\r\n\t}else if(dojo.lang.isString(r)){\r\n\t\tvar rgb = dojo.gfx.color.extractRGB(r);\r\n\t\tthis.r = rgb[0];\r\n\t\tthis.g = rgb[1];\r\n\t\tthis.b = rgb[2];\r\n\t\tthis.a = g||1.0;\r\n\t}else if(r instanceof dojo.gfx.color.Color){\r\n\t\t\/\/ why does this create a new instance if we were passed one?\r\n\t\tthis.r = r.r;\r\n\t\tthis.b = r.b;\r\n\t\tthis.g = r.g;\r\n\t\tthis.a = r.a;\r\n\t}else{\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\t\tthis.a = a;\r\n\t}\r","this_variables":["r","g","b","a"]}}},"dojo.gfx.color.Color.fromArray":{"_":{"meta":{"summary":"","parameters":{"arr":{"type":""}},"src":"\treturn new dojo.gfx.color.Color(arr[0], arr[1], arr[2], arr[3]);\r"}}},"dojo.gfx.color.blend":{"_":{"meta":{"summary":" blend colors a and b (both as RGB array or hex strings) with weight from -1 to +1, 0 being a 50\/50 blend","parameters":{"a":{"type":""},"b":{"type":""},"weight":{"type":""}},"src":"\t\treturn dojo.gfx.color.blendHex(a, b, weight);\r\n\t}\r\n\tif(!weight){\r\n\t\tweight = 0;\r\n\t}\r\n\r\n\tweight = Math.min(Math.max(-1, weight), 1);\r\n\t\r\n\tvar c = [];\r\n\tfor(var i = 0; i < 3; i++){\r\n\t\tvar half = Math.abs(a[i] - b[i])\/2;\r\n\t\tc.push(Math.floor(Math.min(a[i], b[i]) + half + (half * weight)));\r\n\t}\r\n\treturn c;\r"}}},"dojo.gfx.color.blendHex":{"_":{"meta":{"summary":"","parameters":{"a":{"type":""},"b":{"type":""},"weight":{"type":""}},"src":"\treturn dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a), dojo.gfx.color.hex2rgb(b), weight));\r"}}},"dojo.gfx.color.extractRGB":{"_":{"meta":{"summary":"","parameters":{"color":{"type":""}},"src":"\tvar hex = \"0123456789abcdef\";\r\n\tcolor = color.toLowerCase();\r\n\tif( color.indexOf(\"rgb\") == 0 ) {\r\n\t\tvar matches = color.match(\/rgba*\\((\\d+), *(\\d+), *(\\d+)\/i);\r\n\t\tvar ret = matches.splice(1, 3);\r\n\t\treturn ret;\r\n\t} else {\r\n\t\tvar colors = dojo.gfx.color.hex2rgb(color);\r\n\t\tif(colors) {\r\n\t\t\treturn colors;\r\n\t\t} else {\r\n\t\t\t\/\/ named color (how many do we support?)\r\n\t\t\treturn dojo.gfx.color.named[color] || [255, 255, 255];\r\n\t\t}\r\n\t}\r"}}},"dojo.gfx.color.hex2rgb":{"_":{"meta":{"summary":"","parameters":{"hex":{"type":""}},"src":"\tvar hexNum = \"0123456789ABCDEF\";\r\n\tvar rgb = new Array(3);\r\n\tif( hex.indexOf(\"#\") == 0 ) { hex = hex.substring(1); }\r\n\thex = hex.toUpperCase();\r\n\tif(hex.replace(new RegExp(\"[\"+hexNum+\"]\", \"g\"), \"\") != \"\") {\r\n\t\treturn null;\r\n\t}\r\n\tif( hex.length == 3 ) {\r\n\t\trgb[0] = hex.charAt(0) + hex.charAt(0)\r\n\t\trgb[1] = hex.charAt(1) + hex.charAt(1)\r\n\t\trgb[2] = hex.charAt(2) + hex.charAt(2);\r\n\t} else {\r\n\t\trgb[0] = hex.substring(0, 2);\r\n\t\trgb[1] = hex.substring(2, 4);\r\n\t\trgb[2] = hex.substring(4);\r\n\t}\r\n\tfor(var i = 0; i < rgb.length; i++) {\r\n\t\trgb[i] = hexNum.indexOf(rgb[i].charAt(0)) * 16 + hexNum.indexOf(rgb[i].charAt(1));\r\n\t}\r\n\treturn rgb;\r"}}},"dojo.gfx.color.rgb2hex":{"_":{"meta":{"summary":"","parameters":{"r":{"type":""},"g":{"type":""},"b":{"type":""}},"src":"\tif(dojo.lang.isArray(r)) {\r\n\t\tg = r[1] || 0;\r\n\t\tb = r[2] || 0;\r\n\t\tr = r[0] || 0;\r\n\t}\r\n\tvar ret = dojo.lang.map([r, g, b], function(x) {\r\n\t\tx = new Number(x);\r\n\t\tvar s = x.toString(16);\r\n\t\twhile(s.length < 2) { s = \"0\" + s; }\r\n\t\treturn s;\r\n\t});\r\n\tret.unshift(\"#\");\r\n\treturn ret.join(\"\");\r"}}}}}},"dojo.gfx.common":{"meta":{"requires":{"common":["dojo.gfx.color","dojo.lang.declare","dojo.lang.extras"]},"functions":{"dojo.gfx.VirtualGroup":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"protovariables":{"children":""}}}},"dojo.gfx.VirtualGroup.add":{"_":{"meta":{"summary":"","parameters":{"shape":{"type":""}},"src":"\t\tvar oldParent = shape.getParent();\n\t\tif(oldParent){\n\t\t\toldParent.remove(shape, true);\n\t\t}\n\t\tthis.children.push(shape);\n\t\treturn shape._setParent(this, this._getRealMatrix());","this":"dojo.gfx.Shape"}}},"dojo.gfx.VirtualGroup.remove":{"_":{"meta":{"summary":"","parameters":{"shape":{"type":""},"silently":{"type":""}},"src":"\t\tvar i = 0;\n\t\tfor(; i < this.children.length; ++i){\n\t\t\tif(this.children[i] == shape){\n\t\t\t\tif(silently){\n\t\t\t\t\t\/\/ skip for now\n\t\t\t\t}else{\n\t\t\t\t\tshape._setParent(null, null);\n\t\t\t\t}\n\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.VirtualGroup._applyTransform":{"_":{"meta":{"summary":"","src":"\t\tvar matrix = this._getRealMatrix();\n\t\tfor(var i = 0; i < this.children.length; ++i){\n\t\t\tthis.children[i]._updateParentMatrix(matrix);\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape":{"_":{"meta":{"summary":"","src":"\t\/\/ abstract shape object\n\tthis.shape = null;\n\t\/\/ transformation matrix\n\tthis.matrix  = null;\n\t\/\/ graphical attributes\n\tthis.fillStyle   = null;\n\tthis.strokeStyle = null;\n\t\/\/ virtual group structure\n\tthis.parent = null;\n\tthis.parentMatrix = null;","this_variables":["rawNode","shape","matrix","fillStyle","strokeStyle","parent","parentMatrix","matrix","parent","parentMatrix"]}}},"dojo.gfx.Surface":{"_":{"meta":{"summary":"","src":"","this_variables":["rawNode"]}}},"dojo.gfx.Shape.getNode":{"_":{"meta":{"summary":"","src":"                           return this.rawNode;    ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.getShape":{"_":{"meta":{"summary":"","src":"                           return this.shape;    ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.getTransform":{"_":{"meta":{"summary":"","src":"                           return this.matrix;    ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.getFill":{"_":{"meta":{"summary":"","src":"                           return this.fillStyle;    ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.getStroke":{"_":{"meta":{"summary":"","src":"                           return this.strokeStyle;    ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.getParent":{"_":{"meta":{"summary":"","src":"                           return this.parent;    ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setShape":{"_":{"meta":{"summary":"","parameters":{"shape":{"type":""}},"src":"                              return this;              ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setStroke":{"_":{"meta":{"summary":"","parameters":{"stroke":{"type":""}},"src":"                              return this;              ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setFill":{"_":{"meta":{"summary":"","parameters":{"fill":{"type":""}},"src":"                              return this;              ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.moveToFront":{"_":{"meta":{"summary":"","src":"                          return this;               ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.moveToBack":{"_":{"meta":{"summary":"","src":"                          return this;               ","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setTransform":{"_":{"meta":{"summary":"","parameters":{"matrix":{"type":""}},"src":"\t\tthis.matrix = dojo.gfx.matrix.clone(matrix ? dojo.gfx.matrix.normalize(matrix) : dojo.gfx.identity, true);\n\t\treturn this._applyTransform();","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.applyRightTransform":{"_":{"meta":{"summary":"","parameters":{"matrix":{"type":""}},"src":"\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.applyLeftTransform":{"_":{"meta":{"summary":"","parameters":{"matrix":{"type":""}},"src":"\t\treturn matrix ? this.setTransform([matrix, this.matrix]) : this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.applyTransform":{"_":{"meta":{"summary":"","parameters":{"matrix":{"type":""}},"src":"\t\treturn matrix ? this.setTransform([this.matrix, matrix]) : this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.remove":{"_":{"meta":{"summary":"","parameters":{"silently":{"type":""}},"src":"\t\tif(this.parent){\n\t\t\tthis.parent.remove(this, silently);\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape._setParent":{"_":{"meta":{"summary":"","parameters":{"parent":{"type":""},"matrix":{"type":""}},"src":"\t\tthis.parent = parent;\n\t\treturn this._updateParentMatrix(matrix);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape._updateParentMatrix":{"_":{"meta":{"summary":"","parameters":{"matrix":{"type":""}},"src":"\t\tthis.parentMatrix = matrix ? dojo.gfx.matrix.clone(matrix) : null;\n\t\treturn this._applyTransform();","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape._getRealMatrix":{"_":{"meta":{"summary":"","src":"\t\treturn this.parentMatrix ? new dojo.gfx.matrix.Matrix2D([this.parentMatrix, this.matrix]) : this.matrix;","this":"dojo.gfx.Shape"}}}}}},"dojo.gfx.matrix":{"meta":{"requires":{"common":["dojo.lang.common","dojo.math.*"]},"functions":{"dojo.gfx.matrix.Matrix2D":{"_":{"meta":{"summary":"","parameters":{"arg":{"type":""}},"src":"\tif(arg){\n\t\tif(arg instanceof Array){\n\t\t\tif(arg.length > 0){\n\t\t\t\tvar m = dojo.gfx.matrix.normalize(arg[0]);\n\t\t\t\t\/\/ combine matrices\n\t\t\t\tfor(var i = 1; i < arg.length; ++i){\n\t\t\t\t\tvar l = m;\n\t\t\t\t\tvar r = dojo.gfx.matrix.normalize(arg[i]);\n\t\t\t\t\tm = new dojo.gfx.matrix.Matrix2D();\n\t\t\t\t\tm.xx = l.xx * r.xx + l.xy * r.yx;\n\t\t\t\t\tm.xy = l.xx * r.xy + l.xy * r.yy;\n\t\t\t\t\tm.yx = l.yx * r.xx + l.yy * r.yx;\n\t\t\t\t\tm.yy = l.yx * r.xy + l.yy * r.yy;\n\t\t\t\t\tm.dx = l.xx * r.dx + l.xy * r.dy + l.dx;\n\t\t\t\t\tm.dy = l.yx * r.dx + l.yy * r.dy + l.dy;\n\t\t\t\t}\n\t\t\t\tdojo.mixin(this, m);\n\t\t\t}\n\t\t}else{\n\t\t\tdojo.mixin(this, arg);\n\t\t}\n\t}"}}}}}},"dojo.gfx.svg":{"meta":{"requires":{"common":["dojo.lang.declare","dojo.svg","dojo.gfx.color","dojo.gfx.common","dojo.experimental"]},"functions":{"dojo.gfx.Group":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"object_inherits":["dojo.gfx._creators"]}}},"dojo.gfx.Group.setRawNode":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tthis.rawNode = rawNode;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape":{"_":{"meta":{"this_variables":["rawNode","shape","shape","shape","shape","shape.","lastPos","strokeStyle","strokeStyle.color","fillStyle","fillStyle","rawNode","shape","rawNode","fillStyle","strokeStyle","matrix"]}}},"dojo.gfx.Rect":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Ellipse":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Circle":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Line":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Polyline":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Polyline.setShape":{"_":{"meta":{"summary":"","parameters":{"points":{"type":""}},"src":"\t\tif(points && points instanceof Array){\n\t\t\tthis.shape = dojo.gfx.makeParameters(this.shape, { points: points });\n\t\t\tif(closed && this.shape.points.length){ \n\t\t\t\tthis.shape.points.push(this.shape.points[0]);\n\t\t\t}\n\t\t}else{\n\t\t\tthis.shape = dojo.gfx.makeParameters(this.shape, points);\n\t\t}\n\t\tattr = \"\";\n\t\tfor(var i = 0; i< this.shape.points.length; ++i){\n\t\t\tattr += this.shape.points[i].x.toFixed(8) + \" \" + this.shape.points[i].y.toFixed(8) + \" \";\n\t\t}\n\t\tthis.rawNode.setAttribute(\"points\", attr);\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Polyline.points":{"_":{"meta":{"summary":"","parameters":{"points":{"type":""}},"src":"\t\tif(points && points instanceof Array){\n\t\t\tthis.shape = dojo.gfx.makeParameters(this.shape, { points: points });\n\t\t\tif(closed && this.shape.points.length){ \n\t\t\t\tthis.shape.points.push(this.shape.points[0]);\n\t\t\t}\n\t\t}else{\n\t\t\tthis.shape = dojo.gfx.makeParameters(this.shape, points);\n\t\t}\n\t\tattr = \"\";\n\t\tfor(var i = 0; i< this.shape.points.length; ++i){\n\t\t\tattr += this.shape.points[i].x.toFixed(8) + \" \" + this.shape.points[i].y.toFixed(8) + \" \";\n\t\t}\n\t\tthis.rawNode.setAttribute(\"points\", attr);\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Path.x":{"_":{"meta":{"summary":"","parameters":{"endAngle":{"type":""},"cx":{"type":""},"cy":{"type":""},"rx":{"type":""},"ry":{"type":""},"xRotate":{"type":""},"isCCW":{"type":""}},"src":"\t\tvar x = this.lastPos.x - cx;\n\t\tvar y = this.lastPos.y - cy;\n\t\tvar startAngle = Math.atan2(-y, x) - xRotate;\n\n\t\t\/\/TODO: add relative support!\n\n\t\t\/\/ TODO: refactor me here!\n\t\tvar theta = isCCW ? endAngle - startAngle : startAngle - endAngle;\n\t\tif(theta < 0){ theta += 2 * Math.PI; }\n\t\tdojo.debug(\"theta =\" + theta);\n\n\t\tvar arcToAngle = function(startAngle, angle, isCCW){\n\t\t\tvar endAngle = isCCW ? startAngle + angle : startAngle - angle;\n\t\t\t\/\/ start, control point 1, control point 2, end point\n\t\t\tvar P1, Q1, P2, Q2;\n\t\t\t\/\/ theta 0, theta 1 stand for P1, P2\n\t\t\tvar t1, t2;\n\t\t\tvar temp = null;\n\t\t\tdojo.debug(\"startAngle=\" + startAngle);\n\t\t\tt1 = Math.atan2(Math.sin(startAngle) \/ ry, Math.cos(startAngle) \/ rx );\n\t\t\tt2 = Math.atan2(Math.sin(endAngle) \/ ry, Math.cos(endAngle) \/ rx );\n\t\t\tdojo.debug(\"t1=\"+t1+\" t2=\"+t2);\n\n\t\t\tvar E = function(theta){\n\t\t\t\treturn dojo.gfx.matrix.multiplyPoint(\n\t\t\t\t\t[ \n\t\t\t\t\t\tdojo.gfx.matrix.translate(cx, cy),\n\t\t\t\t\t\tdojo.gfx.matrix.rotate(xRotate),\n\t\t\t\t\t\tdojo.gfx.matrix.scale(rx, ry)\n\t\t\t\t\t],\n\t\t\t\t\tMath.cos(theta), \n\t\t\t\t\t-Math.sin(theta)\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tvar E_prime = function(theta){\n\t\t\t\treturn dojo.gfx.matrix.multiplyPoint(\n\t\t\t\t\t[\n\t\t\t\t\t\tdojo.gfx.matrix.rotate(xRotate),\n\t\t\t\t\t\tdojo.gfx.matrix.scale(rx, ry)\n\t\t\t\t\t], \n\t\t\t\t\t-Math.sin(theta),\n\t\t\t\t\t-Math.cos(theta)\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tvar alpha = Math.sin(t2 - t1)* (Math.sqrt(4 + 3 * Math.pow(Math.tan((t2 - t1) \/ 2), 2)) - 1) \/ 3;\n\t\t\tdojo.debug(\"alpha=\" + alpha);\n\n\t\t\tP1 = E(t1);\n\t\t\tQ1 = dojo.gfx.matrix.multiplyPoint(dojo.gfx.matrix.scale(alpha), E_prime(t1));\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tQ1 = {x: P1.x + Q1.x, y: P1.y + Q1.y};\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tP2 = E(t2);\n\t\t\tQ2 = dojo.gfx.matrix.multiplyPoint(dojo.gfx.matrix.scale(-alpha), E_prime(t2));\n\t\t\tQ2 = {x: P2.x + Q2.x, y: P2.y + Q2.y};\n\n\t\t\tdojo.debug(\"P1=\" + P1.x + \",\" + P1.y);\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tdojo.debug(\"P2=\" + P2.x + \",\" + P2.y);\n\t\t\tdojo.debug(\"Q2=\" + Q2.x + \",\" + Q2.y);\n\t\t\treturn [P1, Q1, P2, Q2];\n\t\t};\n\n\t\tvar arcQuadricPI= function(startAngle, isCCW){\n\t\t\treturn arcToAngle(startAngle, Math.PI\/4, isCCW); \n\t\t};\n\n\t\tvar angle = startAngle;\n\t\tvar offsetAngle = isCCW ? Math.PI \/ 4 : -Math.PI \/ 4;\n\t\tvar Ps = null;\n\t\tfor(var i = 0; i< Math.floor(theta \/ (Math.PI \/ 4)); i++){\n\t\t\t\/\/ draw the Pi\/4 arc\n\t\t\tPs = arcQuadricPI(angle, isCCW);\n\t\t\t\/\/ curveTo( Q1, Q2, P2 )\n\t\t\tthis.curveTo(Ps[1].x, Ps[1].y, Ps[3].x, Ps[3].y, Ps[2].x, Ps[2].y);\n\t\t\tangle += offsetAngle;\n\t\t}\n\n\t\t\/\/ draw the rest\n\t\toffsetAngle = theta % (Math.PI \/ 4);\n\t\tdojo.debug(\"offsetAngle=\" + offsetAngle);\n\t\tPs = arcToAngle(angle, offsetAngle, isCCW);\n\t\treturn this.curveTo(Ps[1].x, Ps[1].y, Ps[3].x, Ps[3].y, Ps[2].x, Ps[2].y);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.setShape":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tthis.shape = dojo.gfx.makeParameters(this.shape, typeof(newShape) == \"string\" ? {path: newShape} : newShape);\n\t\tthis.setAbsoluteMode(this.shape.absolute);\n\t\tthis.rawNode.setAttribute(\"d\", this.shape.path);\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.path":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tthis.shape = dojo.gfx.makeParameters(this.shape, typeof(newShape) == \"string\" ? {path: newShape} : newShape);\n\t\tthis.setAbsoluteMode(this.shape.absolute);\n\t\tthis.rawNode.setAttribute(\"d\", this.shape.path);\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.setAbsoluteMode":{"_":{"meta":{"summary":"","parameters":{"mode":{"type":""}},"src":"\t\tthis.shape.absolute = typeof(mode) == \"string\" ? (mode == \"absolute\") : mode;\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.getAbsoluteMode":{"_":{"meta":{"summary":"","src":"\t\treturn this.shape.absolute;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.drawTo":{"_":{"meta":{"summary":"","parameters":{"action":{"type":""},"args":{"type":""}},"src":"\t\tthis.shape.path += this.shape.absolute ? action.toUpperCase() : action.toLowerCase();\n\t\tfor(var i = 0; i< args.length; ++i){\n\t\t\tthis.shape.path += args[i] + \" \";\n\t\t}\n\t\tthis.rawNode.setAttribute(\"d\", this.shape.path);\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.update":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""},"":{"type":""}},"src":"\t\tif(this.shape.absolute){\n\t\t\tthis.lastPos = {x: x, y: y};\n\t\t}else{\n\t\t\tthis.lastPos.x += x;\n\t\t\tthis.lastPos.y += y;\n\t\t}","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.closePath":{"_":{"meta":{"summary":"","src":"\t\treturn this.drawTo(\"z\", []);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.moveTo":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""}},"src":"\t\tthis.update(x, y);\n\t\treturn this.drawTo(\"m\", [x, y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.lineTo":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""}},"src":"\t\tthis.update(x, y);\n\t\treturn this.drawTo(\"l\", [x, y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.hLineTo":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""}},"src":"\t\ty = this.shape.absolute ? this.lastPos.y : 0;\n\t\tthis.update(x, y);\n\t\treturn this.drawTo(\"h\", [x]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.vLineTo":{"_":{"meta":{"summary":"","parameters":{"y":{"type":""}},"src":"\t\tx = this.shape.absolute ? this.lastPos.x : 0;\n\t\treturn this.drawTo(\"v\", [y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.curveTo":{"_":{"meta":{"summary":"","parameters":{"x1":{"type":""},"y1":{"type":""},"x2":{"type":""},"y2":{"type":""},"x":{"type":""},"y":{"type":""}},"src":"\t\tthis.update(x, y);\n\t\treturn this.drawTo(\"c\", [x1, y1, x2, y2, x, y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.smoothCurveTo":{"_":{"meta":{"summary":"","parameters":{"x2":{"type":""},"y2":{"type":""},"x":{"type":""},"y":{"type":""}},"src":"\t\tthis.update(x, y);\n\t\treturn this.drawTo(\"s\", [x2, y2, x, y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.qbCurveTo":{"_":{"meta":{"summary":"","parameters":{"x1":{"type":""},"y1":{"type":""},"x":{"type":""},"y":{"type":""}},"src":"\t\tthis.update(x, y);\n\t\treturn this.drawTo(\"q\", [x1, y1, x, y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.smoothQBCurveTo":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""}},"src":"\t\tthis.update(x, y);\n\t\treturn this.drawTo(\"t\", [x, y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.arcTo2":{"_":{"meta":{"summary":"","parameters":{"endAngle":{"type":""},"cx":{"type":""},"cy":{"type":""},"rx":{"type":""},"ry":{"type":""},"xRotate":{"type":""},"isCCW":{"type":""}},"src":"\t\tvar x = this.lastPos.x - cx;\n\t\tvar y = this.lastPos.y - cy;\n\t\tvar startAngle = Math.atan2(-y, x) - xRotate;\n\n\t\t\/\/TODO: add relative support!\n\n\t\t\/\/ TODO: refactor me here!\n\t\tvar theta = isCCW ? endAngle - startAngle : startAngle - endAngle;\n\t\tif(theta < 0){ theta += 2 * Math.PI; }\n\t\tdojo.debug(\"theta =\" + theta);\n\n\t\tvar arcToAngle = function(startAngle, angle, isCCW){\n\t\t\tvar endAngle = isCCW ? startAngle + angle : startAngle - angle;\n\t\t\t\/\/ start, control point 1, control point 2, end point\n\t\t\tvar P1, Q1, P2, Q2;\n\t\t\t\/\/ theta 0, theta 1 stand for P1, P2\n\t\t\tvar t1, t2;\n\t\t\tvar temp = null;\n\t\t\tdojo.debug(\"startAngle=\" + startAngle);\n\t\t\tt1 = Math.atan2(Math.sin(startAngle) \/ ry, Math.cos(startAngle) \/ rx );\n\t\t\tt2 = Math.atan2(Math.sin(endAngle) \/ ry, Math.cos(endAngle) \/ rx );\n\t\t\tdojo.debug(\"t1=\"+t1+\" t2=\"+t2);\n\n\t\t\tvar E = function(theta){\n\t\t\t\treturn dojo.gfx.matrix.multiplyPoint(\n\t\t\t\t\t[ \n\t\t\t\t\t\tdojo.gfx.matrix.translate(cx, cy),\n\t\t\t\t\t\tdojo.gfx.matrix.rotate(xRotate),\n\t\t\t\t\t\tdojo.gfx.matrix.scale(rx, ry)\n\t\t\t\t\t],\n\t\t\t\t\tMath.cos(theta), \n\t\t\t\t\t-Math.sin(theta)\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tvar E_prime = function(theta){\n\t\t\t\treturn dojo.gfx.matrix.multiplyPoint(\n\t\t\t\t\t[\n\t\t\t\t\t\tdojo.gfx.matrix.rotate(xRotate),\n\t\t\t\t\t\tdojo.gfx.matrix.scale(rx, ry)\n\t\t\t\t\t], \n\t\t\t\t\t-Math.sin(theta),\n\t\t\t\t\t-Math.cos(theta)\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tvar alpha = Math.sin(t2 - t1)* (Math.sqrt(4 + 3 * Math.pow(Math.tan((t2 - t1) \/ 2), 2)) - 1) \/ 3;\n\t\t\tdojo.debug(\"alpha=\" + alpha);\n\n\t\t\tP1 = E(t1);\n\t\t\tQ1 = dojo.gfx.matrix.multiplyPoint(dojo.gfx.matrix.scale(alpha), E_prime(t1));\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tQ1 = {x: P1.x + Q1.x, y: P1.y + Q1.y};\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tP2 = E(t2);\n\t\t\tQ2 = dojo.gfx.matrix.multiplyPoint(dojo.gfx.matrix.scale(-alpha), E_prime(t2));\n\t\t\tQ2 = {x: P2.x + Q2.x, y: P2.y + Q2.y};\n\n\t\t\tdojo.debug(\"P1=\" + P1.x + \",\" + P1.y);\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tdojo.debug(\"P2=\" + P2.x + \",\" + P2.y);\n\t\t\tdojo.debug(\"Q2=\" + Q2.x + \",\" + Q2.y);\n\t\t\treturn [P1, Q1, P2, Q2];\n\t\t};\n\n\t\tvar arcQuadricPI= function(startAngle, isCCW){\n\t\t\treturn arcToAngle(startAngle, Math.PI\/4, isCCW); \n\t\t};\n\n\t\tvar angle = startAngle;\n\t\tvar offsetAngle = isCCW ? Math.PI \/ 4 : -Math.PI \/ 4;\n\t\tvar Ps = null;\n\t\tfor(var i = 0; i< Math.floor(theta \/ (Math.PI \/ 4)); i++){\n\t\t\t\/\/ draw the Pi\/4 arc\n\t\t\tPs = arcQuadricPI(angle, isCCW);\n\t\t\t\/\/ curveTo( Q1, Q2, P2 )\n\t\t\tthis.curveTo(Ps[1].x, Ps[1].y, Ps[3].x, Ps[3].y, Ps[2].x, Ps[2].y);\n\t\t\tangle += offsetAngle;\n\t\t}\n\n\t\t\/\/ draw the rest\n\t\toffsetAngle = theta % (Math.PI \/ 4);\n\t\tdojo.debug(\"offsetAngle=\" + offsetAngle);\n\t\tPs = arcToAngle(angle, offsetAngle, isCCW);\n\t\treturn this.curveTo(Ps[1].x, Ps[1].y, Ps[3].x, Ps[3].y, Ps[2].x, Ps[2].y);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.arcTo":{"_":{"meta":{"summary":"","parameters":{"endAngle":{"type":""},"cx":{"type":""},"cy":{"type":""},"rx":{"type":""},"ry":{"type":""},"xRotate":{"type":""},"isCCW":{"type":""}},"src":"\t\tvar x = this.lastPos.x - cx;\n\t\tvar y = -(this.lastPos.y - cy); \n\t\tvar startAngle = Math.atan2(y, x) - xRotate;\n\n\t\tif(!this.shape.absolute) {\n\t\t\t\/\/ calculate the startAngle\n\t\t\tendAngle = startAngle + endAngle;\n\t\t} \n\n\t\t\/\/ calculate the endpoint\n\t\tvar eta = Math.atan2(Math.sin(endAngle) \/ ry, Math.cos(endAngle) \/ rx);\n\t\t\/*\n\t\tvar endPoint = {x:rx*Math.cos(eta), y:-1*ry*Math.sin(eta)};\n\t\tendPoint = dojo.gfx.matrix.multiplyPoint( \n\t\tdojo.gfx.matrix.multiply(dojo.gfx.matrix.rotate(xRotate),\n\t\tdojo.gfx.matrix.matrix.translate(cx, cy)),\n\t\tendPoint);\n\t\tdojo.debug( \"endPoint=\" + endPoint.x +\",\"+ endPoint.y);\n\t\t*\/\n\n\t\tvar endPoint = dojo.gfx.matrix.multiplyPoint(\n\t\t\t[\n\t\t\t\tdojo.gfx.matrix.translate(cx, cy),\n\t\t\t\tdojo.gfx.matrix.rotate(xRotate),\n\t\t\t\tdojo.gfx.matrix.scale(rx, ry)\n\t\t\t],\n\t\t\tMath.cos(-eta),\n\t\t\tMath.sin(-eta)\n\t\t);\n\n\t\tvar sweepflag = isCCW ? 0 : 1;\n\t\tvar theta = isCCW ? endAngle - startAngle : startAngle - endAngle;\n\t\tif(theta < 0) theta += 2*Math.PI;\n\t\tvar largearc = theta > Math.PI ? 1 : 0;\n\t\tthis.update(endPoint.x, endPoint.y);\n\t\treturn this.drawTo(\"a\", [rx, ry, dojo.math.radToDeg(-xRotate), largearc, sweepflag, endPoint.x.toFixed(8), endPoint.y.toFixed(8)] );","this":"dojo.gfx.Shape"}}},"dojo.gfx.attachNode":{"_":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":"\tif(!node) return null;\n\tvar s = null;\n\tswitch(node.tagName.toLowerCase()){\n\t\tcase dojo.gfx.Rect.nodeType:\n\t\t\ts = new dojo.gfx.Rect();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Ellipse.nodeType:\n\t\t\ts = new dojo.gfx.Ellipse();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Polyline.nodeType:\n\t\t\ts = new dojo.gfx.Polyline();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Path.nodeType:\n\t\t\ts = new dojo.gfx.Path();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Circle.nodeType:\n\t\t\ts = new dojo.gfx.Circle();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Line.nodeType:\n\t\t\ts = new dojo.gfx.Line();\n\t\t\tbreak;\n\t}\n\ts.attach(node);\n\treturn s;"}}},"dojo.gfx.createSurface":{"_":{"meta":{"summary":"","parameters":{"parentNode":{"type":""},"width":{"type":""},"height":{"type":""}},"src":"\tvar s = new dojo.gfx.Surface();\n\ts.rawNode = document.createElementNS(dojo.svg.xmlns.svg, \"svg\");\n\ts.rawNode.setAttribute(\"width\",  width);\n\ts.rawNode.setAttribute(\"height\", height);\n\n\tvar defs = new dojo.gfx.svg.Defines();\n\tvar node = document.createElementNS(dojo.svg.xmlns.svg, dojo.gfx.svg.Defines.nodeType); \n\tdefs.setRawNode(node);\n\ts.rawNode.appendChild(node);\n\t\n\tdojo.byId(parentNode).appendChild(s.rawNode);\n\treturn s;"}}},"dojo.gfx.attachSurface":{"_":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":"\tvar s = new dojo.gfx.Surface();\n\ts.rawNode = node;\n\treturn s;"}}},"dojo.gfx.svg.Defines":{"_":{"meta":{"summary":"","src":"\tthis.rawNode = null;","this_variables":["rawNode","rawNode"]}}},"dojo.gfx.Shape.setStroke":{"_":{"meta":{"summary":"","parameters":{"stroke":{"type":""}},"src":"\t\tif(!stroke){\n\t\t\t\/\/ don't stroke\n\t\t\tthis.strokeStyle = null;\n\t\t\tthis.rawNode.setAttribute(\"stroke\", \"none\");\n\t\t\tthis.rawNode.setAttribute(\"stroke-opacity\", 0);\n\t\t\treturn this;\n\t\t}\n\t\t\/\/ normalize the stroke\n\t\tthis.strokeStyle = dojo.gfx.makeParameters(dojo.gfx.defaultStroke, stroke);\n\t\tthis.strokeStyle.color = dojo.gfx.normalizeColor(this.strokeStyle.color);\n\t\t\/\/ generate attributes\n\t\tvar s = this.strokeStyle;\n\t\tvar rn = this.rawNode;\n\t\tif(s){\n\t\t\trn.setAttribute(\"stroke\", s.color.toCss());\n\t\t\trn.setAttribute(\"stroke-opacity\", s.color.a);\n\t\t\trn.setAttribute(\"stroke-width\",   s.width);\n\t\t\trn.setAttribute(\"stroke-linecap\", s.cap);\n\t\t\tif(typeof(s.join) == \"number\"){\n\t\t\t\trn.setAttribute(\"stroke-linejoin\",   \"miter\");\n\t\t\t\trn.setAttribute(\"stroke-miterlimit\", s.join);\n\t\t\t}else{\n\t\t\t\trn.setAttribute(\"stroke-linejoin\",   s.join);\n\t\t\t}\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setFill":{"_":{"meta":{"summary":"","parameters":{"fill":{"type":""}},"src":"\t\tif(!fill){\n\t\t\t\/\/ don't fill\n\t\t\tthis.fillStyle = null;\n\t\t\tthis.rawNode.setAttribute(\"fill\", \"none\");\n\t\t\tthis.rawNode.setAttribute(\"fill-opacity\", 0);\n\t\t\treturn this;\n\t\t}\n\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\n\t\t\t\/\/ gradient\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\tvar f = dojo.gfx.makeParameters(dojo.gfx.defaultLinearGradient, fill);\n\t\t\t\t\tvar gradient = this._setGradient(f, \"linearGradient\");\n\t\t\t\t\tdojo.lang.forEach([\"x1\", \"y1\", \"x2\", \"y2\"], function(x){\n\t\t\t\t\t\tgradient.setAttribute(x, f[x].toFixed(8));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\tvar f = dojo.gfx.makeParameters(dojo.gfx.defaultRadialGradient, fill);\n\t\t\t\t\tvar gradient = this._setGradient(f, \"radialGradient\");\n\t\t\t\t\tdojo.lang.forEach([\"cx\", \"cy\", \"r\"], function(x){\n\t\t\t\t\t\tgradient.setAttribute(x, f[x].toFixed(8));\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\t\/\/ color object\n\t\tvar f = dojo.gfx.normalizeColor(fill);\n\t\tthis.fillStyle = f;\n\t\tthis.rawNode.setAttribute(\"fill\", f.toCss());\n\t\tthis.rawNode.setAttribute(\"fill-opacity\", f.a);\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape._setGradient":{"_":{"meta":{"summary":"","parameters":{"f":{"type":"Object"},"nodeType":{"type":"String"}},"src":"\t\tvar def_elems = this.rawNode.parentNode.getElementsByTagName(\"defs\");\n\t\tif(def_elems.length == 0){ return this; }\n\t\tthis.fillStyle = f;\n\t\tvar defs = def_elems[0];\n\t\tvar gradient = this.rawNode.getAttribute(\"fill\");\n\t\tif(gradient && gradient.match(\/^url\\(#.+\\)$\/)){\n\t\t\tgradient = dojo.byId(gradient.slice(5, -1));\n\t\t\tif(gradient.tagName.toLowerCase() != nodeType.toLowerCase()){\n\t\t\t\tvar id = gradient.id;\n\t\t\t\tgradient.parentNode.removeChild(gradient);\n\t\t\t\tgradient = document.createElementNS(dojo.svg.xmlns.svg, nodeType);\n\t\t\t\tgradient.setAttribute(\"id\", id);\n\t\t\t\tdefs.appendChild(gradient);\n\t\t\t}else{\n\t\t\t\twhile(gradient.childNodes.length){\n\t\t\t\t\tgradient.removeChild(gradient.lastChild);\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tgradient = document.createElementNS(dojo.svg.xmlns.svg, nodeType);\n\t\t\tgradient.setAttribute(\"id\", dojo.gfx.guid());\n\t\t\tdefs.appendChild(gradient);\n\t\t}\n\t\tgradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n\t\tfor(var i = 0; i < f.colors.length; ++i){\n\t\t\tf.colors[i].color = dojo.gfx.normalizeColor(f.colors[i].color);\n\t\t\tvar t = document.createElementNS(dojo.svg.xmlns.svg, \"stop\");\n\t\t\tt.setAttribute(\"offset\",     f.colors[i].offset.toFixed(8));\n\t\t\tt.setAttribute(\"stop-color\", f.colors[i].color.toCss());\n\t\t\tgradient.appendChild(t);\n\t\t}\n\t\tthis.rawNode.setAttribute(\"fill\", \"url(#\" + gradient.getAttribute(\"id\") +\")\");\n\t\tthis.rawNode.removeAttribute(\"fill-opacity\");\n\t\treturn gradient;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape._applyTransform":{"_":{"meta":{"summary":"","src":"\t\tvar matrix = this._getRealMatrix();\n\t\tif(matrix){\n\t\t\tvar tm = this.matrix;\n\t\t\tthis.rawNode.setAttribute(\"transform\", \"matrix(\" +\n\t\t\t\ttm.xx.toFixed(8) + \",\" + tm.yx.toFixed(8) + \",\" +\n\t\t\t\ttm.xy.toFixed(8) + \",\" + tm.yy.toFixed(8) + \",\" +\n\t\t\t\ttm.dx.toFixed(8) + \",\" + tm.dy.toFixed(8) + \")\");\n\t\t}else{\n\t\t\tthis.rawNode.removeAttribute(\"transform\");\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setRawNode":{"_":{"meta":{"summary":" assigns and clears the underlying node that will represent this shape. Once set, transforms, gradients, etc, can be applied. no fill & stroke by default","parameters":{"rawNode":{"type":""}},"src":"\t\t\tsetAttribute(\"fill\", \"none\");\n\t\t\tsetAttribute(\"fill-opacity\", 0);\n\t\t\tsetAttribute(\"stroke\", \"none\");\n\t\t\tsetAttribute(\"stroke-opacity\", 0);\n\t\t\tsetAttribute(\"stroke-width\", 1);\n\t\t\tsetAttribute(\"stroke-linecap\", \"butt\");\n\t\t\tsetAttribute(\"stroke-linejoin\", \"miter\");\n\t\t\tsetAttribute(\"stroke-miterlimit\", 4);\n\t\t}\n\t\tthis.rawNode = rawNode;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.moveToFront":{"_":{"meta":{"summary":"","src":"\t\tthis.rawNode.parentNode.appendChild(this.rawNode);\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.moveToBack":{"_":{"meta":{"summary":"","src":"\t\tthis.rawNode.parentNode.insertBefore(this.rawNode, this.rawNode.parentNode.firstChild);\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setShape":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tthis.shape = dojo.gfx.makeParameters(this.shape, newShape);\n\t\tfor(var i in this.shape){\n\t\t\tif(i != \"type\"){ this.rawNode.setAttribute(i, this.shape[i]); }\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.attachFill":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar fillStyle = null;\n\t\tif(rawNode){\n\t\t\tvar fill = rawNode.getAttribute(\"fill\");\n\t\t\tif(fill == \"none\"){ return; }\n\t\t\tif(fill && fill.match(\/^url\\(#.+\\)$\/)){\n\t\t\t\tvar gradient = dojo.byId(fill.slice(5, -1));\n\t\t\t\tswitch(gradient.tagName.toLowerCase()){\n\t\t\t\t\tcase \"lineargradient\":\n\t\t\t\t\t\tfillStyle = this._getGradient(dojo.gfx.defaultLinearGradient, gradient);\n\t\t\t\t\t\tdojo.lang.forEach([\"x1\", \"y1\", \"x2\", \"y2\"], function(x){\n\t\t\t\t\t\t\tfillStyle[x] = gradient.getAttribute(x);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"radialgradient\":\n\t\t\t\t\t\tfillStyle = this._getGradient(dojo.gfx.defaultRadialGradient, gradient);\n\t\t\t\t\t\tdojo.lang.forEach([\"cx\", \"cy\", \"r\"], function(x){\n\t\t\t\t\t\t\tfillStyle[x] = gradient.getAttribute(x);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfillStyle.cx = gradient.getAttribute(\"cx\");\n\t\t\t\t\t\tfillStyle.cy = gradient.getAttribute(\"cy\");\n\t\t\t\t\t\tfillStyle.r  = gradient.getAttribute(\"r\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tfillStyle = new dojo.gfx.color.Color(fill);\n\t\t\t\tvar opacity = rawNode.getAttribute(\"fill-opacity\");\n\t\t\t\tif(opacity != null) fillStyle.a = opacity;\n\t\t\t}\n\t\t}\n\t\treturn fillStyle;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape._getGradient":{"_":{"meta":{"summary":"","parameters":{"defaultGradient":{"type":""},"gradient":{"type":""}},"src":"\t\tvar fillStyle = dojo.lang.shallowCopy(defaultGradient, true);\n\t\tfillStyle.colors = [];\n\t\tfor(var i = 0; i < gradient.childNodes.length; ++i){\n\t\t\tfillStyle.colors.push({\n\t\t\t\toffset: gradient.childNodes[i].getAttribute(\"offset\"),\n\t\t\t\tcolor:  new dojo.gfx.color.Color(gradient.childNodes[i].getAttribute(\"stop-color\"))\n\t\t\t});\n\t\t}\n\t\treturn fillStyle;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.color":{"_":{"meta":{"summary":"","parameters":{"defaultGradient":{"type":""},"gradient":{"type":""}},"src":"\t\tvar fillStyle = dojo.lang.shallowCopy(defaultGradient, true);\n\t\tfillStyle.colors = [];\n\t\tfor(var i = 0; i < gradient.childNodes.length; ++i){\n\t\t\tfillStyle.colors.push({\n\t\t\t\toffset: gradient.childNodes[i].getAttribute(\"offset\"),\n\t\t\t\tcolor:  new dojo.gfx.color.Color(gradient.childNodes[i].getAttribute(\"stop-color\"))\n\t\t\t});\n\t\t}\n\t\treturn fillStyle;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.attachStroke":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tif(!rawNode){ return; }\n\t\tvar stroke = rawNode.getAttribute(\"stroke\");\n        if(stroke == null || stroke == \"none\") return null;\n\t\tvar strokeStyle = dojo.lang.shallowCopy(dojo.gfx.defaultStroke, true);\n\t\tvar color = new dojo.gfx.color.Color(stroke);\n\t\tif(color){\n\t\t\tstrokeStyle.color = color;\n\t\t\tstrokeStyle.color.a = rawNode.getAttribute(\"stroke-opacity\");\n\t\t\tstrokeStyle.width = rawNode.getAttribute(\"stroke-width\");\n\t\t\tstrokeStyle.cap = rawNode.getAttribute(\"stroke-linecap\");\n\t\t\tstrokeStyle.join = rawNode.getAttribute(\"stroke-linejoin\");\n\t\t\tif(strokeStyle.join == \"miter\"){\n\t\t\t\tstrokeStyle.join = rawNode.getAttribute(\"stroke-miterlimit\");\n\t\t\t}\n\t\t}\n\t\treturn strokeStyle;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.attachTransform":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar matrix = null;\n\t\tif(rawNode){\n\t\t\tmatrix = rawNode.getAttribute(\"transform\");\n\t\t\tif(matrix.match(\/^matrix\\(.+\\)$\/)){\n\t\t\t\tvar t = matrix.slice(7, -1).split(\",\");\n\t\t\t\tmatrix = dojo.gfx.matrix.normalize({\n\t\t\t\t\txx: parseFloat(t[0]), xy: parseFloat(t[2]), \n\t\t\t\t\tyx: parseFloat(t[1]), yy: parseFloat(t[3]), \n\t\t\t\t\tdx: parseFloat(t[4]), dy: parseFloat(t[5])\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn matrix;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.xx":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar matrix = null;\n\t\tif(rawNode){\n\t\t\tmatrix = rawNode.getAttribute(\"transform\");\n\t\t\tif(matrix.match(\/^matrix\\(.+\\)$\/)){\n\t\t\t\tvar t = matrix.slice(7, -1).split(\",\");\n\t\t\t\tmatrix = dojo.gfx.matrix.normalize({\n\t\t\t\t\txx: parseFloat(t[0]), xy: parseFloat(t[2]), \n\t\t\t\t\tyx: parseFloat(t[1]), yy: parseFloat(t[3]), \n\t\t\t\t\tdx: parseFloat(t[4]), dy: parseFloat(t[5])\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn matrix;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.yx":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar matrix = null;\n\t\tif(rawNode){\n\t\t\tmatrix = rawNode.getAttribute(\"transform\");\n\t\t\tif(matrix.match(\/^matrix\\(.+\\)$\/)){\n\t\t\t\tvar t = matrix.slice(7, -1).split(\",\");\n\t\t\t\tmatrix = dojo.gfx.matrix.normalize({\n\t\t\t\t\txx: parseFloat(t[0]), xy: parseFloat(t[2]), \n\t\t\t\t\tyx: parseFloat(t[1]), yy: parseFloat(t[3]), \n\t\t\t\t\tdx: parseFloat(t[4]), dy: parseFloat(t[5])\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn matrix;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.dx":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar matrix = null;\n\t\tif(rawNode){\n\t\t\tmatrix = rawNode.getAttribute(\"transform\");\n\t\t\tif(matrix.match(\/^matrix\\(.+\\)$\/)){\n\t\t\t\tvar t = matrix.slice(7, -1).split(\",\");\n\t\t\t\tmatrix = dojo.gfx.matrix.normalize({\n\t\t\t\t\txx: parseFloat(t[0]), xy: parseFloat(t[2]), \n\t\t\t\t\tyx: parseFloat(t[1]), yy: parseFloat(t[3]), \n\t\t\t\t\tdx: parseFloat(t[4]), dy: parseFloat(t[5])\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn matrix;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.attach":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tif(rawNode) {\n\t\t\tthis.rawNode = rawNode;\n\t\t\tthis.fillStyle = this.attachFill(rawNode);\n\t\t\tthis.strokeStyle = this.attachStroke(rawNode);\n\t\t\tthis.matrix = this.attachTransform(rawNode);\n\t\t\t\/\/ shape-specific attributes.\n\t\t\tfor(var i in this.shape) {\n\t\t\t\tthis.shape[i] = rawNode.getAttribute(i);\n\t\t\t}\n\t\t}","this":"dojo.gfx.Shape"}}},"dojo.gfx.Surface.setDimensions":{"_":{"meta":{"summary":"sets the width and height of the rawNode","parameters":{"width":{"type":"String"},"height":{"type":"String"}},"src":"\t\tthis.rawNode.setAttribute(\"width\",  width);\n\t\tthis.rawNode.setAttribute(\"height\", height);\n\t\treturn this; \/\/ dojo.gfx.Surface","returns":"dojo.gfx.Surface","this":"dojo.gfx.Surface"}}},"dojo.gfx.Surface.getDimensions":{"_":{"meta":{"summary":"returns an object with properties \"width\" and \"height\" Object","src":"","returns":"Object","this":"dojo.gfx.Surface"}}},"dojo.gfx.Surface":{"_":{"meta":{"object_inherits":["dojo.gfx._creators"]}}},"dojo.gfx.svg.Defines.setRawNode":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tthis.rawNode = rawNode;","this":"dojo.gfx.svg.Defines"}}}}}},"dojo.gfx.vml":{"meta":{"requires":{"common":["dojo.dom","dojo.math","dojo.lang.declare","dojo.lang.extras","dojo.string.*","dojo.gfx.color","dojo.gfx.common","dojo.experimental"]},"functions":{"dojo.gfx.Group":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.VirtualGroup"],"this_inherits":["dojo.gfx.VirtualGroup"],"parameters":{"rawNode":{"type":""}},"object_inherits":["zIndex","dojo.gfx._creators"]}}},"dojo.gfx.Group.attach":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tif(rawNode){\n\t\t\tthis.rawNode = rawNode;\n\t\t\tthis.shape = null;\n\t\t\tthis.fillStyle = null;\n\t\t\tthis.strokeStyle = null;\n\t\t\tthis.matrix = null;\n\t\t}","this":"dojo.gfx.VirtualGroup"}}},"dojo.gfx.VirtualGroup":{"_":{"meta":{"this_variables":["rawNode","shape","fillStyle","strokeStyle","matrix","rawNode"]}}},"dojo.gfx.Group.add":{"_":{"meta":{"summary":"","parameters":{"shape":{"type":""}},"src":"\t\tif(this != shape.getParent()){\n\t\t\tthis.rawNode.appendChild(shape.rawNode);\n\t\t\tthis.inherited(\"add\", [shape]);\n\t\t}\n\t\treturn this;","this":"dojo.gfx.VirtualGroup"}}},"dojo.gfx.Group.remove":{"_":{"meta":{"summary":"","parameters":{"shape":{"type":""},"silently":{"type":""}},"src":"\t\tif(this == shape.getParent()){\n\t\t\tif(this.rawNode == shape.rawNode.parentNode){\n\t\t\t\tthis.rawNode.removeChild(shape.rawNode);\n\t\t\t}\n\t\t\tthis.inherited(\"remove\", [shape, silently]);\n\t\t}\n\t\treturn this;","this":"dojo.gfx.VirtualGroup"}}},"dojo.gfx.Rect":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Rect.setShape":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tvar ts = this.shape = dojo.gfx.makeParameters(this.shape, newShape);\n\t\twith(this.rawNode.style){\n\t\t\tleft   = ts.x.toFixed();\n\t\t\ttop    = ts.y.toFixed();\n\t\t\twidth  = (typeof(ts.width) == \"string\" && ts.width.indexOf(\"%\") >= 0 ) ? ts.width : ts.width.toFixed();\n\t\t\theight = (typeof(ts.width) == \"string\" && ts.height.indexOf(\"%\") >= 0 ) ? ts.height : ts.height.toFixed();\n\t\t}\n\t\treturn this.setTransform(this.matrix);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape":{"_":{"meta":{"this_variables":["shape","shape","shape","rawNode.style.left","rawNode.style.top","rawNode.style.width","rawNode.style.height","shape","rawNode.from","rawNode.to","shape","rawNode.points.value","shape","rawNode.points.value","shape","rawNode.path.v","shape","rawNode.path.v","shape.","lastAction","lastPos.x","lastPos.y","lastControl.x","lastControl.y","strokeStyle","rawNode.stroked","strokeStyle.color","rawNode.strokecolor","rawNode.strokeweight","rawNode.stroke.opacity","rawNode.stroke.endcap","rawNode.stroke.joinstyle","rawNode.stroke.miterlimit","fillStyle","rawNode.filled","rawNode.fill.colors.value","rawNode.fill.method","rawNode.fill.type","rawNode.fill.angle","rawNode.fill.on","rawNode.fill.focusposition","rawNode.fill.focussize","rawNode.fill.opacity","rawNode.fillcolor","rawNode","rawNode","shape","fillStyle","strokeStyle","matrix"],"protovariables":{"_capMap":"","_capMapReversed":""},"object_inherits":["zIndex"]}}},"dojo.gfx.Rect.setRawNode":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\trawNode.arcsize = 0;\n\t\treturn this.inherited(\"setRawNode\", [rawNode] );","this":"dojo.gfx.Shape"}}},"dojo.gfx.Rect.attachShape":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultRect, {\n\t\t\tx: parseInt(rawNode.style.left),\n\t\t\ty: parseInt(rawNode.style.top),\n\t\t\twidth:  parseInt(rawNode.style.width),\n\t\t\theight: parseInt(rawNode.style.height)\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Rect.x":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultRect, {\n\t\t\tx: parseInt(rawNode.style.left),\n\t\t\ty: parseInt(rawNode.style.top),\n\t\t\twidth:  parseInt(rawNode.style.width),\n\t\t\theight: parseInt(rawNode.style.height)\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Rect.y":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultRect, {\n\t\t\tx: parseInt(rawNode.style.left),\n\t\t\ty: parseInt(rawNode.style.top),\n\t\t\twidth:  parseInt(rawNode.style.width),\n\t\t\theight: parseInt(rawNode.style.height)\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Rect.width":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultRect, {\n\t\t\tx: parseInt(rawNode.style.left),\n\t\t\ty: parseInt(rawNode.style.top),\n\t\t\twidth:  parseInt(rawNode.style.width),\n\t\t\theight: parseInt(rawNode.style.height)\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Rect.height":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultRect, {\n\t\t\tx: parseInt(rawNode.style.left),\n\t\t\ty: parseInt(rawNode.style.top),\n\t\t\twidth:  parseInt(rawNode.style.width),\n\t\t\theight: parseInt(rawNode.style.height)\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Ellipse":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Ellipse.setShape":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tvar ts = this.shape = dojo.gfx.makeParameters(this.shape, newShape);\n\t\twith(this.rawNode.style){\n\t\t\tleft   = (ts.cx - ts.rx).toFixed();\n\t\t\ttop    = (ts.cy - ts.ry).toFixed();\n\t\t\twidth  = (ts.rx * 2).toFixed();\n\t\t\theight = (ts.ry * 2).toFixed();\n\t\t}\n\t\treturn this.setTransform(this.matrix);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Ellipse.attachShape":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar rx = parseInt(rawNode.style.width ) \/ 2;\n\t\tvar ry = parseInt(rawNode.style.height) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultEllipse, {\n\t\t\tcx: parseInt(rawNode.style.left) + rx,\n\t\t\tcy: parseInt(rawNode.style.top ) + ry,\n\t\t\trx: rx,\n\t\t\try: ry\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Ellipse.cx":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar rx = parseInt(rawNode.style.width ) \/ 2;\n\t\tvar ry = parseInt(rawNode.style.height) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultEllipse, {\n\t\t\tcx: parseInt(rawNode.style.left) + rx,\n\t\t\tcy: parseInt(rawNode.style.top ) + ry,\n\t\t\trx: rx,\n\t\t\try: ry\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Ellipse.cy":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar rx = parseInt(rawNode.style.width ) \/ 2;\n\t\tvar ry = parseInt(rawNode.style.height) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultEllipse, {\n\t\t\tcx: parseInt(rawNode.style.left) + rx,\n\t\t\tcy: parseInt(rawNode.style.top ) + ry,\n\t\t\trx: rx,\n\t\t\try: ry\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Ellipse.rx":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar rx = parseInt(rawNode.style.width ) \/ 2;\n\t\tvar ry = parseInt(rawNode.style.height) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultEllipse, {\n\t\t\tcx: parseInt(rawNode.style.left) + rx,\n\t\t\tcy: parseInt(rawNode.style.top ) + ry,\n\t\t\trx: rx,\n\t\t\try: ry\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Ellipse.ry":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar rx = parseInt(rawNode.style.width ) \/ 2;\n\t\tvar ry = parseInt(rawNode.style.height) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultEllipse, {\n\t\t\tcx: parseInt(rawNode.style.left) + rx,\n\t\t\tcy: parseInt(rawNode.style.top ) + ry,\n\t\t\trx: rx,\n\t\t\try: ry\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Circle":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Circle.setShape":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tthis.shape = dojo.gfx.makeParameters(this.shape, newShape);\n\t\tthis.rawNode.style.left   = (this.shape.cx - this.shape.r).toFixed();\n\t\tthis.rawNode.style.top    = (this.shape.cy - this.shape.r).toFixed();\n\t\tthis.rawNode.style.width  = (this.shape.r * 2).toFixed();\n\t\tthis.rawNode.style.height = (this.shape.r * 2).toFixed();\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Circle.attachShape":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar r = parseInt(rawNode.style.width) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultCircle, {\n\t\t\tcx: parseInt(rawNode.style.left) + r,\n\t\t\tcy: parseInt(rawNode.style.top)  + r,\n\t\t\tr:  r\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Circle.cx":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar r = parseInt(rawNode.style.width) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultCircle, {\n\t\t\tcx: parseInt(rawNode.style.left) + r,\n\t\t\tcy: parseInt(rawNode.style.top)  + r,\n\t\t\tr:  r\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Circle.cy":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar r = parseInt(rawNode.style.width) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultCircle, {\n\t\t\tcx: parseInt(rawNode.style.left) + r,\n\t\t\tcy: parseInt(rawNode.style.top)  + r,\n\t\t\tr:  r\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Circle.r":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar r = parseInt(rawNode.style.width) \/ 2;\n\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultCircle, {\n\t\t\tcx: parseInt(rawNode.style.left) + r,\n\t\t\tcy: parseInt(rawNode.style.top)  + r,\n\t\t\tr:  r\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Line":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Line.setShape":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tthis.shape = dojo.gfx.makeParameters(this.shape, newShape);\n\t\tthis.rawNode.from = this.shape.x1.toFixed() + \",\" + this.shape.y1.toFixed();\n\t\tthis.rawNode.to   = this.shape.x2.toFixed() + \",\" + this.shape.y2.toFixed();\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Line.attachShape":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultLine, {\n\t\t\tx1: this.rawNode.from.x,\n\t\t\ty1: this.rawNode.from.y,\n\t\t\tx2: this.rawNode.to.x,\n\t\t\ty2: this.rawNode.to.y\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Line.x1":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultLine, {\n\t\t\tx1: this.rawNode.from.x,\n\t\t\ty1: this.rawNode.from.y,\n\t\t\tx2: this.rawNode.to.x,\n\t\t\ty2: this.rawNode.to.y\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Line.y1":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultLine, {\n\t\t\tx1: this.rawNode.from.x,\n\t\t\ty1: this.rawNode.from.y,\n\t\t\tx2: this.rawNode.to.x,\n\t\t\ty2: this.rawNode.to.y\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Line.x2":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultLine, {\n\t\t\tx1: this.rawNode.from.x,\n\t\t\ty1: this.rawNode.from.y,\n\t\t\tx2: this.rawNode.to.x,\n\t\t\ty2: this.rawNode.to.y\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Line.y2":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\treturn dojo.gfx.makeParameters(dojo.gfx.defaultLine, {\n\t\t\tx1: this.rawNode.from.x,\n\t\t\ty1: this.rawNode.from.y,\n\t\t\tx2: this.rawNode.to.x,\n\t\t\ty2: this.rawNode.to.y\n\t\t});","this":"dojo.gfx.Shape"}}},"dojo.gfx.Polyline":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Polyline.setShape":{"_":{"meta":{"summary":"","parameters":{"points":{"type":""},"closed":{"type":""}},"src":"\t\tif(points && points instanceof Array){\n\t\t\tthis.shape = dojo.gfx.makeParameters(this.shape, { points: points });\n\t\t\tif(closed && this.shape.points.length) this.shape.points.push(this.shape.points[0]);\n\t\t}else{\n\t\t\tthis.shape = dojo.gfx.makeParameters(this.shape, points);\n\t\t}\n\t\tattr = \"\";\n\t\tfor(var i = 0; i< this.shape.points.length; ++i){\n\t\t\tattr += this.shape.points[i].x.toFixed(8) + \" \" + this.shape.points[i].y.toFixed(8) + \" \";\n\t\t}\n\t\tthis.rawNode.points.value = attr;\n\t\treturn this.setTransform(this.matrix);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Polyline.points":{"_":{"meta":{"summary":"","parameters":{"points":{"type":""},"closed":{"type":""}},"src":"\t\tif(points && points instanceof Array){\n\t\t\tthis.shape = dojo.gfx.makeParameters(this.shape, { points: points });\n\t\t\tif(closed && this.shape.points.length) this.shape.points.push(this.shape.points[0]);\n\t\t}else{\n\t\t\tthis.shape = dojo.gfx.makeParameters(this.shape, points);\n\t\t}\n\t\tattr = \"\";\n\t\tfor(var i = 0; i< this.shape.points.length; ++i){\n\t\t\tattr += this.shape.points[i].x.toFixed(8) + \" \" + this.shape.points[i].y.toFixed(8) + \" \";\n\t\t}\n\t\tthis.rawNode.points.value = attr;\n\t\treturn this.setTransform(this.matrix);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Polyline.attachShape":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar shape = dojo.lang.shallowCopy(dojo.gfx.defaultPolyline, true);\n\t\tvar points = rawNode.points.value.match(\/\\d+\/g);\n\t\tif(points){\n\t\t\tfor(var i = 0; i < points.length; i += 2){\n\t\t\t\tshape.points.push({ x: parseFloat(points[i]), y: parseFloat(points[i + 1]) });\n\t\t\t}\n\t\t}\n\t\treturn shape;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Polyline.x":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar shape = dojo.lang.shallowCopy(dojo.gfx.defaultPolyline, true);\n\t\tvar points = rawNode.points.value.match(\/\\d+\/g);\n\t\tif(points){\n\t\t\tfor(var i = 0; i < points.length; i += 2){\n\t\t\t\tshape.points.push({ x: parseFloat(points[i]), y: parseFloat(points[i + 1]) });\n\t\t\t}\n\t\t}\n\t\treturn shape;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path":{"_":{"meta":{"summary":"","inherits":["dojo.gfx.Shape"],"this_inherits":["dojo.gfx.Shape"],"protovariables":{"ap":"","Map":""},"parameters":{"rawNode":{"type":""}}}}},"dojo.gfx.Path.x":{"_":{"meta":{"summary":"","parameters":{"top":{"type":""},"right":{"type":""},"bottom":{"type":""},"left":{"type":""},"isCCW":{"type":""},"x":{"type":""},"y":{"type":""}},"src":"\t\tdojo.debug( \"lastPos in arcTo = \" + lastPos.x + \",\" + lastPos.y );\n\t\tdojo.debug( \"this.lastPos in arcTo = \" + this.lastPos.x + \",\" + this.lastPos.y );\n\t\tdojo.debug( \"arcTo coordination = \" + this.shape.coordination );\n\t\tif(!this.shape.absolute){\n\t\t\t\/\/ translate to absolute value first\n\t\t\ttop += this.lastPos.y;\n\t\t\tright += this.lastPos.x;\n\t\t\tbottom += this.lastPos.y;\n\t\t\tleft += this.lastPos.x;\n\t\t\tx += this.lastPos.x;\n\t\t\ty += this.lastPos.y;\n\t\t} \n\t\tthis._update(x, y);\n\t\tdojo.debug( \"lastPos in arcTo = \" + lastPos.x + \",\" + lastPos.y );\n\t\tdojo.debug( \"this.lastPos in arcTo = \" + this.lastPos.x + \",\" + this.lastPos.y );\n\n\t\tif(isCCW){\n\t\t\treturn this._drawTo( \"ar\", \"ar\", [left, top, right, bottom, lastPos.x, lastPos.y, x, y] );\n\t\t} else {\n\t\t\treturn this._drawTo( \"wt\", \"wt\", [left, top, right, bottom, lastPos.x, lastPos.y, x, y] );\n\t\t}","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.setShape":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tthis.shape = dojo.gfx.makeParameters(this.shape, typeof(newShape) == \"string\" ? { path: newShape } : newShape);\n\t\tthis.setAbsoluteMode(this.shape.absolute);\n\t\tvar path = this.shape.path;\n\t\tfor(var i in this._pathSvgToVmlMap){\n\t\t\tpath = path.replace( new RegExp(i, 'g'),  this._pathSvgToVmlMap[i] );\n\t\t}\n\t\tthis.rawNode.path.v = path + \" e\";\n\t\treturn this.setTransform(this.matrix);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.path":{"_":{"meta":{"summary":"","parameters":{"newShape":{"type":""}},"src":"\t\tthis.shape = dojo.gfx.makeParameters(this.shape, typeof(newShape) == \"string\" ? { path: newShape } : newShape);\n\t\tthis.setAbsoluteMode(this.shape.absolute);\n\t\tvar path = this.shape.path;\n\t\tfor(var i in this._pathSvgToVmlMap){\n\t\t\tpath = path.replace( new RegExp(i, 'g'),  this._pathSvgToVmlMap[i] );\n\t\t}\n\t\tthis.rawNode.path.v = path + \" e\";\n\t\treturn this.setTransform(this.matrix);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.setAbsoluteMode":{"_":{"meta":{"summary":"","parameters":{"mode":{"type":""}},"src":"\t\tthis.shape.absolute = typeof(mode) == \"string\" ? (mode == \"absolute\") : mode;\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.getAbsoluteMode":{"_":{"meta":{"summary":"","src":"\t\treturn this.shape.absolute;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path._drawTo":{"_":{"meta":{"summary":"","parameters":{"action":{"type":""},"raction":{"type":""},"args":{"type":""}},"src":"\t\tthis.shape.path += (this.shape.absolute ? action : raction);\n\t\tfor(var i = 0; i < args.length; ++i){\n\t\t\tthis.shape.path += \" \" + args[i].toFixed();\n\t\t}\n\t\tthis.lastAction = action; \n\t\tthis.setShape();\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path._update":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""},"x2":{"type":""},"y2":{"type":""}},"src":"\t\tif(this.shape.absolute){\n\t\t\tthis.lastPos.x = x;\n\t\t\tthis.lastPos.y = y;\n\t\t\tif(typeof(y2) != \"undefined\"){\n\t\t\t\tthis.lastControl.x = x2;\n\t\t\t\tthis.lastControl.y = y2;\n\t\t\t} else {\n\t\t\t\tthis.lastControl.x = this.lastPos.x;\n\t\t\t\tthis.lastControl.y = this.lastPos.y;\n\t\t\t}\n\t\t} else {\n\t\t\tif(typeof(y2) != \"undefined\"){\n\t\t\t\tthis.lastControl.x = this.lastPos.x + x2;\n\t\t\t\tthis.lastControl.y = this.lastPos.y + y2;\n\t\t\t} else {\n\t\t\t\tthis.lastControl.x = this.lastPos.x + x;\n\t\t\t\tthis.lastControl.y = this.lastPos.y + y;\n\t\t\t}\n\t\t\tthis.lastPos.x += x;\n\t\t\tthis.lastPos.y += y;\n\t\t}","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path._mirror":{"_":{"meta":{"summary":"","parameters":{"action":{"type":""}},"src":"\t\tif(action != this.lastAction){\n\t\t\treturn { x: lastPos.x, y: lastPos.y };\n\t\t}\n\t\tx1 = 2* this.lastPos.x - this.lastControl.x;\n\t\ty1 = 2* this.lastPos.y - this.lastControl.y;\n\t\tif(!this.shape.absolute){\n\t\t\tx1 -= this.lastPos.x;\n\t\t\ty1 -= this.lastPos.y;\n\t\t}\n\t\treturn { x: x1, y: y1 };","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.closePath":{"_":{"meta":{"summary":"","src":"\t\treturn this._drawTo(\"z\", \"z\", []);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.moveTo":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""}},"src":"\t\tthis._update(x, y);\n\t\treturn this._drawTo(\"M\", \"m\", [x,y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.lineTo":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""}},"src":"\t\tthis._update(x, y);\n\t\treturn this._drawTo(\"L\", \"l\", [x,y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.hLineTo":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""}},"src":"\t\ty = this.shape.absolute ? this.lastPos.y : 0;\n\t\treturn this.lineTo(x, y);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.vLineTo":{"_":{"meta":{"summary":"","parameters":{"y":{"type":""}},"src":"\t\tx = this.shape.absolute ? this.lastPos.x : 0;\n\t\treturn this.lineTo(x, y);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.curveTo":{"_":{"meta":{"summary":"","parameters":{"x1":{"type":""},"y1":{"type":""},"x2":{"type":""},"y2":{"type":""},"x":{"type":""},"y":{"type":""}},"src":"\t\tthis._update(x, y, x2, y2);\n\t\treturn this._drawTo(\"C\", \"c\", [x1, y1, x2, y2, x, y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.smoothCurveTo":{"_":{"meta":{"summary":"","parameters":{"x2":{"type":""},"y2":{"type":""},"x":{"type":""},"y":{"type":""}},"src":"\t\tpos = this._mirror(\"C\");\n\t\tx1 = pos.x;\n\t\ty1 = pos.y;\n\t\treturn this.curveTo(x1, y1, x2, y2, x, y);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.qbCurveTo":{"_":{"meta":{"summary":"","parameters":{"x1":{"type":""},"y1":{"type":""},"x":{"type":""},"y":{"type":""}},"src":"\t\tthis._update(x, y, x1, y1);\n\t\treturn this._drawTo(\"qb\", \"qb\", [x1, y1, x, y]);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.smoothQBCurveTo":{"_":{"meta":{"summary":"","parameters":{"x":{"type":""},"y":{"type":""}},"src":"\t\tpos = this.mirror(\"qb\");\n\t\tx1 = pos.x;\n\t\ty1 = pos.y;\n\t\treturn this.qbCurveTo(x1, y1, x, y);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.arcTo2":{"_":{"meta":{"summary":"","parameters":{"endAngle":{"type":""},"cx":{"type":""},"cy":{"type":""},"rx":{"type":""},"ry":{"type":""},"xRotate":{"type":""},"isCCW":{"type":""}},"src":"\t\tvar x = this.lastPos.x - cx;\n\t\tvar y = this.lastPos.y - cy;\n\t\tvar startAngle = Math.atan2(-y, x) - xRotate;\n\n\t\t\/\/TODO: add relative support!\n\n\t\t\/\/ TODO: refactor me here!\n\t\tvar theta = isCCW ? endAngle - startAngle : startAngle - endAngle;\n\t\tif(theta < 0){ theta += 2 * Math.PI; }\n\t\tdojo.debug(\"theta =\" + theta);\n\n\t\tvar arcToAngle = function(startAngle, angle, isCCW){\n\t\t\tvar endAngle = isCCW ? startAngle + angle : startAngle - angle;\n\t\t\t\/\/ start, control point 1, control point 2, end point\n\t\t\tvar P1, Q1, P2, Q2;\n\t\t\t\/\/ theta 0, theta 1 stand for P1, P2\n\t\t\tvar t1, t2;\n\t\t\tvar temp = null;\n\t\t\tdojo.debug(\"startAngle=\" + startAngle);\n\t\t\tt1 = Math.atan2(Math.sin(startAngle) \/ ry, Math.cos(startAngle) \/ rx );\n\t\t\tt2 = Math.atan2(Math.sin(endAngle) \/ ry, Math.cos(endAngle) \/ rx );\n\t\t\tdojo.debug(\"t1=\"+t1+\" t2=\"+t2);\n\n\t\t\tvar E = function(theta){\n\t\t\t\treturn dojo.gfx.matrix.multiplyPoint(\n\t\t\t\t\t[ \n\t\t\t\t\t\tdojo.gfx.matrix.translate(cx, cy),\n\t\t\t\t\t\tdojo.gfx.matrix.rotate(xRotate),\n\t\t\t\t\t\tdojo.gfx.matrix.scale(rx, ry)\n\t\t\t\t\t],\n\t\t\t\t\tMath.cos(theta), \n\t\t\t\t\t-Math.sin(theta)\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tvar E_prime = function(theta){\n\t\t\t\treturn dojo.gfx.matrix.multiplyPoint(\n\t\t\t\t\t[\n\t\t\t\t\t\tdojo.gfx.matrix.rotate(xRotate),\n\t\t\t\t\t\tdojo.gfx.matrix.scale(rx, ry)\n\t\t\t\t\t], \n\t\t\t\t\t-Math.sin(theta),\n\t\t\t\t\t-Math.cos(theta)\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tvar alpha = Math.sin(t2 - t1)* (Math.sqrt(4 + 3 * Math.pow(Math.tan((t2 - t1) \/ 2), 2)) - 1) \/ 3;\n\t\t\tdojo.debug(\"alpha=\" + alpha);\n\n\t\t\tP1 = E(t1);\n\t\t\tQ1 = dojo.gfx.matrix.multiplyPoint(dojo.gfx.matrix.scale(alpha), E_prime(t1));\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tQ1 = {x: P1.x + Q1.x, y: P1.y + Q1.y};\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tP2 = E(t2);\n\t\t\tQ2 = dojo.gfx.matrix.multiplyPoint(dojo.gfx.matrix.scale(-alpha), E_prime(t2));\n\t\t\tQ2 = {x: P2.x + Q2.x, y: P2.y + Q2.y};\n\n\t\t\tdojo.debug(\"P1=\" + P1.x + \",\" + P1.y);\n\t\t\tdojo.debug(\"Q1=\" + Q1.x + \",\" + Q1.y);\n\t\t\tdojo.debug(\"P2=\" + P2.x + \",\" + P2.y);\n\t\t\tdojo.debug(\"Q2=\" + Q2.x + \",\" + Q2.y);\n\t\t\treturn [P1, Q1, P2, Q2];\n\t\t};\n\n\t\tvar arcQuadricPI= function(startAngle, isCCW){\n\t\t\treturn arcToAngle(startAngle, Math.PI\/4, isCCW); \n\t\t};\n\n\t\tvar angle = startAngle;\n\t\tvar offsetAngle = isCCW ? Math.PI \/ 4 : -Math.PI \/ 4;\n\t\tvar Ps = null;\n\t\tfor(var i = 0; i< Math.floor(theta \/ (Math.PI \/ 4)); i++){\n\t\t\t\/\/ draw the Pi\/4 arc\n\t\t\tPs = arcQuadricPI(angle, isCCW);\n\t\t\t\/\/ curveTo( Q1, Q2, P2 )\n\t\t\tthis.curveTo(Ps[1].x, Ps[1].y, Ps[3].x, Ps[3].y, Ps[2].x, Ps[2].y);\n\t\t\tangle += offsetAngle;\n\t\t}\n\n\t\t\/\/ draw the rest\n\t\toffsetAngle = theta % (Math.PI \/ 4);\n\t\tdojo.debug(\"offsetAngle=\" + offsetAngle);\n\t\tPs = arcToAngle(angle, offsetAngle, isCCW);\n\t\treturn this.curveTo(Ps[1].x, Ps[1].y, Ps[3].x, Ps[3].y, Ps[2].x, Ps[2].y);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Path.arcTo":{"_":{"meta":{"summary":"","parameters":{"top":{"type":""},"right":{"type":""},"bottom":{"type":""},"left":{"type":""},"isCCW":{"type":""},"x":{"type":""},"y":{"type":""}},"src":"\t\tdojo.debug( \"lastPos in arcTo = \" + lastPos.x + \",\" + lastPos.y );\n\t\tdojo.debug( \"this.lastPos in arcTo = \" + this.lastPos.x + \",\" + this.lastPos.y );\n\t\tdojo.debug( \"arcTo coordination = \" + this.shape.coordination );\n\t\tif(!this.shape.absolute){\n\t\t\t\/\/ translate to absolute value first\n\t\t\ttop += this.lastPos.y;\n\t\t\tright += this.lastPos.x;\n\t\t\tbottom += this.lastPos.y;\n\t\t\tleft += this.lastPos.x;\n\t\t\tx += this.lastPos.x;\n\t\t\ty += this.lastPos.y;\n\t\t} \n\t\tthis._update(x, y);\n\t\tdojo.debug( \"lastPos in arcTo = \" + lastPos.x + \",\" + lastPos.y );\n\t\tdojo.debug( \"this.lastPos in arcTo = \" + this.lastPos.x + \",\" + this.lastPos.y );\n\n\t\tif(isCCW){\n\t\t\treturn this._drawTo( \"ar\", \"ar\", [left, top, right, bottom, lastPos.x, lastPos.y, x, y] );\n\t\t} else {\n\t\t\treturn this._drawTo( \"wt\", \"wt\", [left, top, right, bottom, lastPos.x, lastPos.y, x, y] );\n\t\t}","this":"dojo.gfx.Shape"}}},"dojo.gfx.vml._parseFloat":{"_":{"meta":{"summary":"","parameters":{"str":{"type":""}},"src":"\treturn str.match(\/^\\d+f$\/i) ? parseInt(str) \/ 65536 : parseFloat(str);"}}},"dojo.gfx.vml.normalizedLength":{"_":{"meta":{"summary":"","parameters":{"len":{"type":""}},"src":""}}},"dojo.gfx.attachNode":{"_":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":"\tif(!node) return null;\n\tvar s = null;\n\tswitch(node.tagName.toLowerCase()){\n\t\tcase dojo.gfx.Rect.nodeType:\n\t\t\ts = new dojo.gfx.Rect();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Ellipse.nodeType:\n\t\t\ts = new dojo.gfx.Ellipse();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Polyline.nodeType:\n\t\t\ts = new dojo.gfx.Polyline();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Path.nodeType:\n\t\t\ts = new dojo.gfx.Path();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Circle.nodeType:\n\t\t\ts = new dojo.gfx.Circle();\n\t\t\tbreak;\n\t\tcase dojo.gfx.Line.nodeType:\n\t\t\ts = new dojo.gfx.Line();\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tdojo.debug(\"FATAL ERROR! tagName = \" + rawNode.tagName);\n\t}\n\ts.attach(node);\n\treturn s;"}}},"dojo.gfx.createSurface":{"_":{"meta":{"summary":"","parameters":{"parentNode":{"type":""},"width":{"type":""},"height":{"type":""}},"src":"   var s = new dojo.gfx.Surface();\n   s.rawNode = document.createElement(\"v:group\");\n   s.rawNode.style.width  = (width) ? (width + \"px\") : \"100%\";\n   s.rawNode.style.height = (height) ? (height + \"px\") : \"100%\";\n   s.rawNode.coordsize = (width && height) ? (width + \" \" + height) : \"100% 100%\";\n   s.rawNode.coordorigin = \"0 0\";\n   dojo.byId(parentNode).appendChild(s.rawNode);\n   return s;"}}},"dojo.gfx.attachSurface":{"_":{"meta":{"summary":"","parameters":{"node":{"type":""}},"src":"\tvar s = new dojo.gfx.Surface();\n\ts.rawNode = node;\n\treturn s;"}}},"dojo.gfx.Shape.setStroke":{"_":{"meta":{"summary":"","parameters":{"stroke":{"type":""}},"src":"\t\tif(!stroke){\n\t\t\t\/\/ don't stroke\n\t\t\tthis.strokeStyle = null;\n\t\t\tthis.rawNode.stroked = false;\n\t\t\treturn this;\n\t\t}\n\t\t\/\/ normalize the stroke\n\t\tthis.strokeStyle = dojo.gfx.makeParameters(dojo.gfx.defaultStroke, stroke);\n\t\tthis.strokeStyle.color = dojo.gfx.normalizeColor(this.strokeStyle.color);\n\t\t\/\/ generate attributes\n\t\tvar s = this.strokeStyle;\n\t\tthis.rawNode.stroked = true;\n\t\tthis.rawNode.strokecolor = s.color.toCss();\n\t\tthis.rawNode.strokeweight = s.width + \"px\";\t\/\/ TODO: should we assume that the width is always in pixels?\n\t\tif(this.rawNode.stroke) {\n\t\t\tthis.rawNode.stroke.opacity = s.color.a;\n\t\t\tthis.rawNode.stroke.endcap = this._translate(this._capMap, s.cap);\n\t\t\tif(typeof(s.join) == \"number\") {\n\t\t\t\tthis.rawNode.stroke.joinstyle = \"miter\";\n\t\t\t\tthis.rawNode.stroke.miterlimit = s.join;\n\t\t\t}else{\n\t\t\t\tthis.rawNode.stroke.joinstyle = s.join;\n\t\t\t\t\/\/ this.rawNode.stroke.miterlimit = s.width;\n\t\t\t}\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape._translate":{"_":{"meta":{"summary":"","parameters":{"dict":{"type":""},"value":{"type":""}},"src":"\t\treturn (value in dict) ? dict[value] : value;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setFill":{"_":{"meta":{"summary":"","parameters":{"fill":{"type":""}},"src":"\t\tif(!fill){\n\t\t\t\/\/ don't fill\n\t\t\tthis.fillStyle = null;\n\t\t\tthis.rawNode.filled = false;\n\t\t\treturn this;\n\t\t}\n\t\tif(typeof(fill) == \"object\" && \"type\" in fill){\n\t\t\t\/\/ gradient\n\t\t\tswitch(fill.type){\n\t\t\t\tcase \"linear\":\n\t\t\t\t\t\/\/ set a fill\n\t\t\t\t\tvar f = dojo.gfx.makeParameters(dojo.gfx.defaultLinearGradient, fill);\n\t\t\t\t\tthis.fillStyle = f;\n\t\t\t\t\tvar s = \"\";\n\t\t\t\t\tfor(var i = 0; i < f.colors.length; ++i){\n\t\t\t\t\t\tf.colors[i].color = dojo.gfx.normalizeColor(f.colors[i].color);\n\t\t\t\t\t\ts += f.colors[i].offset.toFixed(8) + \" \" + f.colors[i].color.toHex() + \";\";\n\t\t\t\t\t}\n\t\t\t\t\tthis.rawNode.fill.colors.value = s;\n\t\t\t\t\tthis.rawNode.fill.method = \"sigma\";\n\t\t\t\t\tthis.rawNode.fill.type = \"gradient\";\n\t\t\t\t\tthis.rawNode.fill.angle = (dojo.math.radToDeg(Math.atan2(f.x2 - f.x1, f.y2 - f.y1)) + 180) % 360;\n\t\t\t\t\tthis.rawNode.fill.on = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"radial\":\n\t\t\t\t\t\/\/ set a fill\n\t\t\t\t\tvar f = dojo.gfx.makeParameters(dojo.gfx.defaultRadialGradient, fill);\n\t\t\t\t\tthis.fillStyle = f;\n\t\t\t\t\tvar w = parseFloat(this.rawNode.style.width);\n\t\t\t\t\tvar h = parseFloat(this.rawNode.style.height);\n\t\t\t\t\tvar c = isNaN(w) ? 1 : 2 * f.r \/ w;\n\t\t\t\t\tvar i = f.colors.length - 1;\n\t\t\t\t\tf.colors[i].color = dojo.gfx.normalizeColor(f.colors[i].color);\n\t\t\t\t\tvar s = \"0 \" + f.colors[i].color.toHex();\n\t\t\t\t\tfor(; i >= 0; --i){\n\t\t\t\t\t\tf.colors[i].color = dojo.gfx.normalizeColor(f.colors[i].color);\n\t\t\t\t\t\ts += (1 - c * f.colors[i].offset).toFixed(8) + \" \" + f.colors[i].color.toHex() + \";\";\n\t\t\t\t\t}\n\t\t\t\t\tthis.rawNode.fill.colors.value = s;\n\t\t\t\t\tthis.rawNode.fill.method = \"sigma\";\n\t\t\t\t\tthis.rawNode.fill.type = \"gradientradial\";\n\t\t\t\t\tif(isNaN(w) || isNaN(h)){\n\t\t\t\t\t\tthis.rawNode.fill.focusposition = \"0.5 0.5\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.rawNode.fill.focusposition = (f.cx \/ w).toFixed(8) + \" \" + (f.cy \/ h).toFixed(8);\n\t\t\t\t\t}\n\t\t\t\t\tthis.rawNode.fill.focussize = \"0 0\";\n\t\t\t\t\tthis.rawNode.fill.on = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.rawNode.fill.opacity = 1;\n\t\t\treturn this;\n\t\t}\n\t\t\/\/ color object\n\t\tthis.fillStyle = dojo.gfx.normalizeColor(fill);\n\t\tthis.rawNode.fillcolor = this.fillStyle.toHex();\n\t\tthis.rawNode.fill.opacity = this.fillStyle.a;\n\t\tthis.rawNode.filled = true;\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape._applyTransform":{"_":{"meta":{"summary":"","src":"\t\tvar matrix = this._getRealMatrix();\n\t\tif(!matrix) return this;\n\t\tvar skew = this.rawNode.skew;\n\t\tif(typeof(skew) == \"undefined\"){\n\t\t\tfor(var i = 0; i < this.rawNode.childNodes.length; ++i){\n\t\t\t\tif(this.rawNode.childNodes[i].tagName == \"skew\"){\n\t\t\t\t\tskew = this.rawNode.childNodes[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(skew){\n\t\t\tskew.on = false;\n\t\t\tvar mt = matrix.xx.toFixed(8) + \" \" + matrix.xy.toFixed(8) + \" \" + \n\t\t\t\tmatrix.yx.toFixed(8) + \" \" + matrix.yy.toFixed(8) + \" 0 0\";\n\t\t\tvar offset = Math.floor(matrix.dx).toFixed() + \"px \" + Math.floor(matrix.dy).toFixed() + \"px\";\n\t\t\tvar l = parseFloat(this.rawNode.style.left);\n\t\t\tvar t = parseFloat(this.rawNode.style.top);\n\t\t\tvar w = parseFloat(this.rawNode.style.width);\n\t\t\tvar h = parseFloat(this.rawNode.style.height);\n\t\t\tif(isNaN(l)) l = 0;\n\t\t\tif(isNaN(t)) t = 0;\n\t\t\tif(isNaN(w)) w = 1;\n\t\t\tif(isNaN(h)) h = 1;\n\t\t\tvar origin = (-l \/ w - 0.5).toFixed(8) + \" \" + (-t \/ h - 0.5).toFixed(8);\n\t\t\tskew.matrix =  mt;\n\t\t\tskew.origin = origin;\n\t\t\tskew.offset = offset;\n\t\t\tskew.on = true;\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.setRawNode":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\trawNode.stroked = false;\n\t\trawNode.filled  = false;\n\t\tthis.rawNode = rawNode;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.attachFill":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar fillStyle = null;\n\t\tif(rawNode) {\n\t\t\tif(rawNode.fill.on && rawNode.fill.type == \"gradient\"){\n\t\t\t\tvar fillStyle = dojo.lang.shallowCopy(dojo.gfx.defaultLinearGradient, true);\n\t\t\t\tvar rad = dojo.math.degToRad(rawNode.fill.angle);\n\t\t\t\tfillStyle.x2 = Math.cos(rad);\n\t\t\t\tfillStyle.y2 = Math.sin(rad);\n\t\t\t\tfillStyle.colors = [];\n\t\t\t\tvar stops = rawNode.fill.colors.value.split(\";\");\n\t\t\t\tfor(var i = 0; i < stops.length; ++i){\n\t\t\t\t\tvar t = stops[i].match(\/\\S+\/g);\n\t\t\t\t\tif(!t || t.length != 2) continue;\n\t\t\t\t\tfillStyle.colors.push({offset: dojo.gfx.vml._parseFloat(t[0]), color: new dojo.gfx.color.Color(t[1])});\n\t\t\t\t}\n\t\t\t}else if(rawNode.fill.on && rawNode.fill.type == \"gradientradial\"){\n\t\t\t\tvar fillStyle = dojo.lang.shallowCopy(dojo.gfx.defaultRadialGradient, true);\n\t\t\t\tvar w = parseFloat(rawNode.style.width);\n\t\t\t\tvar h = parseFloat(rawNode.style.height);\n\t\t\t\tfillStyle.cx = isNaN(w) ? 0 : rawNode.fill.focusposition.x * w;\n\t\t\t\tfillStyle.cy = isNaN(h) ? 0 : rawNode.fill.focusposition.y * h;\n\t\t\t\tfillStyle.r  = isNaN(w) ? 1 : w \/ 2;\n\t\t\t\tfillStyle.colors = [];\n\t\t\t\tvar stops = rawNode.fill.colors.value.split(\";\");\n\t\t\t\tfor(var i = stops.length - 1; i >= 0; --i){\n\t\t\t\t\tvar t = stops[i].match(\/\\S+\/g);\n\t\t\t\t\tif(!t || t.length != 2) continue;\n\t\t\t\t\tfillStyle.colors.push({offset: dojo.gfx.vml._parseFloat(t[0]), color: new dojo.gfx.color.Color(t[1])});\n\t\t\t\t}\n\t\t\t}else if(rawNode.fillcolor){\n\t\t\t\t\/\/ a color object !\n\t\t\t\tfillStyle = new dojo.gfx.color.Color(rawNode.fillcolor+\"\");\n\t\t\t\tfillStyle.a = rawNode.fill.opacity;\n\t\t\t}\n\t\t}\n\t\treturn fillStyle;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.offset":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar fillStyle = null;\n\t\tif(rawNode) {\n\t\t\tif(rawNode.fill.on && rawNode.fill.type == \"gradient\"){\n\t\t\t\tvar fillStyle = dojo.lang.shallowCopy(dojo.gfx.defaultLinearGradient, true);\n\t\t\t\tvar rad = dojo.math.degToRad(rawNode.fill.angle);\n\t\t\t\tfillStyle.x2 = Math.cos(rad);\n\t\t\t\tfillStyle.y2 = Math.sin(rad);\n\t\t\t\tfillStyle.colors = [];\n\t\t\t\tvar stops = rawNode.fill.colors.value.split(\";\");\n\t\t\t\tfor(var i = 0; i < stops.length; ++i){\n\t\t\t\t\tvar t = stops[i].match(\/\\S+\/g);\n\t\t\t\t\tif(!t || t.length != 2) continue;\n\t\t\t\t\tfillStyle.colors.push({offset: dojo.gfx.vml._parseFloat(t[0]), color: new dojo.gfx.color.Color(t[1])});\n\t\t\t\t}\n\t\t\t}else if(rawNode.fill.on && rawNode.fill.type == \"gradientradial\"){\n\t\t\t\tvar fillStyle = dojo.lang.shallowCopy(dojo.gfx.defaultRadialGradient, true);\n\t\t\t\tvar w = parseFloat(rawNode.style.width);\n\t\t\t\tvar h = parseFloat(rawNode.style.height);\n\t\t\t\tfillStyle.cx = isNaN(w) ? 0 : rawNode.fill.focusposition.x * w;\n\t\t\t\tfillStyle.cy = isNaN(h) ? 0 : rawNode.fill.focusposition.y * h;\n\t\t\t\tfillStyle.r  = isNaN(w) ? 1 : w \/ 2;\n\t\t\t\tfillStyle.colors = [];\n\t\t\t\tvar stops = rawNode.fill.colors.value.split(\";\");\n\t\t\t\tfor(var i = stops.length - 1; i >= 0; --i){\n\t\t\t\t\tvar t = stops[i].match(\/\\S+\/g);\n\t\t\t\t\tif(!t || t.length != 2) continue;\n\t\t\t\t\tfillStyle.colors.push({offset: dojo.gfx.vml._parseFloat(t[0]), color: new dojo.gfx.color.Color(t[1])});\n\t\t\t\t}\n\t\t\t}else if(rawNode.fillcolor){\n\t\t\t\t\/\/ a color object !\n\t\t\t\tfillStyle = new dojo.gfx.color.Color(rawNode.fillcolor+\"\");\n\t\t\t\tfillStyle.a = rawNode.fill.opacity;\n\t\t\t}\n\t\t}\n\t\treturn fillStyle;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.attachStroke":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar strokeStyle = dojo.lang.shallowCopy(dojo.gfx.defaultStroke, true);\n\t\tif(rawNode && rawNode.stroked){\n\t\t\tstrokeStyle.color = new dojo.gfx.color.Color(rawNode.strokecolor.value);\n\t\t\tdojo.debug(\"We are expecting an .75pt here, instead of strokeweight = \" + rawNode.strokeweight );\n\t\t\tstrokeStyle.width = dojo.gfx.vml.normalizedLength(rawNode.strokeweight+\"\");\n\t\t\tstrokeStyle.color.a = rawNode.stroke.opacity;\n\t\t\tstrokeStyle.cap = this._translate(this._capMapReversed, rawNode.stroke.endcap);\n\t\t\tstrokeStyle.join = rawNode.stroke.joinstyle == \"miter\" ? rawNode.stroke.miterlimit : rawNode.stroke.joinstyle;\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t\treturn strokeStyle;","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.attachTransform":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tvar matrix = {};\n\t\tif(rawNode){\n\t\t\tvar s = rawNode.skew;\n\t\t\tmatrix.xx = s.matrix.xtox;\n\t\t\tmatrix.xy = s.matrix.xtoy;\n\t\t\tmatrix.yx = s.matrix.ytox;\n\t\t\tmatrix.yy = s.matrix.ytoy;\n\t\t\t\/\/ TODO: transform from pt to px\n\t\t\tmatrix.dx = s.offset.x \/ 0.75;\n\t\t\tmatrix.dy = s.offset.y \/ 0.75;\n\t\t}\n\t\treturn dojo.gfx.matrix.normalize(matrix);","this":"dojo.gfx.Shape"}}},"dojo.gfx.Shape.attach":{"_":{"meta":{"summary":"","parameters":{"rawNode":{"type":""}},"src":"\t\tif(rawNode){\n\t\t\tthis.rawNode = rawNode;\n\t\t\tthis.shape = this.attachShape(rawNode);\n\t\t\tthis.fillStyle = this.attachFill(rawNode);\n\t\t\tthis.strokeStyle = this.attachStroke(rawNode);\n\t\t\tthis.matrix = this.attachTransform(rawNode);\n\t\t}","this":"dojo.gfx.Shape"}}},"dojo.gfx.Surface":{"_":{"meta":{"object_inherits":["dojo.gfx._creators"],"this_variables":["rawNode.style.width","rawNode.style.height","rawNode.coordsize","rawNode"]}}},"dojo.gfx.Surface.setDimensions":{"_":{"meta":{"summary":"","parameters":{"width":{"type":""},"height":{"type":""}},"src":"\t\tif(!this.rawNode) return this;\n\t\tthis.rawNode.style.width = width;\n\t\tthis.rawNode.style.height = height;\n\t\tthis.rawNode.coordsize = width + \" \" + height;\n\t\treturn this;","this":"dojo.gfx.Surface"}}},"dojo.gfx.Surface.getDimensions":{"_":{"meta":{"summary":"","src":"\t\treturn this.rawNode ? { width: this.rawNode.style.width, height: this.rawNode.style.height } : null;","this":"dojo.gfx.Surface"}}},"dojo.gfx.Surface.width":{"_":{"meta":{"summary":"","src":"\t\treturn this.rawNode ? { width: this.rawNode.style.width, height: this.rawNode.style.height } : null;","this":"dojo.gfx.Surface"}}},"dojo.gfx.Surface.add":{"_":{"meta":{"summary":"","parameters":{"shape":{"type":""}},"src":"\t\tvar oldParent = shape.getParent();\n\t\tif(this != oldParent){\n\t\t\tthis.rawNode.appendChild(shape.rawNode);\n\t\t\tif(oldParent){\n\t\t\t\toldParent.remove(shape, true);\n\t\t\t}\n\t\t\tshape._setParent(this, null);\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Surface"}}},"dojo.gfx.Surface.remove":{"_":{"meta":{"summary":"","parameters":{"shape":{"type":""},"silently":{"type":""}},"src":"\t\tif(this == shape.getParent()){\n\t\t\tif(this.rawNode == shape.rawNode.parentNode){\n\t\t\t\tthis.rawNode.removeChild(shape.rawNode);\n\t\t\t}\n\t\t\tshape._setParent(null, null);\n\t\t}\n\t\treturn this;","this":"dojo.gfx.Surface"}}}}}}}