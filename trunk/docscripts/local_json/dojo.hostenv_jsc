{"dojo.hostenv_jsc":{"meta":{"functions":{"dojo.hostenv.getText":{"meta":{"summary":"","parameters":{"uri":{"type":""}},"src":" if(!System.IO.File.Exists(uri)){\n\t\t\/\/ dojo.raise(\"No such file '\" + uri + \"'\");\n\t\treturn 0;\n\t}\n\tvar reader = new System.IO.StreamReader(uri);\n\tvar contents : String = reader.ReadToEnd();\n\treturn contents;"}},"dojo.hostenv.loadUri":{"meta":{"summary":"","parameters":{"uri":{"type":""}},"src":" var contents = this.getText(uri);\n\tif(!contents){\n\t\tdojo.raise(\"got no back contents from uri '\" + uri + \"': \" + contents);\n\t}\n\t\/\/ TODO: in JScript .NET, eval will not affect the symbol table of the current code?\n\tvar value = dj_eval(contents);\n\tdojo.debug(\"jsc eval of contents returned: \", value);\n\treturn 1;\n\t\/\/ for an example doing runtime code compilation, see:\n\t\/\/ http:\/\/groups.google.com\/groups?selm=eQ1aeciCBHA.1644%40tkmsftngp05&rnum=6\n\t\/\/ Microsoft.JScript or System.CodeDom.Compiler ?\n\t\/\/ var engine = new Microsoft.JScript.Vsa.VsaEngine()\n\t\/\/ what about loading a js file vs. a dll?\n\t\/\/ GetObject(\"script:\" . uri);"}},"dojo.hostenv.println":{"meta":{"summary":"","parameters":{"s":{"type":""}},"src":" print(s); \/\/ = print"}},"dojo.hostenv.getLibraryScriptUri":{"meta":{"summary":"","src":" return System.Environment.GetCommandLineArgs()[0];"}}}}}}