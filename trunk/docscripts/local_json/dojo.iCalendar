{"dojo.iCalendar":{"meta":{"requires":{"common":["dojo.text.textDirectory","dojo.date","dojo.lang"]},"methods":{"dojo.iCalendar.fromText":{"_":{"meta":{"summary":" Parse text of an iCalendar and return an array of iCalendar objects","parameters":{"text":{"type":"string"}},"src":"\tvar calendars = [];\n\n\t\/\/dojo.debug(\"Parsing iCal String\");\n\tfor (var i = 0, begun = false; i < properties.length; i++) {\n\t\tvar prop = properties[i];\n\t\tif (!begun) {\n\t\t\tif (prop.name == 'BEGIN' && prop.value == 'VCALENDAR') {\n\t\t\t\tbegun = true;\n\t\t\t\tvar calbody = [];\n\t\t\t}\n\t\t} else if (prop.name == 'END' && prop.value == 'VCALENDAR') {\n\t\t\tcalendars.push(new dojo.iCalendar.VCalendar(calbody));\n\t\t\tbegun = false;\n\t\t} else {\n\t\t\tcalbody.push(prop);\n\t\t}\n\t}\n\treturn \/* array *\/calendars;","returns":"array *\/calendar"}}},"dojo.iCalendar.Component":{"_":{"meta":{"summary":" A component is the basic container of all this stuff.","parameters":{"body":{"type":"string"}},"src":"\t\tthis.name = \"COMPONENT\"\n\t}\n\n\tthis.properties = [];\n\tthis.components = [];\n\n\tif (body) {\n\t\tfor (var i = 0, context = ''; i < body.length; i++) {\n\t\t\tif (context == '') {\n\t\t\t\tif (body[i].name == 'BEGIN') {\n\t\t\t\t\tcontext = body[i].value;\n\t\t\t\t\tvar childprops = [];\n\t\t\t\t} else {\n\t\t\t\t\tthis.addProperty(new dojo.iCalendar.Property(body[i]));\n\t\t\t\t}\n\t\t\t} else if (body[i].name == 'END' && body[i].value == context) {\n\t\t\t\tif (context==\"VEVENT\") {\n\t\t\t\t\tthis.addComponent(new dojo.iCalendar.VEvent(childprops));\n\t\t\t\t} else if (context==\"VTIMEZONE\") {\n\t\t\t\t\tthis.addComponent(new dojo.iCalendar.VTimeZone(childprops));\n\t\t\t\t} else if (context==\"VTODO\") {\n\t\t\t\t\tthis.addComponent(new dojo.iCalendar.VTodo(childprops));\n\t\t\t\t} else if (context==\"VJOURNAL\") {\n\t\t\t\t\tthis.addComponent(new dojo.iCalendar.VJournal(childprops));\n\t\t\t\t} else if (context==\"VFREEBUSY\") {\n\t\t\t\t\tthis.addComponent(new dojo.iCalendar.VFreeBusy(childprops));\n\t\t\t\t} else if (context==\"STANDARD\") {\n\t\t\t\t\tthis.addComponent(new dojo.iCalendar.Standard(childprops));\n\t\t\t\t} else if (context==\"DAYLIGHT\") {\n\t\t\t\t\tthis.addComponent(new dojo.iCalendar.Daylight(childprops));\n\t\t\t\t} else if (context==\"VALARM\") {\n\t\t\t\t\tthis.addComponent(new dojo.iCalendar.VAlarm(childprops));\n\t\t\t\t}else {\n\t\t\t\t\tdojo.unimplemented(\"dojo.iCalendar.\" + context);\n\t\t\t\t}\n\t\t\t\tcontext = '';\n\t\t\t} else {\n\t\t\t\tchildprops.push(body[i]);\n\t\t\t}\n\t\t}\n\n\t\tif (this._ValidProperties) {\n\t\t\tthis.postCreate();\n\t\t}\n\t}","this_variables":["name","properties","components","recurring"]}}},"cache":{"_":{"meta":{"summary":"","src":""}}},"dojo.iCalendar.Property":{"_":{"meta":{"summary":" A single property of a component. unpack the values","parameters":{"prop":{"type":""}},"src":"\tthis.group = prop.group;\n\tthis.params = prop.params;\n\tthis.value = prop.value;","this_variables":["name","group","params","value"]}}},"_P":{"_":{"meta":{"summary":"","parameters":{"n":{"type":""},"oc":{"type":""},"req":{"type":""}},"src":"\treturn {name: n, required: (req) ? true : false,\n\t\toccurance: (oc == '*' || !oc) ? -1 : oc}"}}},"dojo.iCalendar.VCalendar":{"_":{"meta":{"summary":" VCALENDAR Component","parameters":{"calbody":{"type":"string"}},"src":"\tthis.recurring = [];\n\tthis.nonRecurringEvents = function(){};\n\tdojo.iCalendar.Component.call(this, calbody);","this_variables":["name","recurring","nonRecurringEvents","recurringEvents"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"dojo.iCalendar.VCalendar.nonRecurringEvents":{"_":{"meta":{"summary":"","src":""}}},"calculatedEvents":{"_":{"meta":{"summary":"","src":""}}},"dojo.iCalendar.Standard":{"_":{"meta":{"summary":" STANDARD Component","parameters":{"body":{"type":"string"}},"src":"\tthis._ValidProperties = StandardProperties;\n\tdojo.iCalendar.Component.call(this, body);","this_variables":["name","_ValidProperties"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"dojo.iCalendar.Daylight":{"_":{"meta":{"summary":" Daylight Component","parameters":{"body":{"type":"string"}},"src":"\tthis._ValidProperties = DaylightProperties;\n\tdojo.iCalendar.Component.call(this, body);","this_variables":["name","_ValidProperties"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"dojo.iCalendar.VEvent":{"_":{"meta":{"summary":" VEVENT Component","parameters":{"body":{"type":"string"}},"src":"\tthis.name = \"VEVENT\";\n\tdojo.iCalendar.Component.call(this, body);\n\tthis.recurring = false;\n\tthis.startDate = dojo.date.fromIso8601(this.dtstart.value);","this_variables":["_ValidProperties","name","recurring","startDate"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"expandingRules":{"_":{"meta":{"summary":"","src":""}}},"cullingRules":{"_":{"meta":{"summary":"","src":""}}},"dojo.iCalendar.VTimeZone":{"_":{"meta":{"summary":" VTIMEZONE Component","parameters":{"body":{"type":"string"}},"src":"\tthis._ValidProperties = VTimeZoneProperties;\n\tdojo.iCalendar.Component.call(this, body);","this_variables":["name","_ValidProperties"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"dojo.iCalendar.VTodo":{"_":{"meta":{"summary":" VTODO Componenet","parameters":{"body":{"type":"string"}},"src":"\tthis._ValidProperties = VTodoProperties;\n\tdojo.iCalendar.Component.call(this, body);","this_variables":["name","_ValidProperties"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"dojo.iCalendar.VJournal":{"_":{"meta":{"summary":" VJOURNAL Component","parameters":{"body":{"type":"string"}},"src":"\tthis._ValidProperties = VJournalProperties;\n\tdojo.iCalendar.Component.call(this, body);","this_variables":["name","_ValidProperties"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"dojo.iCalendar.VFreeBusy":{"_":{"meta":{"summary":" VFREEBUSY Component","parameters":{"body":{"type":"string"}},"src":"\tthis._ValidProperties = VFreeBusyProperties;\n\tdojo.iCalendar.Component.call(this, body);","this_variables":["name","_ValidProperties"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"dojo.iCalendar.VAlarm":{"_":{"meta":{"summary":" VALARM Component","parameters":{"body":{"type":"string"}},"src":"\tthis._ValidProperties = VAlarmProperties;\n\tdojo.iCalendar.Component.call(this, body);","this_variables":["name","_ValidProperties"],"this_inherits":["dojo.iCalendar.Component"],"inherits":["dojo.iCalendar.Component"]}}},"dojo.iCalendar.Component.addProperty":{"_":{"meta":{"summary":" push a new property onto a component.","parameters":{"prop":{"type":""}},"src":"\t\tthis[prop.name.toLowerCase()] = prop;","this":"dojo.iCalendar.Component"}}},"dojo.iCalendar.Component.addComponent":{"_":{"meta":{"summary":" add a component to this components list of children.","parameters":{"prop":{"type":""}},"src":"","this":"dojo.iCalendar.Component"}}},"dojo.iCalendar.Component.postCreate":{"_":{"meta":{"summary":"","src":"\t\tfor (var x=0; x<this._ValidProperties.length; x++) {\n\t\t\tvar evtProperty = this._ValidProperties[x];\n\t\t\tvar found = false;\n\t\n\t\t\tfor (var y=0; y<this.properties.length; y++) {\t\n\t\t\t\tvar prop = this.properties[y];\n\t\t\t\tvar propName = prop.name.toLowerCase();\n\t\t\t\tif (dojo.lang.isArray(evtProperty)) {\n\n\t\t\t\t\tvar alreadySet = false;\n\t\t\t\t\tfor (var z=0; z<evtProperty.length; z++) {\n\t\t\t\t\t\tvar evtPropertyName = evtProperty[z].name.toLowerCase();\n\t\t\t\t\t\tif((this[evtPropertyName])  && (evtPropertyName != propName )) {\n\t\t\t\t\t\t\talreadySet=true;\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t\tif (!alreadySet) {\n\t\t\t\t\t\tthis[propName] = prop;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (propName == evtProperty.name.toLowerCase()) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tif (evtProperty.occurance == 1){\n\t\t\t\t\t\t\tthis[propName] = prop;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\tif (!dojo.lang.isArray(this[propName])) {\n\t\t\t\t\t\t\t \tthis[propName] = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis[propName].push(prop);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (evtProperty.required && !found) {\t\n\t\t\t\tdojo.debug(\"iCalendar - \" + this.name + \": Required Property not found: \" + evtProperty.name);\n\t\t\t}\n\t\t}\n\n\t\t\/\/ parse any rrules\t\t\n\t\tif (dojo.lang.isArray(this.rrule)) {\n\t\t\tfor(var x=0; x<this.rrule.length; x++) {\n\t\t\t\tvar rule = this.rrule[x].value;\n\n\t\t\t\t\/\/add a place to cache dates we have checked for recurrance\n\t\t\t\tthis.rrule[x].cache = function() {};\n\t\t\t\t\n\t\t\t\tvar temp = rule.split(\";\");\n\t\t\t\tfor (var y=0; y<temp.length; y++) {\n\t\t\t\t\tvar pair = temp[y].split(\"=\");\n\t\t\t\t\tvar key = pair[0].toLowerCase();\n\t\t\t\t\tvar val = pair[1];\n\n\t\t\t\t\tif ((key == \"freq\") || (key==\"interval\") || (key==\"until\")) {\n\t\t\t\t\t\tthis.rrule[x][key]= val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar valArray = val.split(\",\");\n\t\t\t\t\t\tthis.rrule[x][key] = valArray; \n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t}\n\t\t\tthis.recurring = true;\n\t\t}","this":"dojo.iCalendar.Component"}}},"dojo.iCalendar.Component.toString":{"_":{"meta":{"summary":" output a string representation of this component.","src":"\t\t\t\" properties, \" + this.components.length + \" components]\";","this":"dojo.iCalendar.Component"}}},"dojo.iCalendar.Property.toString":{"_":{"meta":{"summary":" output a string reprensentation of this component.","src":"","this":"dojo.iCalendar.Property"}}},"dojo.iCalendar.VCalendar.addComponent":{"_":{"meta":{"summary":" add component to the calenadar that makes it easy to pull them out again later.","parameters":{"prop":{"type":""}},"src":"\t\tif (prop.name.toLowerCase() == \"vevent\") {\n\t\t\tif (prop.rrule) {\n\t\t\t\tthis.recurring.push(prop);\n\t\t\t} else {\n\t\t\t\tvar startDate = prop.getDate();\n\t\t\t\tvar month = startDate.getMonth() + 1;\n\t\t\t\tvar dateString= month + \"-\" + startDate.getDate() + \"-\" + startDate.getFullYear();\n\t\t\t\tif (!dojo.lang.isArray(this[dateString])) {\n\t\t\t\t\tthis.nonRecurringEvents[dateString] = [];\n\t\t\t\t}\n\t\t\t\tthis.nonRecurringEvents[dateString].push(prop);\n\t\t\t}\n\t\t}","this":"dojo.iCalendar.VCalendar"}}},"dojo.iCalendar.VCalendar.preComputeRecurringEvents":{"_":{"meta":{"summary":"","parameters":{"until":{"type":""}},"src":"\t\tvar calculatedEvents = function(){};\n\n\t\tfor(var x=0; x<this.recurring.length; x++) {\n\t\t\tvar dates = this.recurring[x].getDates(until);\n\t\t\tfor (var y=0; y<dates.length;y++) {\n\t\t\t\tvar month = dates[y].getMonth() + 1;\n\t\t\t\tvar dateStr = month + \"-\" + dates[y].getDate() + \"-\" + dates[y].getFullYear();\n\t\t\t\tif (!dojo.lang.isArray(calculatedEvents[dateStr])) {\n\t\t\t\t\tcalculatedEvents[dateStr] = [];\n\t\t\t\t}\n\n\t\t\t\tif (!dojo.lang.inArray(calculatedEvents[dateStr], this.recurring[x])) { \n\t\t\t\t\tcalculatedEvents[dateStr].push(this.recurring[x]);\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t\tthis.recurringEvents = calculatedEvents;","this":"dojo.iCalendar.VCalendar"}}},"dojo.iCalendar.VCalendar.getEvents":{"_":{"meta":{"summary":" Gets all events occuring on a particular date","parameters":{"date":{"type":"Date"}},"src":"\t\tvar recur = [];\n\t\tvar nonRecur = [];\n\t\tvar month = date.getMonth() + 1;\n\t\tvar dateStr= month + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n\t\tif (dojo.lang.isArray(this.nonRecurringEvents[dateStr])) {\n\t\t\tnonRecur= this.nonRecurringEvents[dateStr];\n\t\t\tdojo.debug(\"Number of nonRecurring Events: \" + nonRecur.length);\n\t\t} \n\t\t\n\n\t\tif (dojo.lang.isArray(this.recurringEvents[dateStr])) {\n\t\t\trecur= this.recurringEvents[dateStr];\n\t\t} \n\n\t\tevents = recur.concat(nonRecur);\n\n\t\tif (events.length > 0) {\n\t\t\treturn events;\n\t\t} \n\n\t\treturn null;\t\t\t","this":"dojo.iCalendar.VCalendar"}}},"dojo.iCalendar.VEvent.getDates":{"_":{"meta":{"summary":"","parameters":{"until":{"type":""}},"src":"\t\t\tvar dtstart = this.getDate();\n\n\t\t\tvar recurranceSet = [];\n\t\t\tvar weekdays=[\"su\",\"mo\",\"tu\",\"we\",\"th\",\"fr\",\"sa\"];\n\t\t\tvar order = { \n\t\t\t\t\"daily\": 1, \"weekly\": 2, \"monthly\": 3, \"yearly\": 4,\n\t\t\t\t\"byday\": 1, \"bymonthday\": 1, \"byweekno\": 2, \"bymonth\": 3, \"byyearday\": 4};\n\n\t\t\t\/\/ expand rrules into the recurrance \n\t\t\tfor (var x=0; x<this.rrule.length; x++) {\n\t\t\t\tvar rrule = this.rrule[x];\n\t\t\t\tvar freq = rrule.freq.toLowerCase();\n\t\t\t\tvar interval = 1;\n\n\t\t\t\tif (rrule.interval > interval) {\n\t\t\t\t\tinterval = rrule.interval;\n\t\t\t\t}\n\n\t\t\t\tvar set = [];\n\t\t\t\tvar freqInt = order[freq];\n\n\t\t\t\tif (rrule.until) {\n\t\t\t\t\tvar tmpUntil = dojo.date.fromIso8601(rrule.until);\n\t\t\t\t} else {\n\t\t\t\t\tvar tmpUntil = until\n\t\t\t\t}\n\n\t\t\t\tif (tmpUntil > until) {\n\t\t\t\t\ttmpUntil = until\n\t\t\t\t}\n\n\n\t\t\t\tif (dtstart<tmpUntil) {\n\n\t\t\t\t\tvar expandingRules = function(){};\n\t\t\t\t\tvar cullingRules = function(){};\n\t\t\t\t\texpandingRules.length=0;\n\t\t\t\t\tcullingRules.length =0;\n\n\t\t\t\t\tswitch(freq) {\n\t\t\t\t\t\tcase \"yearly\":\n\t\t\t\t\t\t\tvar nextDate = new Date(dtstart);\n\t\t\t\t\t\t\tset.push(nextDate);\n\t\t\t\t\t\t\twhile(nextDate < tmpUntil) {\n\t\t\t\t\t\t\t\tnextDate.setYear(nextDate.getFullYear()+interval);\n\t\t\t\t\t\t\t\ttmpDate = new Date(nextDate);\n\t\t\t\t\t\t\t\tif(tmpDate < tmpUntil) {\n\t\t\t\t\t\t\t\t\tset.push(tmpDate);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"monthly\":\n\t\t\t\t\t\t\tnextDate = new Date(dtstart);\n\t\t\t\t\t\t\tset.push(nextDate);\n\t\t\t\t\t\t\twhile(nextDate < tmpUntil) {\n\t\t\t\t\t\t\t\tnextDate.setMonth(nextDate.getMonth()+interval);\n\t\t\t\t\t\t\t\tvar tmpDate = new Date(nextDate);\n\t\t\t\t\t\t\t\tif (tmpDate < tmpUntil) {\n\t\t\t\t\t\t\t\t\tset.push(tmpDate);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"weekly\":\n\t\t\t\t\t\t\tnextDate = new Date(dtstart);\n\t\t\t\t\t\t\tset.push(nextDate);\n\t\t\t\t\t\t\twhile(nextDate < tmpUntil) {\n\t\t\t\t\t\t\t\tnextDate.setDate(nextDate.getDate()+(7*interval));\n\t\t\t\t\t\t\t\tvar tmpDate = new Date(nextDate);\n\t\t\t\t\t\t\t\tif (tmpDate < tmpUntil) {\n\t\t\t\t\t\t\t\t\tset.push(tmpDate);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t\tcase \"daily\":\n\t\t\t\t\t\t\tnextDate = new Date(dtstart);\n\t\t\t\t\t\t\tset.push(nextDate);\n\t\t\t\t\t\t\twhile(nextDate < tmpUntil) {\n\t\t\t\t\t\t\t\tnextDate.setDate(nextDate.getDate()+interval);\n\t\t\t\t\t\t\t\tvar tmpDate = new Date(nextDate);\n\t\t\t\t\t\t\t\tif (tmpDate < tmpUntil) {\n\t\t\t\t\t\t\t\t\tset.push(tmpDate);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((rrule[\"bymonth\"]) && (order[\"bymonth\"]<freqInt))\t{\n\t\t\t\t\t\tfor (var z=0; z<rrule[\"bymonth\"].length; z++) {\n\t\t\t\t\t\t\tif (z==0) {\n\t\t\t\t\t\t\t\tfor (var zz=0; zz < set.length; zz++) {\n\t\t\t\t\t\t\t\t\tset[zz].setMonth(rrule[\"bymonth\"][z]-1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar subset=[];\n\t\t\t\t\t\t\t\tfor (var zz=0; zz < set.length; zz++) {\n\t\t\t\t\t\t\t\t\tvar newDate = new Date(set[zz]);\n\t\t\t\t\t\t\t\t\tnewDate.setMonth(rrule[z]);\n\t\t\t\t\t\t\t\t\tsubset.push(newDate);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttmp = set.concat(subset);\n\t\t\t\t\t\t\t\tset = tmp;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\t\t\t\t\t\/\/ while the spec doesn't prohibit it, it makes no sense to have a bymonth and a byweekno at the same time\n\t\t\t\t\t\/\/ and if i'm wrong then i don't know how to apply that rule.  This is also documented elsewhere on the web\n\t\t\t\t\tif (rrule[\"byweekno\"] && !rrule[\"bymonth\"]) {\t\n\t\t\t\t\t\tdojo.debug(\"TODO: no support for byweekno yet\");\n\t\t\t\t\t}\n\n\n\t\t\t\t\t\/\/ while the spec doesn't prohibit it, it makes no sense to have a bymonth and a byweekno at the same time\n\t\t\t\t\t\/\/ and if i'm wrong then i don't know how to apply that rule.  This is also documented elsewhere on the web\n\t\t\t\t\tif (rrule[\"byyearday\"] && !rrule[\"bymonth\"] && !rrule[\"byweekno\"] ) {\t\n\t\t\t\t\t\tif (rrule[\"byyearday\"].length > 1) {\n\t\t\t\t\t\t\tvar regex = \"([+-]?)([0-9]{1,3})\";\n\t\t\t\t\t\t\tfor (var z=1; x<rrule[\"byyearday\"].length; z++) {\n\t\t\t\t\t\t\t\tvar regexResult = rrule[\"byyearday\"][z].match(regex);\n\t\t\t\t\t\t\t\tif (z==1) {\n\t\t\t\t\t\t\t\t\tfor (var zz=0; zz < set.length; zz++) {\n\t\t\t\t\t\t\t\t\t\tif (regexResult[1] == \"-\") {\n\t\t\t\t\t\t\t\t\t\t\tdojo.date.setDayOfYear(set[zz],366-regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tdojo.date.setDayOfYear(set[zz],regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t\t\tvar subset=[];\n\t\t\t\t\t\t\t\t\tfor (var zz=0; zz < set.length; zz++) {\n\t\t\t\t\t\t\t\t\t\tvar newDate = new Date(set[zz]);\n\t\t\t\t\t\t\t\t\t\tif (regexResult[1] == \"-\") {\n\t\t\t\t\t\t\t\t\t\t\tdojo.date.setDayOfYear(newDate,366-regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tdojo.date.setDayOfYear(newDate,regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsubset.push(newDate);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttmp = set.concat(subset);\n\t\t\t\t\t\t\t\t\tset = tmp;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rrule[\"bymonthday\"]  && (order[\"bymonthday\"]<freqInt)) {\t\n\t\t\t\t\t\tif (rrule[\"bymonthday\"].length > 0) {\n\t\t\t\t\t\t\tvar regex = \"([+-]?)([0-9]{1,3})\";\n\t\t\t\t\t\t\tfor (var z=0; z<rrule[\"bymonthday\"].length; z++) {\n\t\t\t\t\t\t\t\tvar regexResult = rrule[\"bymonthday\"][z].match(regex);\n\t\t\t\t\t\t\t\tif (z==0) {\n\t\t\t\t\t\t\t\t\tfor (var zz=0; zz < set.length; zz++) {\n\t\t\t\t\t\t\t\t\t\tif (regexResult[1] == \"-\") {\n\t\t\t\t\t\t\t\t\t\t\tif (regexResult[2] < dojo.date.getDaysInMonth(set[zz])) {\n\t\t\t\t\t\t\t\t\t\t\t\tset[zz].setDate(dojo.date.getDaysInMonth(set[zz]) - regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (regexResult[2] < dojo.date.getDaysInMonth(set[zz])) {\n\t\t\t\t\t\t\t\t\t\t\t\tset[zz].setDate(regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t\t\tvar subset=[];\n\t\t\t\t\t\t\t\t\tfor (var zz=0; zz < set.length; zz++) {\n\t\t\t\t\t\t\t\t\t\tvar newDate = new Date(set[zz]);\n\t\t\t\t\t\t\t\t\t\tif (regexResult[1] == \"-\") {\n\t\t\t\t\t\t\t\t\t\t\tif (regexResult[2] < dojo.date.getDaysInMonth(set[zz])) {\n\t\t\t\t\t\t\t\t\t\t\t\tnewDate.setDate(dojo.date.getDaysInMonth(set[zz]) - regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (regexResult[2] < dojo.date.getDaysInMonth(set[zz])) {\n\t\t\t\t\t\t\t\t\t\t\t\tnewDate.setDate(regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsubset.push(newDate);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttmp = set.concat(subset);\n\t\t\t\t\t\t\t\t\tset = tmp;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rrule[\"byday\"]  && (order[\"byday\"]<freqInt)) {\t\n\t\t\t\t\t\tif (rrule[\"bymonth\"]) {\n\t\t\t\t\t\t\tif (rrule[\"byday\"].length > 0) {\n\t\t\t\t\t\t\t\tvar regex = \"([+-]?)([0-9]{0,1}?)([A-Za-z]{1,2})\";\n\t\t\t\t\t\t\t\tfor (var z=0; z<rrule[\"byday\"].length; z++) {\n\t\t\t\t\t\t\t\t\tvar regexResult = rrule[\"byday\"][z].match(regex);\n\t\t\t\t\t\t\t\t\tvar occurance = regexResult[2];\n\t\t\t\t\t\t\t\t\tvar day = regexResult[3].toLowerCase();\n\n\n\t\t\t\t\t\t\t\t\tif (z==0) {\n\t\t\t\t\t\t\t\t\t\tfor (var zz=0; zz < set.length; zz++) {\n\t\t\t\t\t\t\t\t\t\t\tif (regexResult[1] == \"-\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\/\/find the nth to last occurance of date \n\t\t\t\t\t\t\t\t\t\t\t\tvar numDaysFound = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tvar lastDayOfMonth = dojo.date.getDaysInMonth(set[zz]);\n\t\t\t\t\t\t\t\t\t\t\t\tvar daysToSubtract = 1;\n\t\t\t\t\t\t\t\t\t\t\t\tset[zz].setDate(lastDayOfMonth); \n\t\t\t\t\t\t\t\t\t\t\t\tif (weekdays[set[zz].getDay()] == day) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnumDaysFound++;\n\t\t\t\t\t\t\t\t\t\t\t\t\tdaysToSubtract=7;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tdaysToSubtract = 1;\n\t\t\t\t\t\t\t\t\t\t\t\twhile (numDaysFound < occurance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tset[zz].setDate(set[zz].getDate()-daysToSubtract);\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (weekdays[set[zz].getDay()] == day) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumDaysFound++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdaysToSubtract=7;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (occurance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar numDaysFound=0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tset[zz].setDate(1);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar daysToAdd=1;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(weekdays[set[zz].getDay()] == day) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumDaysFound++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdaysToAdd=7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile(numDaysFound < occurance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tset[zz].setDate(set[zz].getDate()+daysToAdd);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(weekdays[set[zz].getDay()] == day) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumDaysFound++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdaysToAdd=7;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\/\/we're gonna expand here to add a date for each of the specified days for each month\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar numDaysFound=0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar subset = [];\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tlastDayOfMonth = new Date(set[zz]);\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar daysInMonth = dojo.date.getDaysInMonth(set[zz]);\n\t\t\t\t\t\t\t\t\t\t\t\t\tlastDayOfMonth.setDate(daysInMonth);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tset[zz].setDate(1);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (weekdays[set[zz].getDay()] == day) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumDaysFound++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar tmpDate = new Date(set[zz]);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdaysToAdd = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\twhile(tmpDate.getDate() < lastDayOfMonth) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (weekdays[tmpDate.getDay()] == day) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnumDaysFound++;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (numDaysFound==1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tset[zz] = tmpDate;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubset.push(tmpDate);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttmpDate = new Date(tmpDate);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdaysToAdd=7;\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttmpDate.setDate(tmpDate.getDate() + daysToAdd);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttmpDate.setDate(tmpDate.getDate() + daysToAdd);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar t = set.concat(subset);\n\t\t\t\t\t\t\t\t\t\t\t\t\tset = t; \n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\telse {\n\t\t\t\t\t\t\t\t\t\tvar subset=[];\n\t\t\t\t\t\t\t\t\t\tfor (var zz=0; zz < set.length; zz++) {\n\t\t\t\t\t\t\t\t\t\t\tvar newDate = new Date(set[zz]);\n\t\t\t\t\t\t\t\t\t\t\tif (regexResult[1] == \"-\") {\n\t\t\t\t\t\t\t\t\t\t\t\tif (regexResult[2] < dojo.date.getDaysInMonth(set[zz])) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewDate.setDate(dojo.date.getDaysInMonth(set[zz]) - regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (regexResult[2] < dojo.date.getDaysInMonth(set[zz])) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewDate.setDate(regexResult[2]);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsubset.push(newDate);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttmp = set.concat(subset);\n\t\t\t\t\t\t\t\t\t\tset = tmp;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdojo.debug(\"TODO: byday within a yearly rule without a bymonth\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdojo.debug(\"TODO: Process BYrules for units larger than frequency\");\n\t\t\t\n\t\t\t\t\t\/\/add this set of events to the complete recurranceSet\t\n\t\t\t\t\tvar tmp = recurranceSet.concat(set);\n\t\t\t\t\trecurranceSet = tmp;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\/\/ TODO: add rdates to the recurrance set here\n\n\t\t\t\/\/ TODO: subtract exdates from the recurrance set here\n\n\t\t\t\/\/TODO:  subtract dates generated by exrules from recurranceSet here\n\n\t\t\trecurranceSet.push(dtstart);\n\t\t\treturn recurranceSet;","this":"dojo.iCalendar.VEvent"}}},"dojo.iCalendar.VEvent.getDate":{"_":{"meta":{"summary":"","src":"\t\t\treturn dojo.date.fromIso8601(this.dtstart.value);","this":"dojo.iCalendar.VEvent"}}}}}}}