var source = this.getFragNodeRef(frag);

 Copy style info and id from input node to output node
this.domNode.style.cssText = source.style.cssText;
dojo.html.addClass(this.domNode, dojo.html.getClass(source));
dojo.html.addClass(this.domNode, "dojoFloatingPane");
this.domNode.style.position="absolute";
this.domNode.id = source.id;
if(dojo.render.html.safari){
	document.body.appendChild(this.domNode);
}

 make client pane wrapper to hold the contents of this floating pane
if(this.contentWrapper!="none"){
	var clientDiv = document.createElement('div');
	dojo.dom.moveChildren(source, clientDiv, 0);
	this.clientPane = this._makeClientPane(clientDiv);
}

if (this.titleBarDisplay != "none") {
	 this is our chrome
	var chromeDiv = document.createElement('div');
	dojo.html.addClass(chromeDiv, 'dojoFloatingPaneDragbar');
	chromeDiv.style.height=this.titleHeight+"px";	 workaround CSS loading race condition bug
	
	this.dragBar = this._createPane("LayoutPane", chromeDiv, {layoutAlign: 'top', id:this.widgetId+"_chrome"});
	dojo.html.disableSelection(this.dragBar.domNode);

	if( this.titleBarDisplay == "fancy"){
		 image background to get gradient
		var img = document.createElement('img');
		img.src = this.titleBarBackground;
		dojo.html.addClass(img, 'dojoFloatingPaneDragbarBackground');
		var backgroundPane = dojo.widget.createWidget("ContentPane", {layoutAlign:"flood", id:this.widgetId+"_titleBackground"}, img);
		this.dragBar.addChild(backgroundPane);
	}

	Title Bar
	var titleBar = document.createElement('div');
	dojo.html.addClass(titleBar, "dojoFloatingPaneTitleBar");
	dojo.html.disableSelection(titleBar);

	TitleBarActions
	var titleBarActions = document.createElement('div');
	dojo.html.addClass(titleBarActions, "dojoFloatingPaneActions");

	Title Icon
	if(this.iconSrc!=""){
		var titleIcon = document.createElement('img');
		dojo.html.addClass(titleIcon,"dojoTitleBarIcon");
		titleIcon.src = this.iconSrc;						
		titleBar.appendChild(titleIcon);
	}

	Title text  
	var titleText = document.createTextNode(this.title)
	titleBar.appendChild(titleText);

	if (this.displayMinimizeAction) {
		FloatingPane Action Minimize
		this.minimizeAction = document.createElement("img");
		dojo.html.addClass(this.minimizeAction, "dojoFloatingPaneActionItem");
		this.minimizeAction.src = this.minimizeIcon;	
		titleBarActions.appendChild(this.minimizeAction);
		dojo.event.connect(this.minimizeAction, 'onclick', this, 'minimizeWindow');
	}

	if (this.displayMaximizeAction) {
		FloatingPane Action Restore
		this.restoreAction = document.createElement("img");
		dojo.html.addClass(this.restoreAction, "dojoFloatingPaneActionItem");
		this.restoreAction.src = this.restoreIcon;	
		titleBarActions.appendChild(this.restoreAction);
		dojo.event.connect(this.restoreAction, 'onclick', this, 'restoreWindow');

		if (this.windowState != "normal") {
			this.restoreAction.style.display="inline";
		} else {
			this.restoreAction.style.display="none";
		}

		FloatingPane Action Maximize
		this.maximizeAction = document.createElement("img");
		dojo.html.addClass(this.maximizeAction, "dojoFloatingPaneActionItem");
		this.maximizeAction.src = this.maximizeIcon;	
		titleBarActions.appendChild(this.maximizeAction);
		dojo.event.connect(this.maximizeAction, 'onclick', this, 'maximizeWindow');

		if(this.maximizeAction){
			if (this.windowState != "maximized") {
				this.maximizeAction.style.display="inline";	
			} else {
				this.maximizeAction.style.display="none";	
			}
		}	
	}

	if (this.displayCloseAction) {
		FloatingPane Action Close
		var closeAction= document.createElement("img");
		dojo.html.addClass(closeAction, "dojoFloatingPaneActionItem");
		closeAction.src = this.closeIcon;	
		titleBarActions.appendChild(closeAction);
		dojo.event.connect(closeAction, 'onclick', this, 'closeWindow');
	}

	chromeDiv.appendChild(titleBar);
	chromeDiv.appendChild(titleBarActions);
}

if ( this.resizable ) {
	 add the resize handle
	var resizeDiv = document.createElement('div');
	dojo.html.addClass(resizeDiv, "dojoFloatingPaneResizebar");
	dojo.html.disableSelection(resizeDiv);
	var rh = dojo.widget.createWidget("ResizeHandle", {targetElmId: this.widgetId, id:this.widgetId+"_resize"});
	this.resizePane = this._createPane("ContentPane", resizeDiv, {layoutAlign: "bottom"});
	this.resizePane.addChild(rh);
}

 add a drop shadow
if(this.hasShadow){
	this.shadow=new dojo.html.shadow(this.domNode);
}

dojo.event.connect(this.domNode, 'onmousedown', this, 'onMouseDown');

 Prevent IE bleed-through problem
this.bgIframe = new dojo.html.BackgroundIframe();
if( this.bgIframe.iframe ){
	this.domNode.appendChild(this.bgIframe.iframe);
}
if ( this.isVisible() ) {
	this.bgIframe.show();
};

if( this.taskBarId ){
	this.taskBarSetup();
}

if (dojo.hostenv.post_load_) {
	this.setInitialWindowState();
} else {
	dojo.addOnLoad(this, "setInitialWindowState");
}
if(dojo.render.html.safari){
	document.body.removeChild(this.domNode);
}

dojo.widget.html.FloatingPane.superclass.postCreate.call(this, args, frag);