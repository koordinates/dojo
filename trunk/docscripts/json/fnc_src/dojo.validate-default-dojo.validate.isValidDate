if (typeof format != "string") { format = "MM/DD/YYYY"; }

 Create a literal regular expression based on format
var reLiteral = format.replace(/([$^.*+?=!:|\/\\\(\)\[\]\{\}])/g, "\\$1");

 Convert all the tokens to RE elements
reLiteral = reLiteral.replace( "YYYY", "([0-9]{4})" );
reLiteral = reLiteral.replace( "MM", "(0[1-9]|10|11|12)" );
reLiteral = reLiteral.replace( "M", "([1-9]|10|11|12)" );
reLiteral = reLiteral.replace( "DDD", "(00[1-9]|0[1-9][0-9]|[12][0-9][0-9]|3[0-5][0-9]|36[0-6])" );
reLiteral = reLiteral.replace( "DD", "(0[1-9]|[12][0-9]|30|31)" );
reLiteral = reLiteral.replace( "D", "([1-9]|[12][0-9]|30|31)" );
reLiteral = reLiteral.replace( "ww", "(0[1-9]|[1-4][0-9]|5[0-3])" );
reLiteral = reLiteral.replace( "d", "([1-7])" );

 Anchor pattern to begining and end of string
reLiteral = "^" + reLiteral + "$";

 Dynamic RE that parses the original format given
var re = new RegExp(reLiteral);

 Test if date is in a valid format
if (!re.test(dateValue))  return false;

 Parse date to get elements and check if date is valid
 Assume valid values for date elements not given.
var year = 0, month = 1, date = 1, dayofyear = 1, week = 1, day = 1;

 Capture tokens
var tokens = format.match( /(YYYY|MM|M|DDD|DD|D|ww|d)/g );

 Capture date values
var values = re.exec(dateValue);

 Match up tokens with date values
for (var i = 0; i < tokens.length; i++) {
	switch (tokens[i]) {
	case "YYYY":
		year = Number(values[i+1]); break;
	case "M":
	case "MM":
		month = Number(values[i+1]); break;
	case "D":
	case "DD":
		date = Number(values[i+1]); break;
	case "DDD":
		dayofyear = Number(values[i+1]); break;
	case "ww":
		week = Number(values[i+1]); break;
	case "d":
		day = Number(values[i+1]); break;
	}
}

 Leap years are divisible by 4, but not by 100, unless by 400
var leapyear = (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));

 31st of a month with 30 days
if (date == 31 && (month == 4 || month == 6 || month == 9 || month == 11)) return false; 

 February 30th or 31st
if (date >= 30 && month == 2) return false; 

 February 29th outside a leap year
if (date == 29 && month == 2 && !leapyear) return false; 
if (dayofyear == 366 && !leapyear)  return false;

return true;