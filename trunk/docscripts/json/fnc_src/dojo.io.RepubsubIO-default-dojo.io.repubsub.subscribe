if(!this.isInitialized){
	this.subscriptionBacklog.push([topic, toObj, toFunc, dontTellServer]);
	return;
}
if(!this.attachPathList[topic]){
	this.attachPathList[topic] = function(){ return true; }
	this.log("subscribing to: "+topic);
	this.topics.push(topic);
}
var revt = new dojo.io.repubsubEvent(this.tunnelURI, topic, "route");
var rstr = [this.serverBaseURL+"/kn", revt.toGetString()].join("");
dojo.event.kwConnect({
	once: true,
	srcObj: this.attachPathList, 
	srcFunc: topic, 
	adviceObj: toObj, 
	adviceFunc: toFunc
});
 NOTE: the above is a local mapping, if we're not the leader, we
 		 should connect our mapping to the topic handler of the peer
 		 leader, this ensures that not matter what happens to the
 		 leader, we don't really loose our heads if/when the leader
 		 goes away.
if(!this.rcvNode){  this should be an error!  }
if(dontTellServer){
	return;
}
this.log("sending subscription to: "+topic);
 create a subscription event object and give it all the props we need
 to updates on the specified topic

 FIXME: we should only enqueue if this is our first subscription!
this.sendTopicSubToServer(topic, rstr);