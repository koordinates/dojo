this.readyState = 1;
if(this.onreadystatechange){
	this.onreadystatechange.call(this);
}
var query = {sS: ""};
if(this._referrer){
	query.e = this._referrer;
}
if(this._headers.length){
	query.H = this._headers.join("&");
}
if(this._username){
	if(this._password){
		query.u = this._username + ":" + this._password;
	}else{
		query.u = this._username;
	}
}
if(content){
	query.d = this.content;
	if(this._method != "POST"){
		query.G = "";
	}
}
if(this._method == "HEAD"){
	query.I = "";
}else{
	if(this._save){
		query.I = "";  Get the headers in the initial query
	}else{
		query.i = "";
	}
}

var system = widget.system(dojo.hostenv.CurlRequest._formatCall(query, this._url), null);
this.readyState = 2;
if(this.onreadystatechange){
	this.onreadystatechange.call(this);
}
if(system.errorString){
	this.responseText = system.errorString;
	this.status = 0;
}else{
	if(this._save){
		this._responseHeader = system.outputString;
	}else{
		var split = system.outputString.replace(/\r/g, "").split("\n\n", 2);
		this._responseHeader = split[0];
		this.responseText = split[1];
	}
	split = this._responseHeader.split("\n");
	this.statusText = split.shift();
	this.status = this.statusText.split(" ")[1];
	for(var i = 0, header; header = split[i]; i++){
		var header_split = header.split(": ", 2);
		this._responseHeaders[header_split[0]] = header_split[1];
	}
	if(this._save){
		widget.system("/bin/mkdir cache", null);
		 First, make a file name
		this._fileName = this._url.split("/").pop().replace(/\W/g, "");
		 Then, get its extension
		this._fileName += "." + this._responseHeaders["Content-Type"].replace(/[\r\n]/g, "").split("/").pop()
		delete query.I;
		query.o = "cache/" + this._fileName;  Tell it where to be saved.
		system = widget.system(dojo.hostenv.CurlRequest._formatCall(query, this._url), null);
		if(!system.errorString){
			this.responseText = "cache/" + this._fileName;
		}
	}else if(this._method == "HEAD"){
		this.responseText = this._responseHeader;
	}
}

this.readyState = 4;
if(this.onreadystatechange){
	this.onreadystatechange.call(this);
}