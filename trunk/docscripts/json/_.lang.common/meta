{"dojo.lang.indexOf":{"is":"dojo.lang.find"},"dojo.lang.lastIndexOf":{"is":"dojo.lang.findLast"},"dojo.lang.mixin":{"Object (Object obj, Object props)":"Copies all properties of 'props' to 'obj'."},"dojo.lang.extend":{"(Object ctor, Object props)":"Extends class with constructor 'ctor' by copying properties from 'props' to the class prototype, providing a compact syntax for adding methods or values to a class."},"dojo.lang.find":{"(Array arr, Object val, bool? identity, bool? findLast)":"Locate a value inside an array, with optional strict comparison.<br \/>support both (arr, val) and (val, arr)"},"dojo.lang.findLast":{"(Array arr, Object val, bool? identity)":"Locate the last instance of a value inside an array, with optional strict comparison."},"dojo.lang.inArray":{"bool (Array arr, Object val)":"Return true if 'val' is in 'arr'."},"dojo.lang.isObject":{"bool (Object wh)":"Determine if 'wh' is an Object."},"dojo.lang.isArray":{"bool (Object wh)":"Determine if 'wh' is an Array."},"dojo.lang.isArrayLike":{"mixed (Object wh)":"Determine if 'wh' is array-like."},"dojo.lang.isFunction":{"bool (Object wh)":"Determine if 'wh' is a Function."},"dojo.lang.isString":{"bool (Object wh)":"Determine if 'wh' is a String."},"dojo.lang.isAlien":{"bool (Object wh)":"Determine if 'wh' is a function which is not built-in."},"dojo.lang.isBoolean":{"bool (Object wh)":"Determine if 'wh' is of type Boolean."},"dojo.lang.isNumber":{"bool (Object wh)":"Determine if 'wh' is of type Number. \/* description: WARNING: In most cases, isNaN(wh) is sufficient to determine whether or not something is a number or can be used as such. For example, a number or string can be used interchangably when accessing array items (arr[\"1\"] is the same as arr[1]) and isNaN will return false for both values (\"1\" and 1). Should you use isNumber(\"1\"), that will return false, which is generally not too useful. Also, isNumber(NaN) returns true, again, this isn't generally useful, but there are corner cases (like when you want to make sure that two things are really the same type of thing). That is really where isNumber \"shines\". * RECOMMENDATION: Use isNaN(wh) when possible."},"dojo.lang.isUndefined":{"bool (Object wh)":"Determine if 'wh' is undefined. \/* description: WARNING: In some cases, isUndefined will not behave as you might expect. If you do isUndefined(foo) and there is no earlier reference to foo, an error will be thrown before isUndefined is called. It behaves correctly if you scope yor object first, i.e. isUndefined(foo.bar) where foo is an object and bar isn't a property of the object. * RECOMMENDATION: Use `typeof foo == \"undefined\"` when possible."}}