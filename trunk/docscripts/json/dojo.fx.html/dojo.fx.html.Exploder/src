triggerNode = dojo.byId(triggerNode);
boxNode = dojo.byId(boxNode);
var _this = this;

 custom options
this.waitToHide = 500;
this.timeToShow = 100;
this.waitToShow = 200;
this.timeToHide = 70;
this.autoShow = false;
this.autoHide = false;

var animShow = null;
var animHide = null;

var showTimer = null;
var hideTimer = null;

var startCoords = null;
var endCoords = null;

this.showing = false;

this.onBeforeExplode = null;
this.onAfterExplode = null;
this.onBeforeImplode = null;
this.onAfterImplode = null;
this.onExploding = null;
this.onImploding = null;

 trigger events
dojo.event.connect(triggerNode, "onclick", function(e) {
	if(_this.showing) {
		_this.hide();
	} else {
		_this.show();
	}
});
dojo.event.connect(triggerNode, "onmouseover", function(e) {
	if(_this.autoShow) {
		_this.timeShow();
	}
});
dojo.event.connect(triggerNode, "onmouseout", function(e) {
	if(_this.autoHide) {
		_this.timeHide();
	}
});

 box events
dojo.event.connect(boxNode, "onmouseover", function(e) {
	clearTimeout(hideTimer);
});
dojo.event.connect(boxNode, "onmouseout", function(e) {
	if(_this.autoHide) {
		_this.timeHide();
	}
});

 document events
dojo.event.connect(document.documentElement || document.body, "onclick", function(e) {
	function isDesc(node, ancestor) {
		while(node) {
			if(node == ancestor){ return true; }
			node = node.parentNode;
		}
		return false;
	}
	if(_this.autoHide && _this.showing
		&& !isDesc(e.target, boxNode)
		&& !isDesc(e.target, triggerNode) ) {
		_this.hide();
	}
});

return this;