if((!this.containerNode)&&(!overrideContainerNode)){
	this.containerNode = this.domNode;
}
var cn = (overrideContainerNode) ? overrideContainerNode : this.containerNode;
if(!pos){ pos = "after"; }
if(!ref){ ref = cn.lastChild; }
if(!insertIndex) { insertIndex = 0; }
widget.domNode.setAttribute("dojoinsertionindex", insertIndex);

 insert the child widget domNode directly underneath my domNode, in the
 specified position (by default, append to end)
if(!ref){
	cn.appendChild(widget.domNode);
}else{
	 FIXME: was this meant to be the (ugly hack) way to support insert @ index?
	dojo.dom[pos](widget.domNode, ref, insertIndex);

	 CAL: this appears to be the intended way to insert a node at a given position...
	if (pos == 'insertAtIndex'){
		 dojo.debug("idx:", insertIndex, "isLast:", ref === cn.lastChild);
		dojo.dom.insertAtIndex(widget.domNode, ref.parentNode, insertIndex);
	}else{
		 dojo.debug("pos:", pos, "isLast:", ref === cn.lastChild);
		if((pos == "after")&&(ref === cn.lastChild)){
			cn.appendChild(widget.domNode);
		}else{
			dojo.dom.insertAtPosition(widget.domNode, cn, pos);
		}
	}
}