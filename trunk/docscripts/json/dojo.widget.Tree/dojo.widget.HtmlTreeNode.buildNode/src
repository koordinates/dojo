this.tree = tree;
this.depth = depth;

 add the tree icons

this.imgs = [];

for(var i=0; i<this.depth+2; i++){

	var img = document.createElement('img');

	img.style.width = this.tree.iconWidth + 'px';
	img.style.height = this.tree.iconHeight + 'px';
	img.src = this.tree.blankIconSrc;
	img.style.verticalAlign = 'middle';

	this.domNode.insertBefore(img, this.containerNode);

	this.imgs.push(img);
}

this.expandIcon = this.imgs[this.imgs.length-2];
this.childIcon = this.imgs[this.imgs.length-1];

 add the cell label

this.labelNode = document.createElement('span');

this.labelNode.appendChild(document.createTextNode(this.title));

this.domNode.insertBefore(this.labelNode, this.containerNode);

dojo.html.addClass(this.labelNode, 'dojoTreeNodeLabel');

dojo.event.connect(this.expandIcon, 'onclick', this, 'onTreeClick');
dojo.event.connect(this.childIcon, 'onclick', this, 'onIconClick');
dojo.event.connect(this.labelNode, 'onclick', this, 'onLabelClick');

 create the child rows

for(var i=0; i<this.children.length; i++){

	this.children[i].isFirstNode = (i == 0) ? true : false;
	this.children[i].isLastNode = (i == this.children.length-1) ? true : false;
	this.children[i].parentNode = this;
	var node = this.children[i].buildNode(this.tree, this.depth+1);

	this.containerNode.appendChild(node);
}

this.isParent = (this.children.length > 0) ? true : false;

this.collapse();

return this.domNode;