if(trim) { txt = dojo.string.trim(txt); }

var tn = document.createElement("div");
 tn.style.display = "none";
tn.style.visibility= "hidden";
document.body.appendChild(tn);
var tableType = "none";
if((/^<t[dh][\s\r\n>]/i).test(dojo.string.trimStart(txt))) {
	txt = "<table><tbody><tr>" + txt + "</tr></tbody></table>";
	tableType = "cell";
} else if((/^<tr[\s\r\n>]/i).test(dojo.string.trimStart(txt))) {
	txt = "<table><tbody>" + txt + "</tbody></table>";
	tableType = "row";
} else if((/^<(thead|tbody|tfoot)[\s\r\n>]/i).test(dojo.string.trimStart(txt))) {
	txt = "<table>" + txt + "</table>";
	tableType = "section";
}
tn.innerHTML = txt;
tn.normalize();

var parent = null;
switch(tableType) {
	case "cell":
		parent = tn.getElementsByTagName("tr")[0];
		break;
	case "row":
		parent = tn.getElementsByTagName("tbody")[0];
		break;
	case "section":
		parent = tn.getElementsByTagName("table")[0];
		break;
	default:
		parent = tn;
		break;
}

 this doesn't make much sense, I'm assuming it just meant trim() so wrap was replaced with trim
if(wrap){ 
	var ret = [];
	 start hack
	var fc = tn.firstChild;
	ret[0] = ((fc.nodeValue == " ")||(fc.nodeValue == "\t")) ? fc.nextSibling : fc;
	 end hack
	 tn.style.display = "none";
	document.body.removeChild(tn);
	return ret;
}
var nodes = [];
for(var x=0; x<parent.childNodes.length; x++){
	nodes.push(parent.childNodes[x].cloneNode(true));
}
tn.style.display = "none";  FIXME: why do we do this?
document.body.removeChild(tn);
return nodes;