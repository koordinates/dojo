clearTimeout(this._timer);
if( this._active ) {
	var curr = new Date().valueOf();
	var step = (curr - this._startTime) / (this._endTime - this._startTime);
	fps = 1000 / (curr - this._lastFrame);
	this._lastFrame = curr;

	if( step >= 1 ) {
		step = 1;
		this._percent = 100;
	} else {
		this._percent = step * 100;
	}
	
	 Perform accelleration
	if(this.accel && this.accel.getValue) {
		step = this.accel.getValue(step);
	}

	var e = new dojo.animation.AnimationEvent(this, "animate", this.curve.getValue(step),
		this._startTime, curr, this._endTime, this.duration, this._percent, Math.round(fps));

	if(typeof this.handler == "function") { this.handler(e); }
	if(typeof this.onAnimate == "function") { this.onAnimate(e); }

	if( step < 1 ) {
		this._timer = setTimeout(dojo.lang.hitch(this, "_cycle"), this.rate);
	} else {
		e.type = "end";
		this._active = false;
		if(typeof this.handler == "function") { this.handler(e); }
		if(typeof this.onEnd == "function") { this.onEnd(e); }

		if( this.repeatCount > 0 ) {
			this.repeatCount--;
			this.play(true);
		} else if( this.repeatCount == -1 ) {
			this.play(true);
		} else {
			if(this._startRepeatCount) {
				this.repeatCount = this._startRepeatCount;
				this._startRepeatCount = 0;
			}
			if( this._animSequence ) {
				this._animSequence._playNext();
			}
		}
	}
}