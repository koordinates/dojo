{"requires":{"common":["dojo.lang","dojo.date","dojo.html","dojo.event.*","dojo.widget.HtmlWidget","dojo.widget.SortableTable"]},"_.getTypeFromString":{"function (string s)":"Find the constructor that matches param s by searching through the entire object tree."},"_.compare":{"boolean (object o1, object o2)":"Compare two objects using a shallow property compare"},"_.isSelected":{"boolean (object o)":"checked to see if the passed object is in the current selection."},"_.removeFromSelected":{"(object o)":"remove the passed object from the current selection."},"_.getSelection":{"array ()":"return the array of currently selected objects (JSON format)"},"_.getValue":{"string ()":"return a comma-delimited list of selected valueFields."},"_.reset":{"()":"completely resets the internal representations."},"_.resetSelections":{"(HTMLTableBodyElement body)":""},"_.getObjectFromRow":{"object (HTMLTableRowElement row)":"creates a JSON object based on the passed row"},"_.setSelectionByRow":{"(HTMLTableElementRow row)":"create the selection object based on the passed row, makes sure it's unique. note that you need to call render manually (because of multi-select operations)"},"_.parseColumns":{"(HTMLTableHeadElement node)":"parses the passed element to create column objects"},"_.parseData":{"(array data)":"Parse the passed JSON data structure, and cast based on columns."},"_.parseDataFromTable":{"(HTMLTableBodyElement tbody)":"parses the data in the tbody of a table to create a set of objects. Will add objects to this.selected if an attribute 'selected=\"true\"' is present on the row."},"_.showSelections":{"()":""},"_.render":{"()":"renders the table to the browser"},"_.onSelect":{"(DomEvent e)":"empty function for the user to attach code to, fired by onUISelect"},"_.onUISelect":{"(DomEvent e)":"fired when a user selects a row"},"_.onHeaderClick":{"(DomEvent e)":"Main handler function for each header column click."},"_.postCreate":{"()":"overridden from HtmlWidget, initializes and renders the widget."}}