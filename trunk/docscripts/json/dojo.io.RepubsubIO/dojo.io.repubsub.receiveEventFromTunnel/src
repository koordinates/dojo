if(!evt["elements"]){
	this.log("bailing! event received without elements!", "error");
	return;
}

 if the event passes some minimal sanity tests, we need to attempt to
 dispatch it!

 first, it seems we have to munge the event object a bit
var e = {};
for(var i=0; i<evt.elements.length; i++){
	var ee = evt.elements[i];
	e[ee.name||ee.nameU] = (ee.value||ee.valueU);
	 FIXME: need to enable this only in some extreme debugging mode!
	this.log("[event]: "+(ee.name||ee.nameU)+": "+e[ee.name||ee.nameU]);
}

 NOTE: the previous version of this library put a bunch of code here
 to manage state that tried to make sure that we never, ever, lost
 any info about an event. If we unload RIGHT HERE, I don't think it's
 going to make a huge difference one way or another. Time will tell.

 and with THAT out of the way, dispatch it!
this.dispatch(e);

 TODO: remove the script block that created the event obj to save
 memory, etc.