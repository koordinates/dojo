Fast Widget Authoring With Dojo
===============================

:Author: Alex Russell
:Version: 0.1
:Copyright: Dojo Foundation, 2005
:Date: 2005/04/18

.. contents::

Intro
----------------------------------

The Dojo project is working to build a modern, capable, "webish", and easy to
use DHTML toolkit. By saying "easy to use", we imply the question "easy for
who?". Many toolkits have a single audience, but Dojo is different. We are
trying to provide multiple points of entry into the system, and thereby make
Dojo easy to use for many different classes of users. Making the development of
DHTML/Ajax GUIs easy is a herculean task, and Dojo is attempting to take it one
step at a time. In order to make it eventually simpler for the "average IT
developer" to build UIs, we must first make it simpler for the people that
build tools for them to construct solid and capabile building blocks. Often,
these building blocks are a combination of custom and off-the-shelf components,
and so simplifying the creation of both is of paramount importance. Until now,
developers building DHTML UI components have either had to rely on
hard-to-maintain and read innerHTML techniques or verbosely construct UI
components one node at a time with document.createElement() calls. Given these
unappealing options, most developers punted and scrambled back to the
server-side where there's at least some semblence of sanity.

The Workflow Problem
----------------------------------

So why is it so hard build UIs on the client anyway? Cross-browser issues
aside, there are practical considerations of usage and construction of
components. If you go the innerHTML route, you soon find yourself building huge
string variables and dealing with all manner of string encoding issues. Worse,
you quickly find yourself struggling with how to attach programmatic logic to
the newly built elements. What good is getting a reference to a DOM node that
could be blown away the next time your need to repaint the UI in response to
user input? Things just go downhill from there. Oy.

On the other side of the fence is the "clean" method of programmatically
constructing every element in the UI with straight-up DOM manipulation in
JavaScript. This is the approach that toolkits like DomAPI and nWidgets take
(for the most part). While this method is functional and avoids most escaping
issues it carries huge baggage in terms of reduced prodctivity on the part of
the widget author. It's so verbose and hard to build UIs this way that once
your widget or component works, the last thing you ever want to do is change
it's DOM structure. Didn't we move to the web to get *away* from building UIs
this way? Worse, UI designers don't generate sequences of DOM commands for
building a UI. More likely they will hand you a stub HTML page that includes
some generated CSS and HTML at which point it's the component author's job to
translate that into a functioning, reusable, degradeable component. Doing it
the DOM way is admirable but given the costs, often misguided.

Either way, the current workflow for building client-side components sucks.
Doing it in markup invites pain and unmaintainable code, whereas doing it with
the DOM invites pain and unmaintainable code. Thankfully Dojo gives us a third
way.

Prototype 
---------

So you've been handed an HTML and CSS from a designer. Wouldn't it be great if
you could prototype, test, and tweak the itneraction without 

Connect 
-------

FIXME: fill it in!

Deploy
------

FIXME: fill it in!

Making It A Tag
---------------

Remainders
---------------

Getting Involved with Dojo
##########################

Comitters to Dojo are currently an invite-only group, but that doesn't mean it
can't include you. If you'd like to contribute to the future of Dojo and
responsive web applications, do something that impress us (either with Dojo, or
with JS/DHTML/DSVG in general). Our license is intentionally non-political
(Academic Free License 2.1) and we support your use of Dojo in software that's
licensed in other ways, but will not accept differently-licensed patches. We're
not trying to be exclusive, just productive.

About The Author
#########################

Alex Russell is just another geek. He can be reached at <alex@dojotoolkit.org>.
His mostly pointless blog is at: http://alex.nwidgets.com

.. vim:ts=4:et:tw=0:shiftwidth=4:
